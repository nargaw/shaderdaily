/*! For license information please see main.37d3eba0.js.LICENSE.txt */
!function(){var e={345:function(e,n){"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,o=e[r];if(!(0<a(o,n)))break e;e[r]=n,e[t]=o,t=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length,i=o>>>1;r<i;){var v=2*(r+1)-1,s=e[v],c=v+1,l=e[c];if(0>a(s,t))c<o&&0>a(l,s)?(e[r]=l,e[c]=t,r=c):(e[r]=s,e[v]=t,r=v);else{if(!(c<o&&0>a(l,t)))break e;e[r]=l,e[c]=t,r=c}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var v=Date,s=v.now();n.unstable_now=function(){return v.now()-s}}var c=[],l=[],u=1,f=null,p=3,m=!1,d=!1,h=!1,x="function"===typeof setTimeout?setTimeout:null,g="function"===typeof clearTimeout?clearTimeout:null,y="undefined"!==typeof setImmediate?setImmediate:null;function _(e){for(var n=r(l);null!==n;){if(null===n.callback)o(l);else{if(!(n.startTime<=e))break;o(l),n.sortIndex=n.expirationTime,t(c,n)}n=r(l)}}function b(e){if(h=!1,_(e),!d)if(null!==r(c))d=!0,F(U);else{var n=r(l);null!==n&&D(b,n.startTime-e)}}function U(e,t){d=!1,h&&(h=!1,g(j),j=-1),m=!0;var a=p;try{for(_(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!T());){var i=f.callback;if("function"===typeof i){f.callback=null,p=f.priorityLevel;var v=i(f.expirationTime<=t);t=n.unstable_now(),"function"===typeof v?f.callback=v:f===r(c)&&o(c),_(t)}else o(c);f=r(c)}if(null!==f)var s=!0;else{var u=r(l);null!==u&&D(b,u.startTime-t),s=!1}return s}finally{f=null,p=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,S=!1,M=null,j=-1,k=5,C=-1;function T(){return!(n.unstable_now()-C<k)}function R(){if(null!==M){var e=n.unstable_now();C=e;var t=!0;try{t=M(!0,e)}finally{t?w():(S=!1,M=null)}}else S=!1}if("function"===typeof y)w=function(){y(R)};else if("undefined"!==typeof MessageChannel){var z=new MessageChannel,P=z.port2;z.port1.onmessage=R,w=function(){P.postMessage(null)}}else w=function(){x(R,0)};function F(e){M=e,S||(S=!0,w())}function D(e,t){j=x((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){d||m||(d=!0,F(U))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,o,a){var i=n.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var v=-1;break;case 2:v=250;break;case 5:v=1073741823;break;case 4:v=1e4;break;default:v=5e3}return e={id:u++,callback:o,priorityLevel:e,startTime:a,expirationTime:v=a+v,sortIndex:-1},a>i?(e.sortIndex=a,t(l,e),null===r(c)&&e===r(l)&&(h?(g(j),j=-1):h=!0,D(b,a-i))):(e.sortIndex=v,t(c,e),d||m||(d=!0,F(U))),e},n.unstable_shouldYield=T,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},545:function(e,n,t){"use strict";e.exports=t(345)},494:function(e){function n(e,n,t){var r,o,a,i,v;function s(){var c=Date.now()-i;c<n&&c>=0?r=setTimeout(s,n-c):(r=null,t||(v=e.apply(a,o),a=o=null))}null==n&&(n=100);var c=function(){a=this,o=arguments,i=Date.now();var c=t&&!r;return r||(r=setTimeout(s,n)),c&&(v=e.apply(a,o),a=o=null),v};return c.clear=function(){r&&(clearTimeout(r),r=null)},c.flush=function(){r&&(v=e.apply(a,o),a=o=null,clearTimeout(r),r=null)},c}n.debounce=n,e.exports=n},463:function(e,n,t){"use strict";var r=t(791),o=t(296);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,v={};function s(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(v[e]=n,e=0;e<n.length;e++)i.add(n[e])}var l=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),u=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},m={};function d(e,n,t,r,o,a,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a,this.removeEmptyString=i}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){h[e]=new d(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];h[n]=new d(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){h[e]=new d(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){h[e]=new d(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){h[e]=new d(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){h[e]=new d(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){h[e]=new d(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){h[e]=new d(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){h[e]=new d(e,5,!1,e.toLowerCase(),null,!1,!1)}));var x=/[\-:]([a-z])/g;function g(e){return e[1].toUpperCase()}function y(e,n,t,r){var o=h.hasOwnProperty(n)?h[n]:null;(null!==o?0!==o.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null===n||"undefined"===typeof n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!u.call(m,e)||!u.call(p,e)&&(f.test(e)?m[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(x,g);h[n]=new d(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(x,g);h[n]=new d(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(x,g);h[n]=new d(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){h[e]=new d(e,1,!1,e.toLowerCase(),null,!1,!1)})),h.xlinkHref=new d("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){h[e]=new d(e,1,!1,e.toLowerCase(),null,!0,!0)}));var _=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,b=Symbol.for("react.element"),U=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),S=Symbol.for("react.strict_mode"),M=Symbol.for("react.profiler"),j=Symbol.for("react.provider"),k=Symbol.for("react.context"),C=Symbol.for("react.forward_ref"),T=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),z=Symbol.for("react.memo"),P=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function E(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var I,L=Object.assign;function A(e){if(void 0===I)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);I=n&&n[1]||""}return"\n"+I+e}var O=!1;function B(e,n){if(!e||O)return"";O=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(c){var r=c}Reflect.construct(e,[],n)}else{try{n.call()}catch(c){r=c}e.call(n.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"===typeof c.stack){for(var o=c.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,v=a.length-1;1<=i&&0<=v&&o[i]!==a[v];)v--;for(;1<=i&&0<=v;i--,v--)if(o[i]!==a[v]){if(1!==i||1!==v)do{if(i--,0>--v||o[i]!==a[v]){var s="\n"+o[i].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=i&&0<=v);break}}}finally{O=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?A(e):""}function N(e){switch(e.tag){case 5:return A(e.type);case 16:return A("Lazy");case 13:return A("Suspense");case 19:return A("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case w:return"Fragment";case U:return"Portal";case M:return"Profiler";case S:return"StrictMode";case T:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case k:return(e.displayName||"Context")+".Consumer";case j:return(e._context.displayName||"Context")+".Provider";case C:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case z:return null!==(n=e.displayName||null)?n:G(e.type)||"Memo";case P:n=e._payload,e=e._init;try{return G(e(n))}catch(t){}}return null}function V(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(n);case 8:return n===S?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof n)return n.displayName||n.name||null;if("string"===typeof n)return n}return null}function q(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function H(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&"undefined"!==typeof t&&"function"===typeof t.get&&"function"===typeof t.set){var o=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function X(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Y(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Z(e,n){var t=n.checked;return L({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function Q(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=q(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function J(e,n){null!=(n=n.checked)&&y(e,"checked",n,!1)}function $(e,n){J(e,n);var t=q(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,q(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function K(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&Y(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+q(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return L({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(ne(t)){if(1<t.length)throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:q(t)}}function ae(e,n){var t=q(n.value),r=q(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ie(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function ve(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?ve(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,le,ue=(le=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return le(e,n)}))}:le);function fe(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function de(e,n,t){return null==n||"boolean"===typeof n||""===n?"":t||"number"!==typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function he(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=de(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(pe).forEach((function(e){me.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var xe=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ge(e,n){if(n){if(xe[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!==typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!==typeof n.style)throw Error(a(62))}}function ye(e,n){if(-1===e.indexOf("-"))return"string"===typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var _e=null;function be(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ue=null,we=null,Se=null;function Me(e){if(e=_o(e)){if("function"!==typeof Ue)throw Error(a(280));var n=e.stateNode;n&&(n=Uo(n),Ue(e.stateNode,e.type,n))}}function je(e){we?Se?Se.push(e):Se=[e]:we=e}function ke(){if(we){var e=we,n=Se;if(Se=we=null,Me(e),n)for(e=0;e<n.length;e++)Me(n[e])}}function Ce(e,n){return e(n)}function Te(){}var Re=!1;function ze(e,n,t){if(Re)return e(n,t);Re=!0;try{return Ce(e,n,t)}finally{Re=!1,(null!==we||null!==Se)&&(Te(),ke())}}function Pe(e,n){var t=e.stateNode;if(null===t)return null;var r=Uo(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!==typeof t)throw Error(a(231,n,typeof t));return t}var Fe=!1;if(l)try{var De={};Object.defineProperty(De,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(le){Fe=!1}function Ee(e,n,t,r,o,a,i,v,s){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(l){this.onError(l)}}var Ie=!1,Le=null,Ae=!1,Oe=null,Be={onError:function(e){Ie=!0,Le=e}};function Ne(e,n,t,r,o,a,i,v,s){Ie=!1,Le=null,Ee.apply(Be,arguments)}function Ge(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!==(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ve(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function qe(e){if(Ge(e)!==e)throw Error(a(188))}function We(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ge(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){t=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===t)return qe(o),e;if(i===r)return qe(o),n;i=i.sibling}throw Error(a(188))}if(t.return!==r.return)t=o,r=i;else{for(var v=!1,s=o.child;s;){if(s===t){v=!0,t=o,r=i;break}if(s===r){v=!0,r=o,t=i;break}s=s.sibling}if(!v){for(s=i.child;s;){if(s===t){v=!0,t=i,r=o;break}if(s===r){v=!0,r=i,t=o;break}s=s.sibling}if(!v)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e))?He(e):null}function He(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=He(e);if(null!==n)return n;e=e.sibling}return null}var Xe=o.unstable_scheduleCallback,Ye=o.unstable_cancelCallback,Ze=o.unstable_shouldYield,Qe=o.unstable_requestPaint,Je=o.unstable_now,$e=o.unstable_getCurrentPriorityLevel,Ke=o.unstable_ImmediatePriority,en=o.unstable_UserBlockingPriority,nn=o.unstable_NormalPriority,tn=o.unstable_LowPriority,rn=o.unstable_IdlePriority,on=null,an=null;var vn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(sn(e)/cn|0)|0},sn=Math.log,cn=Math.LN2;var ln=64,un=4194304;function fn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,i=268435455&t;if(0!==i){var v=i&~o;0!==v?r=fn(v):0!==(a&=i)&&(r=fn(a))}else 0!==(i=t&~o)?r=fn(i):0!==a&&(r=fn(a));if(0===r)return 0;if(0!==n&&n!==r&&0===(n&o)&&((o=r&-r)>=(a=n&-n)||16===o&&0!==(4194240&a)))return n;if(0!==(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-vn(n)),r|=e[t],n&=~o;return r}function mn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function dn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function hn(){var e=ln;return 0===(4194240&(ln<<=1))&&(ln=64),e}function xn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function gn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-vn(n)]=t}function yn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-vn(t),o=1<<r;o&n|e[r]&n&&(e[r]|=n),t&=~o}}var _n=0;function bn(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var Un,wn,Sn,Mn,jn,kn=!1,Cn=[],Tn=null,Rn=null,zn=null,Pn=new Map,Fn=new Map,Dn=[],En="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function In(e,n){switch(e){case"focusin":case"focusout":Tn=null;break;case"dragenter":case"dragleave":Rn=null;break;case"mouseover":case"mouseout":zn=null;break;case"pointerover":case"pointerout":Pn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Fn.delete(n.pointerId)}}function Ln(e,n,t,r,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:a,targetContainers:[o]},null!==n&&(null!==(n=_o(n))&&wn(n)),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function An(e){var n=yo(e.target);if(null!==n){var t=Ge(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ve(t)))return e.blockedOn=n,void jn(e.priority,(function(){Sn(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function On(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Qn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=_o(t))&&wn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);_e=r,t.target.dispatchEvent(r),_e=null,n.shift()}return!0}function Bn(e,n,t){On(e)&&t.delete(n)}function Nn(){kn=!1,null!==Tn&&On(Tn)&&(Tn=null),null!==Rn&&On(Rn)&&(Rn=null),null!==zn&&On(zn)&&(zn=null),Pn.forEach(Bn),Fn.forEach(Bn)}function Gn(e,n){e.blockedOn===n&&(e.blockedOn=null,kn||(kn=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Nn)))}function Vn(e){function n(n){return Gn(n,e)}if(0<Cn.length){Gn(Cn[0],e);for(var t=1;t<Cn.length;t++){var r=Cn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Tn&&Gn(Tn,e),null!==Rn&&Gn(Rn,e),null!==zn&&Gn(zn,e),Pn.forEach(n),Fn.forEach(n),t=0;t<Dn.length;t++)(r=Dn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Dn.length&&null===(t=Dn[0]).blockedOn;)An(t),null===t.blockedOn&&Dn.shift()}var qn=_.ReactCurrentBatchConfig,Wn=!0;function Hn(e,n,t,r){var o=_n,a=qn.transition;qn.transition=null;try{_n=1,Yn(e,n,t,r)}finally{_n=o,qn.transition=a}}function Xn(e,n,t,r){var o=_n,a=qn.transition;qn.transition=null;try{_n=4,Yn(e,n,t,r)}finally{_n=o,qn.transition=a}}function Yn(e,n,t,r){if(Wn){var o=Qn(e,n,t,r);if(null===o)qr(e,n,r,Zn,t),In(e,r);else if(function(e,n,t,r,o){switch(n){case"focusin":return Tn=Ln(Tn,e,n,t,r,o),!0;case"dragenter":return Rn=Ln(Rn,e,n,t,r,o),!0;case"mouseover":return zn=Ln(zn,e,n,t,r,o),!0;case"pointerover":var a=o.pointerId;return Pn.set(a,Ln(Pn.get(a)||null,e,n,t,r,o)),!0;case"gotpointercapture":return a=o.pointerId,Fn.set(a,Ln(Fn.get(a)||null,e,n,t,r,o)),!0}return!1}(o,e,n,t,r))r.stopPropagation();else if(In(e,r),4&n&&-1<En.indexOf(e)){for(;null!==o;){var a=_o(o);if(null!==a&&Un(a),null===(a=Qn(e,n,t,r))&&qr(e,n,r,Zn,t),a===o)break;o=a}null!==o&&r.stopPropagation()}else qr(e,n,r,null,t)}}var Zn=null;function Qn(e,n,t,r){if(Zn=null,null!==(e=yo(e=be(r))))if(null===(n=Ge(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ve(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Zn=e,null}function Jn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($e()){case Ke:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var $n=null,Kn=null,et=null;function nt(){if(et)return et;var e,n,t=Kn,r=t.length,o="value"in $n?$n.value:$n.textContent,a=o.length;for(e=0;e<r&&t[e]===o[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===o[a-n];n++);return et=o.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function ot(){return!1}function at(e){function n(n,t,r,o,a){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?rt:ot,this.isPropagationStopped=ot,this}return L(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var it,vt,st,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},lt=at(ct),ut=L({},ct,{view:0,detail:0}),ft=at(ut),pt=L({},ut,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Mt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(it=e.screenX-st.screenX,vt=e.screenY-st.screenY):vt=it=0,st=e),it)},movementY:function(e){return"movementY"in e?e.movementY:vt}}),mt=at(pt),dt=at(L({},pt,{dataTransfer:0})),ht=at(L({},ut,{relatedTarget:0})),xt=at(L({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),gt=L({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yt=at(gt),_t=at(L({},ct,{data:0})),bt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ut={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function St(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=wt[e])&&!!n[e]}function Mt(){return St}var jt=L({},ut,{key:function(e){if(e.key){var n=bt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ut[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Mt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),kt=at(jt),Ct=at(L({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tt=at(L({},ut,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Mt})),Rt=at(L({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),zt=L({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pt=at(zt),Ft=[9,13,27,32],Dt=l&&"CompositionEvent"in window,Et=null;l&&"documentMode"in document&&(Et=document.documentMode);var It=l&&"TextEvent"in window&&!Et,Lt=l&&(!Dt||Et&&8<Et&&11>=Et),At=String.fromCharCode(32),Ot=!1;function Bt(e,n){switch(e){case"keyup":return-1!==Ft.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Nt(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Gt=!1;var Vt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Vt[e.type]:"textarea"===n}function Wt(e,n,t,r){je(r),0<(n=Hr(n,"onChange")).length&&(t=new lt("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Ht=null,Xt=null;function Yt(e){Ar(e,0)}function Zt(e){if(X(bo(e)))return e}function Qt(e,n){if("change"===e)return n}var Jt=!1;if(l){var $t;if(l){var Kt="oninput"in document;if(!Kt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Kt="function"===typeof er.oninput}$t=Kt}else $t=!1;Jt=$t&&(!document.documentMode||9<document.documentMode)}function nr(){Ht&&(Ht.detachEvent("onpropertychange",tr),Xt=Ht=null)}function tr(e){if("value"===e.propertyName&&Zt(Xt)){var n=[];Wt(n,Xt,e,be(e)),ze(Yt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Xt=t,(Ht=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zt(Xt)}function ar(e,n){if("click"===e)return Zt(n)}function ir(e,n){if("input"===e||"change"===e)return Zt(n)}var vr="function"===typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e===1/n)||e!==e&&n!==n};function sr(e,n){if(vr(e,n))return!0;if("object"!==typeof e||null===e||"object"!==typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var o=t[r];if(!u.call(n,o)||!vr(e[o],n[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function lr(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function ur(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?ur(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function fr(){for(var e=window,n=Y();n instanceof e.HTMLIFrameElement;){try{var t="string"===typeof n.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=Y((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function mr(e){var n=fr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&ur(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var o=t.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=lr(t,a);var i=lr(t,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((n=n.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(n),e.extend(i.node,i.offset)):(n.setEnd(i.node,i.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var dr=l&&"documentMode"in document&&11>=document.documentMode,hr=null,xr=null,gr=null,yr=!1;function _r(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;yr||null==hr||hr!==Y(r)||("selectionStart"in(r=hr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&sr(gr,r)||(gr=r,0<(r=Hr(xr,"onSelect")).length&&(n=new lt("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=hr)))}function br(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Ur={animationend:br("Animation","AnimationEnd"),animationiteration:br("Animation","AnimationIteration"),animationstart:br("Animation","AnimationStart"),transitionend:br("Transition","TransitionEnd")},wr={},Sr={};function Mr(e){if(wr[e])return wr[e];if(!Ur[e])return e;var n,t=Ur[e];for(n in t)if(t.hasOwnProperty(n)&&n in Sr)return wr[e]=t[n];return e}l&&(Sr=document.createElement("div").style,"AnimationEvent"in window||(delete Ur.animationend.animation,delete Ur.animationiteration.animation,delete Ur.animationstart.animation),"TransitionEvent"in window||delete Ur.transitionend.transition);var jr=Mr("animationend"),kr=Mr("animationiteration"),Cr=Mr("animationstart"),Tr=Mr("transitionend"),Rr=new Map,zr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Pr(e,n){Rr.set(e,n),s(n,[e])}for(var Fr=0;Fr<zr.length;Fr++){var Dr=zr[Fr];Pr(Dr.toLowerCase(),"on"+(Dr[0].toUpperCase()+Dr.slice(1)))}Pr(jr,"onAnimationEnd"),Pr(kr,"onAnimationIteration"),Pr(Cr,"onAnimationStart"),Pr("dblclick","onDoubleClick"),Pr("focusin","onFocus"),Pr("focusout","onBlur"),Pr(Tr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Er="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ir=new Set("cancel close invalid load scroll toggle".split(" ").concat(Er));function Lr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,o,i,v,s,c){if(Ne.apply(this,arguments),Ie){if(!Ie)throw Error(a(198));var l=Le;Ie=!1,Le=null,Ae||(Ae=!0,Oe=l)}}(r,n,void 0,e),e.currentTarget=null}function Ar(e,n){n=0!==(4&n);for(var t=0;t<e.length;t++){var r=e[t],o=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var i=r.length-1;0<=i;i--){var v=r[i],s=v.instance,c=v.currentTarget;if(v=v.listener,s!==a&&o.isPropagationStopped())break e;Lr(o,v,c),a=s}else for(i=0;i<r.length;i++){if(s=(v=r[i]).instance,c=v.currentTarget,v=v.listener,s!==a&&o.isPropagationStopped())break e;Lr(o,v,c),a=s}}}if(Ae)throw e=Oe,Ae=!1,Oe=null,e}function Or(e,n){var t=n[ho];void 0===t&&(t=n[ho]=new Set);var r=e+"__bubble";t.has(r)||(Vr(n,e,2,!1),t.add(r))}function Br(e,n,t){var r=0;n&&(r|=4),Vr(t,e,r,n)}var Nr="_reactListening"+Math.random().toString(36).slice(2);function Gr(e){if(!e[Nr]){e[Nr]=!0,i.forEach((function(n){"selectionchange"!==n&&(Ir.has(n)||Br(n,!1,e),Br(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Nr]||(n[Nr]=!0,Br("selectionchange",!1,n))}}function Vr(e,n,t,r){switch(Jn(n)){case 1:var o=Hn;break;case 4:o=Xn;break;default:o=Yn}t=o.bind(null,n,t,e),o=void 0,!Fe||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),r?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function qr(e,n,t,r,o){var a=r;if(0===(1&n)&&0===(2&n)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var v=r.stateNode.containerInfo;if(v===o||8===v.nodeType&&v.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===o||8===s.nodeType&&s.parentNode===o))return;i=i.return}for(;null!==v;){if(null===(i=yo(v)))return;if(5===(s=i.tag)||6===s){r=a=i;continue e}v=v.parentNode}}r=r.return}ze((function(){var r=a,o=be(t),i=[];e:{var v=Rr.get(e);if(void 0!==v){var s=lt,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":s=kt;break;case"focusin":c="focus",s=ht;break;case"focusout":c="blur",s=ht;break;case"beforeblur":case"afterblur":s=ht;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=mt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=dt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Tt;break;case jr:case kr:case Cr:s=xt;break;case Tr:s=Rt;break;case"scroll":s=ft;break;case"wheel":s=Pt;break;case"copy":case"cut":case"paste":s=yt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Ct}var l=0!==(4&n),u=!l&&"scroll"===e,f=l?null!==v?v+"Capture":null:v;l=[];for(var p,m=r;null!==m;){var d=(p=m).stateNode;if(5===p.tag&&null!==d&&(p=d,null!==f&&(null!=(d=Pe(m,f))&&l.push(Wr(m,d,p)))),u)break;m=m.return}0<l.length&&(v=new s(v,c,null,t,o),i.push({event:v,listeners:l}))}}if(0===(7&n)){if(s="mouseout"===e||"pointerout"===e,(!(v="mouseover"===e||"pointerover"===e)||t===_e||!(c=t.relatedTarget||t.fromElement)||!yo(c)&&!c[mo])&&(s||v)&&(v=o.window===o?o:(v=o.ownerDocument)?v.defaultView||v.parentWindow:window,s?(s=r,null!==(c=(c=t.relatedTarget||t.toElement)?yo(c):null)&&(c!==(u=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(s=null,c=r),s!==c)){if(l=mt,d="onMouseLeave",f="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(l=Ct,d="onPointerLeave",f="onPointerEnter",m="pointer"),u=null==s?v:bo(s),p=null==c?v:bo(c),(v=new l(d,m+"leave",s,t,o)).target=u,v.relatedTarget=p,d=null,yo(o)===r&&((l=new l(f,m+"enter",c,t,o)).target=p,l.relatedTarget=u,d=l),u=d,s&&c)e:{for(f=c,m=0,p=l=s;p;p=Xr(p))m++;for(p=0,d=f;d;d=Xr(d))p++;for(;0<m-p;)l=Xr(l),m--;for(;0<p-m;)f=Xr(f),p--;for(;m--;){if(l===f||null!==f&&l===f.alternate)break e;l=Xr(l),f=Xr(f)}l=null}else l=null;null!==s&&Yr(i,v,s,l,!1),null!==c&&null!==u&&Yr(i,u,c,l,!0)}if("select"===(s=(v=r?bo(r):window).nodeName&&v.nodeName.toLowerCase())||"input"===s&&"file"===v.type)var h=Qt;else if(qt(v))if(Jt)h=ir;else{h=or;var x=rr}else(s=v.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===v.type||"radio"===v.type)&&(h=ar);switch(h&&(h=h(e,r))?Wt(i,h,t,o):(x&&x(e,v,r),"focusout"===e&&(x=v._wrapperState)&&x.controlled&&"number"===v.type&&ee(v,"number",v.value)),x=r?bo(r):window,e){case"focusin":(qt(x)||"true"===x.contentEditable)&&(hr=x,xr=r,gr=null);break;case"focusout":gr=xr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,_r(i,t,o);break;case"selectionchange":if(dr)break;case"keydown":case"keyup":_r(i,t,o)}var g;if(Dt)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Gt?Bt(e,t)&&(y="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(y="onCompositionStart");y&&(Lt&&"ko"!==t.locale&&(Gt||"onCompositionStart"!==y?"onCompositionEnd"===y&&Gt&&(g=nt()):(Kn="value"in($n=o)?$n.value:$n.textContent,Gt=!0)),0<(x=Hr(r,y)).length&&(y=new _t(y,e,null,t,o),i.push({event:y,listeners:x}),g?y.data=g:null!==(g=Nt(t))&&(y.data=g))),(g=It?function(e,n){switch(e){case"compositionend":return Nt(n);case"keypress":return 32!==n.which?null:(Ot=!0,At);case"textInput":return(e=n.data)===At&&Ot?null:e;default:return null}}(e,t):function(e,n){if(Gt)return"compositionend"===e||!Dt&&Bt(e,n)?(e=nt(),et=Kn=$n=null,Gt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Lt&&"ko"!==n.locale?null:n.data}}(e,t))&&(0<(r=Hr(r,"onBeforeInput")).length&&(o=new _t("onBeforeInput","beforeinput",null,t,o),i.push({event:o,listeners:r}),o.data=g))}Ar(i,n)}))}function Wr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Hr(e,n){for(var t=n+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Pe(e,t))&&r.unshift(Wr(e,a,o)),null!=(a=Pe(e,n))&&r.push(Wr(e,a,o))),e=e.return}return r}function Xr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,n,t,r,o){for(var a=n._reactName,i=[];null!==t&&t!==r;){var v=t,s=v.alternate,c=v.stateNode;if(null!==s&&s===r)break;5===v.tag&&null!==c&&(v=c,o?null!=(s=Pe(t,a))&&i.unshift(Wr(t,s,v)):o||null!=(s=Pe(t,a))&&i.push(Wr(t,s,v))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}var Zr=/\r\n?/g,Qr=/\u0000|\uFFFD/g;function Jr(e){return("string"===typeof e?e:""+e).replace(Zr,"\n").replace(Qr,"")}function $r(e,n,t){if(n=Jr(n),Jr(e)!==n&&t)throw Error(a(425))}function Kr(){}var eo=null,no=null;function to(e,n){return"textarea"===e||"noscript"===e||"string"===typeof n.children||"number"===typeof n.children||"object"===typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ro="function"===typeof setTimeout?setTimeout:void 0,oo="function"===typeof clearTimeout?clearTimeout:void 0,ao="function"===typeof Promise?Promise:void 0,io="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ao?function(e){return ao.resolve(null).then(e).catch(vo)}:ro;function vo(e){setTimeout((function(){throw e}))}function so(e,n){var t=n,r=0;do{var o=t.nextSibling;if(e.removeChild(t),o&&8===o.nodeType)if("/$"===(t=o.data)){if(0===r)return e.removeChild(o),void Vn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=o}while(t);Vn(n)}function co(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function lo(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var uo=Math.random().toString(36).slice(2),fo="__reactFiber$"+uo,po="__reactProps$"+uo,mo="__reactContainer$"+uo,ho="__reactEvents$"+uo,xo="__reactListeners$"+uo,go="__reactHandles$"+uo;function yo(e){var n=e[fo];if(n)return n;for(var t=e.parentNode;t;){if(n=t[mo]||t[fo]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=lo(e);null!==e;){if(t=e[fo])return t;e=lo(e)}return n}t=(e=t).parentNode}return null}function _o(e){return!(e=e[fo]||e[mo])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Uo(e){return e[po]||null}var wo=[],So=-1;function Mo(e){return{current:e}}function jo(e){0>So||(e.current=wo[So],wo[So]=null,So--)}function ko(e,n){So++,wo[So]=e.current,e.current=n}var Co={},To=Mo(Co),Ro=Mo(!1),zo=Co;function Po(e,n){var t=e.type.contextTypes;if(!t)return Co;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in t)a[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function Fo(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Do(){jo(Ro),jo(To)}function Eo(e,n,t){if(To.current!==Co)throw Error(a(168));ko(To,n),ko(Ro,t)}function Io(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!==typeof r.getChildContext)return t;for(var o in r=r.getChildContext())if(!(o in n))throw Error(a(108,V(e)||"Unknown",o));return L({},t,r)}function Lo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Co,zo=To.current,ko(To,e),ko(Ro,Ro.current),!0}function Ao(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=Io(e,n,zo),r.__reactInternalMemoizedMergedChildContext=e,jo(Ro),jo(To),ko(To,e)):jo(Ro),ko(Ro,t)}var Oo=null,Bo=!1,No=!1;function Go(e){null===Oo?Oo=[e]:Oo.push(e)}function Vo(){if(!No&&null!==Oo){No=!0;var e=0,n=_n;try{var t=Oo;for(_n=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Oo=null,Bo=!1}catch(o){throw null!==Oo&&(Oo=Oo.slice(e+1)),Xe(Ke,Vo),o}finally{_n=n,No=!1}}return null}var qo=[],Wo=0,Ho=null,Xo=0,Yo=[],Zo=0,Qo=null,Jo=1,$o="";function Ko(e,n){qo[Wo++]=Xo,qo[Wo++]=Ho,Ho=e,Xo=n}function ea(e,n,t){Yo[Zo++]=Jo,Yo[Zo++]=$o,Yo[Zo++]=Qo,Qo=e;var r=Jo;e=$o;var o=32-vn(r)-1;r&=~(1<<o),t+=1;var a=32-vn(n)+o;if(30<a){var i=o-o%5;a=(r&(1<<i)-1).toString(32),r>>=i,o-=i,Jo=1<<32-vn(n)+o|t<<o|r,$o=a+e}else Jo=1<<a|t<<o|r,$o=e}function na(e){null!==e.return&&(Ko(e,1),ea(e,1,0))}function ta(e){for(;e===Ho;)Ho=qo[--Wo],qo[Wo]=null,Xo=qo[--Wo],qo[Wo]=null;for(;e===Qo;)Qo=Yo[--Zo],Yo[Zo]=null,$o=Yo[--Zo],Yo[Zo]=null,Jo=Yo[--Zo],Yo[Zo]=null}var ra=null,oa=null,aa=!1,ia=null;function va(e,n){var t=zc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function sa(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ra=e,oa=co(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ra=e,oa=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Qo?{id:Jo,overflow:$o}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=zc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ra=e,oa=null,!0);default:return!1}}function ca(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function la(e){if(aa){var n=oa;if(n){var t=n;if(!sa(e,n)){if(ca(e))throw Error(a(418));n=co(t.nextSibling);var r=ra;n&&sa(e,n)?va(r,t):(e.flags=-4097&e.flags|2,aa=!1,ra=e)}}else{if(ca(e))throw Error(a(418));e.flags=-4097&e.flags|2,aa=!1,ra=e}}}function ua(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ra=e}function fa(e){if(e!==ra)return!1;if(!aa)return ua(e),aa=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!to(e.type,e.memoizedProps)),n&&(n=oa)){if(ca(e))throw pa(),Error(a(418));for(;n;)va(e,n),n=co(n.nextSibling)}if(ua(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){oa=co(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}oa=null}}else oa=ra?co(e.stateNode.nextSibling):null;return!0}function pa(){for(var e=oa;e;)e=co(e.nextSibling)}function ma(){oa=ra=null,aa=!1}function da(e){null===ia?ia=[e]:ia.push(e)}var ha=_.ReactCurrentBatchConfig;function xa(e,n){if(e&&e.defaultProps){for(var t in n=L({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var ga=Mo(null),ya=null,_a=null,ba=null;function Ua(){ba=_a=ya=null}function wa(e){var n=ga.current;jo(ga),e._currentValue=n}function Sa(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Ma(e,n){ya=e,ba=_a=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(_v=!0),e.firstContext=null)}function ja(e){var n=e._currentValue;if(ba!==e)if(e={context:e,memoizedValue:n,next:null},null===_a){if(null===ya)throw Error(a(308));_a=e,ya.dependencies={lanes:0,firstContext:e}}else _a=_a.next=e;return n}var ka=null;function Ca(e){null===ka?ka=[e]:ka.push(e)}function Ta(e,n,t,r){var o=n.interleaved;return null===o?(t.next=t,Ca(n)):(t.next=o.next,o.next=t),n.interleaved=t,Ra(e,r)}function Ra(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var za=!1;function Pa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fa(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Da(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Ea(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&Cs)){var o=r.pending;return null===o?n.next=n:(n.next=o.next,o.next=n),r.pending=n,Ra(e,t)}return null===(o=r.interleaved)?(n.next=n,Ca(r)):(n.next=o.next,o.next=n),r.interleaved=n,Ra(e,t)}function Ia(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!==(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,yn(e,t)}}function La(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?o=a=i:a=a.next=i,t=t.next}while(null!==t);null===a?o=a=n:a=a.next=n}else o=a=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Aa(e,n,t,r){var o=e.updateQueue;za=!1;var a=o.firstBaseUpdate,i=o.lastBaseUpdate,v=o.shared.pending;if(null!==v){o.shared.pending=null;var s=v,c=s.next;s.next=null,null===i?a=c:i.next=c,i=s;var l=e.alternate;null!==l&&((v=(l=l.updateQueue).lastBaseUpdate)!==i&&(null===v?l.firstBaseUpdate=c:v.next=c,l.lastBaseUpdate=s))}if(null!==a){var u=o.baseState;for(i=0,l=c=s=null,v=a;;){var f=v.lane,p=v.eventTime;if((r&f)===f){null!==l&&(l=l.next={eventTime:p,lane:0,tag:v.tag,payload:v.payload,callback:v.callback,next:null});e:{var m=e,d=v;switch(f=n,p=t,d.tag){case 1:if("function"===typeof(m=d.payload)){u=m.call(p,u,f);break e}u=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null===(f="function"===typeof(m=d.payload)?m.call(p,u,f):m)||void 0===f)break e;u=L({},u,f);break e;case 2:za=!0}}null!==v.callback&&0!==v.lane&&(e.flags|=64,null===(f=o.effects)?o.effects=[v]:f.push(v))}else p={eventTime:p,lane:f,tag:v.tag,payload:v.payload,callback:v.callback,next:null},null===l?(c=l=p,s=u):l=l.next=p,i|=f;if(null===(v=v.next)){if(null===(v=o.shared.pending))break;v=(f=v).next,f.next=null,o.lastBaseUpdate=f,o.shared.pending=null}}if(null===l&&(s=u),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=l,null!==(n=o.shared.interleaved)){o=n;do{i|=o.lane,o=o.next}while(o!==n)}else null===a&&(o.shared.lanes=0);Is|=i,e.lanes=i,e.memoizedState=u}}function Oa(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!==typeof o)throw Error(a(191,o));o.call(r)}}}var Ba=(new r.Component).refs;function Na(e,n,t,r){t=null===(t=t(r,n=e.memoizedState))||void 0===t?n:L({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Ga={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ec(),o=nc(e),a=Da(r,o);a.payload=n,void 0!==t&&null!==t&&(a.callback=t),null!==(n=Ea(e,a,o))&&(tc(n,e,o,r),Ia(n,e,o))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ec(),o=nc(e),a=Da(r,o);a.tag=1,a.payload=n,void 0!==t&&null!==t&&(a.callback=t),null!==(n=Ea(e,a,o))&&(tc(n,e,o,r),Ia(n,e,o))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ec(),r=nc(e),o=Da(t,r);o.tag=2,void 0!==n&&null!==n&&(o.callback=n),null!==(n=Ea(e,o,r))&&(tc(n,e,r,t),Ia(n,e,r))}};function Va(e,n,t,r,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!n.prototype||!n.prototype.isPureReactComponent||(!sr(t,r)||!sr(o,a))}function qa(e,n,t){var r=!1,o=Co,a=n.contextType;return"object"===typeof a&&null!==a?a=ja(a):(o=Fo(n)?zo:To.current,a=(r=null!==(r=n.contextTypes)&&void 0!==r)?Po(e,o):Co),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Ga,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),n}function Wa(e,n,t,r){e=n.state,"function"===typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"===typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Ga.enqueueReplaceState(n,n.state,null)}function Ha(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=Ba,Pa(e);var a=n.contextType;"object"===typeof a&&null!==a?o.context=ja(a):(a=Fo(n)?zo:To.current,o.context=Po(e,a)),o.state=e.memoizedState,"function"===typeof(a=n.getDerivedStateFromProps)&&(Na(e,n,a,t),o.state=e.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(n=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&Ga.enqueueReplaceState(o,o.state,null),Aa(e,t,o,r),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4194308)}function Xa(e,n,t){if(null!==(e=t.ref)&&"function"!==typeof e&&"object"!==typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var o=r,i=""+e;return null!==n&&null!==n.ref&&"function"===typeof n.ref&&n.ref._stringRef===i?n.ref:(n=function(e){var n=o.refs;n===Ba&&(n=o.refs={}),null===e?delete n[i]:n[i]=e},n._stringRef=i,n)}if("string"!==typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function Ya(e,n){throw e=Object.prototype.toString.call(n),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Za(e){return(0,e._init)(e._payload)}function Qa(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Fc(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function v(n){return e&&null===n.alternate&&(n.flags|=2),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Lc(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){var a=t.type;return a===w?u(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===P&&Za(a)===n.type)?((r=o(n,t.props)).ref=Xa(e,n,t),r.return=e,r):((r=Dc(t.type,t.key,t.props,null,e.mode,r)).ref=Xa(e,n,t),r.return=e,r)}function l(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Ac(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function u(e,n,t,r,a){return null===n||7!==n.tag?((n=Ec(t,e.mode,r,a)).return=e,n):((n=o(n,t)).return=e,n)}function f(e,n,t){if("string"===typeof n&&""!==n||"number"===typeof n)return(n=Lc(""+n,e.mode,t)).return=e,n;if("object"===typeof n&&null!==n){switch(n.$$typeof){case b:return(t=Dc(n.type,n.key,n.props,null,e.mode,t)).ref=Xa(e,null,n),t.return=e,t;case U:return(n=Ac(n,e.mode,t)).return=e,n;case P:return f(e,(0,n._init)(n._payload),t)}if(ne(n)||E(n))return(n=Ec(n,e.mode,t,null)).return=e,n;Ya(e,n)}return null}function p(e,n,t,r){var o=null!==n?n.key:null;if("string"===typeof t&&""!==t||"number"===typeof t)return null!==o?null:s(e,n,""+t,r);if("object"===typeof t&&null!==t){switch(t.$$typeof){case b:return t.key===o?c(e,n,t,r):null;case U:return t.key===o?l(e,n,t,r):null;case P:return p(e,n,(o=t._init)(t._payload),r)}if(ne(t)||E(t))return null!==o?null:u(e,n,t,r,null);Ya(e,t)}return null}function m(e,n,t,r,o){if("string"===typeof r&&""!==r||"number"===typeof r)return s(n,e=e.get(t)||null,""+r,o);if("object"===typeof r&&null!==r){switch(r.$$typeof){case b:return c(n,e=e.get(null===r.key?t:r.key)||null,r,o);case U:return l(n,e=e.get(null===r.key?t:r.key)||null,r,o);case P:return m(e,n,t,(0,r._init)(r._payload),o)}if(ne(r)||E(r))return u(n,e=e.get(t)||null,r,o,null);Ya(n,r)}return null}function d(o,a,v,s){for(var c=null,l=null,u=a,d=a=0,h=null;null!==u&&d<v.length;d++){u.index>d?(h=u,u=null):h=u.sibling;var x=p(o,u,v[d],s);if(null===x){null===u&&(u=h);break}e&&u&&null===x.alternate&&n(o,u),a=i(x,a,d),null===l?c=x:l.sibling=x,l=x,u=h}if(d===v.length)return t(o,u),aa&&Ko(o,d),c;if(null===u){for(;d<v.length;d++)null!==(u=f(o,v[d],s))&&(a=i(u,a,d),null===l?c=u:l.sibling=u,l=u);return aa&&Ko(o,d),c}for(u=r(o,u);d<v.length;d++)null!==(h=m(u,o,d,v[d],s))&&(e&&null!==h.alternate&&u.delete(null===h.key?d:h.key),a=i(h,a,d),null===l?c=h:l.sibling=h,l=h);return e&&u.forEach((function(e){return n(o,e)})),aa&&Ko(o,d),c}function h(o,v,s,c){var l=E(s);if("function"!==typeof l)throw Error(a(150));if(null==(s=l.call(s)))throw Error(a(151));for(var u=l=null,d=v,h=v=0,x=null,g=s.next();null!==d&&!g.done;h++,g=s.next()){d.index>h?(x=d,d=null):x=d.sibling;var y=p(o,d,g.value,c);if(null===y){null===d&&(d=x);break}e&&d&&null===y.alternate&&n(o,d),v=i(y,v,h),null===u?l=y:u.sibling=y,u=y,d=x}if(g.done)return t(o,d),aa&&Ko(o,h),l;if(null===d){for(;!g.done;h++,g=s.next())null!==(g=f(o,g.value,c))&&(v=i(g,v,h),null===u?l=g:u.sibling=g,u=g);return aa&&Ko(o,h),l}for(d=r(o,d);!g.done;h++,g=s.next())null!==(g=m(d,o,h,g.value,c))&&(e&&null!==g.alternate&&d.delete(null===g.key?h:g.key),v=i(g,v,h),null===u?l=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return n(o,e)})),aa&&Ko(o,h),l}return function e(r,a,i,s){if("object"===typeof i&&null!==i&&i.type===w&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case b:e:{for(var c=i.key,l=a;null!==l;){if(l.key===c){if((c=i.type)===w){if(7===l.tag){t(r,l.sibling),(a=o(l,i.props.children)).return=r,r=a;break e}}else if(l.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===P&&Za(c)===l.type){t(r,l.sibling),(a=o(l,i.props)).ref=Xa(r,l,i),a.return=r,r=a;break e}t(r,l);break}n(r,l),l=l.sibling}i.type===w?((a=Ec(i.props.children,r.mode,s,i.key)).return=r,r=a):((s=Dc(i.type,i.key,i.props,null,r.mode,s)).ref=Xa(r,a,i),s.return=r,r=s)}return v(r);case U:e:{for(l=i.key;null!==a;){if(a.key===l){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){t(r,a.sibling),(a=o(a,i.children||[])).return=r,r=a;break e}t(r,a);break}n(r,a),a=a.sibling}(a=Ac(i,r.mode,s)).return=r,r=a}return v(r);case P:return e(r,a,(l=i._init)(i._payload),s)}if(ne(i))return d(r,a,i,s);if(E(i))return h(r,a,i,s);Ya(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==a&&6===a.tag?(t(r,a.sibling),(a=o(a,i)).return=r,r=a):(t(r,a),(a=Lc(i,r.mode,s)).return=r,r=a),v(r)):t(r,a)}}var Ja=Qa(!0),$a=Qa(!1),Ka={},ei=Mo(Ka),ni=Mo(Ka),ti=Mo(Ka);function ri(e){if(e===Ka)throw Error(a(174));return e}function oi(e,n){switch(ko(ti,n),ko(ni,e),ko(ei,Ka),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:se(null,"");break;default:n=se(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}jo(ei),ko(ei,n)}function ai(){jo(ei),jo(ni),jo(ti)}function ii(e){ri(ti.current);var n=ri(ei.current),t=se(n,e.type);n!==t&&(ko(ni,e),ko(ei,t))}function vi(e){ni.current===e&&(jo(ei),jo(ni))}var si=Mo(0);function ci(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!==(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var li=[];function ui(){for(var e=0;e<li.length;e++)li[e]._workInProgressVersionPrimary=null;li.length=0}var fi=_.ReactCurrentDispatcher,pi=_.ReactCurrentBatchConfig,mi=0,di=null,hi=null,xi=null,gi=!1,yi=!1,_i=0,bi=0;function Ui(){throw Error(a(321))}function wi(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!vr(e[t],n[t]))return!1;return!0}function Si(e,n,t,r,o,i){if(mi=i,di=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,fi.current=null===e||null===e.memoizedState?vv:sv,e=t(r,o),yi){i=0;do{if(yi=!1,_i=0,25<=i)throw Error(a(301));i+=1,xi=hi=null,n.updateQueue=null,fi.current=cv,e=t(r,o)}while(yi)}if(fi.current=iv,n=null!==hi&&null!==hi.next,mi=0,xi=hi=di=null,gi=!1,n)throw Error(a(300));return e}function Mi(){var e=0!==_i;return _i=0,e}function ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===xi?di.memoizedState=xi=e:xi=xi.next=e,xi}function ki(){if(null===hi){var e=di.alternate;e=null!==e?e.memoizedState:null}else e=hi.next;var n=null===xi?di.memoizedState:xi.next;if(null!==n)xi=n,hi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(hi=e).memoizedState,baseState:hi.baseState,baseQueue:hi.baseQueue,queue:hi.queue,next:null},null===xi?di.memoizedState=xi=e:xi=xi.next=e}return xi}function Ci(e,n){return"function"===typeof n?n(e):n}function Ti(e){var n=ki(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=hi,o=r.baseQueue,i=t.pending;if(null!==i){if(null!==o){var v=o.next;o.next=i.next,i.next=v}r.baseQueue=o=i,t.pending=null}if(null!==o){i=o.next,r=r.baseState;var s=v=null,c=null,l=i;do{var u=l.lane;if((mi&u)===u)null!==c&&(c=c.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),r=l.hasEagerState?l.eagerState:e(r,l.action);else{var f={lane:u,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===c?(s=c=f,v=r):c=c.next=f,di.lanes|=u,Is|=u}l=l.next}while(null!==l&&l!==i);null===c?v=r:c.next=s,vr(r,n.memoizedState)||(_v=!0),n.memoizedState=r,n.baseState=v,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){o=e;do{i=o.lane,di.lanes|=i,Is|=i,o=o.next}while(o!==e)}else null===o&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ri(e){var n=ki(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,i=n.memoizedState;if(null!==o){t.pending=null;var v=o=o.next;do{i=e(i,v.action),v=v.next}while(v!==o);vr(i,n.memoizedState)||(_v=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function zi(){}function Pi(e,n){var t=di,r=ki(),o=n(),i=!vr(r.memoizedState,o);if(i&&(r.memoizedState=o,_v=!0),r=r.queue,qi(Ei.bind(null,t,r,e),[e]),r.getSnapshot!==n||i||null!==xi&&1&xi.memoizedState.tag){if(t.flags|=2048,Oi(9,Di.bind(null,t,r,o,n),void 0,null),null===Ts)throw Error(a(349));0!==(30&mi)||Fi(t,n,o)}return o}function Fi(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=di.updateQueue)?(n={lastEffect:null,stores:null},di.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Di(e,n,t,r){n.value=t,n.getSnapshot=r,Ii(n)&&Li(e)}function Ei(e,n,t){return t((function(){Ii(n)&&Li(e)}))}function Ii(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!vr(e,t)}catch(r){return!0}}function Li(e){var n=Ra(e,1);null!==n&&tc(n,e,1,-1)}function Ai(e){var n=ji();return"function"===typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ci,lastRenderedState:e},n.queue=e,e=e.dispatch=tv.bind(null,di,e),[n.memoizedState,e]}function Oi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=di.updateQueue)?(n={lastEffect:null,stores:null},di.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Bi(){return ki().memoizedState}function Ni(e,n,t,r){var o=ji();di.flags|=e,o.memoizedState=Oi(1|n,t,void 0,void 0===r?null:r)}function Gi(e,n,t,r){var o=ki();r=void 0===r?null:r;var a=void 0;if(null!==hi){var i=hi.memoizedState;if(a=i.destroy,null!==r&&wi(r,i.deps))return void(o.memoizedState=Oi(n,t,a,r))}di.flags|=e,o.memoizedState=Oi(1|n,t,a,r)}function Vi(e,n){return Ni(8390656,8,e,n)}function qi(e,n){return Gi(2048,8,e,n)}function Wi(e,n){return Gi(4,2,e,n)}function Hi(e,n){return Gi(4,4,e,n)}function Xi(e,n){return"function"===typeof n?(e=e(),n(e),function(){n(null)}):null!==n&&void 0!==n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Yi(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Gi(4,4,Xi.bind(null,n,e),t)}function Zi(){}function Qi(e,n){var t=ki();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&wi(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Ji(e,n){var t=ki();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&wi(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function $i(e,n,t){return 0===(21&mi)?(e.baseState&&(e.baseState=!1,_v=!0),e.memoizedState=t):(vr(t,n)||(t=hn(),di.lanes|=t,Is|=t,e.baseState=!0),n)}function Ki(e,n){var t=_n;_n=0!==t&&4>t?t:4,e(!0);var r=pi.transition;pi.transition={};try{e(!1),n()}finally{_n=t,pi.transition=r}}function ev(){return ki().memoizedState}function nv(e,n,t){var r=nc(e);if(t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},rv(e))ov(n,t);else if(null!==(t=Ta(e,n,t,r))){tc(t,e,r,ec()),av(t,n,r)}}function tv(e,n,t){var r=nc(e),o={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(rv(e))ov(n,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var i=n.lastRenderedState,v=a(i,t);if(o.hasEagerState=!0,o.eagerState=v,vr(v,i)){var s=n.interleaved;return null===s?(o.next=o,Ca(n)):(o.next=s.next,s.next=o),void(n.interleaved=o)}}catch(c){}null!==(t=Ta(e,n,o,r))&&(tc(t,e,r,o=ec()),av(t,n,r))}}function rv(e){var n=e.alternate;return e===di||null!==n&&n===di}function ov(e,n){yi=gi=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function av(e,n,t){if(0!==(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,yn(e,t)}}var iv={readContext:ja,useCallback:Ui,useContext:Ui,useEffect:Ui,useImperativeHandle:Ui,useInsertionEffect:Ui,useLayoutEffect:Ui,useMemo:Ui,useReducer:Ui,useRef:Ui,useState:Ui,useDebugValue:Ui,useDeferredValue:Ui,useTransition:Ui,useMutableSource:Ui,useSyncExternalStore:Ui,useId:Ui,unstable_isNewReconciler:!1},vv={readContext:ja,useCallback:function(e,n){return ji().memoizedState=[e,void 0===n?null:n],e},useContext:ja,useEffect:Vi,useImperativeHandle:function(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Ni(4194308,4,Xi.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ni(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ni(4,2,e,n)},useMemo:function(e,n){var t=ji();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ji();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=nv.bind(null,di,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ji().memoizedState=e},useState:Ai,useDebugValue:Zi,useDeferredValue:function(e){return ji().memoizedState=e},useTransition:function(){var e=Ai(!1),n=e[0];return e=Ki.bind(null,e[1]),ji().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=di,o=ji();if(aa){if(void 0===t)throw Error(a(407));t=t()}else{if(t=n(),null===Ts)throw Error(a(349));0!==(30&mi)||Fi(r,n,t)}o.memoizedState=t;var i={value:t,getSnapshot:n};return o.queue=i,Vi(Ei.bind(null,r,i,e),[e]),r.flags|=2048,Oi(9,Di.bind(null,r,i,t,n),void 0,null),t},useId:function(){var e=ji(),n=Ts.identifierPrefix;if(aa){var t=$o;n=":"+n+"R"+(t=(Jo&~(1<<32-vn(Jo)-1)).toString(32)+t),0<(t=_i++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=bi++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},sv={readContext:ja,useCallback:Qi,useContext:ja,useEffect:qi,useImperativeHandle:Yi,useInsertionEffect:Wi,useLayoutEffect:Hi,useMemo:Ji,useReducer:Ti,useRef:Bi,useState:function(){return Ti(Ci)},useDebugValue:Zi,useDeferredValue:function(e){return $i(ki(),hi.memoizedState,e)},useTransition:function(){return[Ti(Ci)[0],ki().memoizedState]},useMutableSource:zi,useSyncExternalStore:Pi,useId:ev,unstable_isNewReconciler:!1},cv={readContext:ja,useCallback:Qi,useContext:ja,useEffect:qi,useImperativeHandle:Yi,useInsertionEffect:Wi,useLayoutEffect:Hi,useMemo:Ji,useReducer:Ri,useRef:Bi,useState:function(){return Ri(Ci)},useDebugValue:Zi,useDeferredValue:function(e){var n=ki();return null===hi?n.memoizedState=e:$i(n,hi.memoizedState,e)},useTransition:function(){return[Ri(Ci)[0],ki().memoizedState]},useMutableSource:zi,useSyncExternalStore:Pi,useId:ev,unstable_isNewReconciler:!1};function lv(e,n){try{var t="",r=n;do{t+=N(r),r=r.return}while(r);var o=t}catch(a){o="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:n,stack:o,digest:null}}function uv(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function fv(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}var pv="function"===typeof WeakMap?WeakMap:Map;function mv(e,n,t){(t=Da(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){qs||(qs=!0,Ws=r),fv(0,n)},t}function dv(e,n,t){(t=Da(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var o=n.value;t.payload=function(){return r(o)},t.callback=function(){fv(0,n)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(t.callback=function(){fv(0,n),"function"!==typeof r&&(null===Hs?Hs=new Set([this]):Hs.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function hv(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new pv;var o=new Set;r.set(n,o)}else void 0===(o=r.get(n))&&(o=new Set,r.set(n,o));o.has(t)||(o.add(t),e=Mc.bind(null,e,n,t),n.then(e,e))}function xv(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function gv(e,n,t,r,o){return 0===(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Da(-1,1)).tag=2,Ea(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}var yv=_.ReactCurrentOwner,_v=!1;function bv(e,n,t,r){n.child=null===e?$a(n,null,t,r):Ja(n,e.child,t,r)}function Uv(e,n,t,r,o){t=t.render;var a=n.ref;return Ma(n,o),r=Si(e,n,t,r,a,o),t=Mi(),null===e||_v?(aa&&t&&na(n),n.flags|=1,bv(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,qv(e,n,o))}function wv(e,n,t,r,o){if(null===e){var a=t.type;return"function"!==typeof a||Pc(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Dc(t.type,null,r,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,Sv(e,n,a,r,o))}if(a=e.child,0===(e.lanes&o)){var i=a.memoizedProps;if((t=null!==(t=t.compare)?t:sr)(i,r)&&e.ref===n.ref)return qv(e,n,o)}return n.flags|=1,(e=Fc(a,r)).ref=n.ref,e.return=n,n.child=e}function Sv(e,n,t,r,o){if(null!==e){var a=e.memoizedProps;if(sr(a,r)&&e.ref===n.ref){if(_v=!1,n.pendingProps=r=a,0===(e.lanes&o))return n.lanes=e.lanes,qv(e,n,o);0!==(131072&e.flags)&&(_v=!0)}}return kv(e,n,t,r,o)}function Mv(e,n,t){var r=n.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},ko(Fs,Ps),Ps|=t;else{if(0===(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,ko(Fs,Ps),Ps|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:t,ko(Fs,Ps),Ps|=r}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,ko(Fs,Ps),Ps|=r;return bv(e,n,o,t),n.child}function jv(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function kv(e,n,t,r,o){var a=Fo(t)?zo:To.current;return a=Po(n,a),Ma(n,o),t=Si(e,n,t,r,a,o),r=Mi(),null===e||_v?(aa&&r&&na(n),n.flags|=1,bv(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,qv(e,n,o))}function Cv(e,n,t,r,o){if(Fo(t)){var a=!0;Lo(n)}else a=!1;if(Ma(n,o),null===n.stateNode)Vv(e,n),qa(n,t,r),Ha(n,t,r,o),r=!0;else if(null===e){var i=n.stateNode,v=n.memoizedProps;i.props=v;var s=i.context,c=t.contextType;"object"===typeof c&&null!==c?c=ja(c):c=Po(n,c=Fo(t)?zo:To.current);var l=t.getDerivedStateFromProps,u="function"===typeof l||"function"===typeof i.getSnapshotBeforeUpdate;u||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(v!==r||s!==c)&&Wa(n,i,r,c),za=!1;var f=n.memoizedState;i.state=f,Aa(n,r,i,o),s=n.memoizedState,v!==r||f!==s||Ro.current||za?("function"===typeof l&&(Na(n,t,l,r),s=n.memoizedState),(v=za||Va(n,t,v,r,f,s,c))?(u||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(n.flags|=4194308)):("function"===typeof i.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=s),i.props=r,i.state=s,i.context=c,r=v):("function"===typeof i.componentDidMount&&(n.flags|=4194308),r=!1)}else{i=n.stateNode,Fa(e,n),v=n.memoizedProps,c=n.type===n.elementType?v:xa(n.type,v),i.props=c,u=n.pendingProps,f=i.context,"object"===typeof(s=t.contextType)&&null!==s?s=ja(s):s=Po(n,s=Fo(t)?zo:To.current);var p=t.getDerivedStateFromProps;(l="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(v!==u||f!==s)&&Wa(n,i,r,s),za=!1,f=n.memoizedState,i.state=f,Aa(n,r,i,o);var m=n.memoizedState;v!==u||f!==m||Ro.current||za?("function"===typeof p&&(Na(n,t,p,r),m=n.memoizedState),(c=za||Va(n,t,c,r,f,m,s)||!1)?(l||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,s),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,s)),"function"===typeof i.componentDidUpdate&&(n.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!==typeof i.componentDidUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=m),i.props=r,i.state=m,i.context=s,r=c):("function"!==typeof i.componentDidUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),r=!1)}return Tv(e,n,t,r,a,o)}function Tv(e,n,t,r,o,a){jv(e,n);var i=0!==(128&n.flags);if(!r&&!i)return o&&Ao(n,t,!1),qv(e,n,a);r=n.stateNode,yv.current=n;var v=i&&"function"!==typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=Ja(n,e.child,null,a),n.child=Ja(n,null,v,a)):bv(e,n,v,a),n.memoizedState=r.state,o&&Ao(n,t,!0),n.child}function Rv(e){var n=e.stateNode;n.pendingContext?Eo(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Eo(0,n.context,!1),oi(e,n.containerInfo)}function zv(e,n,t,r,o){return ma(),da(o),n.flags|=256,bv(e,n,t,r),n.child}var Pv,Fv,Dv,Ev={dehydrated:null,treeContext:null,retryLane:0};function Iv(e){return{baseLanes:e,cachePool:null,transitions:null}}function Lv(e,n,t){var r,o=n.pendingProps,i=si.current,v=!1,s=0!==(128&n.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(v=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),ko(si,1&i),null===e)return la(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(s=o.children,e=o.fallback,v?(o=n.mode,v=n.child,s={mode:"hidden",children:s},0===(1&o)&&null!==v?(v.childLanes=0,v.pendingProps=s):v=Ic(s,o,0,null),e=Ec(e,o,t,null),v.return=n,e.return=n,v.sibling=e,n.child=v,n.child.memoizedState=Iv(t),n.memoizedState=Ev,e):Av(n,s));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,n,t,r,o,i,v){if(t)return 256&n.flags?(n.flags&=-257,Ov(e,n,v,r=uv(Error(a(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(i=r.fallback,o=n.mode,r=Ic({mode:"visible",children:r.children},o,0,null),(i=Ec(i,o,v,null)).flags|=2,r.return=n,i.return=n,r.sibling=i,n.child=r,0!==(1&n.mode)&&Ja(n,e.child,null,v),n.child.memoizedState=Iv(v),n.memoizedState=Ev,i);if(0===(1&n.mode))return Ov(e,n,v,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var s=r.dgst;return r=s,Ov(e,n,v,r=uv(i=Error(a(419)),r,void 0))}if(s=0!==(v&e.childLanes),_v||s){if(null!==(r=Ts)){switch(v&-v){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!==(o&(r.suspendedLanes|v))?0:o)&&o!==i.retryLane&&(i.retryLane=o,Ra(e,o),tc(r,e,o,-1))}return dc(),Ov(e,n,v,r=uv(Error(a(421))))}return"$?"===o.data?(n.flags|=128,n.child=e.child,n=kc.bind(null,e),o._reactRetry=n,null):(e=i.treeContext,oa=co(o.nextSibling),ra=n,aa=!0,ia=null,null!==e&&(Yo[Zo++]=Jo,Yo[Zo++]=$o,Yo[Zo++]=Qo,Jo=e.id,$o=e.overflow,Qo=n),(n=Av(n,r.children)).flags|=4096,n)}(e,n,s,o,r,i,t);if(v){v=o.fallback,s=n.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:o.children};return 0===(1&s)&&n.child!==i?((o=n.child).childLanes=0,o.pendingProps=c,n.deletions=null):(o=Fc(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==r?v=Fc(r,v):(v=Ec(v,s,t,null)).flags|=2,v.return=n,o.return=n,o.sibling=v,n.child=o,o=v,v=n.child,s=null===(s=e.child.memoizedState)?Iv(t):{baseLanes:s.baseLanes|t,cachePool:null,transitions:s.transitions},v.memoizedState=s,v.childLanes=e.childLanes&~t,n.memoizedState=Ev,o}return e=(v=e.child).sibling,o=Fc(v,{mode:"visible",children:o.children}),0===(1&n.mode)&&(o.lanes=t),o.return=n,o.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=o,n.memoizedState=null,o}function Av(e,n){return(n=Ic({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Ov(e,n,t,r){return null!==r&&da(r),Ja(n,e.child,null,t),(e=Av(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Bv(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Sa(e.return,n,t)}function Nv(e,n,t,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=o)}function Gv(e,n,t){var r=n.pendingProps,o=r.revealOrder,a=r.tail;if(bv(e,n,r.children,t),0!==(2&(r=si.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bv(e,t,n);else if(19===e.tag)Bv(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ko(si,r),0===(1&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===ci(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),Nv(n,!1,o,t,a);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ci(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}Nv(n,!0,t,null,a);break;case"together":Nv(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Vv(e,n){0===(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function qv(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Is|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=Fc(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Fc(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Wv(e,n){if(!aa)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Hv(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Xv(e,n,t){var r=n.pendingProps;switch(ta(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Hv(n),null;case 1:case 17:return Fo(n.type)&&Do(),Hv(n),null;case 3:return r=n.stateNode,ai(),jo(Ro),jo(To),ui(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fa(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&n.flags)||(n.flags|=1024,null!==ia&&(ic(ia),ia=null))),Hv(n),null;case 5:vi(n);var o=ri(ti.current);if(t=n.type,null!==e&&null!=n.stateNode)Fv(e,n,t,r),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(a(166));return Hv(n),null}if(e=ri(ei.current),fa(n)){r=n.stateNode,t=n.type;var i=n.memoizedProps;switch(r[fo]=n,r[po]=i,e=0!==(1&n.mode),t){case"dialog":Or("cancel",r),Or("close",r);break;case"iframe":case"object":case"embed":Or("load",r);break;case"video":case"audio":for(o=0;o<Er.length;o++)Or(Er[o],r);break;case"source":Or("error",r);break;case"img":case"image":case"link":Or("error",r),Or("load",r);break;case"details":Or("toggle",r);break;case"input":Q(r,i),Or("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Or("invalid",r);break;case"textarea":oe(r,i),Or("invalid",r)}for(var s in ge(t,i),o=null,i)if(i.hasOwnProperty(s)){var c=i[s];"children"===s?"string"===typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&$r(r.textContent,c,e),o=["children",c]):"number"===typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&$r(r.textContent,c,e),o=["children",""+c]):v.hasOwnProperty(s)&&null!=c&&"onScroll"===s&&Or("scroll",r)}switch(t){case"input":H(r),K(r,i,!0);break;case"textarea":H(r),ie(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=Kr)}r=o,n.updateQueue=r,null!==r&&(n.flags|=4)}else{s=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ve(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=s.createElement(t,{is:r.is}):(e=s.createElement(t),"select"===t&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,t),e[fo]=n,e[po]=r,Pv(e,n),n.stateNode=e;e:{switch(s=ye(t,r),t){case"dialog":Or("cancel",e),Or("close",e),o=r;break;case"iframe":case"object":case"embed":Or("load",e),o=r;break;case"video":case"audio":for(o=0;o<Er.length;o++)Or(Er[o],e);o=r;break;case"source":Or("error",e),o=r;break;case"img":case"image":case"link":Or("error",e),Or("load",e),o=r;break;case"details":Or("toggle",e),o=r;break;case"input":Q(e,r),o=Z(e,r),Or("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=L({},r,{value:void 0}),Or("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Or("invalid",e)}for(i in ge(t,o),c=o)if(c.hasOwnProperty(i)){var l=c[i];"style"===i?he(e,l):"dangerouslySetInnerHTML"===i?null!=(l=l?l.__html:void 0)&&ue(e,l):"children"===i?"string"===typeof l?("textarea"!==t||""!==l)&&fe(e,l):"number"===typeof l&&fe(e,""+l):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(v.hasOwnProperty(i)?null!=l&&"onScroll"===i&&Or("scroll",e):null!=l&&y(e,i,l,s))}switch(t){case"input":H(e),K(e,r,!1);break;case"textarea":H(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?te(e,!!r.multiple,i,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof o.onClick&&(e.onclick=Kr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Hv(n),null;case 6:if(e&&null!=n.stateNode)Dv(0,n,e.memoizedProps,r);else{if("string"!==typeof r&&null===n.stateNode)throw Error(a(166));if(t=ri(ti.current),ri(ei.current),fa(n)){if(r=n.stateNode,t=n.memoizedProps,r[fo]=n,(i=r.nodeValue!==t)&&null!==(e=ra))switch(e.tag){case 3:$r(r.nodeValue,t,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&$r(r.nodeValue,t,0!==(1&e.mode))}i&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[fo]=n,n.stateNode=r}return Hv(n),null;case 13:if(jo(si),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aa&&null!==oa&&0!==(1&n.mode)&&0===(128&n.flags))pa(),ma(),n.flags|=98560,i=!1;else if(i=fa(n),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(a(318));if(!(i=null!==(i=n.memoizedState)?i.dehydrated:null))throw Error(a(317));i[fo]=n}else ma(),0===(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Hv(n),i=!1}else null!==ia&&(ic(ia),ia=null),i=!0;if(!i)return 65536&n.flags?n:null}return 0!==(128&n.flags)?(n.lanes=t,n):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!==(1&n.mode)&&(null===e||0!==(1&si.current)?0===Ds&&(Ds=3):dc())),null!==n.updateQueue&&(n.flags|=4),Hv(n),null);case 4:return ai(),null===e&&Gr(n.stateNode.containerInfo),Hv(n),null;case 10:return wa(n.type._context),Hv(n),null;case 19:if(jo(si),null===(i=n.memoizedState))return Hv(n),null;if(r=0!==(128&n.flags),null===(s=i.rendering))if(r)Wv(i,!1);else{if(0!==Ds||null!==e&&0!==(128&e.flags))for(e=n.child;null!==e;){if(null!==(s=ci(e))){for(n.flags|=128,Wv(i,!1),null!==(r=s.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(i=t).flags&=14680066,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ko(si,1&si.current|2),n.child}e=e.sibling}null!==i.tail&&Je()>Gs&&(n.flags|=128,r=!0,Wv(i,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=ci(s))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Wv(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate&&!aa)return Hv(n),null}else 2*Je()-i.renderingStartTime>Gs&&1073741824!==t&&(n.flags|=128,r=!0,Wv(i,!1),n.lanes=4194304);i.isBackwards?(s.sibling=n.child,n.child=s):(null!==(t=i.last)?t.sibling=s:n.child=s,i.last=s)}return null!==i.tail?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=Je(),n.sibling=null,t=si.current,ko(si,r?1&t|2:1&t),n):(Hv(n),null);case 22:case 23:return uc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!==(1&n.mode)?0!==(1073741824&Ps)&&(Hv(n),6&n.subtreeFlags&&(n.flags|=8192)):Hv(n),null;case 24:case 25:return null}throw Error(a(156,n.tag))}function Yv(e,n){switch(ta(n),n.tag){case 1:return Fo(n.type)&&Do(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return ai(),jo(Ro),jo(To),ui(),0!==(65536&(e=n.flags))&&0===(128&e)?(n.flags=-65537&e|128,n):null;case 5:return vi(n),null;case 13:if(jo(si),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(a(340));ma()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return jo(si),null;case 4:return ai(),null;case 10:return wa(n.type._context),null;case 22:case 23:return uc(),null;default:return null}}Pv=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Fv=function(e,n,t,r){var o=e.memoizedProps;if(o!==r){e=n.stateNode,ri(ei.current);var a,i=null;switch(t){case"input":o=Z(e,o),r=Z(e,r),i=[];break;case"select":o=L({},o,{value:void 0}),r=L({},r,{value:void 0}),i=[];break;case"textarea":o=re(e,o),r=re(e,r),i=[];break;default:"function"!==typeof o.onClick&&"function"===typeof r.onClick&&(e.onclick=Kr)}for(l in ge(t,r),t=null,o)if(!r.hasOwnProperty(l)&&o.hasOwnProperty(l)&&null!=o[l])if("style"===l){var s=o[l];for(a in s)s.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(v.hasOwnProperty(l)?i||(i=[]):(i=i||[]).push(l,null));for(l in r){var c=r[l];if(s=null!=o?o[l]:void 0,r.hasOwnProperty(l)&&c!==s&&(null!=c||null!=s))if("style"===l)if(s){for(a in s)!s.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in c)c.hasOwnProperty(a)&&s[a]!==c[a]&&(t||(t={}),t[a]=c[a])}else t||(i||(i=[]),i.push(l,t)),t=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(i=i||[]).push(l,c)):"children"===l?"string"!==typeof c&&"number"!==typeof c||(i=i||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(v.hasOwnProperty(l)?(null!=c&&"onScroll"===l&&Or("scroll",e),i||s===c||(i=[])):(i=i||[]).push(l,c))}t&&(i=i||[]).push("style",t);var l=i;(n.updateQueue=l)&&(n.flags|=4)}},Dv=function(e,n,t,r){t!==r&&(n.flags|=4)};var Zv=!1,Qv=!1,Jv="function"===typeof WeakSet?WeakSet:Set,$v=null;function Kv(e,n){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(r){Sc(e,n,r)}else t.current=null}function es(e,n,t){try{t()}catch(r){Sc(e,n,r)}}var ns=!1;function ts(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&es(n,t,a)}o=o.next}while(o!==r)}}function rs(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function os(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"===typeof n?n(e):n.current=e}}function as(e){var n=e.alternate;null!==n&&(e.alternate=null,as(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(n=e.stateNode)&&(delete n[fo],delete n[po],delete n[ho],delete n[xo],delete n[go])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function is(e){return 5===e.tag||3===e.tag||4===e.tag}function vs(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||is(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!==(t=t._reactRootContainer)&&void 0!==t||null!==n.onclick||(n.onclick=Kr));else if(4!==r&&null!==(e=e.child))for(ss(e,n,t),e=e.sibling;null!==e;)ss(e,n,t),e=e.sibling}function cs(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cs(e,n,t),e=e.sibling;null!==e;)cs(e,n,t),e=e.sibling}var ls=null,us=!1;function fs(e,n,t){for(t=t.child;null!==t;)ps(e,n,t),t=t.sibling}function ps(e,n,t){if(an&&"function"===typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(on,t)}catch(v){}switch(t.tag){case 5:Qv||Kv(t,n);case 6:var r=ls,o=us;ls=null,fs(e,n,t),us=o,null!==(ls=r)&&(us?(e=ls,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ls.removeChild(t.stateNode));break;case 18:null!==ls&&(us?(e=ls,t=t.stateNode,8===e.nodeType?so(e.parentNode,t):1===e.nodeType&&so(e,t),Vn(e)):so(ls,t.stateNode));break;case 4:r=ls,o=us,ls=t.stateNode.containerInfo,us=!0,fs(e,n,t),ls=r,us=o;break;case 0:case 11:case 14:case 15:if(!Qv&&(null!==(r=t.updateQueue)&&null!==(r=r.lastEffect))){o=r=r.next;do{var a=o,i=a.destroy;a=a.tag,void 0!==i&&(0!==(2&a)||0!==(4&a))&&es(t,n,i),o=o.next}while(o!==r)}fs(e,n,t);break;case 1:if(!Qv&&(Kv(t,n),"function"===typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(v){Sc(t,n,v)}fs(e,n,t);break;case 21:fs(e,n,t);break;case 22:1&t.mode?(Qv=(r=Qv)||null!==t.memoizedState,fs(e,n,t),Qv=r):fs(e,n,t);break;default:fs(e,n,t)}}function ms(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Jv),n.forEach((function(n){var r=Cc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function ds(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var o=t[r];try{var i=e,v=n,s=v;e:for(;null!==s;){switch(s.tag){case 5:ls=s.stateNode,us=!1;break e;case 3:case 4:ls=s.stateNode.containerInfo,us=!0;break e}s=s.return}if(null===ls)throw Error(a(160));ps(i,v,o),ls=null,us=!1;var c=o.alternate;null!==c&&(c.return=null),o.return=null}catch(l){Sc(o,n,l)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)hs(n,e),n=n.sibling}function hs(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ds(n,e),xs(e),4&r){try{ts(3,e,e.return),rs(3,e)}catch(h){Sc(e,e.return,h)}try{ts(5,e,e.return)}catch(h){Sc(e,e.return,h)}}break;case 1:ds(n,e),xs(e),512&r&&null!==t&&Kv(t,t.return);break;case 5:if(ds(n,e),xs(e),512&r&&null!==t&&Kv(t,t.return),32&e.flags){var o=e.stateNode;try{fe(o,"")}catch(h){Sc(e,e.return,h)}}if(4&r&&null!=(o=e.stateNode)){var i=e.memoizedProps,v=null!==t?t.memoizedProps:i,s=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===s&&"radio"===i.type&&null!=i.name&&J(o,i),ye(s,v);var l=ye(s,i);for(v=0;v<c.length;v+=2){var u=c[v],f=c[v+1];"style"===u?he(o,f):"dangerouslySetInnerHTML"===u?ue(o,f):"children"===u?fe(o,f):y(o,u,f,l)}switch(s){case"input":$(o,i);break;case"textarea":ae(o,i);break;case"select":var p=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!i.multiple;var m=i.value;null!=m?te(o,!!i.multiple,m,!1):p!==!!i.multiple&&(null!=i.defaultValue?te(o,!!i.multiple,i.defaultValue,!0):te(o,!!i.multiple,i.multiple?[]:"",!1))}o[po]=i}catch(h){Sc(e,e.return,h)}}break;case 6:if(ds(n,e),xs(e),4&r){if(null===e.stateNode)throw Error(a(162));o=e.stateNode,i=e.memoizedProps;try{o.nodeValue=i}catch(h){Sc(e,e.return,h)}}break;case 3:if(ds(n,e),xs(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Vn(n.containerInfo)}catch(h){Sc(e,e.return,h)}break;case 4:default:ds(n,e),xs(e);break;case 13:ds(n,e),xs(e),8192&(o=e.child).flags&&(i=null!==o.memoizedState,o.stateNode.isHidden=i,!i||null!==o.alternate&&null!==o.alternate.memoizedState||(Ns=Je())),4&r&&ms(e);break;case 22:if(u=null!==t&&null!==t.memoizedState,1&e.mode?(Qv=(l=Qv)||u,ds(n,e),Qv=l):ds(n,e),xs(e),8192&r){if(l=null!==e.memoizedState,(e.stateNode.isHidden=l)&&!u&&0!==(1&e.mode))for($v=e,u=e.child;null!==u;){for(f=$v=u;null!==$v;){switch(m=(p=$v).child,p.tag){case 0:case 11:case 14:case 15:ts(4,p,p.return);break;case 1:Kv(p,p.return);var d=p.stateNode;if("function"===typeof d.componentWillUnmount){r=p,t=p.return;try{n=r,d.props=n.memoizedProps,d.state=n.memoizedState,d.componentWillUnmount()}catch(h){Sc(r,t,h)}}break;case 5:Kv(p,p.return);break;case 22:if(null!==p.memoizedState){bs(f);continue}}null!==m?(m.return=p,$v=m):bs(f)}u=u.sibling}e:for(u=null,f=e;;){if(5===f.tag){if(null===u){u=f;try{o=f.stateNode,l?"function"===typeof(i=o.style).setProperty?i.setProperty("display","none","important"):i.display="none":(s=f.stateNode,v=void 0!==(c=f.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,s.style.display=de("display",v))}catch(h){Sc(e,e.return,h)}}}else if(6===f.tag){if(null===u)try{f.stateNode.nodeValue=l?"":f.memoizedProps}catch(h){Sc(e,e.return,h)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;u===f&&(u=null),f=f.return}u===f&&(u=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:ds(n,e),xs(e),4&r&&ms(e);case 21:}}function xs(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(is(t)){var r=t;break e}t=t.return}throw Error(a(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(fe(o,""),r.flags&=-33),cs(e,vs(e),o);break;case 3:case 4:var i=r.stateNode.containerInfo;ss(e,vs(e),i);break;default:throw Error(a(161))}}catch(v){Sc(e,e.return,v)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function gs(e,n,t){$v=e,ys(e,n,t)}function ys(e,n,t){for(var r=0!==(1&e.mode);null!==$v;){var o=$v,a=o.child;if(22===o.tag&&r){var i=null!==o.memoizedState||Zv;if(!i){var v=o.alternate,s=null!==v&&null!==v.memoizedState||Qv;v=Zv;var c=Qv;if(Zv=i,(Qv=s)&&!c)for($v=o;null!==$v;)s=(i=$v).child,22===i.tag&&null!==i.memoizedState?Us(o):null!==s?(s.return=i,$v=s):Us(o);for(;null!==a;)$v=a,ys(a,n,t),a=a.sibling;$v=o,Zv=v,Qv=c}_s(e)}else 0!==(8772&o.subtreeFlags)&&null!==a?(a.return=o,$v=a):_s(e)}}function _s(e){for(;null!==$v;){var n=$v;if(0!==(8772&n.flags)){var t=n.alternate;try{if(0!==(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Qv||rs(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Qv)if(null===t)r.componentDidMount();else{var o=n.elementType===n.type?t.memoizedProps:xa(n.type,t.memoizedProps);r.componentDidUpdate(o,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;null!==i&&Oa(n,i,r);break;case 3:var v=n.updateQueue;if(null!==v){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Oa(n,v,t)}break;case 5:var s=n.stateNode;if(null===t&&4&n.flags){t=s;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var l=n.alternate;if(null!==l){var u=l.memoizedState;if(null!==u){var f=u.dehydrated;null!==f&&Vn(f)}}}break;default:throw Error(a(163))}Qv||512&n.flags&&os(n)}catch(p){Sc(n,n.return,p)}}if(n===e){$v=null;break}if(null!==(t=n.sibling)){t.return=n.return,$v=t;break}$v=n.return}}function bs(e){for(;null!==$v;){var n=$v;if(n===e){$v=null;break}var t=n.sibling;if(null!==t){t.return=n.return,$v=t;break}$v=n.return}}function Us(e){for(;null!==$v;){var n=$v;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rs(4,n)}catch(s){Sc(n,t,s)}break;case 1:var r=n.stateNode;if("function"===typeof r.componentDidMount){var o=n.return;try{r.componentDidMount()}catch(s){Sc(n,o,s)}}var a=n.return;try{os(n)}catch(s){Sc(n,a,s)}break;case 5:var i=n.return;try{os(n)}catch(s){Sc(n,i,s)}}}catch(s){Sc(n,n.return,s)}if(n===e){$v=null;break}var v=n.sibling;if(null!==v){v.return=n.return,$v=v;break}$v=n.return}}var ws,Ss=Math.ceil,Ms=_.ReactCurrentDispatcher,js=_.ReactCurrentOwner,ks=_.ReactCurrentBatchConfig,Cs=0,Ts=null,Rs=null,zs=0,Ps=0,Fs=Mo(0),Ds=0,Es=null,Is=0,Ls=0,As=0,Os=null,Bs=null,Ns=0,Gs=1/0,Vs=null,qs=!1,Ws=null,Hs=null,Xs=!1,Ys=null,Zs=0,Qs=0,Js=null,$s=-1,Ks=0;function ec(){return 0!==(6&Cs)?Je():-1!==$s?$s:$s=Je()}function nc(e){return 0===(1&e.mode)?1:0!==(2&Cs)&&0!==zs?zs&-zs:null!==ha.transition?(0===Ks&&(Ks=hn()),Ks):0!==(e=_n)?e:e=void 0===(e=window.event)?16:Jn(e.type)}function tc(e,n,t,r){if(50<Qs)throw Qs=0,Js=null,Error(a(185));gn(e,t,r),0!==(2&Cs)&&e===Ts||(e===Ts&&(0===(2&Cs)&&(Ls|=t),4===Ds&&vc(e,zs)),rc(e,r),1===t&&0===Cs&&0===(1&n.mode)&&(Gs=Je()+500,Bo&&Vo()))}function rc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-vn(a),v=1<<i,s=o[i];-1===s?0!==(v&t)&&0===(v&r)||(o[i]=mn(v,n)):s<=n&&(e.expiredLanes|=v),a&=~v}}(e,n);var r=pn(e,e===Ts?zs:0);if(0===r)null!==t&&Ye(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ye(t),1===n)0===e.tag?function(e){Bo=!0,Go(e)}(sc.bind(null,e)):Go(sc.bind(null,e)),io((function(){0===(6&Cs)&&Vo()})),t=null;else{switch(bn(r)){case 1:t=Ke;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=Tc(t,oc.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function oc(e,n){if($s=-1,Ks=0,0!==(6&Cs))throw Error(a(327));var t=e.callbackNode;if(Uc()&&e.callbackNode!==t)return null;var r=pn(e,e===Ts?zs:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||n)n=hc(e,r);else{n=r;var o=Cs;Cs|=2;var i=mc();for(Ts===e&&zs===n||(Vs=null,Gs=Je()+500,fc(e,n));;)try{gc();break}catch(s){pc(e,s)}Ua(),Ms.current=i,Cs=o,null!==Rs?n=0:(Ts=null,zs=0,n=Ds)}if(0!==n){if(2===n&&(0!==(o=dn(e))&&(r=o,n=ac(e,o))),1===n)throw t=Es,fc(e,0),vc(e,r),rc(e,Je()),t;if(6===n)vc(e,r);else{if(o=e.current.alternate,0===(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var o=t[r],a=o.getSnapshot;o=o.value;try{if(!vr(a(),o))return!1}catch(v){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(o)&&(2===(n=hc(e,r))&&(0!==(i=dn(e))&&(r=i,n=ac(e,i))),1===n))throw t=Es,fc(e,0),vc(e,r),rc(e,Je()),t;switch(e.finishedWork=o,e.finishedLanes=r,n){case 0:case 1:throw Error(a(345));case 2:case 5:bc(e,Bs,Vs);break;case 3:if(vc(e,r),(130023424&r)===r&&10<(n=Ns+500-Je())){if(0!==pn(e,0))break;if(((o=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(bc.bind(null,e,Bs,Vs),n);break}bc(e,Bs,Vs);break;case 4:if(vc(e,r),(4194240&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var v=31-vn(r);i=1<<v,(v=n[v])>o&&(o=v),r&=~i}if(r=o,10<(r=(120>(r=Je()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ss(r/1960))-r)){e.timeoutHandle=ro(bc.bind(null,e,Bs,Vs),r);break}bc(e,Bs,Vs);break;default:throw Error(a(329))}}}return rc(e,Je()),e.callbackNode===t?oc.bind(null,e):null}function ac(e,n){var t=Os;return e.current.memoizedState.isDehydrated&&(fc(e,n).flags|=256),2!==(e=hc(e,n))&&(n=Bs,Bs=t,null!==n&&ic(n)),e}function ic(e){null===Bs?Bs=e:Bs.push.apply(Bs,e)}function vc(e,n){for(n&=~As,n&=~Ls,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-vn(n),r=1<<t;e[t]=-1,n&=~r}}function sc(e){if(0!==(6&Cs))throw Error(a(327));Uc();var n=pn(e,0);if(0===(1&n))return rc(e,Je()),null;var t=hc(e,n);if(0!==e.tag&&2===t){var r=dn(e);0!==r&&(n=r,t=ac(e,r))}if(1===t)throw t=Es,fc(e,0),vc(e,n),rc(e,Je()),t;if(6===t)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,bc(e,Bs,Vs),rc(e,Je()),null}function cc(e,n){var t=Cs;Cs|=1;try{return e(n)}finally{0===(Cs=t)&&(Gs=Je()+500,Bo&&Vo())}}function lc(e){null!==Ys&&0===Ys.tag&&0===(6&Cs)&&Uc();var n=Cs;Cs|=1;var t=ks.transition,r=_n;try{if(ks.transition=null,_n=1,e)return e()}finally{_n=r,ks.transition=t,0===(6&(Cs=n))&&Vo()}}function uc(){Ps=Fs.current,jo(Fs)}function fc(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,oo(t)),null!==Rs)for(t=Rs.return;null!==t;){var r=t;switch(ta(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Do();break;case 3:ai(),jo(Ro),jo(To),ui();break;case 5:vi(r);break;case 4:ai();break;case 13:case 19:jo(si);break;case 10:wa(r.type._context);break;case 22:case 23:uc()}t=t.return}if(Ts=e,Rs=e=Fc(e.current,null),zs=Ps=n,Ds=0,Es=null,As=Ls=Is=0,Bs=Os=null,null!==ka){for(n=0;n<ka.length;n++)if(null!==(r=(t=ka[n]).interleaved)){t.interleaved=null;var o=r.next,a=t.pending;if(null!==a){var i=a.next;a.next=o,r.next=i}t.pending=r}ka=null}return e}function pc(e,n){for(;;){var t=Rs;try{if(Ua(),fi.current=iv,gi){for(var r=di.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}gi=!1}if(mi=0,xi=hi=di=null,yi=!1,_i=0,js.current=null,null===t||null===t.return){Ds=1,Es=n,Rs=null;break}e:{var i=e,v=t.return,s=t,c=n;if(n=zs,s.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var l=c,u=s,f=u.tag;if(0===(1&u.mode)&&(0===f||11===f||15===f)){var p=u.alternate;p?(u.updateQueue=p.updateQueue,u.memoizedState=p.memoizedState,u.lanes=p.lanes):(u.updateQueue=null,u.memoizedState=null)}var m=xv(v);if(null!==m){m.flags&=-257,gv(m,v,s,0,n),1&m.mode&&hv(i,l,n),c=l;var d=(n=m).updateQueue;if(null===d){var h=new Set;h.add(c),n.updateQueue=h}else d.add(c);break e}if(0===(1&n)){hv(i,l,n),dc();break e}c=Error(a(426))}else if(aa&&1&s.mode){var x=xv(v);if(null!==x){0===(65536&x.flags)&&(x.flags|=256),gv(x,v,s,0,n),da(lv(c,s));break e}}i=c=lv(c,s),4!==Ds&&(Ds=2),null===Os?Os=[i]:Os.push(i),i=v;do{switch(i.tag){case 3:i.flags|=65536,n&=-n,i.lanes|=n,La(i,mv(0,c,n));break e;case 1:s=c;var g=i.type,y=i.stateNode;if(0===(128&i.flags)&&("function"===typeof g.getDerivedStateFromError||null!==y&&"function"===typeof y.componentDidCatch&&(null===Hs||!Hs.has(y)))){i.flags|=65536,n&=-n,i.lanes|=n,La(i,dv(i,s,n));break e}}i=i.return}while(null!==i)}_c(t)}catch(_){n=_,Rs===t&&null!==t&&(Rs=t=t.return);continue}break}}function mc(){var e=Ms.current;return Ms.current=iv,null===e?iv:e}function dc(){0!==Ds&&3!==Ds&&2!==Ds||(Ds=4),null===Ts||0===(268435455&Is)&&0===(268435455&Ls)||vc(Ts,zs)}function hc(e,n){var t=Cs;Cs|=2;var r=mc();for(Ts===e&&zs===n||(Vs=null,fc(e,n));;)try{xc();break}catch(o){pc(e,o)}if(Ua(),Cs=t,Ms.current=r,null!==Rs)throw Error(a(261));return Ts=null,zs=0,Ds}function xc(){for(;null!==Rs;)yc(Rs)}function gc(){for(;null!==Rs&&!Ze();)yc(Rs)}function yc(e){var n=ws(e.alternate,e,Ps);e.memoizedProps=e.pendingProps,null===n?_c(e):Rs=n,js.current=null}function _c(e){var n=e;do{var t=n.alternate;if(e=n.return,0===(32768&n.flags)){if(null!==(t=Xv(t,n,Ps)))return void(Rs=t)}else{if(null!==(t=Yv(t,n)))return t.flags&=32767,void(Rs=t);if(null===e)return Ds=6,void(Rs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Rs=n);Rs=n=e}while(null!==n);0===Ds&&(Ds=5)}function bc(e,n,t){var r=_n,o=ks.transition;try{ks.transition=null,_n=1,function(e,n,t,r){do{Uc()}while(null!==Ys);if(0!==(6&Cs))throw Error(a(327));t=e.finishedWork;var o=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var o=31-vn(t),a=1<<o;n[o]=0,r[o]=-1,e[o]=-1,t&=~a}}(e,i),e===Ts&&(Rs=Ts=null,zs=0),0===(2064&t.subtreeFlags)&&0===(2064&t.flags)||Xs||(Xs=!0,Tc(nn,(function(){return Uc(),null}))),i=0!==(15990&t.flags),0!==(15990&t.subtreeFlags)||i){i=ks.transition,ks.transition=null;var v=_n;_n=1;var s=Cs;Cs|=4,js.current=null,function(e,n){if(eo=Wn,pr(e=fr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var o=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{t.nodeType,i.nodeType}catch(b){t=null;break e}var v=0,s=-1,c=-1,l=0,u=0,f=e,p=null;n:for(;;){for(var m;f!==t||0!==o&&3!==f.nodeType||(s=v+o),f!==i||0!==r&&3!==f.nodeType||(c=v+r),3===f.nodeType&&(v+=f.nodeValue.length),null!==(m=f.firstChild);)p=f,f=m;for(;;){if(f===e)break n;if(p===t&&++l===o&&(s=v),p===i&&++u===r&&(c=v),null!==(m=f.nextSibling))break;p=(f=p).parentNode}f=m}t=-1===s||-1===c?null:{start:s,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(no={focusedElem:e,selectionRange:t},Wn=!1,$v=n;null!==$v;)if(e=(n=$v).child,0!==(1028&n.subtreeFlags)&&null!==e)e.return=n,$v=e;else for(;null!==$v;){n=$v;try{var d=n.alternate;if(0!==(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==d){var h=d.memoizedProps,x=d.memoizedState,g=n.stateNode,y=g.getSnapshotBeforeUpdate(n.elementType===n.type?h:xa(n.type,h),x);g.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var _=n.stateNode.containerInfo;1===_.nodeType?_.textContent="":9===_.nodeType&&_.documentElement&&_.removeChild(_.documentElement);break;default:throw Error(a(163))}}catch(b){Sc(n,n.return,b)}if(null!==(e=n.sibling)){e.return=n.return,$v=e;break}$v=n.return}d=ns,ns=!1}(e,t),hs(t,e),mr(no),Wn=!!eo,no=eo=null,e.current=t,gs(t,e,o),Qe(),Cs=s,_n=v,ks.transition=i}else e.current=t;if(Xs&&(Xs=!1,Ys=e,Zs=o),0===(i=e.pendingLanes)&&(Hs=null),function(e){if(an&&"function"===typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(on,e,void 0,128===(128&e.current.flags))}catch(n){}}(t.stateNode),rc(e,Je()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((o=n[t]).value,{componentStack:o.stack,digest:o.digest});if(qs)throw qs=!1,e=Ws,Ws=null,e;0!==(1&Zs)&&0!==e.tag&&Uc(),0!==(1&(i=e.pendingLanes))?e===Js?Qs++:(Qs=0,Js=e):Qs=0,Vo()}(e,n,t,r)}finally{ks.transition=o,_n=r}return null}function Uc(){if(null!==Ys){var e=bn(Zs),n=ks.transition,t=_n;try{if(ks.transition=null,_n=16>e?16:e,null===Ys)var r=!1;else{if(e=Ys,Ys=null,Zs=0,0!==(6&Cs))throw Error(a(331));var o=Cs;for(Cs|=4,$v=e.current;null!==$v;){var i=$v,v=i.child;if(0!==(16&$v.flags)){var s=i.deletions;if(null!==s){for(var c=0;c<s.length;c++){var l=s[c];for($v=l;null!==$v;){var u=$v;switch(u.tag){case 0:case 11:case 15:ts(8,u,i)}var f=u.child;if(null!==f)f.return=u,$v=f;else for(;null!==$v;){var p=(u=$v).sibling,m=u.return;if(as(u),u===l){$v=null;break}if(null!==p){p.return=m,$v=p;break}$v=m}}}var d=i.alternate;if(null!==d){var h=d.child;if(null!==h){d.child=null;do{var x=h.sibling;h.sibling=null,h=x}while(null!==h)}}$v=i}}if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,$v=v;else e:for(;null!==$v;){if(0!==(2048&(i=$v).flags))switch(i.tag){case 0:case 11:case 15:ts(9,i,i.return)}var g=i.sibling;if(null!==g){g.return=i.return,$v=g;break e}$v=i.return}}var y=e.current;for($v=y;null!==$v;){var _=(v=$v).child;if(0!==(2064&v.subtreeFlags)&&null!==_)_.return=v,$v=_;else e:for(v=y;null!==$v;){if(0!==(2048&(s=$v).flags))try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(U){Sc(s,s.return,U)}if(s===v){$v=null;break e}var b=s.sibling;if(null!==b){b.return=s.return,$v=b;break e}$v=s.return}}if(Cs=o,Vo(),an&&"function"===typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(on,e)}catch(U){}r=!0}return r}finally{_n=t,ks.transition=n}}return!1}function wc(e,n,t){e=Ea(e,n=mv(0,n=lv(t,n),1),1),n=ec(),null!==e&&(gn(e,1,n),rc(e,n))}function Sc(e,n,t){if(3===e.tag)wc(e,e,t);else for(;null!==n;){if(3===n.tag){wc(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Hs||!Hs.has(r))){n=Ea(n,e=dv(n,e=lv(t,e),1),1),e=ec(),null!==n&&(gn(n,1,e),rc(n,e));break}}n=n.return}}function Mc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ec(),e.pingedLanes|=e.suspendedLanes&t,Ts===e&&(zs&t)===t&&(4===Ds||3===Ds&&(130023424&zs)===zs&&500>Je()-Ns?fc(e,0):As|=t),rc(e,n)}function jc(e,n){0===n&&(0===(1&e.mode)?n=1:(n=un,0===(130023424&(un<<=1))&&(un=4194304)));var t=ec();null!==(e=Ra(e,n))&&(gn(e,n,t),rc(e,t))}function kc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),jc(e,t)}function Cc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(t=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(n),jc(e,t)}function Tc(e,n){return Xe(e,n)}function Rc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function zc(e,n,t,r){return new Rc(e,n,t,r)}function Pc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fc(e,n){var t=e.alternate;return null===t?((t=zc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Dc(e,n,t,r,o,i){var v=2;if(r=e,"function"===typeof e)Pc(e)&&(v=1);else if("string"===typeof e)v=5;else e:switch(e){case w:return Ec(t.children,o,i,n);case S:v=8,o|=8;break;case M:return(e=zc(12,t,n,2|o)).elementType=M,e.lanes=i,e;case T:return(e=zc(13,t,n,o)).elementType=T,e.lanes=i,e;case R:return(e=zc(19,t,n,o)).elementType=R,e.lanes=i,e;case F:return Ic(t,o,i,n);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case j:v=10;break e;case k:v=9;break e;case C:v=11;break e;case z:v=14;break e;case P:v=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=zc(v,t,n,o)).elementType=e,n.type=r,n.lanes=i,n}function Ec(e,n,t,r){return(e=zc(7,e,r,n)).lanes=t,e}function Ic(e,n,t,r){return(e=zc(22,e,r,n)).elementType=F,e.lanes=t,e.stateNode={isHidden:!1},e}function Lc(e,n,t){return(e=zc(6,e,null,n)).lanes=t,e}function Ac(e,n,t){return(n=zc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Oc(e,n,t,r,o){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=xn(0),this.expirationTimes=xn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=xn(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Bc(e,n,t,r,o,a,i,v,s){return e=new Oc(e,n,t,v,s),1===n?(n=1,!0===a&&(n|=8)):n=0,a=zc(3,null,null,n),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Pa(a),e}function Nc(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:U,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Gc(e){if(!e)return Co;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Fo(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(a(171))}if(1===e.tag){var t=e.type;if(Fo(t))return Io(e,t,n)}return n}function Vc(e,n,t,r,o,a,i,v,s){return(e=Bc(t,r,!0,e,0,a,0,v,s)).context=Gc(null),t=e.current,(a=Da(r=ec(),o=nc(t))).callback=void 0!==n&&null!==n?n:null,Ea(t,a,o),e.current.lanes=o,gn(e,o,r),rc(e,r),e}function qc(e,n,t,r){var o=n.current,a=ec(),i=nc(o);return t=Gc(t),null===n.context?n.context=t:n.pendingContext=t,(n=Da(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Ea(o,n,i))&&(tc(e,o,i,a),Ia(e,o,i)),i}function Wc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Xc(e,n){Hc(e,n),(e=e.alternate)&&Hc(e,n)}ws=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||Ro.current)_v=!0;else{if(0===(e.lanes&t)&&0===(128&n.flags))return _v=!1,function(e,n,t){switch(n.tag){case 3:Rv(n),ma();break;case 5:ii(n);break;case 1:Fo(n.type)&&Lo(n);break;case 4:oi(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,o=n.memoizedProps.value;ko(ga,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(ko(si,1&si.current),n.flags|=128,null):0!==(t&n.child.childLanes)?Lv(e,n,t):(ko(si,1&si.current),null!==(e=qv(e,n,t))?e.sibling:null);ko(si,1&si.current);break;case 19:if(r=0!==(t&n.childLanes),0!==(128&e.flags)){if(r)return Gv(e,n,t);n.flags|=128}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),ko(si,si.current),r)break;return null;case 22:case 23:return n.lanes=0,Mv(e,n,t)}return qv(e,n,t)}(e,n,t);_v=0!==(131072&e.flags)}else _v=!1,aa&&0!==(1048576&n.flags)&&ea(n,Xo,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Vv(e,n),e=n.pendingProps;var o=Po(n,To.current);Ma(n,t),o=Si(null,n,r,e,o,t);var i=Mi();return n.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Fo(r)?(i=!0,Lo(n)):i=!1,n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,Pa(n),o.updater=Ga,n.stateNode=o,o._reactInternals=n,Ha(n,r,e,t),n=Tv(null,n,r,!0,i,t)):(n.tag=0,aa&&i&&na(n),bv(null,n,o,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Vv(e,n),e=n.pendingProps,r=(o=r._init)(r._payload),n.type=r,o=n.tag=function(e){if("function"===typeof e)return Pc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===C)return 11;if(e===z)return 14}return 2}(r),e=xa(r,e),o){case 0:n=kv(null,n,r,e,t);break e;case 1:n=Cv(null,n,r,e,t);break e;case 11:n=Uv(null,n,r,e,t);break e;case 14:n=wv(null,n,r,xa(r.type,e),t);break e}throw Error(a(306,r,""))}return n;case 0:return r=n.type,o=n.pendingProps,kv(e,n,r,o=n.elementType===r?o:xa(r,o),t);case 1:return r=n.type,o=n.pendingProps,Cv(e,n,r,o=n.elementType===r?o:xa(r,o),t);case 3:e:{if(Rv(n),null===e)throw Error(a(387));r=n.pendingProps,o=(i=n.memoizedState).element,Fa(e,n),Aa(n,r,null,t);var v=n.memoizedState;if(r=v.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:v.cache,pendingSuspenseBoundaries:v.pendingSuspenseBoundaries,transitions:v.transitions},n.updateQueue.baseState=i,n.memoizedState=i,256&n.flags){n=zv(e,n,r,t,o=lv(Error(a(423)),n));break e}if(r!==o){n=zv(e,n,r,t,o=lv(Error(a(424)),n));break e}for(oa=co(n.stateNode.containerInfo.firstChild),ra=n,aa=!0,ia=null,t=$a(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(ma(),r===o){n=qv(e,n,t);break e}bv(e,n,r,t)}n=n.child}return n;case 5:return ii(n),null===e&&la(n),r=n.type,o=n.pendingProps,i=null!==e?e.memoizedProps:null,v=o.children,to(r,o)?v=null:null!==i&&to(r,i)&&(n.flags|=32),jv(e,n),bv(e,n,v,t),n.child;case 6:return null===e&&la(n),null;case 13:return Lv(e,n,t);case 4:return oi(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Ja(n,null,r,t):bv(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Uv(e,n,r,o=n.elementType===r?o:xa(r,o),t);case 7:return bv(e,n,n.pendingProps,t),n.child;case 8:case 12:return bv(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,o=n.pendingProps,i=n.memoizedProps,v=o.value,ko(ga,r._currentValue),r._currentValue=v,null!==i)if(vr(i.value,v)){if(i.children===o.children&&!Ro.current){n=qv(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var s=i.dependencies;if(null!==s){v=i.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=Da(-1,t&-t)).tag=2;var l=i.updateQueue;if(null!==l){var u=(l=l.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),l.pending=c}}i.lanes|=t,null!==(c=i.alternate)&&(c.lanes|=t),Sa(i.return,t,n),s.lanes|=t;break}c=c.next}}else if(10===i.tag)v=i.type===n.type?null:i.child;else if(18===i.tag){if(null===(v=i.return))throw Error(a(341));v.lanes|=t,null!==(s=v.alternate)&&(s.lanes|=t),Sa(v,t,n),v=i.sibling}else v=i.child;if(null!==v)v.return=i;else for(v=i;null!==v;){if(v===n){v=null;break}if(null!==(i=v.sibling)){i.return=v.return,v=i;break}v=v.return}i=v}bv(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=n.pendingProps.children,Ma(n,t),r=r(o=ja(o)),n.flags|=1,bv(e,n,r,t),n.child;case 14:return o=xa(r=n.type,n.pendingProps),wv(e,n,r,o=xa(r.type,o),t);case 15:return Sv(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:xa(r,o),Vv(e,n),n.tag=1,Fo(r)?(e=!0,Lo(n)):e=!1,Ma(n,t),qa(n,r,o),Ha(n,r,o,t),Tv(null,n,r,!0,e,t);case 19:return Gv(e,n,t);case 22:return Mv(e,n,t)}throw Error(a(156,n.tag))};var Yc="function"===typeof reportError?reportError:function(e){console.error(e)};function Zc(e){this._internalRoot=e}function Qc(e){this._internalRoot=e}function Jc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function $c(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Kc(){}function el(e,n,t,r,o){var a=t._reactRootContainer;if(a){var i=a;if("function"===typeof o){var v=o;o=function(){var e=Wc(i);v.call(e)}}qc(n,i,e,o)}else i=function(e,n,t,r,o){if(o){if("function"===typeof r){var a=r;r=function(){var e=Wc(i);a.call(e)}}var i=Vc(n,r,e,0,null,!1,0,"",Kc);return e._reactRootContainer=i,e[mo]=i.current,Gr(8===e.nodeType?e.parentNode:e),lc(),i}for(;o=e.lastChild;)e.removeChild(o);if("function"===typeof r){var v=r;r=function(){var e=Wc(s);v.call(e)}}var s=Bc(e,0,!1,null,0,!1,0,"",Kc);return e._reactRootContainer=s,e[mo]=s.current,Gr(8===e.nodeType?e.parentNode:e),lc((function(){qc(n,s,t,r)})),s}(t,n,e,o,r);return Wc(i)}Qc.prototype.render=Zc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(a(409));qc(e,n,null,null)},Qc.prototype.unmount=Zc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;lc((function(){qc(null,e,null,null)})),n[mo]=null}},Qc.prototype.unstable_scheduleHydration=function(e){if(e){var n=Mn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Dn.length&&0!==n&&n<Dn[t].priority;t++);Dn.splice(t,0,e),0===t&&An(e)}},Un=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=fn(n.pendingLanes);0!==t&&(yn(n,1|t),rc(n,Je()),0===(6&Cs)&&(Gs=Je()+500,Vo()))}break;case 13:lc((function(){var n=Ra(e,1);if(null!==n){var t=ec();tc(n,e,1,t)}})),Xc(e,1)}},wn=function(e){if(13===e.tag){var n=Ra(e,134217728);if(null!==n)tc(n,e,134217728,ec());Xc(e,134217728)}},Sn=function(e){if(13===e.tag){var n=nc(e),t=Ra(e,n);if(null!==t)tc(t,e,n,ec());Xc(e,n)}},Mn=function(){return _n},jn=function(e,n){var t=_n;try{return _n=e,n()}finally{_n=t}},Ue=function(e,n,t){switch(n){case"input":if($(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=Uo(r);if(!o)throw Error(a(90));X(r),$(r,o)}}}break;case"textarea":ae(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Ce=cc,Te=lc;var nl={usingClientEntryPoint:!1,Events:[_o,bo,Uo,je,ke,cc]},tl={findFiberByHostInstance:yo,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rl={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:_.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ol=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ol.isDisabled&&ol.supportsFiber)try{on=ol.inject(rl),an=ol}catch(le){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nl,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Jc(n))throw Error(a(200));return Nc(e,n,null,t)},n.createRoot=function(e,n){if(!Jc(e))throw Error(a(299));var t=!1,r="",o=Yc;return null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),n=Bc(e,1,!1,null,0,t,0,r,o),e[mo]=n.current,Gr(8===e.nodeType?e.parentNode:e),new Zc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"===typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=We(n))?null:e.stateNode},n.flushSync=function(e){return lc(e)},n.hydrate=function(e,n,t){if(!$c(n))throw Error(a(200));return el(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Jc(e))throw Error(a(405));var r=null!=t&&t.hydratedSources||null,o=!1,i="",v=Yc;if(null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(o=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(v=t.onRecoverableError)),n=Vc(n,null,e,1,null!=t?t:null,o,0,i,v),e[mo]=n.current,Gr(e),r)for(e=0;e<r.length;e++)o=(o=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o);return new Qc(n)},n.render=function(e,n,t){if(!$c(n))throw Error(a(200));return el(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!$c(e))throw Error(a(40));return!!e._reactRootContainer&&(lc((function(){el(null,null,e,!1,(function(){e._reactRootContainer=null,e[mo]=null}))})),!0)},n.unstable_batchedUpdates=cc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!$c(t))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return el(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},250:function(e,n,t){"use strict";var r=t(164);n.s=r.createRoot,r.hydrateRoot},164:function(e,n,t){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(463)},976:function(e,n){"use strict";n.ConcurrentRoot=1,n.ContinuousEventPriority=4,n.DefaultEventPriority=16,n.DiscreteEventPriority=1},721:function(e,n,t){e.exports=function(e){var n={},r=t(791),o=t(100),a=Object.assign;function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,s=Symbol.for("react.element"),c=Symbol.for("react.portal"),l=Symbol.for("react.fragment"),u=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),m=Symbol.for("react.context"),d=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),x=Symbol.for("react.suspense_list"),g=Symbol.for("react.memo"),y=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var _=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var b=Symbol.iterator;function U(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=b&&e[b]||e["@@iterator"])?e:null}function w(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case l:return"Fragment";case c:return"Portal";case f:return"Profiler";case u:return"StrictMode";case h:return"Suspense";case x:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case m:return(e.displayName||"Context")+".Consumer";case p:return(e._context.displayName||"Context")+".Provider";case d:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case g:return null!==(n=e.displayName||null)?n:w(e.type)||"Memo";case y:n=e._payload,e=e._init;try{return w(e(n))}catch(t){}}return null}function S(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return w(n);case 8:return n===u?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof n)return n.displayName||n.name||null;if("string"===typeof n)return n}return null}function M(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!==(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function j(e){if(M(e)!==e)throw Error(i(188))}function k(e){var n=e.alternate;if(!n){if(null===(n=M(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){t=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===t)return j(o),e;if(a===r)return j(o),n;a=a.sibling}throw Error(i(188))}if(t.return!==r.return)t=o,r=a;else{for(var v=!1,s=o.child;s;){if(s===t){v=!0,t=o,r=a;break}if(s===r){v=!0,r=o,t=a;break}s=s.sibling}if(!v){for(s=a.child;s;){if(s===t){v=!0,t=a,r=o;break}if(s===r){v=!0,r=a,t=o;break}s=s.sibling}if(!v)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}function C(e){return null!==(e=k(e))?T(e):null}function T(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=T(e);if(null!==n)return n;e=e.sibling}return null}function R(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){if(4!==e.tag){var n=R(e);if(null!==n)return n}e=e.sibling}return null}var z,P=Array.isArray,F=e.getPublicInstance,D=e.getRootHostContext,E=e.getChildHostContext,I=e.prepareForCommit,L=e.resetAfterCommit,A=e.createInstance,O=e.appendInitialChild,B=e.finalizeInitialChildren,N=e.prepareUpdate,G=e.shouldSetTextContent,V=e.createTextInstance,q=e.scheduleTimeout,W=e.cancelTimeout,H=e.noTimeout,X=e.isPrimaryRenderer,Y=e.supportsMutation,Z=e.supportsPersistence,Q=e.supportsHydration,J=e.getInstanceFromNode,$=e.preparePortalMount,K=e.getCurrentEventPriority,ee=e.detachDeletedInstance,ne=e.supportsMicrotasks,te=e.scheduleMicrotask,re=e.supportsTestSelectors,oe=e.findFiberRoot,ae=e.getBoundingRect,ie=e.getTextContent,ve=e.isHiddenSubtree,se=e.matchAccessibilityRole,ce=e.setFocusIfFocusable,le=e.setupIntersectionObserver,ue=e.appendChild,fe=e.appendChildToContainer,pe=e.commitTextUpdate,me=e.commitMount,de=e.commitUpdate,he=e.insertBefore,xe=e.insertInContainerBefore,ge=e.removeChild,ye=e.removeChildFromContainer,_e=e.resetTextContent,be=e.hideInstance,Ue=e.hideTextInstance,we=e.unhideInstance,Se=e.unhideTextInstance,Me=e.clearContainer,je=e.cloneInstance,ke=e.createContainerChildSet,Ce=e.appendChildToContainerChildSet,Te=e.finalizeContainerChildren,Re=e.replaceContainerChildren,ze=e.cloneHiddenInstance,Pe=e.cloneHiddenTextInstance,Fe=e.canHydrateInstance,De=e.canHydrateTextInstance,Ee=e.canHydrateSuspenseInstance,Ie=e.isSuspenseInstancePending,Le=e.isSuspenseInstanceFallback,Ae=e.registerSuspenseInstanceRetry,Oe=e.getNextHydratableSibling,Be=e.getFirstHydratableChild,Ne=e.getFirstHydratableChildWithinContainer,Ge=e.getFirstHydratableChildWithinSuspenseInstance,Ve=e.hydrateInstance,qe=e.hydrateTextInstance,We=e.hydrateSuspenseInstance,He=e.getNextHydratableInstanceAfterSuspenseInstance,Xe=e.commitHydratedContainer,Ye=e.commitHydratedSuspenseInstance,Ze=e.clearSuspenseBoundary,Qe=e.clearSuspenseBoundaryFromContainer,Je=e.shouldDeleteUnhydratedTailInstances,$e=e.didNotMatchHydratedContainerTextInstance,Ke=e.didNotMatchHydratedTextInstance;function en(e){if(void 0===z)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);z=n&&n[1]||""}return"\n"+z+e}var nn=!1;function tn(e,n){if(!e||nn)return"";nn=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(c){var r=c}Reflect.construct(e,[],n)}else{try{n.call()}catch(c){r=c}e.call(n.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"===typeof c.stack){for(var o=c.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,v=a.length-1;1<=i&&0<=v&&o[i]!==a[v];)v--;for(;1<=i&&0<=v;i--,v--)if(o[i]!==a[v]){if(1!==i||1!==v)do{if(i--,0>--v||o[i]!==a[v]){var s="\n"+o[i].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=i&&0<=v);break}}}finally{nn=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?en(e):""}var rn=Object.prototype.hasOwnProperty,on=[],an=-1;function vn(e){return{current:e}}function sn(e){0>an||(e.current=on[an],on[an]=null,an--)}function cn(e,n){an++,on[an]=e.current,e.current=n}var ln={},un=vn(ln),fn=vn(!1),pn=ln;function mn(e,n){var t=e.type.contextTypes;if(!t)return ln;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in t)a[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function dn(e){return null!==(e=e.childContextTypes)&&void 0!==e}function hn(){sn(fn),sn(un)}function xn(e,n,t){if(un.current!==ln)throw Error(i(168));cn(un,n),cn(fn,t)}function gn(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!==typeof r.getChildContext)return t;for(var o in r=r.getChildContext())if(!(o in n))throw Error(i(108,S(e)||"Unknown",o));return a({},t,r)}function yn(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ln,pn=un.current,cn(un,e),cn(fn,fn.current),!0}function _n(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=gn(e,n,pn),r.__reactInternalMemoizedMergedChildContext=e,sn(fn),sn(un),cn(un,e)):sn(fn),cn(fn,t)}var bn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(Un(e)/wn|0)|0},Un=Math.log,wn=Math.LN2;var Sn=64,Mn=4194304;function jn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function kn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,i=268435455&t;if(0!==i){var v=i&~o;0!==v?r=jn(v):0!==(a&=i)&&(r=jn(a))}else 0!==(i=t&~o)?r=jn(i):0!==a&&(r=jn(a));if(0===r)return 0;if(0!==n&&n!==r&&0===(n&o)&&((o=r&-r)>=(a=n&-n)||16===o&&0!==(4194240&a)))return n;if(0!==(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-bn(n)),r|=e[t],n&=~o;return r}function Cn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function Tn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Rn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function zn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-bn(n)]=t}function Pn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-bn(t),o=1<<r;o&n|e[r]&n&&(e[r]|=n),t&=~o}}var Fn=0;function Dn(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var En=o.unstable_scheduleCallback,In=o.unstable_cancelCallback,Ln=o.unstable_shouldYield,An=o.unstable_requestPaint,On=o.unstable_now,Bn=o.unstable_ImmediatePriority,Nn=o.unstable_UserBlockingPriority,Gn=o.unstable_NormalPriority,Vn=o.unstable_IdlePriority,qn=null,Wn=null;var Hn="function"===typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e===1/n)||e!==e&&n!==n},Xn=null,Yn=!1,Zn=!1;function Qn(e){null===Xn?Xn=[e]:Xn.push(e)}function Jn(){if(!Zn&&null!==Xn){Zn=!0;var e=0,n=Fn;try{var t=Xn;for(Fn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Xn=null,Yn=!1}catch(o){throw null!==Xn&&(Xn=Xn.slice(e+1)),En(Bn,Jn),o}finally{Fn=n,Zn=!1}}return null}var $n=v.ReactCurrentBatchConfig;function Kn(e,n){if(Hn(e,n))return!0;if("object"!==typeof e||null===e||"object"!==typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var o=t[r];if(!rn.call(n,o)||!Hn(e[o],n[o]))return!1}return!0}function et(e){switch(e.tag){case 5:return en(e.type);case 16:return en("Lazy");case 13:return en("Suspense");case 19:return en("SuspenseList");case 0:case 2:case 15:return e=tn(e.type,!1);case 11:return e=tn(e.type.render,!1);case 1:return e=tn(e.type,!0);default:return""}}function nt(e,n){if(e&&e.defaultProps){for(var t in n=a({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var tt=vn(null),rt=null,ot=null,at=null;function it(){at=ot=rt=null}function vt(e,n,t){X?(cn(tt,n._currentValue),n._currentValue=t):(cn(tt,n._currentValue2),n._currentValue2=t)}function st(e){var n=tt.current;sn(tt),X?e._currentValue=n:e._currentValue2=n}function ct(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function lt(e,n){rt=e,at=ot=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(Lo=!0),e.firstContext=null)}function ut(e){var n=X?e._currentValue:e._currentValue2;if(at!==e)if(e={context:e,memoizedValue:n,next:null},null===ot){if(null===rt)throw Error(i(308));ot=e,rt.dependencies={lanes:0,firstContext:e}}else ot=ot.next=e;return n}var ft=null,pt=!1;function mt(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function dt(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ht(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function xt(e,n){var t=e.updateQueue;null!==t&&(t=t.shared,null!==Za&&0!==(1&e.mode)&&0===(2&Ya)?(null===(e=t.interleaved)?(n.next=n,null===ft?ft=[t]:ft.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n))}function gt(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!==(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,Pn(e,t)}}function yt(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?o=a=i:a=a.next=i,t=t.next}while(null!==t);null===a?o=a=n:a=a.next=n}else o=a=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function _t(e,n,t,r){var o=e.updateQueue;pt=!1;var i=o.firstBaseUpdate,v=o.lastBaseUpdate,s=o.shared.pending;if(null!==s){o.shared.pending=null;var c=s,l=c.next;c.next=null,null===v?i=l:v.next=l,v=c;var u=e.alternate;null!==u&&((s=(u=u.updateQueue).lastBaseUpdate)!==v&&(null===s?u.firstBaseUpdate=l:s.next=l,u.lastBaseUpdate=c))}if(null!==i){var f=o.baseState;for(v=0,u=l=c=null,s=i;;){var p=s.lane,m=s.eventTime;if((r&p)===p){null!==u&&(u=u.next={eventTime:m,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var d=e,h=s;switch(p=n,m=t,h.tag){case 1:if("function"===typeof(d=h.payload)){f=d.call(m,f,p);break e}f=d;break e;case 3:d.flags=-65537&d.flags|128;case 0:if(null===(p="function"===typeof(d=h.payload)?d.call(m,f,p):d)||void 0===p)break e;f=a({},f,p);break e;case 2:pt=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(p=o.effects)?o.effects=[s]:p.push(s))}else m={eventTime:m,lane:p,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(l=u=m,c=f):u=u.next=m,v|=p;if(null===(s=s.next)){if(null===(s=o.shared.pending))break;s=(p=s).next,p.next=null,o.lastBaseUpdate=p,o.shared.pending=null}}if(null===u&&(c=f),o.baseState=c,o.firstBaseUpdate=l,o.lastBaseUpdate=u,null!==(n=o.shared.interleaved)){o=n;do{v|=o.lane,o=o.next}while(o!==n)}else null===i&&(o.shared.lanes=0);ti|=v,e.lanes=v,e.memoizedState=f}}function bt(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!==typeof o)throw Error(i(191,o));o.call(r)}}}var Ut=(new r.Component).refs;function wt(e,n,t,r){t=null===(t=t(r,n=e.memoizedState))||void 0===t?n:a({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var St={isMounted:function(e){return!!(e=e._reactInternals)&&M(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=bi(),o=Ui(e),a=ht(r,o);a.payload=n,void 0!==t&&null!==t&&(a.callback=t),xt(e,a),null!==(n=wi(e,o,r))&&gt(n,e,o)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=bi(),o=Ui(e),a=ht(r,o);a.tag=1,a.payload=n,void 0!==t&&null!==t&&(a.callback=t),xt(e,a),null!==(n=wi(e,o,r))&&gt(n,e,o)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=bi(),r=Ui(e),o=ht(t,r);o.tag=2,void 0!==n&&null!==n&&(o.callback=n),xt(e,o),null!==(n=wi(e,r,t))&&gt(n,e,r)}};function Mt(e,n,t,r,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!n.prototype||!n.prototype.isPureReactComponent||(!Kn(t,r)||!Kn(o,a))}function jt(e,n,t){var r=!1,o=ln,a=n.contextType;return"object"===typeof a&&null!==a?a=ut(a):(o=dn(n)?pn:un.current,a=(r=null!==(r=n.contextTypes)&&void 0!==r)?mn(e,o):ln),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=St,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),n}function kt(e,n,t,r){e=n.state,"function"===typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"===typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&St.enqueueReplaceState(n,n.state,null)}function Ct(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=Ut,mt(e);var a=n.contextType;"object"===typeof a&&null!==a?o.context=ut(a):(a=dn(n)?pn:un.current,o.context=mn(e,a)),o.state=e.memoizedState,"function"===typeof(a=n.getDerivedStateFromProps)&&(wt(e,n,a,t),o.state=e.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(n=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&St.enqueueReplaceState(o,o.state,null),_t(e,t,o,r),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4194308)}var Tt=[],Rt=0,zt=null,Pt=0,Ft=[],Dt=0,Et=null,It=1,Lt="";function At(e,n){Tt[Rt++]=Pt,Tt[Rt++]=zt,zt=e,Pt=n}function Ot(e,n,t){Ft[Dt++]=It,Ft[Dt++]=Lt,Ft[Dt++]=Et,Et=e;var r=It;e=Lt;var o=32-bn(r)-1;r&=~(1<<o),t+=1;var a=32-bn(n)+o;if(30<a){var i=o-o%5;a=(r&(1<<i)-1).toString(32),r>>=i,o-=i,It=1<<32-bn(n)+o|t<<o|r,Lt=a+e}else It=1<<a|t<<o|r,Lt=e}function Bt(e){null!==e.return&&(At(e,1),Ot(e,1,0))}function Nt(e){for(;e===zt;)zt=Tt[--Rt],Tt[Rt]=null,Pt=Tt[--Rt],Tt[Rt]=null;for(;e===Et;)Et=Ft[--Dt],Ft[Dt]=null,Lt=Ft[--Dt],Ft[Dt]=null,It=Ft[--Dt],Ft[Dt]=null}var Gt=null,Vt=null,qt=!1,Wt=!1,Ht=null;function Xt(e,n){var t=$i(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function Yt(e,n){switch(e.tag){case 5:return null!==(n=Fe(n,e.type,e.pendingProps))&&(e.stateNode=n,Gt=e,Vt=Be(n),!0);case 6:return null!==(n=De(n,e.pendingProps))&&(e.stateNode=n,Gt=e,Vt=null,!0);case 13:if(null!==(n=Ee(n))){var t=null!==Et?{id:It,overflow:Lt}:null;return e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=$i(18,null,null,0)).stateNode=n,t.return=e,e.child=t,Gt=e,Vt=null,!0}return!1;default:return!1}}function Zt(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function Qt(e){if(qt){var n=Vt;if(n){var t=n;if(!Yt(e,n)){if(Zt(e))throw Error(i(418));n=Oe(t);var r=Gt;n&&Yt(e,n)?Xt(r,t):(e.flags=-4097&e.flags|2,qt=!1,Gt=e)}}else{if(Zt(e))throw Error(i(418));e.flags=-4097&e.flags|2,qt=!1,Gt=e}}}function Jt(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Gt=e}function $t(e){if(!Q||e!==Gt)return!1;if(!qt)return Jt(e),qt=!0,!1;if(3!==e.tag&&(5!==e.tag||Je(e.type)&&!G(e.type,e.memoizedProps))){var n=Vt;if(n){if(Zt(e)){for(e=Vt;e;)e=Oe(e);throw Error(i(418))}for(;n;)Xt(e,n),n=Oe(n)}}if(Jt(e),13===e.tag){if(!Q)throw Error(i(316));if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));Vt=He(e)}else Vt=Gt?Oe(e.stateNode):null;return!0}function Kt(){Q&&(Vt=Gt=null,Wt=qt=!1)}function er(e){null===Ht?Ht=[e]:Ht.push(e)}function nr(e,n,t){if(null!==(e=t.ref)&&"function"!==typeof e&&"object"!==typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var o=r,a=""+e;return null!==n&&null!==n.ref&&"function"===typeof n.ref&&n.ref._stringRef===a?n.ref:(n=function(e){var n=o.refs;n===Ut&&(n=o.refs={}),null===e?delete n[a]:n[a]=e},n._stringRef=a,n)}if("string"!==typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function tr(e,n){throw e=Object.prototype.toString.call(n),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function rr(e){return(0,e._init)(e._payload)}function or(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=ev(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function v(n){return e&&null===n.alternate&&(n.flags|=2),n}function u(e,n,t,r){return null===n||6!==n.tag?((n=ov(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function f(e,n,t,r){var a=t.type;return a===l?m(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===y&&rr(a)===n.type)?((r=o(n,t.props)).ref=nr(e,n,t),r.return=e,r):((r=nv(t.type,t.key,t.props,null,e.mode,r)).ref=nr(e,n,t),r.return=e,r)}function p(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=av(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function m(e,n,t,r,a){return null===n||7!==n.tag?((n=tv(t,e.mode,r,a)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"===typeof n&&""!==n||"number"===typeof n)return(n=ov(""+n,e.mode,t)).return=e,n;if("object"===typeof n&&null!==n){switch(n.$$typeof){case s:return(t=nv(n.type,n.key,n.props,null,e.mode,t)).ref=nr(e,null,n),t.return=e,t;case c:return(n=av(n,e.mode,t)).return=e,n;case y:return d(e,(0,n._init)(n._payload),t)}if(P(n)||U(n))return(n=tv(n,e.mode,t,null)).return=e,n;tr(e,n)}return null}function h(e,n,t,r){var o=null!==n?n.key:null;if("string"===typeof t&&""!==t||"number"===typeof t)return null!==o?null:u(e,n,""+t,r);if("object"===typeof t&&null!==t){switch(t.$$typeof){case s:return t.key===o?f(e,n,t,r):null;case c:return t.key===o?p(e,n,t,r):null;case y:return h(e,n,(o=t._init)(t._payload),r)}if(P(t)||U(t))return null!==o?null:m(e,n,t,r,null);tr(e,t)}return null}function x(e,n,t,r,o){if("string"===typeof r&&""!==r||"number"===typeof r)return u(n,e=e.get(t)||null,""+r,o);if("object"===typeof r&&null!==r){switch(r.$$typeof){case s:return f(n,e=e.get(null===r.key?t:r.key)||null,r,o);case c:return p(n,e=e.get(null===r.key?t:r.key)||null,r,o);case y:return x(e,n,t,(0,r._init)(r._payload),o)}if(P(r)||U(r))return m(n,e=e.get(t)||null,r,o,null);tr(n,r)}return null}function g(o,i,v,s){for(var c=null,l=null,u=i,f=i=0,p=null;null!==u&&f<v.length;f++){u.index>f?(p=u,u=null):p=u.sibling;var m=h(o,u,v[f],s);if(null===m){null===u&&(u=p);break}e&&u&&null===m.alternate&&n(o,u),i=a(m,i,f),null===l?c=m:l.sibling=m,l=m,u=p}if(f===v.length)return t(o,u),qt&&At(o,f),c;if(null===u){for(;f<v.length;f++)null!==(u=d(o,v[f],s))&&(i=a(u,i,f),null===l?c=u:l.sibling=u,l=u);return qt&&At(o,f),c}for(u=r(o,u);f<v.length;f++)null!==(p=x(u,o,f,v[f],s))&&(e&&null!==p.alternate&&u.delete(null===p.key?f:p.key),i=a(p,i,f),null===l?c=p:l.sibling=p,l=p);return e&&u.forEach((function(e){return n(o,e)})),qt&&At(o,f),c}function _(o,v,s,c){var l=U(s);if("function"!==typeof l)throw Error(i(150));if(null==(s=l.call(s)))throw Error(i(151));for(var u=l=null,f=v,p=v=0,m=null,g=s.next();null!==f&&!g.done;p++,g=s.next()){f.index>p?(m=f,f=null):m=f.sibling;var y=h(o,f,g.value,c);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&n(o,f),v=a(y,v,p),null===u?l=y:u.sibling=y,u=y,f=m}if(g.done)return t(o,f),qt&&At(o,p),l;if(null===f){for(;!g.done;p++,g=s.next())null!==(g=d(o,g.value,c))&&(v=a(g,v,p),null===u?l=g:u.sibling=g,u=g);return qt&&At(o,p),l}for(f=r(o,f);!g.done;p++,g=s.next())null!==(g=x(f,o,p,g.value,c))&&(e&&null!==g.alternate&&f.delete(null===g.key?p:g.key),v=a(g,v,p),null===u?l=g:u.sibling=g,u=g);return e&&f.forEach((function(e){return n(o,e)})),qt&&At(o,p),l}return function e(r,a,i,u){if("object"===typeof i&&null!==i&&i.type===l&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case s:e:{for(var f=i.key,p=a;null!==p;){if(p.key===f){if((f=i.type)===l){if(7===p.tag){t(r,p.sibling),(a=o(p,i.props.children)).return=r,r=a;break e}}else if(p.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===y&&rr(f)===p.type){t(r,p.sibling),(a=o(p,i.props)).ref=nr(r,p,i),a.return=r,r=a;break e}t(r,p);break}n(r,p),p=p.sibling}i.type===l?((a=tv(i.props.children,r.mode,u,i.key)).return=r,r=a):((u=nv(i.type,i.key,i.props,null,r.mode,u)).ref=nr(r,a,i),u.return=r,r=u)}return v(r);case c:e:{for(p=i.key;null!==a;){if(a.key===p){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){t(r,a.sibling),(a=o(a,i.children||[])).return=r,r=a;break e}t(r,a);break}n(r,a),a=a.sibling}(a=av(i,r.mode,u)).return=r,r=a}return v(r);case y:return e(r,a,(p=i._init)(i._payload),u)}if(P(i))return g(r,a,i,u);if(U(i))return _(r,a,i,u);tr(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==a&&6===a.tag?(t(r,a.sibling),(a=o(a,i)).return=r,r=a):(t(r,a),(a=ov(i,r.mode,u)).return=r,r=a),v(r)):t(r,a)}}var ar=or(!0),ir=or(!1),vr={},sr=vn(vr),cr=vn(vr),lr=vn(vr);function ur(e){if(e===vr)throw Error(i(174));return e}function fr(e,n){cn(lr,n),cn(cr,e),cn(sr,vr),e=D(n),sn(sr),cn(sr,e)}function pr(){sn(sr),sn(cr),sn(lr)}function mr(e){var n=ur(lr.current),t=ur(sr.current);t!==(n=E(t,e.type,n))&&(cn(cr,e),cn(sr,n))}function dr(e){cr.current===e&&(sn(sr),sn(cr))}var hr=vn(0);function xr(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||Ie(t)||Le(t)))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!==(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var gr=[];function yr(){for(var e=0;e<gr.length;e++){var n=gr[e];X?n._workInProgressVersionPrimary=null:n._workInProgressVersionSecondary=null}gr.length=0}var _r=v.ReactCurrentDispatcher,br=v.ReactCurrentBatchConfig,Ur=0,wr=null,Sr=null,Mr=null,jr=!1,kr=!1,Cr=0,Tr=0;function Rr(){throw Error(i(321))}function zr(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!Hn(e[t],n[t]))return!1;return!0}function Pr(e,n,t,r,o,a){if(Ur=a,wr=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,_r.current=null===e||null===e.memoizedState?mo:ho,e=t(r,o),kr){a=0;do{if(kr=!1,Cr=0,25<=a)throw Error(i(301));a+=1,Mr=Sr=null,n.updateQueue=null,_r.current=xo,e=t(r,o)}while(kr)}if(_r.current=po,n=null!==Sr&&null!==Sr.next,Ur=0,Mr=Sr=wr=null,jr=!1,n)throw Error(i(300));return e}function Fr(){var e=0!==Cr;return Cr=0,e}function Dr(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Mr?wr.memoizedState=Mr=e:Mr=Mr.next=e,Mr}function Er(){if(null===Sr){var e=wr.alternate;e=null!==e?e.memoizedState:null}else e=Sr.next;var n=null===Mr?wr.memoizedState:Mr.next;if(null!==n)Mr=n,Sr=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Sr=e).memoizedState,baseState:Sr.baseState,baseQueue:Sr.baseQueue,queue:Sr.queue,next:null},null===Mr?wr.memoizedState=Mr=e:Mr=Mr.next=e}return Mr}function Ir(e,n){return"function"===typeof n?n(e):n}function Lr(e){var n=Er(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=Sr,o=r.baseQueue,a=t.pending;if(null!==a){if(null!==o){var v=o.next;o.next=a.next,a.next=v}r.baseQueue=o=a,t.pending=null}if(null!==o){a=o.next,r=r.baseState;var s=v=null,c=null,l=a;do{var u=l.lane;if((Ur&u)===u)null!==c&&(c=c.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),r=l.hasEagerState?l.eagerState:e(r,l.action);else{var f={lane:u,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===c?(s=c=f,v=r):c=c.next=f,wr.lanes|=u,ti|=u}l=l.next}while(null!==l&&l!==a);null===c?v=r:c.next=s,Hn(r,n.memoizedState)||(Lo=!0),n.memoizedState=r,n.baseState=v,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){o=e;do{a=o.lane,wr.lanes|=a,ti|=a,o=o.next}while(o!==e)}else null===o&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ar(e){var n=Er(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,a=n.memoizedState;if(null!==o){t.pending=null;var v=o=o.next;do{a=e(a,v.action),v=v.next}while(v!==o);Hn(a,n.memoizedState)||(Lo=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function Or(){}function Br(e,n){var t=wr,r=Er(),o=n(),a=!Hn(r.memoizedState,o);if(a&&(r.memoizedState=o,Lo=!0),r=r.queue,Jr(Vr.bind(null,t,r,e),[e]),r.getSnapshot!==n||a||null!==Mr&&1&Mr.memoizedState.tag){if(t.flags|=2048,Hr(9,Gr.bind(null,t,r,o,n),void 0,null),null===Za)throw Error(i(349));0!==(30&Ur)||Nr(t,n,o)}return o}function Nr(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=wr.updateQueue)?(n={lastEffect:null,stores:null},wr.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Gr(e,n,t,r){n.value=t,n.getSnapshot=r,qr(n)&&wi(e,1,-1)}function Vr(e,n,t){return t((function(){qr(n)&&wi(e,1,-1)}))}function qr(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!Hn(e,t)}catch(r){return!0}}function Wr(e){var n=Dr();return"function"===typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ir,lastRenderedState:e},n.queue=e,e=e.dispatch=so.bind(null,wr,e),[n.memoizedState,e]}function Hr(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=wr.updateQueue)?(n={lastEffect:null,stores:null},wr.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Xr(){return Er().memoizedState}function Yr(e,n,t,r){var o=Dr();wr.flags|=e,o.memoizedState=Hr(1|n,t,void 0,void 0===r?null:r)}function Zr(e,n,t,r){var o=Er();r=void 0===r?null:r;var a=void 0;if(null!==Sr){var i=Sr.memoizedState;if(a=i.destroy,null!==r&&zr(r,i.deps))return void(o.memoizedState=Hr(n,t,a,r))}wr.flags|=e,o.memoizedState=Hr(1|n,t,a,r)}function Qr(e,n){return Yr(8390656,8,e,n)}function Jr(e,n){return Zr(2048,8,e,n)}function $r(e,n){return Zr(4,2,e,n)}function Kr(e,n){return Zr(4,4,e,n)}function eo(e,n){return"function"===typeof n?(e=e(),n(e),function(){n(null)}):null!==n&&void 0!==n?(e=e(),n.current=e,function(){n.current=null}):void 0}function no(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Zr(4,4,eo.bind(null,n,e),t)}function to(){}function ro(e,n){var t=Er();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&zr(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function oo(e,n){var t=Er();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&zr(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function ao(e,n){var t=Fn;Fn=0!==t&&4>t?t:4,e(!0);var r=br.transition;br.transition={};try{e(!1),n()}finally{Fn=t,br.transition=r}}function io(){return Er().memoizedState}function vo(e,n,t){var r=Ui(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},co(e)?lo(n,t):(uo(e,n,t),null!==(e=wi(e,r,t=bi()))&&fo(e,n,r))}function so(e,n,t){var r=Ui(e),o={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(co(e))lo(n,o);else{uo(e,n,o);var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var i=n.lastRenderedState,v=a(i,t);if(o.hasEagerState=!0,o.eagerState=v,Hn(v,i))return}catch(s){}null!==(e=wi(e,r,t=bi()))&&fo(e,n,r)}}function co(e){var n=e.alternate;return e===wr||null!==n&&n===wr}function lo(e,n){kr=jr=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function uo(e,n,t){null!==Za&&0!==(1&e.mode)&&0===(2&Ya)?(null===(e=n.interleaved)?(t.next=t,null===ft?ft=[n]:ft.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t)}function fo(e,n,t){if(0!==(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,Pn(e,t)}}var po={readContext:ut,useCallback:Rr,useContext:Rr,useEffect:Rr,useImperativeHandle:Rr,useInsertionEffect:Rr,useLayoutEffect:Rr,useMemo:Rr,useReducer:Rr,useRef:Rr,useState:Rr,useDebugValue:Rr,useDeferredValue:Rr,useTransition:Rr,useMutableSource:Rr,useSyncExternalStore:Rr,useId:Rr,unstable_isNewReconciler:!1},mo={readContext:ut,useCallback:function(e,n){return Dr().memoizedState=[e,void 0===n?null:n],e},useContext:ut,useEffect:Qr,useImperativeHandle:function(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Yr(4194308,4,eo.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Yr(4194308,4,e,n)},useInsertionEffect:function(e,n){return Yr(4,2,e,n)},useMemo:function(e,n){var t=Dr();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Dr();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=vo.bind(null,wr,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Dr().memoizedState=e},useState:Wr,useDebugValue:to,useDeferredValue:function(e){var n=Wr(e),t=n[0],r=n[1];return Qr((function(){var n=br.transition;br.transition={};try{r(e)}finally{br.transition=n}}),[e]),t},useTransition:function(){var e=Wr(!1),n=e[0];return e=ao.bind(null,e[1]),Dr().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=wr,o=Dr();if(qt){if(void 0===t)throw Error(i(407));t=t()}else{if(t=n(),null===Za)throw Error(i(349));0!==(30&Ur)||Nr(r,n,t)}o.memoizedState=t;var a={value:t,getSnapshot:n};return o.queue=a,Qr(Vr.bind(null,r,a,e),[e]),r.flags|=2048,Hr(9,Gr.bind(null,r,a,t,n),void 0,null),t},useId:function(){var e=Dr(),n=Za.identifierPrefix;if(qt){var t=Lt;n=":"+n+"R"+(t=(It&~(1<<32-bn(It)-1)).toString(32)+t),0<(t=Cr++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=Tr++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ho={readContext:ut,useCallback:ro,useContext:ut,useEffect:Jr,useImperativeHandle:no,useInsertionEffect:$r,useLayoutEffect:Kr,useMemo:oo,useReducer:Lr,useRef:Xr,useState:function(){return Lr(Ir)},useDebugValue:to,useDeferredValue:function(e){var n=Lr(Ir),t=n[0],r=n[1];return Jr((function(){var n=br.transition;br.transition={};try{r(e)}finally{br.transition=n}}),[e]),t},useTransition:function(){return[Lr(Ir)[0],Er().memoizedState]},useMutableSource:Or,useSyncExternalStore:Br,useId:io,unstable_isNewReconciler:!1},xo={readContext:ut,useCallback:ro,useContext:ut,useEffect:Jr,useImperativeHandle:no,useInsertionEffect:$r,useLayoutEffect:Kr,useMemo:oo,useReducer:Ar,useRef:Xr,useState:function(){return Ar(Ir)},useDebugValue:to,useDeferredValue:function(e){var n=Ar(Ir),t=n[0],r=n[1];return Jr((function(){var n=br.transition;br.transition={};try{r(e)}finally{br.transition=n}}),[e]),t},useTransition:function(){return[Ar(Ir)[0],Er().memoizedState]},useMutableSource:Or,useSyncExternalStore:Br,useId:io,unstable_isNewReconciler:!1};function go(e,n){try{var t="",r=n;do{t+=et(r),r=r.return}while(r);var o=t}catch(a){o="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:n,stack:o}}function yo(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}var _o,bo,Uo,wo,So="function"===typeof WeakMap?WeakMap:Map;function Mo(e,n,t){(t=ht(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){ui||(ui=!0,fi=r),yo(0,n)},t}function jo(e,n,t){(t=ht(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var o=n.value;t.payload=function(){return r(o)},t.callback=function(){yo(0,n)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(t.callback=function(){yo(0,n),"function"!==typeof r&&(null===pi?pi=new Set([this]):pi.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function ko(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new So;var o=new Set;r.set(n,o)}else void 0===(o=r.get(n))&&(o=new Set,r.set(n,o));o.has(t)||(o.add(t),e=Hi.bind(null,e,n,t),n.then(e,e))}function Co(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function To(e,n,t,r,o){return 0===(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=ht(-1,1)).tag=2,xt(t,n))),t.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}function Ro(e){e.flags|=4}function zo(e,n){if(null!==e&&e.child===n.child)return!0;if(0!==(16&n.flags))return!1;for(e=n.child;null!==e;){if(0!==(12854&e.flags)||0!==(12854&e.subtreeFlags))return!1;e=e.sibling}return!0}if(Y)_o=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)O(e,t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},bo=function(){},Uo=function(e,n,t,r,o){if((e=e.memoizedProps)!==r){var a=n.stateNode,i=ur(sr.current);t=N(a,t,e,r,o,i),(n.updateQueue=t)&&Ro(n)}},wo=function(e,n,t,r){t!==r&&Ro(n)};else if(Z){_o=function(e,n,t,r){for(var o=n.child;null!==o;){if(5===o.tag){var a=o.stateNode;t&&r&&(a=ze(a,o.type,o.memoizedProps,o)),O(e,a)}else if(6===o.tag)a=o.stateNode,t&&r&&(a=Pe(a,o.memoizedProps,o)),O(e,a);else if(4!==o.tag)if(22===o.tag&&null!==o.memoizedState)null!==(a=o.child)&&(a.return=o),_o(e,o,!0,!0);else if(null!==o.child){o.child.return=o,o=o.child;continue}if(o===n)break;for(;null===o.sibling;){if(null===o.return||o.return===n)return;o=o.return}o.sibling.return=o.return,o=o.sibling}};var Po=function e(n,t,r,o){for(var a=t.child;null!==a;){if(5===a.tag){var i=a.stateNode;r&&o&&(i=ze(i,a.type,a.memoizedProps,a)),Ce(n,i)}else if(6===a.tag)i=a.stateNode,r&&o&&(i=Pe(i,a.memoizedProps,a)),Ce(n,i);else if(4!==a.tag)if(22===a.tag&&null!==a.memoizedState)null!==(i=a.child)&&(i.return=a),e(n,a,!0,!0);else if(null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;a=a.return}a.sibling.return=a.return,a=a.sibling}};bo=function(e,n){var t=n.stateNode;if(!zo(e,n)){e=t.containerInfo;var r=ke(e);Po(r,n,!1,!1),t.pendingChildren=r,Ro(n),Te(e,r)}},Uo=function(e,n,t,r,o){var a=e.stateNode,i=e.memoizedProps;if((e=zo(e,n))&&i===r)n.stateNode=a;else{var v=n.stateNode,s=ur(sr.current),c=null;i!==r&&(c=N(v,t,i,r,o,s)),e&&null===c?n.stateNode=a:(a=je(a,c,t,i,r,n,e,v),B(a,t,r,o,s)&&Ro(n),n.stateNode=a,e?Ro(n):_o(a,n,!1,!1))}},wo=function(e,n,t,r){t!==r?(e=ur(lr.current),t=ur(sr.current),n.stateNode=V(r,e,t,n),Ro(n)):n.stateNode=e.stateNode}}else bo=function(){},Uo=function(){},wo=function(){};function Fo(e,n){if(!qt)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Do(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Eo(e,n,t){var r=n.pendingProps;switch(Nt(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Do(n),null;case 1:case 17:return dn(n.type)&&hn(),Do(n),null;case 3:return r=n.stateNode,pr(),sn(fn),sn(un),yr(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($t(n)?Ro(n):null===e||e.memoizedState.isDehydrated&&0===(256&n.flags)||(n.flags|=1024,null!==Ht&&(Ci(Ht),Ht=null))),bo(e,n),Do(n),null;case 5:dr(n),t=ur(lr.current);var o=n.type;if(null!==e&&null!=n.stateNode)Uo(e,n,o,r,t),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(i(166));return Do(n),null}if(e=ur(sr.current),$t(n)){if(!Q)throw Error(i(175));e=Ve(n.stateNode,n.type,n.memoizedProps,t,e,n,!Wt),n.updateQueue=e,null!==e&&Ro(n)}else{var a=A(o,r,t,e,n);_o(a,n,!1,!1),n.stateNode=a,B(a,o,r,t,e)&&Ro(n)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Do(n),null;case 6:if(e&&null!=n.stateNode)wo(e,n,e.memoizedProps,r);else{if("string"!==typeof r&&null===n.stateNode)throw Error(i(166));if(e=ur(lr.current),t=ur(sr.current),$t(n)){if(!Q)throw Error(i(176));if(e=n.stateNode,r=n.memoizedProps,(t=qe(e,r,n,!Wt))&&null!==(o=Gt))switch(a=0!==(1&o.mode),o.tag){case 3:$e(o.stateNode.containerInfo,e,r,a);break;case 5:Ke(o.type,o.memoizedProps,o.stateNode,e,r,a)}t&&Ro(n)}else n.stateNode=V(r,e,t,n)}return Do(n),null;case 13:if(sn(hr),r=n.memoizedState,qt&&null!==Vt&&0!==(1&n.mode)&&0===(128&n.flags)){for(e=Vt;e;)e=Oe(e);return Kt(),n.flags|=98560,n}if(null!==r&&null!==r.dehydrated){if(r=$t(n),null===e){if(!r)throw Error(i(318));if(!Q)throw Error(i(344));if(!(e=null!==(e=n.memoizedState)?e.dehydrated:null))throw Error(i(317));We(e,n)}else Kt(),0===(128&n.flags)&&(n.memoizedState=null),n.flags|=4;return Do(n),null}return null!==Ht&&(Ci(Ht),Ht=null),0!==(128&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?$t(n):t=null!==e.memoizedState,r&&!t&&(n.child.flags|=8192,0!==(1&n.mode)&&(null===e||0!==(1&hr.current)?0===ei&&(ei=3):Ii())),null!==n.updateQueue&&(n.flags|=4),Do(n),null);case 4:return pr(),bo(e,n),null===e&&$(n.stateNode.containerInfo),Do(n),null;case 10:return st(n.type._context),Do(n),null;case 19:if(sn(hr),null===(o=n.memoizedState))return Do(n),null;if(r=0!==(128&n.flags),null===(a=o.rendering))if(r)Fo(o,!1);else{if(0!==ei||null!==e&&0!==(128&e.flags))for(e=n.child;null!==e;){if(null!==(a=xr(e))){for(n.flags|=128,Fo(o,!1),null!==(e=a.updateQueue)&&(n.updateQueue=e,n.flags|=4),n.subtreeFlags=0,e=t,r=n.child;null!==r;)o=e,(t=r).flags&=14680066,null===(a=t.alternate)?(t.childLanes=0,t.lanes=o,t.child=null,t.subtreeFlags=0,t.memoizedProps=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.stateNode=null):(t.childLanes=a.childLanes,t.lanes=a.lanes,t.child=a.child,t.subtreeFlags=0,t.deletions=null,t.memoizedProps=a.memoizedProps,t.memoizedState=a.memoizedState,t.updateQueue=a.updateQueue,t.type=a.type,o=a.dependencies,t.dependencies=null===o?null:{lanes:o.lanes,firstContext:o.firstContext}),r=r.sibling;return cn(hr,1&hr.current|2),n.child}e=e.sibling}null!==o.tail&&On()>si&&(n.flags|=128,r=!0,Fo(o,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=xr(a))){if(n.flags|=128,r=!0,null!==(e=e.updateQueue)&&(n.updateQueue=e,n.flags|=4),Fo(o,!0),null===o.tail&&"hidden"===o.tailMode&&!a.alternate&&!qt)return Do(n),null}else 2*On()-o.renderingStartTime>si&&1073741824!==t&&(n.flags|=128,r=!0,Fo(o,!1),n.lanes=4194304);o.isBackwards?(a.sibling=n.child,n.child=a):(null!==(e=o.last)?e.sibling=a:n.child=a,o.last=a)}return null!==o.tail?(n=o.tail,o.rendering=n,o.tail=n.sibling,o.renderingStartTime=On(),n.sibling=null,e=hr.current,cn(hr,r?1&e|2:1&e),n):(Do(n),null);case 22:case 23:return Pi(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!==(1&n.mode)?0!==(1073741824&$a)&&(Do(n),Y&&6&n.subtreeFlags&&(n.flags|=8192)):Do(n),null;case 24:case 25:return null}throw Error(i(156,n.tag))}var Io=v.ReactCurrentOwner,Lo=!1;function Ao(e,n,t,r){n.child=null===e?ir(n,null,t,r):ar(n,e.child,t,r)}function Oo(e,n,t,r,o){t=t.render;var a=n.ref;return lt(n,o),r=Pr(e,n,t,r,a,o),t=Fr(),null===e||Lo?(qt&&t&&Bt(n),n.flags|=1,Ao(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,aa(e,n,o))}function Bo(e,n,t,r,o){if(null===e){var a=t.type;return"function"!==typeof a||Ki(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=nv(t.type,null,r,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,No(e,n,a,r,o))}if(a=e.child,0===(e.lanes&o)){var i=a.memoizedProps;if((t=null!==(t=t.compare)?t:Kn)(i,r)&&e.ref===n.ref)return aa(e,n,o)}return n.flags|=1,(e=ev(a,r)).ref=n.ref,e.return=n,n.child=e}function No(e,n,t,r,o){if(null!==e&&Kn(e.memoizedProps,r)&&e.ref===n.ref){if(Lo=!1,0===(e.lanes&o))return n.lanes=e.lanes,aa(e,n,o);0!==(131072&e.flags)&&(Lo=!0)}return qo(e,n,t,r,o)}function Go(e,n,t){var r=n.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null},cn(Ka,$a),$a|=t;else{if(0===(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null},n.updateQueue=null,cn(Ka,$a),$a|=e,null;n.memoizedState={baseLanes:0,cachePool:null},r=null!==a?a.baseLanes:t,cn(Ka,$a),$a|=r}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,cn(Ka,$a),$a|=r;return Ao(e,n,o,t),n.child}function Vo(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function qo(e,n,t,r,o){var a=dn(t)?pn:un.current;return a=mn(n,a),lt(n,o),t=Pr(e,n,t,r,a,o),r=Fr(),null===e||Lo?(qt&&r&&Bt(n),n.flags|=1,Ao(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,aa(e,n,o))}function Wo(e,n,t,r,o){if(dn(t)){var a=!0;yn(n)}else a=!1;if(lt(n,o),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),jt(n,t,r),Ct(n,t,r,o),r=!0;else if(null===e){var i=n.stateNode,v=n.memoizedProps;i.props=v;var s=i.context,c=t.contextType;"object"===typeof c&&null!==c?c=ut(c):c=mn(n,c=dn(t)?pn:un.current);var l=t.getDerivedStateFromProps,u="function"===typeof l||"function"===typeof i.getSnapshotBeforeUpdate;u||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(v!==r||s!==c)&&kt(n,i,r,c),pt=!1;var f=n.memoizedState;i.state=f,_t(n,r,i,o),s=n.memoizedState,v!==r||f!==s||fn.current||pt?("function"===typeof l&&(wt(n,t,l,r),s=n.memoizedState),(v=pt||Mt(n,t,v,r,f,s,c))?(u||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(n.flags|=4194308)):("function"===typeof i.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=s),i.props=r,i.state=s,i.context=c,r=v):("function"===typeof i.componentDidMount&&(n.flags|=4194308),r=!1)}else{i=n.stateNode,dt(e,n),v=n.memoizedProps,c=n.type===n.elementType?v:nt(n.type,v),i.props=c,u=n.pendingProps,f=i.context,"object"===typeof(s=t.contextType)&&null!==s?s=ut(s):s=mn(n,s=dn(t)?pn:un.current);var p=t.getDerivedStateFromProps;(l="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(v!==u||f!==s)&&kt(n,i,r,s),pt=!1,f=n.memoizedState,i.state=f,_t(n,r,i,o);var m=n.memoizedState;v!==u||f!==m||fn.current||pt?("function"===typeof p&&(wt(n,t,p,r),m=n.memoizedState),(c=pt||Mt(n,t,c,r,f,m,s)||!1)?(l||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,s),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,s)),"function"===typeof i.componentDidUpdate&&(n.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!==typeof i.componentDidUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=m),i.props=r,i.state=m,i.context=s,r=c):("function"!==typeof i.componentDidUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||v===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),r=!1)}return Ho(e,n,t,r,a,o)}function Ho(e,n,t,r,o,a){Vo(e,n);var i=0!==(128&n.flags);if(!r&&!i)return o&&_n(n,t,!1),aa(e,n,a);r=n.stateNode,Io.current=n;var v=i&&"function"!==typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=ar(n,e.child,null,a),n.child=ar(n,null,v,a)):Ao(e,n,v,a),n.memoizedState=r.state,o&&_n(n,t,!0),n.child}function Xo(e){var n=e.stateNode;n.pendingContext?xn(0,n.pendingContext,n.pendingContext!==n.context):n.context&&xn(0,n.context,!1),fr(e,n.containerInfo)}function Yo(e,n,t,r,o){return Kt(),er(o),n.flags|=256,Ao(e,n,t,r),n.child}var Zo={dehydrated:null,treeContext:null,retryLane:0};function Qo(e){return{baseLanes:e,cachePool:null}}function Jo(e,n,t){var r,o=n.pendingProps,a=hr.current,v=!1,s=0!==(128&n.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&0!==(2&a)),r?(v=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),cn(hr,1&a),null===e)return Qt(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&n.mode)?n.lanes=1:Le(e)?n.lanes=8:n.lanes=1073741824,null):(a=o.children,e=o.fallback,v?(o=n.mode,v=n.child,a={mode:"hidden",children:a},0===(1&o)&&null!==v?(v.childLanes=0,v.pendingProps=a):v=rv(a,o,0,null),e=tv(e,o,t,null),v.return=n,e.return=n,v.sibling=e,n.child=v,n.child.memoizedState=Qo(t),n.memoizedState=Zo,e):$o(n,a));if(null!==(a=e.memoizedState)){if(null!==(r=a.dehydrated)){if(s)return 256&n.flags?(n.flags&=-257,na(e,n,t,Error(i(422)))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(v=o.fallback,a=n.mode,o=rv({mode:"visible",children:o.children},a,0,null),(v=tv(v,a,t,null)).flags|=2,o.return=n,v.return=n,o.sibling=v,n.child=o,0!==(1&n.mode)&&ar(n,e.child,null,t),n.child.memoizedState=Qo(t),n.memoizedState=Zo,v);if(0===(1&n.mode))n=na(e,n,t,null);else if(Le(r))n=na(e,n,t,Error(i(419)));else if(o=0!==(t&e.childLanes),Lo||o){if(null!==(o=Za)){switch(t&-t){case 4:v=2;break;case 16:v=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:v=32;break;case 536870912:v=268435456;break;default:v=0}0!==(o=0!==(v&(o.suspendedLanes|t))?0:v)&&o!==a.retryLane&&(a.retryLane=o,wi(e,o,-1))}Ii(),n=na(e,n,t,Error(i(421)))}else Ie(r)?(n.flags|=128,n.child=e.child,n=Yi.bind(null,e),Ae(r,n),n=null):(t=a.treeContext,Q&&(Vt=Ge(r),Gt=n,qt=!0,Ht=null,Wt=!1,null!==t&&(Ft[Dt++]=It,Ft[Dt++]=Lt,Ft[Dt++]=Et,It=t.id,Lt=t.overflow,Et=n)),(n=$o(n,n.pendingProps.children)).flags|=4096);return n}return v?(o=ea(e,n,o.children,o.fallback,t),v=n.child,a=e.child.memoizedState,v.memoizedState=null===a?Qo(t):{baseLanes:a.baseLanes|t,cachePool:null},v.childLanes=e.childLanes&~t,n.memoizedState=Zo,o):(t=Ko(e,n,o.children,t),n.memoizedState=null,t)}return v?(o=ea(e,n,o.children,o.fallback,t),v=n.child,a=e.child.memoizedState,v.memoizedState=null===a?Qo(t):{baseLanes:a.baseLanes|t,cachePool:null},v.childLanes=e.childLanes&~t,n.memoizedState=Zo,o):(t=Ko(e,n,o.children,t),n.memoizedState=null,t)}function $o(e,n){return(n=rv({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Ko(e,n,t,r){var o=e.child;return e=o.sibling,t=ev(o,{mode:"visible",children:t}),0===(1&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(null===(r=n.deletions)?(n.deletions=[e],n.flags|=16):r.push(e)),n.child=t}function ea(e,n,t,r,o){var a=n.mode,i=(e=e.child).sibling,v={mode:"hidden",children:t};return 0===(1&a)&&n.child!==e?((t=n.child).childLanes=0,t.pendingProps=v,n.deletions=null):(t=ev(e,v)).subtreeFlags=14680064&e.subtreeFlags,null!==i?r=ev(i,r):(r=tv(r,a,o,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}function na(e,n,t,r){return null!==r&&er(r),ar(n,e.child,null,t),(e=$o(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function ta(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),ct(e.return,n,t)}function ra(e,n,t,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=o)}function oa(e,n,t){var r=n.pendingProps,o=r.revealOrder,a=r.tail;if(Ao(e,n,r.children,t),0!==(2&(r=hr.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ta(e,t,n);else if(19===e.tag)ta(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(cn(hr,r),0===(1&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===xr(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),ra(n,!1,o,t,a);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===xr(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}ra(n,!0,t,null,a);break;case"together":ra(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function aa(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),ti|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=ev(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=ev(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function ia(e,n){switch(Nt(n),n.tag){case 1:return dn(n.type)&&hn(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return pr(),sn(fn),sn(un),yr(),0!==(65536&(e=n.flags))&&0===(128&e)?(n.flags=-65537&e|128,n):null;case 5:return dr(n),null;case 13:if(sn(hr),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(i(340));Kt()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return sn(hr),null;case 4:return pr(),null;case 10:return st(n.type._context),null;case 22:case 23:return Pi(),null;default:return null}}var va=!1,sa=!1,ca="function"===typeof WeakSet?WeakSet:Set,la=null;function ua(e,n){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(r){Wi(e,n,r)}else t.current=null}function fa(e,n,t){try{t()}catch(r){Wi(e,n,r)}}var pa=!1;function ma(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&fa(n,t,a)}o=o.next}while(o!==r)}}function da(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function ha(e){var n=e.ref;if(null!==n){var t=e.stateNode;if(5===e.tag)e=F(t);else e=t;"function"===typeof n?n(e):n.current=e}}function xa(e,n,t){if(Wn&&"function"===typeof Wn.onCommitFiberUnmount)try{Wn.onCommitFiberUnmount(qn,n)}catch(i){}switch(n.tag){case 0:case 11:case 14:case 15:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var o=r,a=o.destroy;o=o.tag,void 0!==a&&(0!==(2&o)||0!==(4&o))&&fa(n,t,a),r=r.next}while(r!==e)}break;case 1:if(ua(n,t),"function"===typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(i){Wi(n,t,i)}break;case 5:ua(n,t);break;case 4:Y?Ma(e,n,t):Z&&Z&&(n=n.stateNode.containerInfo,t=ke(n),Re(n,t))}}function ga(e,n,t){for(var r=n;;)if(xa(e,r,t),null===r.child||Y&&4===r.tag){if(r===n)break;for(;null===r.sibling;){if(null===r.return||r.return===n)return;r=r.return}r.sibling.return=r.return,r=r.sibling}else r.child.return=r,r=r.child}function ya(e){var n=e.alternate;null!==n&&(e.alternate=null,ya(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(n=e.stateNode)&&ee(n)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function _a(e){return 5===e.tag||3===e.tag||4===e.tag}function ba(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||_a(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function Ua(e){if(Y){e:{for(var n=e.return;null!==n;){if(_a(n))break e;n=n.return}throw Error(i(160))}var t=n;switch(t.tag){case 5:n=t.stateNode,32&t.flags&&(_e(n),t.flags&=-33),Sa(e,t=ba(e),n);break;case 3:case 4:n=t.stateNode.containerInfo,wa(e,t=ba(e),n);break;default:throw Error(i(161))}}}function wa(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?xe(t,e,n):fe(t,e);else if(4!==r&&null!==(e=e.child))for(wa(e,n,t),e=e.sibling;null!==e;)wa(e,n,t),e=e.sibling}function Sa(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?he(t,e,n):ue(t,e);else if(4!==r&&null!==(e=e.child))for(Sa(e,n,t),e=e.sibling;null!==e;)Sa(e,n,t),e=e.sibling}function Ma(e,n,t){for(var r,o,a=n,v=!1;;){if(!v){v=a.return;e:for(;;){if(null===v)throw Error(i(160));switch(r=v.stateNode,v.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}v=v.return}v=!0}if(5===a.tag||6===a.tag)ga(e,a,t),o?ye(r,a.stateNode):ge(r,a.stateNode);else if(18===a.tag)o?Qe(r,a.stateNode):Ze(r,a.stateNode);else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,o=!0,a.child.return=a,a=a.child;continue}}else if(xa(e,a,t),null!==a.child){a.child.return=a,a=a.child;continue}if(a===n)break;for(;null===a.sibling;){if(null===a.return||a.return===n)return;4===(a=a.return).tag&&(v=!1)}a.sibling.return=a.return,a=a.sibling}}function ja(e,n){if(Y){switch(n.tag){case 0:case 11:case 14:case 15:return ma(3,n,n.return),da(3,n),void ma(5,n,n.return);case 1:case 12:case 17:return;case 5:var t=n.stateNode;if(null!=t){var r=n.memoizedProps;e=null!==e?e.memoizedProps:r;var o=n.type,a=n.updateQueue;n.updateQueue=null,null!==a&&de(t,a,o,e,r,n)}return;case 6:if(null===n.stateNode)throw Error(i(162));return t=n.memoizedProps,void pe(n.stateNode,null!==e?e.memoizedProps:t,t);case 3:return void(Q&&null!==e&&e.memoizedState.isDehydrated&&Xe(n.stateNode.containerInfo));case 13:case 19:return void ka(n)}throw Error(i(163))}switch(n.tag){case 0:case 11:case 14:case 15:return ma(3,n,n.return),da(3,n),void ma(5,n,n.return);case 12:case 22:case 23:return;case 13:case 19:return void ka(n);case 3:Q&&null!==e&&e.memoizedState.isDehydrated&&Xe(n.stateNode.containerInfo)}e:if(Z){switch(n.tag){case 1:case 5:case 6:break e;case 3:case 4:n=n.stateNode,Re(n.containerInfo,n.pendingChildren);break e}throw Error(i(163))}}function ka(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new ca),n.forEach((function(n){var r=Zi.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function Ca(e,n,t){la=e,Ta(e,n,t)}function Ta(e,n,t){for(var r=0!==(1&e.mode);null!==la;){var o=la,a=o.child;if(22===o.tag&&r){var i=null!==o.memoizedState||va;if(!i){var v=o.alternate,s=null!==v&&null!==v.memoizedState||sa;v=va;var c=sa;if(va=i,(sa=s)&&!c)for(la=o;null!==la;)s=(i=la).child,22===i.tag&&null!==i.memoizedState?Pa(o):null!==s?(s.return=i,la=s):Pa(o);for(;null!==a;)la=a,Ta(a,n,t),a=a.sibling;la=o,va=v,sa=c}Ra(e)}else 0!==(8772&o.subtreeFlags)&&null!==a?(a.return=o,la=a):Ra(e)}}function Ra(e){for(;null!==la;){var n=la;if(0!==(8772&n.flags)){var t=n.alternate;try{if(0!==(8772&n.flags))switch(n.tag){case 0:case 11:case 15:sa||da(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!sa)if(null===t)r.componentDidMount();else{var o=n.elementType===n.type?t.memoizedProps:nt(n.type,t.memoizedProps);r.componentDidUpdate(o,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var a=n.updateQueue;null!==a&&bt(n,a,r);break;case 3:var v=n.updateQueue;if(null!==v){if(t=null,null!==n.child)switch(n.child.tag){case 5:t=F(n.child.stateNode);break;case 1:t=n.child.stateNode}bt(n,v,t)}break;case 5:var s=n.stateNode;null===t&&4&n.flags&&me(s,n.type,n.memoizedProps,n);break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(Q&&null===n.memoizedState){var c=n.alternate;if(null!==c){var l=c.memoizedState;if(null!==l){var u=l.dehydrated;null!==u&&Ye(u)}}}break;default:throw Error(i(163))}sa||512&n.flags&&ha(n)}catch(f){Wi(n,n.return,f)}}if(n===e){la=null;break}if(null!==(t=n.sibling)){t.return=n.return,la=t;break}la=n.return}}function za(e){for(;null!==la;){var n=la;if(n===e){la=null;break}var t=n.sibling;if(null!==t){t.return=n.return,la=t;break}la=n.return}}function Pa(e){for(;null!==la;){var n=la;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{da(4,n)}catch(s){Wi(n,t,s)}break;case 1:var r=n.stateNode;if("function"===typeof r.componentDidMount){var o=n.return;try{r.componentDidMount()}catch(s){Wi(n,o,s)}}var a=n.return;try{ha(n)}catch(s){Wi(n,a,s)}break;case 5:var i=n.return;try{ha(n)}catch(s){Wi(n,i,s)}}}catch(s){Wi(n,n.return,s)}if(n===e){la=null;break}var v=n.sibling;if(null!==v){v.return=n.return,la=v;break}la=n.return}}var Fa=0,Da=1,Ea=2,Ia=3,La=4;if("function"===typeof Symbol&&Symbol.for){var Aa=Symbol.for;Fa=Aa("selector.component"),Da=Aa("selector.has_pseudo_class"),Ea=Aa("selector.role"),Ia=Aa("selector.test_id"),La=Aa("selector.text")}function Oa(e){var n=J(e);if(null!=n){if("string"!==typeof n.memoizedProps["data-testname"])throw Error(i(364));return n}if(null===(e=oe(e)))throw Error(i(362));return e.stateNode.current}function Ba(e,n){switch(n.$$typeof){case Fa:if(e.type===n.value)return!0;break;case Da:e:{n=n.value,e=[e,0];for(var t=0;t<e.length;){var r=e[t++],o=e[t++],a=n[o];if(5!==r.tag||!ve(r)){for(;null!=a&&Ba(r,a);)a=n[++o];if(o===n.length){n=!0;break e}for(r=r.child;null!==r;)e.push(r,o),r=r.sibling}}n=!1}return n;case Ea:if(5===e.tag&&se(e.stateNode,n.value))return!0;break;case La:if((5===e.tag||6===e.tag)&&(null!==(e=ie(e))&&0<=e.indexOf(n.value)))return!0;break;case Ia:if(5===e.tag&&("string"===typeof(e=e.memoizedProps["data-testname"])&&e.toLowerCase()===n.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function Na(e){switch(e.$$typeof){case Fa:return"<"+(w(e.value)||"Unknown")+">";case Da:return":has("+(Na(e)||"")+")";case Ea:return'[role="'+e.value+'"]';case La:return'"'+e.value+'"';case Ia:return'[data-testname="'+e.value+'"]';default:throw Error(i(365))}}function Ga(e,n){var t=[];e=[e,0];for(var r=0;r<e.length;){var o=e[r++],a=e[r++],i=n[a];if(5!==o.tag||!ve(o)){for(;null!=i&&Ba(o,i);)i=n[++a];if(a===n.length)t.push(o);else for(o=o.child;null!==o;)e.push(o,a),o=o.sibling}}return t}function Va(e,n){if(!re)throw Error(i(363));e=Ga(e=Oa(e),n),n=[],e=Array.from(e);for(var t=0;t<e.length;){var r=e[t++];if(5===r.tag)ve(r)||n.push(r.stateNode);else for(r=r.child;null!==r;)e.push(r),r=r.sibling}return n}var qa=Math.ceil,Wa=v.ReactCurrentDispatcher,Ha=v.ReactCurrentOwner,Xa=v.ReactCurrentBatchConfig,Ya=0,Za=null,Qa=null,Ja=0,$a=0,Ka=vn(0),ei=0,ni=null,ti=0,ri=0,oi=0,ai=null,ii=null,vi=0,si=1/0;function ci(){si=On()+500}var li,ui=!1,fi=null,pi=null,mi=!1,di=null,hi=0,xi=0,gi=null,yi=-1,_i=0;function bi(){return 0!==(6&Ya)?On():-1!==yi?yi:yi=On()}function Ui(e){return 0===(1&e.mode)?1:0!==(2&Ya)&&0!==Ja?Ja&-Ja:null!==$n.transition?(0===_i&&(e=Sn,0===(4194240&(Sn<<=1))&&(Sn=64),_i=e),_i):0!==(e=Fn)?e:K()}function wi(e,n,t){if(50<xi)throw xi=0,gi=null,Error(i(185));var r=Si(e,n);return null===r?null:(zn(r,n,t),0!==(2&Ya)&&r===Za||(r===Za&&(0===(2&Ya)&&(ri|=n),4===ei&&Ti(r,Ja)),Mi(r,t),1===n&&0===Ya&&0===(1&e.mode)&&(ci(),Yn&&Jn())),r)}function Si(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function Mi(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-bn(a),v=1<<i,s=o[i];-1===s?0!==(v&t)&&0===(v&r)||(o[i]=Cn(v,n)):s<=n&&(e.expiredLanes|=v),a&=~v}}(e,n);var r=kn(e,e===Za?Ja:0);if(0===r)null!==t&&In(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&In(t),1===n)0===e.tag?function(e){Yn=!0,Qn(e)}(Ri.bind(null,e)):Qn(Ri.bind(null,e)),ne?te((function(){0===Ya&&Jn()})):En(Bn,Jn),t=null;else{switch(Dn(r)){case 1:t=Bn;break;case 4:t=Nn;break;case 16:default:t=Gn;break;case 536870912:t=Vn}t=Qi(t,ji.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function ji(e,n){if(yi=-1,_i=0,0!==(6&Ya))throw Error(i(327));var t=e.callbackNode;if(Vi()&&e.callbackNode!==t)return null;var r=kn(e,e===Za?Ja:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||n)n=Li(e,r);else{n=r;var o=Ya;Ya|=2;var a=Ei();for(Za===e&&Ja===n||(ci(),Fi(e,n));;)try{Oi();break}catch(s){Di(e,s)}it(),Wa.current=a,Ya=o,null!==Qa?n=0:(Za=null,Ja=0,n=ei)}if(0!==n){if(2===n&&(0!==(o=Tn(e))&&(r=o,n=ki(e,o))),1===n)throw t=ni,Fi(e,0),Ti(e,r),Mi(e,On()),t;if(6===n)Ti(e,r);else{if(o=e.current.alternate,0===(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var o=t[r],a=o.getSnapshot;o=o.value;try{if(!Hn(a(),o))return!1}catch(v){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(o)&&(2===(n=Li(e,r))&&(0!==(a=Tn(e))&&(r=a,n=ki(e,a))),1===n))throw t=ni,Fi(e,0),Ti(e,r),Mi(e,On()),t;switch(e.finishedWork=o,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:case 5:Gi(e,ii);break;case 3:if(Ti(e,r),(130023424&r)===r&&10<(n=vi+500-On())){if(0!==kn(e,0))break;if(((o=e.suspendedLanes)&r)!==r){bi(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=q(Gi.bind(null,e,ii),n);break}Gi(e,ii);break;case 4:if(Ti(e,r),(4194240&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var v=31-bn(r);a=1<<v,(v=n[v])>o&&(o=v),r&=~a}if(r=o,10<(r=(120>(r=On()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*qa(r/1960))-r)){e.timeoutHandle=q(Gi.bind(null,e,ii),r);break}Gi(e,ii);break;default:throw Error(i(329))}}}return Mi(e,On()),e.callbackNode===t?ji.bind(null,e):null}function ki(e,n){var t=ai;return e.current.memoizedState.isDehydrated&&(Fi(e,n).flags|=256),2!==(e=Li(e,n))&&(n=ii,ii=t,null!==n&&Ci(n)),e}function Ci(e){null===ii?ii=e:ii.push.apply(ii,e)}function Ti(e,n){for(n&=~oi,n&=~ri,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-bn(n),r=1<<t;e[t]=-1,n&=~r}}function Ri(e){if(0!==(6&Ya))throw Error(i(327));Vi();var n=kn(e,0);if(0===(1&n))return Mi(e,On()),null;var t=Li(e,n);if(0!==e.tag&&2===t){var r=Tn(e);0!==r&&(n=r,t=ki(e,r))}if(1===t)throw t=ni,Fi(e,0),Ti(e,n),Mi(e,On()),t;if(6===t)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,Gi(e,ii),Mi(e,On()),null}function zi(e){null!==di&&0===di.tag&&0===(6&Ya)&&Vi();var n=Ya;Ya|=1;var t=Xa.transition,r=Fn;try{if(Xa.transition=null,Fn=1,e)return e()}finally{Fn=r,Xa.transition=t,0===(6&(Ya=n))&&Jn()}}function Pi(){$a=Ka.current,sn(Ka)}function Fi(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(t!==H&&(e.timeoutHandle=H,W(t)),null!==Qa)for(t=Qa.return;null!==t;){var r=t;switch(Nt(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&hn();break;case 3:pr(),sn(fn),sn(un),yr();break;case 5:dr(r);break;case 4:pr();break;case 13:case 19:sn(hr);break;case 10:st(r.type._context);break;case 22:case 23:Pi()}t=t.return}if(Za=e,Qa=e=ev(e.current,null),Ja=$a=n,ei=0,ni=null,oi=ri=ti=0,ii=ai=null,null!==ft){for(n=0;n<ft.length;n++)if(null!==(r=(t=ft[n]).interleaved)){t.interleaved=null;var o=r.next,a=t.pending;if(null!==a){var i=a.next;a.next=o,r.next=i}t.pending=r}ft=null}return e}function Di(e,n){for(;;){var t=Qa;try{if(it(),_r.current=po,jr){for(var r=wr.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}jr=!1}if(Ur=0,Mr=Sr=wr=null,kr=!1,Cr=0,Ha.current=null,null===t||null===t.return){ei=1,ni=n,Qa=null;break}e:{var a=e,v=t.return,s=t,c=n;if(n=Ja,s.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var l=c,u=s,f=u.tag;if(0===(1&u.mode)&&(0===f||11===f||15===f)){var p=u.alternate;p?(u.updateQueue=p.updateQueue,u.memoizedState=p.memoizedState,u.lanes=p.lanes):(u.updateQueue=null,u.memoizedState=null)}var m=Co(v);if(null!==m){m.flags&=-257,To(m,v,s,0,n),1&m.mode&&ko(a,l,n),c=l;var d=(n=m).updateQueue;if(null===d){var h=new Set;h.add(c),n.updateQueue=h}else d.add(c);break e}if(0===(1&n)){ko(a,l,n),Ii();break e}c=Error(i(426))}else if(qt&&1&s.mode){var x=Co(v);if(null!==x){0===(65536&x.flags)&&(x.flags|=256),To(x,v,s,0,n),er(c);break e}}a=c,4!==ei&&(ei=2),null===ai?ai=[a]:ai.push(a),c=go(c,s),s=v;do{switch(s.tag){case 3:s.flags|=65536,n&=-n,s.lanes|=n,yt(s,Mo(0,c,n));break e;case 1:a=c;var g=s.type,y=s.stateNode;if(0===(128&s.flags)&&("function"===typeof g.getDerivedStateFromError||null!==y&&"function"===typeof y.componentDidCatch&&(null===pi||!pi.has(y)))){s.flags|=65536,n&=-n,s.lanes|=n,yt(s,jo(s,a,n));break e}}s=s.return}while(null!==s)}Ni(t)}catch(_){n=_,Qa===t&&null!==t&&(Qa=t=t.return);continue}break}}function Ei(){var e=Wa.current;return Wa.current=po,null===e?po:e}function Ii(){0!==ei&&3!==ei&&2!==ei||(ei=4),null===Za||0===(268435455&ti)&&0===(268435455&ri)||Ti(Za,Ja)}function Li(e,n){var t=Ya;Ya|=2;var r=Ei();for(Za===e&&Ja===n||Fi(e,n);;)try{Ai();break}catch(o){Di(e,o)}if(it(),Ya=t,Wa.current=r,null!==Qa)throw Error(i(261));return Za=null,Ja=0,ei}function Ai(){for(;null!==Qa;)Bi(Qa)}function Oi(){for(;null!==Qa&&!Ln();)Bi(Qa)}function Bi(e){var n=li(e.alternate,e,$a);e.memoizedProps=e.pendingProps,null===n?Ni(e):Qa=n,Ha.current=null}function Ni(e){var n=e;do{var t=n.alternate;if(e=n.return,0===(32768&n.flags)){if(null!==(t=Eo(t,n,$a)))return void(Qa=t)}else{if(null!==(t=ia(t,n)))return t.flags&=32767,void(Qa=t);if(null===e)return ei=6,void(Qa=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Qa=n);Qa=n=e}while(null!==n);0===ei&&(ei=5)}function Gi(e,n){var t=Fn,r=Xa.transition;try{Xa.transition=null,Fn=1,function(e,n,t){do{Vi()}while(null!==di);if(0!==(6&Ya))throw Error(i(327));var r=e.finishedWork,o=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var a=r.lanes|r.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var o=31-bn(t),a=1<<o;n[o]=0,r[o]=-1,e[o]=-1,t&=~a}}(e,a),e===Za&&(Qa=Za=null,Ja=0),0===(2064&r.subtreeFlags)&&0===(2064&r.flags)||mi||(mi=!0,Qi(Gn,(function(){return Vi(),null}))),a=0!==(15990&r.flags),0!==(15990&r.subtreeFlags)||a){a=Xa.transition,Xa.transition=null;var v=Fn;Fn=1;var s=Ya;Ya|=4,Ha.current=null,function(e,n){for(I(e.containerInfo),la=n;null!==la;)if(n=(e=la).child,0!==(1028&e.subtreeFlags)&&null!==n)n.return=e,la=n;else for(;null!==la;){e=la;try{var t=e.alternate;if(0!==(1024&e.flags))switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==t){var r=t.memoizedProps,o=t.memoizedState,a=e.stateNode,v=a.getSnapshotBeforeUpdate(e.elementType===e.type?r:nt(e.type,r),o);a.__reactInternalSnapshotBeforeUpdate=v}break;case 3:Y&&Me(e.stateNode.containerInfo);break;default:throw Error(i(163))}}catch(s){Wi(e,e.return,s)}if(null!==(n=e.sibling)){n.return=e.return,la=n;break}la=e.return}t=pa,pa=!1}(e,r),function(e,n){for(la=n;null!==la;){var t=(n=la).deletions;if(null!==t)for(var r=0;r<t.length;r++){var o=t[r];try{var a=e;Y?Ma(a,o,n):ga(a,o,n);var i=o.alternate;null!==i&&(i.return=null),o.return=null}catch(b){Wi(o,n,b)}}if(t=n.child,0!==(12854&n.subtreeFlags)&&null!==t)t.return=n,la=t;else for(;null!==la;){n=la;try{var v=n.flags;if(32&v&&Y&&_e(n.stateNode),512&v){var s=n.alternate;if(null!==s){var c=s.ref;null!==c&&("function"===typeof c?c(null):c.current=null)}}if(8192&v)switch(n.tag){case 13:if(null!==n.memoizedState){var l=n.alternate;null!==l&&null!==l.memoizedState||(vi=On())}break;case 22:var u=null!==n.memoizedState,f=n.alternate,p=null!==f&&null!==f.memoizedState;if(t=n,Y)e:if(r=t,o=u,a=null,Y)for(var m=r;;){if(5===m.tag){if(null===a){a=m;var d=m.stateNode;o?be(d):we(m.stateNode,m.memoizedProps)}}else if(6===m.tag){if(null===a){var h=m.stateNode;o?Ue(h):Se(h,m.memoizedProps)}}else if((22!==m.tag&&23!==m.tag||null===m.memoizedState||m===r)&&null!==m.child){m.child.return=m,m=m.child;continue}if(m===r)break;for(;null===m.sibling;){if(null===m.return||m.return===r)break e;a===m&&(a=null),m=m.return}a===m&&(a=null),m.sibling.return=m.return,m=m.sibling}if(u&&!p&&0!==(1&t.mode)){la=t;for(var x=t.child;null!==x;){for(t=la=x;null!==la;){var g=(r=la).child;switch(r.tag){case 0:case 11:case 14:case 15:ma(4,r,r.return);break;case 1:ua(r,r.return);var y=r.stateNode;if("function"===typeof y.componentWillUnmount){var _=r.return;try{y.props=r.memoizedProps,y.state=r.memoizedState,y.componentWillUnmount()}catch(b){Wi(r,_,b)}}break;case 5:ua(r,r.return);break;case 22:if(null!==r.memoizedState){za(t);continue}}null!==g?(g.return=r,la=g):za(t)}x=x.sibling}}}switch(4102&v){case 2:Ua(n),n.flags&=-3;break;case 6:Ua(n),n.flags&=-3,ja(n.alternate,n);break;case 4096:n.flags&=-4097;break;case 4100:n.flags&=-4097,ja(n.alternate,n);break;case 4:ja(n.alternate,n)}}catch(b){Wi(n,n.return,b)}if(null!==(t=n.sibling)){t.return=n.return,la=t;break}la=n.return}}}(e,r),L(e.containerInfo),e.current=r,Ca(r,e,o),An(),Ya=s,Fn=v,Xa.transition=a}else e.current=r;if(mi&&(mi=!1,di=e,hi=o),0===(a=e.pendingLanes)&&(pi=null),function(e){if(Wn&&"function"===typeof Wn.onCommitFiberRoot)try{Wn.onCommitFiberRoot(qn,e,void 0,128===(128&e.current.flags))}catch(n){}}(r.stateNode),Mi(e,On()),null!==n)for(t=e.onRecoverableError,r=0;r<n.length;r++)t(n[r]);if(ui)throw ui=!1,e=fi,fi=null,e;0!==(1&hi)&&0!==e.tag&&Vi(),0!==(1&(a=e.pendingLanes))?e===gi?xi++:(xi=0,gi=e):xi=0,Jn()}(e,n,t)}finally{Xa.transition=r,Fn=t}return null}function Vi(){if(null!==di){var e=Dn(hi),n=Xa.transition,t=Fn;try{if(Xa.transition=null,Fn=16>e?16:e,null===di)var r=!1;else{if(e=di,di=null,hi=0,0!==(6&Ya))throw Error(i(331));var o=Ya;for(Ya|=4,la=e.current;null!==la;){var a=la,v=a.child;if(0!==(16&la.flags)){var s=a.deletions;if(null!==s){for(var c=0;c<s.length;c++){var l=s[c];for(la=l;null!==la;){var u=la;switch(u.tag){case 0:case 11:case 15:ma(8,u,a)}var f=u.child;if(null!==f)f.return=u,la=f;else for(;null!==la;){var p=(u=la).sibling,m=u.return;if(ya(u),u===l){la=null;break}if(null!==p){p.return=m,la=p;break}la=m}}}var d=a.alternate;if(null!==d){var h=d.child;if(null!==h){d.child=null;do{var x=h.sibling;h.sibling=null,h=x}while(null!==h)}}la=a}}if(0!==(2064&a.subtreeFlags)&&null!==v)v.return=a,la=v;else e:for(;null!==la;){if(0!==(2048&(a=la).flags))switch(a.tag){case 0:case 11:case 15:ma(9,a,a.return)}var g=a.sibling;if(null!==g){g.return=a.return,la=g;break e}la=a.return}}var y=e.current;for(la=y;null!==la;){var _=(v=la).child;if(0!==(2064&v.subtreeFlags)&&null!==_)_.return=v,la=_;else e:for(v=y;null!==la;){if(0!==(2048&(s=la).flags))try{switch(s.tag){case 0:case 11:case 15:da(9,s)}}catch(U){Wi(s,s.return,U)}if(s===v){la=null;break e}var b=s.sibling;if(null!==b){b.return=s.return,la=b;break e}la=s.return}}if(Ya=o,Jn(),Wn&&"function"===typeof Wn.onPostCommitFiberRoot)try{Wn.onPostCommitFiberRoot(qn,e)}catch(U){}r=!0}return r}finally{Fn=t,Xa.transition=n}}return!1}function qi(e,n,t){xt(e,n=Mo(0,n=go(t,n),1)),n=bi(),null!==(e=Si(e,1))&&(zn(e,1,n),Mi(e,n))}function Wi(e,n,t){if(3===e.tag)qi(e,e,t);else for(;null!==n;){if(3===n.tag){qi(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===pi||!pi.has(r))){xt(n,e=jo(n,e=go(t,e),1)),e=bi(),null!==(n=Si(n,1))&&(zn(n,1,e),Mi(n,e));break}}n=n.return}}function Hi(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=bi(),e.pingedLanes|=e.suspendedLanes&t,Za===e&&(Ja&t)===t&&(4===ei||3===ei&&(130023424&Ja)===Ja&&500>On()-vi?Fi(e,0):oi|=t),Mi(e,n)}function Xi(e,n){0===n&&(0===(1&e.mode)?n=1:(n=Mn,0===(130023424&(Mn<<=1))&&(Mn=4194304)));var t=bi();null!==(e=Si(e,n))&&(zn(e,n,t),Mi(e,t))}function Yi(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),Xi(e,t)}function Zi(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(t=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(n),Xi(e,t)}function Qi(e,n){return En(e,n)}function Ji(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function $i(e,n,t,r){return new Ji(e,n,t,r)}function Ki(e){return!(!(e=e.prototype)||!e.isReactComponent)}function ev(e,n){var t=e.alternate;return null===t?((t=$i(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function nv(e,n,t,r,o,a){var v=2;if(r=e,"function"===typeof e)Ki(e)&&(v=1);else if("string"===typeof e)v=5;else e:switch(e){case l:return tv(t.children,o,a,n);case u:v=8,o|=8;break;case f:return(e=$i(12,t,n,2|o)).elementType=f,e.lanes=a,e;case h:return(e=$i(13,t,n,o)).elementType=h,e.lanes=a,e;case x:return(e=$i(19,t,n,o)).elementType=x,e.lanes=a,e;case _:return rv(t,o,a,n);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case p:v=10;break e;case m:v=9;break e;case d:v=11;break e;case g:v=14;break e;case y:v=16,r=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=$i(v,t,n,o)).elementType=e,n.type=r,n.lanes=a,n}function tv(e,n,t,r){return(e=$i(7,e,r,n)).lanes=t,e}function rv(e,n,t,r){return(e=$i(22,e,r,n)).elementType=_,e.lanes=t,e.stateNode={},e}function ov(e,n,t){return(e=$i(6,e,null,n)).lanes=t,e}function av(e,n,t){return(n=$i(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function iv(e,n,t,r,o){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=H,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Rn(0),this.expirationTimes=Rn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Rn(0),this.identifierPrefix=r,this.onRecoverableError=o,Q&&(this.mutableSourceEagerHydrationData=null)}function vv(e,n,t,r,o,a,i,v,s){return e=new iv(e,n,t,v,s),1===n?(n=1,!0===a&&(n|=8)):n=0,a=$i(3,null,null,n),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null},mt(a),e}function sv(e){if(!e)return ln;e:{if(M(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(dn(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(i(171))}if(1===e.tag){var t=e.type;if(dn(t))return gn(e,t,n)}return n}function cv(e){var n=e._reactInternals;if(void 0===n){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return null===(e=C(n))?null:e.stateNode}function lv(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function uv(e,n){lv(e,n),(e=e.alternate)&&lv(e,n)}function fv(e){return null===(e=C(e))?null:e.stateNode}function pv(){return null}return li=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||fn.current)Lo=!0;else{if(0===(e.lanes&t)&&0===(128&n.flags))return Lo=!1,function(e,n,t){switch(n.tag){case 3:Xo(n),Kt();break;case 5:mr(n);break;case 1:dn(n.type)&&yn(n);break;case 4:fr(n,n.stateNode.containerInfo);break;case 10:vt(0,n.type._context,n.memoizedProps.value);break;case 13:var r=n.memoizedState;if(null!==r)return null!==r.dehydrated?(cn(hr,1&hr.current),n.flags|=128,null):0!==(t&n.child.childLanes)?Jo(e,n,t):(cn(hr,1&hr.current),null!==(e=aa(e,n,t))?e.sibling:null);cn(hr,1&hr.current);break;case 19:if(r=0!==(t&n.childLanes),0!==(128&e.flags)){if(r)return oa(e,n,t);n.flags|=128}var o=n.memoizedState;if(null!==o&&(o.rendering=null,o.tail=null,o.lastEffect=null),cn(hr,hr.current),r)break;return null;case 22:case 23:return n.lanes=0,Go(e,n,t)}return aa(e,n,t)}(e,n,t);Lo=0!==(131072&e.flags)}else Lo=!1,qt&&0!==(1048576&n.flags)&&Ot(n,Pt,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps;var o=mn(n,un.current);lt(n,t),o=Pr(null,n,r,e,o,t);var a=Fr();return n.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,dn(r)?(a=!0,yn(n)):a=!1,n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,mt(n),o.updater=St,n.stateNode=o,o._reactInternals=n,Ct(n,r,e,t),n=Ho(null,n,r,!0,a,t)):(n.tag=0,qt&&a&&Bt(n),Ao(null,n,o,t),n=n.child),n;case 16:r=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,r=(o=r._init)(r._payload),n.type=r,o=n.tag=function(e){if("function"===typeof e)return Ki(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===d)return 11;if(e===g)return 14}return 2}(r),e=nt(r,e),o){case 0:n=qo(null,n,r,e,t);break e;case 1:n=Wo(null,n,r,e,t);break e;case 11:n=Oo(null,n,r,e,t);break e;case 14:n=Bo(null,n,r,nt(r.type,e),t);break e}throw Error(i(306,r,""))}return n;case 0:return r=n.type,o=n.pendingProps,qo(e,n,r,o=n.elementType===r?o:nt(r,o),t);case 1:return r=n.type,o=n.pendingProps,Wo(e,n,r,o=n.elementType===r?o:nt(r,o),t);case 3:e:{if(Xo(n),null===e)throw Error(i(387));r=n.pendingProps,o=(a=n.memoizedState).element,dt(e,n),_t(n,r,null,t);var v=n.memoizedState;if(r=v.element,Q&&a.isDehydrated){if(a={element:r,isDehydrated:!1,cache:v.cache,transitions:v.transitions},n.updateQueue.baseState=a,n.memoizedState=a,256&n.flags){n=Yo(e,n,r,t,o=Error(i(423)));break e}if(r!==o){n=Yo(e,n,r,t,o=Error(i(424)));break e}for(Q&&(Vt=Ne(n.stateNode.containerInfo),Gt=n,qt=!0,Ht=null,Wt=!1),t=ir(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(Kt(),r===o){n=aa(e,n,t);break e}Ao(e,n,r,t)}n=n.child}return n;case 5:return mr(n),null===e&&Qt(n),r=n.type,o=n.pendingProps,a=null!==e?e.memoizedProps:null,v=o.children,G(r,o)?v=null:null!==a&&G(r,a)&&(n.flags|=32),Vo(e,n),Ao(e,n,v,t),n.child;case 6:return null===e&&Qt(n),null;case 13:return Jo(e,n,t);case 4:return fr(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=ar(n,null,r,t):Ao(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Oo(e,n,r,o=n.elementType===r?o:nt(r,o),t);case 7:return Ao(e,n,n.pendingProps,t),n.child;case 8:case 12:return Ao(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,o=n.pendingProps,a=n.memoizedProps,vt(0,r,v=o.value),null!==a)if(Hn(a.value,v)){if(a.children===o.children&&!fn.current){n=aa(e,n,t);break e}}else for(null!==(a=n.child)&&(a.return=n);null!==a;){var s=a.dependencies;if(null!==s){v=a.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===a.tag){(c=ht(-1,t&-t)).tag=2;var l=a.updateQueue;if(null!==l){var u=(l=l.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),l.pending=c}}a.lanes|=t,null!==(c=a.alternate)&&(c.lanes|=t),ct(a.return,t,n),s.lanes|=t;break}c=c.next}}else if(10===a.tag)v=a.type===n.type?null:a.child;else if(18===a.tag){if(null===(v=a.return))throw Error(i(341));v.lanes|=t,null!==(s=v.alternate)&&(s.lanes|=t),ct(v,t,n),v=a.sibling}else v=a.child;if(null!==v)v.return=a;else for(v=a;null!==v;){if(v===n){v=null;break}if(null!==(a=v.sibling)){a.return=v.return,v=a;break}v=v.return}a=v}Ao(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=n.pendingProps.children,lt(n,t),r=r(o=ut(o)),n.flags|=1,Ao(e,n,r,t),n.child;case 14:return o=nt(r=n.type,n.pendingProps),Bo(e,n,r,o=nt(r.type,o),t);case 15:return No(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:nt(r,o),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,dn(r)?(e=!0,yn(n)):e=!1,lt(n,t),jt(n,r,o),Ct(n,r,o,t),Ho(null,n,r,!0,e,t);case 19:return oa(e,n,t);case 22:return Go(e,n,t)}throw Error(i(156,n.tag))},n.attemptContinuousHydration=function(e){13===e.tag&&(wi(e,134217728,bi()),uv(e,134217728))},n.attemptHydrationAtCurrentPriority=function(e){if(13===e.tag){var n=bi(),t=Ui(e);wi(e,t,n),uv(e,t)}},n.attemptSynchronousHydration=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=jn(n.pendingLanes);0!==t&&(Pn(n,1|t),Mi(n,On()),0===(6&Ya)&&(ci(),Jn()))}break;case 13:var r=bi();zi((function(){return wi(e,1,r)})),uv(e,1)}},n.batchedUpdates=function(e,n){var t=Ya;Ya|=1;try{return e(n)}finally{0===(Ya=t)&&(ci(),Yn&&Jn())}},n.createComponentSelector=function(e){return{$$typeof:Fa,value:e}},n.createContainer=function(e,n,t,r,o,a,i){return vv(e,n,!1,null,0,r,0,a,i)},n.createHasPseudoClassSelector=function(e){return{$$typeof:Da,value:e}},n.createHydrationContainer=function(e,n,t,r,o,a,i,v,s){return(e=vv(t,r,!0,e,0,a,0,v,s)).context=sv(null),t=e.current,(a=ht(r=bi(),o=Ui(t))).callback=void 0!==n&&null!==n?n:null,xt(t,a),e.current.lanes=o,zn(e,o,r),Mi(e,r),e},n.createPortal=function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:c,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}},n.createRoleSelector=function(e){return{$$typeof:Ea,value:e}},n.createTestNameSelector=function(e){return{$$typeof:Ia,value:e}},n.createTextSelector=function(e){return{$$typeof:La,value:e}},n.deferredUpdates=function(e){var n=Fn,t=Xa.transition;try{return Xa.transition=null,Fn=16,e()}finally{Fn=n,Xa.transition=t}},n.discreteUpdates=function(e,n,t,r,o){var a=Fn,i=Xa.transition;try{return Xa.transition=null,Fn=1,e(n,t,r,o)}finally{Fn=a,Xa.transition=i,0===Ya&&ci()}},n.findAllNodes=Va,n.findBoundingRects=function(e,n){if(!re)throw Error(i(363));n=Va(e,n),e=[];for(var t=0;t<n.length;t++)e.push(ae(n[t]));for(n=e.length-1;0<n;n--)for(var r=(t=e[n]).x,o=r+t.width,a=t.y,v=a+t.height,s=n-1;0<=s;s--)if(n!==s){var c=e[s],l=c.x,u=l+c.width,f=c.y,p=f+c.height;if(r>=l&&a>=f&&o<=u&&v<=p){e.splice(n,1);break}if(!(r!==l||t.width!==c.width||p<a||f>v)){f>a&&(c.height+=f-a,c.y=a),p<v&&(c.height=v-f),e.splice(n,1);break}if(!(a!==f||t.height!==c.height||u<r||l>o)){l>r&&(c.width+=l-r,c.x=r),u<o&&(c.width=o-l),e.splice(n,1);break}}return e},n.findHostInstance=cv,n.findHostInstanceWithNoPortals=function(e){return null===(e=null!==(e=k(e))?R(e):null)?null:e.stateNode},n.findHostInstanceWithWarning=function(e){return cv(e)},n.flushControlled=function(e){var n=Ya;Ya|=1;var t=Xa.transition,r=Fn;try{Xa.transition=null,Fn=1,e()}finally{Fn=r,Xa.transition=t,0===(Ya=n)&&(ci(),Jn())}},n.flushPassiveEffects=Vi,n.flushSync=zi,n.focusWithin=function(e,n){if(!re)throw Error(i(363));for(n=Ga(e=Oa(e),n),n=Array.from(n),e=0;e<n.length;){var t=n[e++];if(!ve(t)){if(5===t.tag&&ce(t.stateNode))return!0;for(t=t.child;null!==t;)n.push(t),t=t.sibling}}return!1},n.getCurrentUpdatePriority=function(){return Fn},n.getFindAllNodesFailureDescription=function(e,n){if(!re)throw Error(i(363));var t=0,r=[];e=[Oa(e),0];for(var o=0;o<e.length;){var a=e[o++],v=e[o++],s=n[v];if((5!==a.tag||!ve(a))&&(Ba(a,s)&&(r.push(Na(s)),++v>t&&(t=v)),v<n.length))for(a=a.child;null!==a;)e.push(a,v),a=a.sibling}if(t<n.length){for(e=[];t<n.length;t++)e.push(Na(n[t]));return"findAllNodes was able to match part of the selector:\n  "+r.join(" > ")+"\n\nNo matching component was found for:\n  "+e.join(" > ")}return null},n.getPublicRootInstance=function(e){return(e=e.current).child?5===e.child.tag?F(e.child.stateNode):e.child.stateNode:null},n.injectIntoDevTools=function(e){if(e={bundleType:e.bundleType,version:e.version,rendererPackageName:e.rendererPackageName,rendererConfig:e.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:fv,findFiberByHostInstance:e.findFiberByHostInstance||pv,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},"undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)e=!1;else{var n=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(n.isDisabled||!n.supportsFiber)e=!0;else{try{qn=n.inject(e),Wn=n}catch(t){}e=!!n.checkDCE}}return e},n.isAlreadyRendering=function(){return!1},n.observeVisibleRects=function(e,n,t,r){if(!re)throw Error(i(363));e=Va(e,n);var o=le(e,t,r).disconnect;return{disconnect:function(){o()}}},n.registerMutableSourceForHydration=function(e,n){var t=n._getVersion;t=t(n._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[n,t]:e.mutableSourceEagerHydrationData.push(n,t)},n.runWithPriority=function(e,n){var t=Fn;try{return Fn=e,n()}finally{Fn=t}},n.shouldError=function(){return null},n.shouldSuspend=function(){return!1},n.updateContainer=function(e,n,t,r){var o=n.current,a=bi(),i=Ui(o);return t=sv(t),null===n.context?n.context=t:n.pendingContext=t,(n=ht(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),xt(o,n),null!==(e=wi(o,i,a))&&gt(e,o,i),i},n}},585:function(e,n,t){"use strict";e.exports=t(976)},258:function(e,n,t){"use strict";e.exports=t(721)},783:function(e,n){"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,o=e[r];if(!(0<a(o,n)))break e;e[r]=n,e[t]=o,t=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length,i=o>>>1;r<i;){var v=2*(r+1)-1,s=e[v],c=v+1,l=e[c];if(0>a(s,t))c<o&&0>a(l,s)?(e[r]=l,e[c]=t,r=c):(e[r]=s,e[v]=t,r=v);else{if(!(c<o&&0>a(l,t)))break e;e[r]=l,e[c]=t,r=c}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var v=Date,s=v.now();n.unstable_now=function(){return v.now()-s}}var c=[],l=[],u=1,f=null,p=3,m=!1,d=!1,h=!1,x="function"===typeof setTimeout?setTimeout:null,g="function"===typeof clearTimeout?clearTimeout:null,y="undefined"!==typeof setImmediate?setImmediate:null;function _(e){for(var n=r(l);null!==n;){if(null===n.callback)o(l);else{if(!(n.startTime<=e))break;o(l),n.sortIndex=n.expirationTime,t(c,n)}n=r(l)}}function b(e){if(h=!1,_(e),!d)if(null!==r(c))d=!0,F(U);else{var n=r(l);null!==n&&D(b,n.startTime-e)}}function U(e,t){d=!1,h&&(h=!1,g(j),j=-1),m=!0;var a=p;try{for(_(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!T());){var i=f.callback;if("function"===typeof i){f.callback=null,p=f.priorityLevel;var v=i(f.expirationTime<=t);t=n.unstable_now(),"function"===typeof v?f.callback=v:f===r(c)&&o(c),_(t)}else o(c);f=r(c)}if(null!==f)var s=!0;else{var u=r(l);null!==u&&D(b,u.startTime-t),s=!1}return s}finally{f=null,p=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,S=!1,M=null,j=-1,k=5,C=-1;function T(){return!(n.unstable_now()-C<k)}function R(){if(null!==M){var e=n.unstable_now();C=e;var t=!0;try{t=M(!0,e)}finally{t?w():(S=!1,M=null)}}else S=!1}if("function"===typeof y)w=function(){y(R)};else if("undefined"!==typeof MessageChannel){var z=new MessageChannel,P=z.port2;z.port1.onmessage=R,w=function(){P.postMessage(null)}}else w=function(){x(R,0)};function F(e){M=e,S||(S=!0,w())}function D(e,t){j=x((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){d||m||(d=!0,F(U))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,o,a){var i=n.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var v=-1;break;case 2:v=250;break;case 5:v=1073741823;break;case 4:v=1e4;break;default:v=5e3}return e={id:u++,callback:o,priorityLevel:e,startTime:a,expirationTime:v=a+v,sortIndex:-1},a>i?(e.sortIndex=a,t(l,e),null===r(c)&&e===r(l)&&(h?(g(j),j=-1):h=!0,D(b,a-i))):(e.sortIndex=v,t(c,e),d||m||(d=!0,F(U))),e},n.unstable_shouldYield=T,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},100:function(e,n,t){"use strict";e.exports=t(783)},374:function(e,n,t){"use strict";var r=t(791),o=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,v=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var r,a={},c=null,l=null;for(r in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(l=n.ref),n)i.call(n,r)&&!s.hasOwnProperty(r)&&(a[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===a[r]&&(a[r]=n[r]);return{$$typeof:o,type:e,key:c,ref:l,props:a,_owner:v.current}}n.Fragment=a,n.jsx=c,n.jsxs=c},117:function(e,n){"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),s=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},d=Object.assign,h={};function x(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||m}function g(){}function y(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||m}x.prototype.isReactComponent={},x.prototype.setState=function(e,n){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=x.prototype;var _=y.prototype=new g;_.constructor=y,d(_,x.prototype),_.isPureReactComponent=!0;var b=Array.isArray,U=Object.prototype.hasOwnProperty,w={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function M(e,n,r){var o,a={},i=null,v=null;if(null!=n)for(o in void 0!==n.ref&&(v=n.ref),void 0!==n.key&&(i=""+n.key),n)U.call(n,o)&&!S.hasOwnProperty(o)&&(a[o]=n[o]);var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){for(var c=Array(s),l=0;l<s;l++)c[l]=arguments[l+2];a.children=c}if(e&&e.defaultProps)for(o in s=e.defaultProps)void 0===a[o]&&(a[o]=s[o]);return{$$typeof:t,type:e,key:i,ref:v,props:a,_owner:w.current}}function j(e){return"object"===typeof e&&null!==e&&e.$$typeof===t}var k=/\/+/g;function C(e,n){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function T(e,n,o,a,i){var v=typeof e;"undefined"!==v&&"boolean"!==v||(e=null);var s=!1;if(null===e)s=!0;else switch(v){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case t:case r:s=!0}}if(s)return i=i(s=e),e=""===a?"."+C(s,0):a,b(i)?(o="",null!=e&&(o=e.replace(k,"$&/")+"/"),T(i,n,o,"",(function(e){return e}))):null!=i&&(j(i)&&(i=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,o+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(k,"$&/")+"/")+e)),n.push(i)),1;if(s=0,a=""===a?".":a+":",b(e))for(var c=0;c<e.length;c++){var l=a+C(v=e[c],c);s+=T(v,n,o,l,i)}else if(l=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof l)for(e=l.call(e),c=0;!(v=e.next()).done;)s+=T(v=v.value,n,o,l=a+C(v,c++),i);else if("object"===v)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return s}function R(e,n,t){if(null==e)return e;var r=[],o=0;return T(e,r,"","",(function(e){return n.call(t,e,o++)})),r}function z(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var P={current:null},F={transition:null},D={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:F,ReactCurrentOwner:w};n.Children={map:R,forEach:function(e,n,t){R(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return R(e,(function(){n++})),n},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!j(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=x,n.Fragment=o,n.Profiler=i,n.PureComponent=y,n.StrictMode=a,n.Suspense=l,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,n.cloneElement=function(e,n,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=d({},e.props),a=e.key,i=e.ref,v=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,v=w.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in n)U.call(n,c)&&!S.hasOwnProperty(c)&&(o[c]=void 0===n[c]&&void 0!==s?s[c]:n[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){s=Array(c);for(var l=0;l<c;l++)s[l]=arguments[l+2];o.children=s}return{$$typeof:t,type:e.type,key:a,ref:i,props:o,_owner:v}},n.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:v,_context:e},e.Consumer=e},n.createElement=M,n.createFactory=function(e){var n=M.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=j,n.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:z}},n.memo=function(e,n){return{$$typeof:u,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=F.transition;F.transition={};try{e()}finally{F.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return P.current.useCallback(e,n)},n.useContext=function(e){return P.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return P.current.useDeferredValue(e)},n.useEffect=function(e,n){return P.current.useEffect(e,n)},n.useId=function(){return P.current.useId()},n.useImperativeHandle=function(e,n,t){return P.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return P.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return P.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return P.current.useMemo(e,n)},n.useReducer=function(e,n,t){return P.current.useReducer(e,n,t)},n.useRef=function(e){return P.current.useRef(e)},n.useState=function(e){return P.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return P.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return P.current.useTransition()},n.version="18.2.0"},791:function(e,n,t){"use strict";e.exports=t(117)},184:function(e,n,t){"use strict";e.exports=t(374)},813:function(e,n){"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,o=e[r];if(!(0<a(o,n)))break e;e[r]=n,e[t]=o,t=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length,i=o>>>1;r<i;){var v=2*(r+1)-1,s=e[v],c=v+1,l=e[c];if(0>a(s,t))c<o&&0>a(l,s)?(e[r]=l,e[c]=t,r=c):(e[r]=s,e[v]=t,r=v);else{if(!(c<o&&0>a(l,t)))break e;e[r]=l,e[c]=t,r=c}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var v=Date,s=v.now();n.unstable_now=function(){return v.now()-s}}var c=[],l=[],u=1,f=null,p=3,m=!1,d=!1,h=!1,x="function"===typeof setTimeout?setTimeout:null,g="function"===typeof clearTimeout?clearTimeout:null,y="undefined"!==typeof setImmediate?setImmediate:null;function _(e){for(var n=r(l);null!==n;){if(null===n.callback)o(l);else{if(!(n.startTime<=e))break;o(l),n.sortIndex=n.expirationTime,t(c,n)}n=r(l)}}function b(e){if(h=!1,_(e),!d)if(null!==r(c))d=!0,F(U);else{var n=r(l);null!==n&&D(b,n.startTime-e)}}function U(e,t){d=!1,h&&(h=!1,g(j),j=-1),m=!0;var a=p;try{for(_(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!T());){var i=f.callback;if("function"===typeof i){f.callback=null,p=f.priorityLevel;var v=i(f.expirationTime<=t);t=n.unstable_now(),"function"===typeof v?f.callback=v:f===r(c)&&o(c),_(t)}else o(c);f=r(c)}if(null!==f)var s=!0;else{var u=r(l);null!==u&&D(b,u.startTime-t),s=!1}return s}finally{f=null,p=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,S=!1,M=null,j=-1,k=5,C=-1;function T(){return!(n.unstable_now()-C<k)}function R(){if(null!==M){var e=n.unstable_now();C=e;var t=!0;try{t=M(!0,e)}finally{t?w():(S=!1,M=null)}}else S=!1}if("function"===typeof y)w=function(){y(R)};else if("undefined"!==typeof MessageChannel){var z=new MessageChannel,P=z.port2;z.port1.onmessage=R,w=function(){P.postMessage(null)}}else w=function(){x(R,0)};function F(e){M=e,S||(S=!0,w())}function D(e,t){j=x((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){d||m||(d=!0,F(U))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,o,a){var i=n.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var v=-1;break;case 2:v=250;break;case 5:v=1073741823;break;case 4:v=1e4;break;default:v=5e3}return e={id:u++,callback:o,priorityLevel:e,startTime:a,expirationTime:v=a+v,sortIndex:-1},a>i?(e.sortIndex=a,t(l,e),null===r(c)&&e===r(l)&&(h?(g(j),j=-1):h=!0,D(b,a-i))):(e.sortIndex=v,t(c,e),d||m||(d=!0,F(U))),e},n.unstable_shouldYield=T,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},296:function(e,n,t){"use strict";e.exports=t(813)}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={exports:{}};return e[r](a,a.exports,t),a.exports}t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,{a:n}),n},function(){var e,n=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};t.t=function(r,o){if(1&o&&(r=this(r)),8&o)return r;if("object"===typeof r&&r){if(4&o&&r.__esModule)return r;if(16&o&&"function"===typeof r.then)return r}var a=Object.create(null);t.r(a);var i={};e=e||[null,n({}),n([]),n(n)];for(var v=2&o&&r;"object"==typeof v&&!~e.indexOf(v);v=n(v))Object.getOwnPropertyNames(v).forEach((function(e){i[e]=function(){return r[e]}}));return i.default=function(){return r},t.d(a,i),a}}(),t.d=function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){"use strict";var e,n={};function r(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function o(e){if(Array.isArray(e))return e}function a(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function i(e,n){if(e){if("string"===typeof e)return a(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?a(e,n):void 0}}function v(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,n){return o(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a=[],i=!0,v=!1;try{for(t=t.call(e);!(i=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);i=!0);}catch(s){v=!0,o=s}finally{try{i||null==t.return||t.return()}finally{if(v)throw o}}return a}}(e,n)||i(e,n)||v()}function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function f(e,n){var t="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=i(e))||n&&e&&"number"===typeof e.length){t&&(e=t);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,v=!0,s=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return v=e.done,e},e:function(e){s=!0,a=e},f:function(){try{v||null==t.return||t.return()}finally{if(s)throw a}}}}function p(e,n){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},p(e,n)}function m(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function d(e,n,t){return d=m()?Reflect.construct.bind():function(e,n,t){var r=[null];r.push.apply(r,n);var o=new(Function.bind.apply(e,r));return t&&p(o,t.prototype),o},d.apply(null,arguments)}function h(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function x(e){return function(e){if(Array.isArray(e))return a(e)}(e)||h(e)||i(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e){return o(e)||h(e)||i(e)||v()}function y(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,n,t){return n&&_(e.prototype,n),t&&_(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function U(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&p(e,n)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function M(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function j(e,n){if(n&&("object"===S(n)||"function"===typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return M(e)}function k(e){var n=m();return function(){var t,r=w(e);if(n){var o=w(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return j(this,t)}}function C(e){var n="function"===typeof Map?new Map:void 0;return C=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof n){if(n.has(e))return n.get(e);n.set(e,r)}function r(){return d(e,arguments,w(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),p(r,e)},C(e)}function T(e,n,t,r,o,a,i){try{var v=e[a](i),s=v.value}catch(c){return void t(c)}v.done?n(s):Promise.resolve(s).then(r,o)}function R(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var a=e.apply(n,t);function i(e){T(a,r,o,i,v,"next",e)}function v(e){T(a,r,o,i,v,"throw",e)}i(void 0)}))}}function z(e,n){for(;!Object.prototype.hasOwnProperty.call(e,n)&&null!==(e=w(e)););return e}function P(){return P="undefined"!==typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,n,t){var r=z(e,n);if(r){var o=Object.getOwnPropertyDescriptor(r,n);return o.get?o.get.call(arguments.length<3?e:t):o.value}},P.apply(this,arguments)}function F(){F=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,r=Object.defineProperty||function(e,n,t){e[n]=t.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",v=o.toStringTag||"@@toStringTag";function s(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{s({},"")}catch(T){s=function(e,n,t){return e[n]=t}}function c(e,n,t,o){var a=n&&n.prototype instanceof f?n:f,i=Object.create(a.prototype),v=new j(o||[]);return r(i,"_invoke",{value:b(e,t,v)}),i}function l(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(T){return{type:"throw",arg:T}}}e.wrap=c;var u={};function f(){}function p(){}function m(){}var d={};s(d,a,(function(){return this}));var h=Object.getPrototypeOf,x=h&&h(h(k([])));x&&x!==n&&t.call(x,a)&&(d=x);var g=m.prototype=f.prototype=Object.create(d);function y(e){["next","throw","return"].forEach((function(n){s(e,n,(function(e){return this._invoke(n,e)}))}))}function _(e,n){function o(r,a,i,v){var s=l(e[r],e,a);if("throw"!==s.type){var c=s.arg,u=c.value;return u&&"object"==S(u)&&t.call(u,"__await")?n.resolve(u.__await).then((function(e){o("next",e,i,v)}),(function(e){o("throw",e,i,v)})):n.resolve(u).then((function(e){c.value=e,i(c)}),(function(e){return o("throw",e,i,v)}))}v(s.arg)}var a;r(this,"_invoke",{value:function(e,t){function r(){return new n((function(n,r){o(e,t,n,r)}))}return a=a?a.then(r,r):r()}})}function b(e,n,t){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return C()}for(t.method=o,t.arg=a;;){var i=t.delegate;if(i){var v=U(i,t);if(v){if(v===u)continue;return v}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var s=l(e,n,t);if("normal"===s.type){if(r=t.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(r="completed",t.method="throw",t.arg=s.arg)}}}function U(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,U(e,n),"throw"===n.method))return u;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=l(t,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,u;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,u):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,u)}function w(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function M(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function k(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function n(){for(;++r<e.length;)if(t.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=void 0,n.done=!0,n};return o.next=o}}return{next:C}}function C(){return{value:void 0,done:!0}}return p.prototype=m,r(g,"constructor",{value:m,configurable:!0}),r(m,"constructor",{value:p,configurable:!0}),p.displayName=s(m,v,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===p||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,v,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},y(_.prototype),s(_.prototype,i,(function(){return this})),e.AsyncIterator=_,e.async=function(n,t,r,o,a){void 0===a&&(a=Promise);var i=new _(c(n,t,r,o),a);return e.isGeneratorFunction(t)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},y(g),s(g,v,"Generator"),s(g,a,(function(){return this})),s(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var r in n)t.push(r);return t.reverse(),function e(){for(;t.length;){var r=t.pop();if(r in n)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=k,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(M),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(t,r){return i.type="throw",i.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var v=t.call(a,"catchLoc"),s=t.call(a,"finallyLoc");if(v&&s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(v){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,n){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&t.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=n&&n<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=n,a?(this.method="next",this.next=a.finallyLoc,u):this.complete(i)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),u},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),M(t),u}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var o=r.arg;M(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:k(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}},e}t.r(n),t.d(n,{ACESFilmicToneMapping:function(){return ze},AddEquation:function(){return ee},AddOperation:function(){return je},AdditiveAnimationBlendMode:function(){return ot},AdditiveBlending:function(){return Q},AlphaFormat:function(){return ln},AlwaysDepth:function(){return xe},AlwaysStencilFunc:function(){return Pt},AmbientLight:function(){return jf},AmbientLightProbe:function(){return Gf},AnimationClip:function(){return Yu},AnimationLoader:function(){return of},AnimationMixer:function(){return yp},AnimationObjectGroup:function(){return hp},AnimationUtils:function(){return Eu},ArcCurve:function(){return Jc},ArrayCamera:function(){return js},ArrowHelper:function(){return lm},Audio:function(){return ep},AudioAnalyser:function(){return ip},AudioContext:function(){return Of},AudioListener:function(){return Kf},AudioLoader:function(){return Bf},AxesHelper:function(){return um},BackSide:function(){return H},BasicDepthPacking:function(){return lt},BasicShadowMap:function(){return N},Bone:function(){return mc},BooleanKeyframeTrack:function(){return Nu},Box2:function(){return zp},Box3:function(){return Br},Box3Helper:function(){return vm},BoxBufferGeometry:function(){return _m},BoxGeometry:function(){return Ba},BoxHelper:function(){return im},BufferAttribute:function(){return ta},BufferGeometry:function(){return _a},BufferGeometryLoader:function(){return Ff},ByteType:function(){return Ke},Cache:function(){return Ju},Camera:function(){return Wa},CameraHelper:function(){return nm},CanvasTexture:function(){return Yc},CapsuleBufferGeometry:function(){return bm},CapsuleGeometry:function(){return gl},CatmullRomCurve3:function(){return rl},CineonToneMapping:function(){return Re},CircleBufferGeometry:function(){return Um},CircleGeometry:function(){return yl},ClampToEdgeWrapping:function(){return Be},Clock:function(){return Xf},Color:function(){return wr},ColorKeyframeTrack:function(){return Gu},ColorManagement:function(){return dr},CompressedArrayTexture:function(){return Xc},CompressedTexture:function(){return Hc},CompressedTextureLoader:function(){return af},ConeBufferGeometry:function(){return wm},ConeGeometry:function(){return bl},CubeCamera:function(){return Ya},CubeReflectionMapping:function(){return De},CubeRefractionMapping:function(){return Ee},CubeTexture:function(){return Za},CubeTextureLoader:function(){return sf},CubeUVReflectionMapping:function(){return Ae},CubicBezierCurve:function(){return vl},CubicBezierCurve3:function(){return sl},CubicInterpolant:function(){return Lu},CullFaceBack:function(){return A},CullFaceFront:function(){return O},CullFaceFrontBack:function(){return B},CullFaceNone:function(){return L},Curve:function(){return Zc},CurvePath:function(){return dl},CustomBlending:function(){return K},CustomToneMapping:function(){return Pe},CylinderBufferGeometry:function(){return Sm},CylinderGeometry:function(){return _l},Cylindrical:function(){return Tp},Data3DTexture:function(){return Fr},DataArrayTexture:function(){return zr},DataTexture:function(){return dc},DataTexture2DArray:function(){return gm},DataTexture3D:function(){return ym},DataTextureLoader:function(){return cf},DataUtils:function(){return dm},DecrementStencilOp:function(){return bt},DecrementWrapStencilOp:function(){return wt},DefaultLoadingManager:function(){return Ku},DepthFormat:function(){return dn},DepthStencilFormat:function(){return hn},DepthTexture:function(){return Rs},DirectionalLight:function(){return Mf},DirectionalLightHelper:function(){return $p},DiscreteInterpolant:function(){return Ou},DodecahedronBufferGeometry:function(){return Mm},DodecahedronGeometry:function(){return wl},DoubleSide:function(){return X},DstAlphaFactor:function(){return ue},DstColorFactor:function(){return pe},DynamicCopyUsage:function(){return Bt},DynamicDrawUsage:function(){return Dt},DynamicReadUsage:function(){return Lt},EdgesGeometry:function(){return Cl},EllipseCurve:function(){return Qc},EqualDepth:function(){return _e},EqualStencilFunc:function(){return kt},EquirectangularReflectionMapping:function(){return Ie},EquirectangularRefractionMapping:function(){return Le},Euler:function(){return So},EventDispatcher:function(){return Wt},ExtrudeBufferGeometry:function(){return jm},ExtrudeGeometry:function(){return au},FileLoader:function(){return rf},Float16BufferAttribute:function(){return la},Float32BufferAttribute:function(){return ua},Float64BufferAttribute:function(){return fa},FloatType:function(){return on},Fog:function(){return Os},FogExp2:function(){return As},FramebufferTexture:function(){return Wc},FrontSide:function(){return W},Frustum:function(){return ri},GLBufferAttribute:function(){return Sp},GLSL1:function(){return Gt},GLSL3:function(){return Vt},GreaterDepth:function(){return Ue},GreaterEqualDepth:function(){return be},GreaterEqualStencilFunc:function(){return zt},GreaterStencilFunc:function(){return Tt},GridHelper:function(){return Xp},Group:function(){return ks},HalfFloatType:function(){return an},HemisphereLight:function(){return ff},HemisphereLightHelper:function(){return Hp},HemisphereLightProbe:function(){return Nf},IcosahedronBufferGeometry:function(){return km},IcosahedronGeometry:function(){return vu},ImageBitmapLoader:function(){return Af},ImageLoader:function(){return vf},ImageUtils:function(){return Sr},ImmediateRenderObject:function(){return hm},IncrementStencilOp:function(){return _t},IncrementWrapStencilOp:function(){return Ut},InstancedBufferAttribute:function(){return yc},InstancedBufferGeometry:function(){return Pf},InstancedInterleavedBuffer:function(){return wp},InstancedMesh:function(){return Mc},Int16BufferAttribute:function(){return ia},Int32BufferAttribute:function(){return sa},Int8BufferAttribute:function(){return ra},IntType:function(){return tn},InterleavedBuffer:function(){return Ns},InterleavedBufferAttribute:function(){return Vs},Interpolant:function(){return Iu},InterpolateDiscrete:function(){return Jn},InterpolateLinear:function(){return $n},InterpolateSmooth:function(){return Kn},InvertStencilOp:function(){return St},KeepStencilOp:function(){return gt},KeyframeTrack:function(){return Bu},LOD:function(){return vc},LatheBufferGeometry:function(){return Cm},LatheGeometry:function(){return xl},Layers:function(){return Mo},LessDepth:function(){return ge},LessEqualDepth:function(){return ye},LessEqualStencilFunc:function(){return Ct},LessStencilFunc:function(){return jt},Light:function(){return uf},LightProbe:function(){return Tf},Line:function(){return Pc},Line3:function(){return Dp},LineBasicMaterial:function(){return jc},LineCurve:function(){return cl},LineCurve3:function(){return ll},LineDashedMaterial:function(){return Cu},LineLoop:function(){return Ic},LineSegments:function(){return Ec},LinearEncoding:function(){return st},LinearFilter:function(){return Xe},LinearInterpolant:function(){return Au},LinearMipMapLinearFilter:function(){return Je},LinearMipMapNearestFilter:function(){return Ze},LinearMipmapLinearFilter:function(){return Qe},LinearMipmapNearestFilter:function(){return Ye},LinearSRGBColorSpace:function(){return ht},LinearToneMapping:function(){return Ce},Loader:function(){return ef},LoaderUtils:function(){return zf},LoadingManager:function(){return $u},LoopOnce:function(){return Yn},LoopPingPong:function(){return Qn},LoopRepeat:function(){return Zn},LuminanceAlphaFormat:function(){return mn},LuminanceFormat:function(){return pn},MOUSE:function(){return E},Material:function(){return $o},MaterialLoader:function(){return Rf},MathUtils:function(){return ar},Matrix3:function(){return vr},Matrix4:function(){return po},MaxEquation:function(){return oe},Mesh:function(){return Aa},MeshBasicMaterial:function(){return Ko},MeshDepthMaterial:function(){return _s},MeshDistanceMaterial:function(){return bs},MeshLambertMaterial:function(){return ju},MeshMatcapMaterial:function(){return ku},MeshNormalMaterial:function(){return Mu},MeshPhongMaterial:function(){return wu},MeshPhysicalMaterial:function(){return Uu},MeshStandardMaterial:function(){return bu},MeshToonMaterial:function(){return Su},MinEquation:function(){return re},MirroredRepeatWrapping:function(){return Ne},MixOperation:function(){return Me},MultiplyBlending:function(){return $},MultiplyOperation:function(){return Se},NearestFilter:function(){return Ge},NearestMipMapLinearFilter:function(){return He},NearestMipMapNearestFilter:function(){return qe},NearestMipmapLinearFilter:function(){return We},NearestMipmapNearestFilter:function(){return Ve},NeverDepth:function(){return he},NeverStencilFunc:function(){return Mt},NoBlending:function(){return Y},NoColorSpace:function(){return mt},NoToneMapping:function(){return ke},NormalAnimationBlendMode:function(){return rt},NormalBlending:function(){return Z},NotEqualDepth:function(){return we},NotEqualStencilFunc:function(){return Rt},NumberKeyframeTrack:function(){return Vu},Object3D:function(){return Oo},ObjectLoader:function(){return Df},ObjectSpaceNormalMap:function(){return pt},OctahedronBufferGeometry:function(){return Tm},OctahedronGeometry:function(){return su},OneFactor:function(){return ie},OneMinusDstAlphaFactor:function(){return fe},OneMinusDstColorFactor:function(){return me},OneMinusSrcAlphaFactor:function(){return le},OneMinusSrcColorFactor:function(){return se},OrthographicCamera:function(){return hi},PCFShadowMap:function(){return G},PCFSoftShadowMap:function(){return V},PMREMGenerator:function(){return Mi},Path:function(){return hl},PerspectiveCamera:function(){return Ha},Plane:function(){return ei},PlaneBufferGeometry:function(){return Rm},PlaneGeometry:function(){return ii},PlaneHelper:function(){return sm},PointLight:function(){return wf},PointLightHelper:function(){return Gp},Points:function(){return Gc},PointsMaterial:function(){return Lc},PolarGridHelper:function(){return Yp},PolyhedronBufferGeometry:function(){return zm},PolyhedronGeometry:function(){return Ul},PositionalAudio:function(){return ap},PropertyBinding:function(){return dp},PropertyMixer:function(){return vp},QuadraticBezierCurve:function(){return ul},QuadraticBezierCurve3:function(){return fl},Quaternion:function(){return Ir},QuaternionKeyframeTrack:function(){return Wu},QuaternionLinearInterpolant:function(){return qu},REVISION:function(){return D},RGBADepthPacking:function(){return ut},RGBAFormat:function(){return fn},RGBAIntegerFormat:function(){return bn},RGBA_ASTC_10x10_Format:function(){return qn},RGBA_ASTC_10x5_Format:function(){return Nn},RGBA_ASTC_10x6_Format:function(){return Gn},RGBA_ASTC_10x8_Format:function(){return Vn},RGBA_ASTC_12x10_Format:function(){return Wn},RGBA_ASTC_12x12_Format:function(){return Hn},RGBA_ASTC_4x4_Format:function(){return Fn},RGBA_ASTC_5x4_Format:function(){return Dn},RGBA_ASTC_5x5_Format:function(){return En},RGBA_ASTC_6x5_Format:function(){return In},RGBA_ASTC_6x6_Format:function(){return Ln},RGBA_ASTC_8x5_Format:function(){return An},RGBA_ASTC_8x6_Format:function(){return On},RGBA_ASTC_8x8_Format:function(){return Bn},RGBA_BPTC_Format:function(){return Xn},RGBA_ETC2_EAC_Format:function(){return Pn},RGBA_PVRTC_2BPPV1_Format:function(){return Tn},RGBA_PVRTC_4BPPV1_Format:function(){return Cn},RGBA_S3TC_DXT1_Format:function(){return wn},RGBA_S3TC_DXT3_Format:function(){return Sn},RGBA_S3TC_DXT5_Format:function(){return Mn},RGBFormat:function(){return un},RGB_ETC1_Format:function(){return Rn},RGB_ETC2_Format:function(){return zn},RGB_PVRTC_2BPPV1_Format:function(){return kn},RGB_PVRTC_4BPPV1_Format:function(){return jn},RGB_S3TC_DXT1_Format:function(){return Un},RGFormat:function(){return yn},RGIntegerFormat:function(){return _n},RawShaderMaterial:function(){return _u},Ray:function(){return fo},Raycaster:function(){return Mp},RectAreaLight:function(){return kf},RedFormat:function(){return xn},RedIntegerFormat:function(){return gn},ReinhardToneMapping:function(){return Te},RepeatWrapping:function(){return Oe},ReplaceStencilOp:function(){return yt},ReverseSubtractEquation:function(){return te},RingBufferGeometry:function(){return Pm},RingGeometry:function(){return cu},SRGBColorSpace:function(){return dt},Scene:function(){return Bs},ShaderChunk:function(){return vi},ShaderLib:function(){return ci},ShaderMaterial:function(){return qa},ShadowMaterial:function(){return yu},Shape:function(){return Tl},ShapeBufferGeometry:function(){return Fm},ShapeGeometry:function(){return lu},ShapePath:function(){return fm},ShapeUtils:function(){return tu},ShortType:function(){return en},Skeleton:function(){return gc},SkeletonHelper:function(){return Bp},SkinnedMesh:function(){return pc},Source:function(){return Mr},Sphere:function(){return oo},SphereBufferGeometry:function(){return Dm},SphereGeometry:function(){return uu},Spherical:function(){return Cp},SphericalHarmonics3:function(){return Cf},SplineCurve:function(){return pl},SpotLight:function(){return gf},SpotLightHelper:function(){return Ip},Sprite:function(){return rc},SpriteMaterial:function(){return qs},SrcAlphaFactor:function(){return ce},SrcAlphaSaturateFactor:function(){return de},SrcColorFactor:function(){return ve},StaticCopyUsage:function(){return Ot},StaticDrawUsage:function(){return Ft},StaticReadUsage:function(){return It},StereoCamera:function(){return Hf},StreamCopyUsage:function(){return Nt},StreamDrawUsage:function(){return Et},StreamReadUsage:function(){return At},StringKeyframeTrack:function(){return Hu},SubtractEquation:function(){return ne},SubtractiveBlending:function(){return J},TOUCH:function(){return I},TangentSpaceNormalMap:function(){return ft},TetrahedronBufferGeometry:function(){return Em},TetrahedronGeometry:function(){return fu},Texture:function(){return Cr},TextureLoader:function(){return lf},TorusBufferGeometry:function(){return Im},TorusGeometry:function(){return pu},TorusKnotBufferGeometry:function(){return Lm},TorusKnotGeometry:function(){return mu},Triangle:function(){return Qo},TriangleFanDrawMode:function(){return vt},TriangleStripDrawMode:function(){return it},TrianglesDrawMode:function(){return at},TubeBufferGeometry:function(){return Am},TubeGeometry:function(){return du},UVMapping:function(){return Fe},Uint16BufferAttribute:function(){return va},Uint32BufferAttribute:function(){return ca},Uint8BufferAttribute:function(){return oa},Uint8ClampedBufferAttribute:function(){return aa},Uniform:function(){return _p},UniformsGroup:function(){return Up},UniformsLib:function(){return si},UniformsUtils:function(){return Va},UnsignedByteType:function(){return $e},UnsignedInt248Type:function(){return cn},UnsignedIntType:function(){return rn},UnsignedShort4444Type:function(){return vn},UnsignedShort5551Type:function(){return sn},UnsignedShortType:function(){return nn},VSMShadowMap:function(){return q},Vector2:function(){return ir},Vector3:function(){return Lr},Vector4:function(){return Tr},VectorKeyframeTrack:function(){return Xu},VideoTexture:function(){return qc},WebGL1Renderer:function(){return Is},WebGL3DRenderTarget:function(){return Dr},WebGLArrayRenderTarget:function(){return Pr},WebGLCubeRenderTarget:function(){return Qa},WebGLMultipleRenderTargets:function(){return Er},WebGLMultisampleRenderTarget:function(){return xm},WebGLRenderTarget:function(){return Rr},WebGLRenderer:function(){return Es},WebGLUtils:function(){return Ms},WireframeGeometry:function(){return hu},WrapAroundEnding:function(){return tt},ZeroCurvatureEnding:function(){return et},ZeroFactor:function(){return ae},ZeroSlopeEnding:function(){return nt},ZeroStencilOp:function(){return xt},_SRGBAFormat:function(){return qt},sRGBEncoding:function(){return ct}});var D="146",E={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},I={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},L=0,A=1,O=2,B=3,N=0,G=1,V=2,q=3,W=0,H=1,X=2,Y=0,Z=1,Q=2,J=3,$=4,K=5,ee=100,ne=101,te=102,re=103,oe=104,ae=200,ie=201,ve=202,se=203,ce=204,le=205,ue=206,fe=207,pe=208,me=209,de=210,he=0,xe=1,ge=2,ye=3,_e=4,be=5,Ue=6,we=7,Se=0,Me=1,je=2,ke=0,Ce=1,Te=2,Re=3,ze=4,Pe=5,Fe=300,De=301,Ee=302,Ie=303,Le=304,Ae=306,Oe=1e3,Be=1001,Ne=1002,Ge=1003,Ve=1004,qe=1004,We=1005,He=1005,Xe=1006,Ye=1007,Ze=1007,Qe=1008,Je=1008,$e=1009,Ke=1010,en=1011,nn=1012,tn=1013,rn=1014,on=1015,an=1016,vn=1017,sn=1018,cn=1020,ln=1021,un=1022,fn=1023,pn=1024,mn=1025,dn=1026,hn=1027,xn=1028,gn=1029,yn=1030,_n=1031,bn=1033,Un=33776,wn=33777,Sn=33778,Mn=33779,jn=35840,kn=35841,Cn=35842,Tn=35843,Rn=36196,zn=37492,Pn=37496,Fn=37808,Dn=37809,En=37810,In=37811,Ln=37812,An=37813,On=37814,Bn=37815,Nn=37816,Gn=37817,Vn=37818,qn=37819,Wn=37820,Hn=37821,Xn=36492,Yn=2200,Zn=2201,Qn=2202,Jn=2300,$n=2301,Kn=2302,et=2400,nt=2401,tt=2402,rt=2500,ot=2501,at=0,it=1,vt=2,st=3e3,ct=3001,lt=3200,ut=3201,ft=0,pt=1,mt="",dt="srgb",ht="srgb-linear",xt=0,gt=7680,yt=7681,_t=7682,bt=7683,Ut=34055,wt=34056,St=5386,Mt=512,jt=513,kt=514,Ct=515,Tt=516,Rt=517,zt=518,Pt=519,Ft=35044,Dt=35048,Et=35040,It=35045,Lt=35049,At=35041,Ot=35046,Bt=35050,Nt=35042,Gt="100",Vt="300 es",qt=1035,Wt=function(){function e(){y(this,e)}return b(e,[{key:"addEventListener",value:function(e,n){void 0===this._listeners&&(this._listeners={});var t=this._listeners;void 0===t[e]&&(t[e]=[]),-1===t[e].indexOf(n)&&t[e].push(n)}},{key:"hasEventListener",value:function(e,n){if(void 0===this._listeners)return!1;var t=this._listeners;return void 0!==t[e]&&-1!==t[e].indexOf(n)}},{key:"removeEventListener",value:function(e,n){if(void 0!==this._listeners){var t=this._listeners[e];if(void 0!==t){var r=t.indexOf(n);-1!==r&&t.splice(r,1)}}}},{key:"dispatchEvent",value:function(e){if(void 0!==this._listeners){var n=this._listeners[e.type];if(void 0!==n){e.target=this;for(var t=n.slice(0),r=0,o=t.length;r<o;r++)t[r].call(this,e);e.target=null}}}}]),e}(),Ht=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Xt=1234567,Yt=Math.PI/180,Zt=180/Math.PI;function Qt(){var e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Ht[255&e]+Ht[e>>8&255]+Ht[e>>16&255]+Ht[e>>24&255]+"-"+Ht[255&n]+Ht[n>>8&255]+"-"+Ht[n>>16&15|64]+Ht[n>>24&255]+"-"+Ht[63&t|128]+Ht[t>>8&255]+"-"+Ht[t>>16&255]+Ht[t>>24&255]+Ht[255&r]+Ht[r>>8&255]+Ht[r>>16&255]+Ht[r>>24&255]).toLowerCase()}function Jt(e,n,t){return Math.max(n,Math.min(t,e))}function $t(e,n){return(e%n+n)%n}function Kt(e,n,t){return(1-t)*e+t*n}function er(e){return 0===(e&e-1)&&0!==e}function nr(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function tr(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function rr(e,n){switch(n.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function or(e,n){switch(n.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var ar=Object.freeze({__proto__:null,DEG2RAD:Yt,RAD2DEG:Zt,generateUUID:Qt,clamp:Jt,euclideanModulo:$t,mapLinear:function(e,n,t,r,o){return r+(e-n)*(o-r)/(t-n)},inverseLerp:function(e,n,t){return e!==n?(t-e)/(n-e):0},lerp:Kt,damp:function(e,n,t,r){return Kt(e,n,1-Math.exp(-t*r))},pingpong:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return n-Math.abs($t(e,2*n)-n)},smoothstep:function(e,n,t){return e<=n?0:e>=t?1:(e=(e-n)/(t-n))*e*(3-2*e)},smootherstep:function(e,n,t){return e<=n?0:e>=t?1:(e=(e-n)/(t-n))*e*e*(e*(6*e-15)+10)},randInt:function(e,n){return e+Math.floor(Math.random()*(n-e+1))},randFloat:function(e,n){return e+Math.random()*(n-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(Xt=e);var n=Xt+=1831565813;return n=Math.imul(n^n>>>15,1|n),(((n^=n+Math.imul(n^n>>>7,61|n))^n>>>14)>>>0)/4294967296},degToRad:function(e){return e*Yt},radToDeg:function(e){return e*Zt},isPowerOfTwo:er,ceilPowerOfTwo:nr,floorPowerOfTwo:tr,setQuaternionFromProperEuler:function(e,n,t,r,o){var a=Math.cos,i=Math.sin,v=a(t/2),s=i(t/2),c=a((n+r)/2),l=i((n+r)/2),u=a((n-r)/2),f=i((n-r)/2),p=a((r-n)/2),m=i((r-n)/2);switch(o){case"XYX":e.set(v*l,s*u,s*f,v*c);break;case"YZY":e.set(s*f,v*l,s*u,v*c);break;case"ZXZ":e.set(s*u,s*f,v*l,v*c);break;case"XZX":e.set(v*l,s*m,s*p,v*c);break;case"YXY":e.set(s*p,v*l,s*m,v*c);break;case"ZYZ":e.set(s*m,s*p,v*l,v*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+o)}},normalize:or,denormalize:rr}),ir=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,n),n.prototype.isVector2=!0,this.x=e,this.y=t}return b(n,[{key:"width",get:function(){return this.x},set:function(e){this.x=e}},{key:"height",get:function(){return this.y},set:function(e){this.y=e}},{key:"set",value:function(e,n){return this.x=e,this.y=n,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setComponent",value:function(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}},{key:"addScaledVector",value:function(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"applyMatrix3",value:function(e){var n=this.x,t=this.y,r=e.elements;return this.x=r[0]*n+r[3]*t+r[6],this.y=r[1]*n+r[4]*t+r[7],this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}},{key:"clamp",value:function(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}},{key:"clampScalar",value:function(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}},{key:"clampLength",value:function(e,n){var t=this.length();return this.divideScalar(t||1).multiplyScalar(Math.max(e,Math.min(n,t)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"angle",value:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var n=this.x-e.x,t=this.y-e.y;return n*n+t*t}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}},{key:"lerpVectors",value:function(e,n,t){return this.x=e.x+(n.x-e.x)*t,this.y=e.y+(n.y-e.y)*t,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[n],this.y=e[n+1],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.x,e[n+1]=this.y,e}},{key:"fromBufferAttribute",value:function(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}},{key:"rotateAround",value:function(e,n){var t=Math.cos(n),r=Math.sin(n),o=this.x-e.x,a=this.y-e.y;return this.x=o*t-a*r+e.x,this.y=o*r+a*t+e.y,this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this}},{key:Symbol.iterator,value:F().mark((function e(){return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:case"end":return e.stop()}}),e,this)}))}]),n}(),vr=function(){function e(){y(this,e),e.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}return b(e,[{key:"set",value:function(e,n,t,r,o,a,i,v,s){var c=this.elements;return c[0]=e,c[1]=r,c[2]=i,c[3]=n,c[4]=o,c[5]=v,c[6]=t,c[7]=a,c[8]=s,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var n=this.elements,t=e.elements;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],this}},{key:"extractBasis",value:function(e,n,t){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),t.setFromMatrix3Column(this,2),this}},{key:"setFromMatrix4",value:function(e){var n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,n){var t=e.elements,r=n.elements,o=this.elements,a=t[0],i=t[3],v=t[6],s=t[1],c=t[4],l=t[7],u=t[2],f=t[5],p=t[8],m=r[0],d=r[3],h=r[6],x=r[1],g=r[4],y=r[7],_=r[2],b=r[5],U=r[8];return o[0]=a*m+i*x+v*_,o[3]=a*d+i*g+v*b,o[6]=a*h+i*y+v*U,o[1]=s*m+c*x+l*_,o[4]=s*d+c*g+l*b,o[7]=s*h+c*y+l*U,o[2]=u*m+f*x+p*_,o[5]=u*d+f*g+p*b,o[8]=u*h+f*y+p*U,this}},{key:"multiplyScalar",value:function(e){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}},{key:"determinant",value:function(){var e=this.elements,n=e[0],t=e[1],r=e[2],o=e[3],a=e[4],i=e[5],v=e[6],s=e[7],c=e[8];return n*a*c-n*i*s-t*o*c+t*i*v+r*o*s-r*a*v}},{key:"invert",value:function(){var e=this.elements,n=e[0],t=e[1],r=e[2],o=e[3],a=e[4],i=e[5],v=e[6],s=e[7],c=e[8],l=c*a-i*s,u=i*v-c*o,f=s*o-a*v,p=n*l+t*u+r*f;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);var m=1/p;return e[0]=l*m,e[1]=(r*s-c*t)*m,e[2]=(i*t-r*a)*m,e[3]=u*m,e[4]=(c*n-r*v)*m,e[5]=(r*o-i*n)*m,e[6]=f*m,e[7]=(t*v-s*n)*m,e[8]=(a*n-t*o)*m,this}},{key:"transpose",value:function(){var e,n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}},{key:"getNormalMatrix",value:function(e){return this.setFromMatrix4(e).invert().transpose()}},{key:"transposeIntoArray",value:function(e){var n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}},{key:"setUvTransform",value:function(e,n,t,r,o,a,i){var v=Math.cos(o),s=Math.sin(o);return this.set(t*v,t*s,-t*(v*a+s*i)+a+e,-r*s,r*v,-r*(-s*a+v*i)+i+n,0,0,1),this}},{key:"scale",value:function(e,n){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=n,t[4]*=n,t[7]*=n,this}},{key:"rotate",value:function(e){var n=Math.cos(e),t=Math.sin(e),r=this.elements,o=r[0],a=r[3],i=r[6],v=r[1],s=r[4],c=r[7];return r[0]=n*o+t*v,r[3]=n*a+t*s,r[6]=n*i+t*c,r[1]=-t*o+n*v,r[4]=-t*a+n*s,r[7]=-t*i+n*c,this}},{key:"translate",value:function(e,n){var t=this.elements;return t[0]+=e*t[2],t[3]+=e*t[5],t[6]+=e*t[8],t[1]+=n*t[2],t[4]+=n*t[5],t[7]+=n*t[8],this}},{key:"equals",value:function(e){for(var n=this.elements,t=e.elements,r=0;r<9;r++)if(n[r]!==t[r])return!1;return!0}},{key:"fromArray",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=0;t<9;t++)this.elements[t]=e[t+n];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.elements;return e[n]=t[0],e[n+1]=t[1],e[n+2]=t[2],e[n+3]=t[3],e[n+4]=t[4],e[n+5]=t[5],e[n+6]=t[6],e[n+7]=t[7],e[n+8]=t[8],e}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}}]),e}();function sr(e){for(var n=e.length-1;n>=0;--n)if(e[n]>=65535)return!0;return!1}var cr={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function lr(e,n){return new cr[e](n)}function ur(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function fr(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function pr(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}var mr=(c(e={},dt,c({},ht,fr)),c(e,ht,c({},dt,pr)),e),dr={legacyMode:!0,get workingColorSpace(){return ht},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,n,t){if(this.legacyMode||n===t||!n||!t)return e;if(mr[n]&&void 0!==mr[n][t]){var r=mr[n][t];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,n){return this.convert(e,this.workingColorSpace,n)},toWorkingColorSpace:function(e,n){return this.convert(e,n,this.workingColorSpace)}},hr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},xr={r:0,g:0,b:0},gr={h:0,s:0,l:0},yr={h:0,s:0,l:0};function _r(e,n,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?e+6*(n-e)*t:t<.5?n:t<2/3?e+6*(n-e)*(2/3-t):e}function br(e,n){return n.r=e.r,n.g=e.g,n.b=e.b,n}var Ur,wr=function(e){function n(e,t,r){return y(this,n),this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}return b(n,[{key:"set",value:function(e){return e&&e.isColor?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e),this}},{key:"setScalar",value:function(e){return this.r=e,this.g=e,this.b=e,this}},{key:"setHex",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dt;return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,dr.toWorkingColorSpace(this,n),this}},{key:"setRGB",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ht;return this.r=e,this.g=n,this.b=t,dr.toWorkingColorSpace(this,r),this}},{key:"setHSL",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ht;if(e=$t(e,1),n=Jt(n,0,1),t=Jt(t,0,1),0===n)this.r=this.g=this.b=t;else{var o=t<=.5?t*(1+n):t+n-t*n,a=2*t-o;this.r=_r(a,o,e+1/3),this.g=_r(a,o,e),this.b=_r(a,o,e-1/3)}return dr.toWorkingColorSpace(this,r),this}},{key:"setStyle",value:function(e){var n,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dt;function r(n){void 0!==n&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var o,a=n[1],i=n[2];switch(a){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(o[1],10))/255,this.g=Math.min(255,parseInt(o[2],10))/255,this.b=Math.min(255,parseInt(o[3],10))/255,dr.toWorkingColorSpace(this,t),r(o[4]),this;if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(o[1],10))/100,this.g=Math.min(100,parseInt(o[2],10))/100,this.b=Math.min(100,parseInt(o[3],10))/100,dr.toWorkingColorSpace(this,t),r(o[4]),this;break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){var v=parseFloat(o[1])/360,s=parseFloat(o[2])/100,c=parseFloat(o[3])/100;return r(o[4]),this.setHSL(v,s,c,t)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){var l=n[1],u=l.length;if(3===u)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,dr.toWorkingColorSpace(this,t),this;if(6===u)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,dr.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}},{key:"setColorName",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dt,t=hr[e.toLowerCase()];return void 0!==t?this.setHex(t,n):console.warn("THREE.Color: Unknown color "+e),this}},{key:"clone",value:function(){return new this.constructor(this.r,this.g,this.b)}},{key:"copy",value:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}},{key:"copySRGBToLinear",value:function(e){return this.r=fr(e.r),this.g=fr(e.g),this.b=fr(e.b),this}},{key:"copyLinearToSRGB",value:function(e){return this.r=pr(e.r),this.g=pr(e.g),this.b=pr(e.b),this}},{key:"convertSRGBToLinear",value:function(){return this.copySRGBToLinear(this),this}},{key:"convertLinearToSRGB",value:function(){return this.copyLinearToSRGB(this),this}},{key:"getHex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:dt;return dr.fromWorkingColorSpace(br(this,xr),e),Jt(255*xr.r,0,255)<<16^Jt(255*xr.g,0,255)<<8^Jt(255*xr.b,0,255)<<0}},{key:"getHexString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:dt;return("000000"+this.getHex(e).toString(16)).slice(-6)}},{key:"getHSL",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ht;dr.fromWorkingColorSpace(br(this,xr),n);var t,r,o=xr.r,a=xr.g,i=xr.b,v=Math.max(o,a,i),s=Math.min(o,a,i),c=(s+v)/2;if(s===v)t=0,r=0;else{var l=v-s;switch(r=c<=.5?l/(v+s):l/(2-v-s),v){case o:t=(a-i)/l+(a<i?6:0);break;case a:t=(i-o)/l+2;break;case i:t=(o-a)/l+4}t/=6}return e.h=t,e.s=r,e.l=c,e}},{key:"getRGB",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ht;return dr.fromWorkingColorSpace(br(this,xr),n),e.r=xr.r,e.g=xr.g,e.b=xr.b,e}},{key:"getStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:dt;return dr.fromWorkingColorSpace(br(this,xr),e),e!==dt?"color(".concat(e," ").concat(xr.r," ").concat(xr.g," ").concat(xr.b,")"):"rgb(".concat(255*xr.r|0,",").concat(255*xr.g|0,",").concat(255*xr.b|0,")")}},{key:"offsetHSL",value:function(e,n,t){return this.getHSL(gr),gr.h+=e,gr.s+=n,gr.l+=t,this.setHSL(gr.h,gr.s,gr.l),this}},{key:"add",value:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}},{key:"addColors",value:function(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}},{key:"addScalar",value:function(e){return this.r+=e,this.g+=e,this.b+=e,this}},{key:"sub",value:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}},{key:"multiply",value:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}},{key:"multiplyScalar",value:function(e){return this.r*=e,this.g*=e,this.b*=e,this}},{key:"lerp",value:function(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}},{key:"lerpColors",value:function(e,n,t){return this.r=e.r+(n.r-e.r)*t,this.g=e.g+(n.g-e.g)*t,this.b=e.b+(n.b-e.b)*t,this}},{key:"lerpHSL",value:function(e,n){this.getHSL(gr),e.getHSL(yr);var t=Kt(gr.h,yr.h,n),r=Kt(gr.s,yr.s,n),o=Kt(gr.l,yr.l,n);return this.setHSL(t,r,o),this}},{key:"equals",value:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}},{key:"fromBufferAttribute",value:function(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}},{key:"toJSON",value:function(){return this.getHex()}},{key:Symbol.iterator,value:F().mark((function e(){return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.r;case 2:return e.next=4,this.g;case 4:return e.next=6,this.b;case 6:case"end":return e.stop()}}),e,this)}))}]),n}();wr.NAMES=hr;var Sr=function(){function e(){y(this,e)}return b(e,null,[{key:"getDataURL",value:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;var n;if(e instanceof HTMLCanvasElement)n=e;else{void 0===Ur&&(Ur=ur("canvas")),Ur.width=e.width,Ur.height=e.height;var t=Ur.getContext("2d");e instanceof ImageData?t.putImageData(e,0,0):t.drawImage(e,0,0,e.width,e.height),n=Ur}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}},{key:"sRGBToLinear",value:function(e){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var n=ur("canvas");n.width=e.width,n.height=e.height;var t=n.getContext("2d");t.drawImage(e,0,0,e.width,e.height);for(var r=t.getImageData(0,0,e.width,e.height),o=r.data,a=0;a<o.length;a++)o[a]=255*fr(o[a]/255);return t.putImageData(r,0,0),n}if(e.data){for(var i=e.data.slice(0),v=0;v<i.length;v++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[v]=Math.floor(255*fr(i[v]/255)):i[v]=fr(i[v]);return{data:i,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}]),e}(),Mr=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;y(this,e),this.isSource=!0,this.uuid=Qt(),this.data=n,this.version=0}return b(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e;if(!n&&void 0!==e.images[this.uuid])return e.images[this.uuid];var t={uuid:this.uuid,url:""},r=this.data;if(null!==r){var o;if(Array.isArray(r)){o=[];for(var a=0,i=r.length;a<i;a++)r[a].isDataTexture?o.push(jr(r[a].image)):o.push(jr(r[a]))}else o=jr(r);t.url=o}return n||(e.images[this.uuid]=t),t}}]),e}();function jr(e){return"undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap?Sr.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var kr=0,Cr=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.DEFAULT_IMAGE,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.DEFAULT_MAPPING,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Be,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Be,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xe,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:Qe,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:fn,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:$e,u=arguments.length>8&&void 0!==arguments[8]?arguments[8]:1,f=arguments.length>9&&void 0!==arguments[9]?arguments[9]:st;return y(this,t),(e=n.call(this)).isTexture=!0,Object.defineProperty(M(e),"id",{value:kr++}),e.uuid=Qt(),e.name="",e.source=new Mr(r),e.mipmaps=[],e.mapping=o,e.wrapS=a,e.wrapT=i,e.magFilter=v,e.minFilter=s,e.anisotropy=u,e.format=c,e.internalFormat=null,e.type=l,e.offset=new ir(0,0),e.repeat=new ir(1,1),e.center=new ir(0,0),e.rotation=0,e.matrixAutoUpdate=!0,e.matrix=new vr,e.generateMipmaps=!0,e.premultiplyAlpha=!1,e.flipY=!0,e.unpackAlignment=4,e.encoding=f,e.userData={},e.version=0,e.onUpdate=null,e.isRenderTargetTexture=!1,e.needsPMREMUpdate=!1,e}return b(t,[{key:"image",get:function(){return this.source.data},set:function(e){this.source.data=e}},{key:"updateMatrix",value:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e;if(!n&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),n||(e.textures[this.uuid]=t),t}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"transformUv",value:function(e){if(this.mapping!==Fe)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Oe:e.x=e.x-Math.floor(e.x);break;case Be:e.x=e.x<0?0:1;break;case Ne:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case Oe:e.y=e.y-Math.floor(e.y);break;case Be:e.y=e.y<0?0:1;break;case Ne:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}},{key:"needsUpdate",set:function(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}]),t}(Wt);Cr.DEFAULT_IMAGE=null,Cr.DEFAULT_MAPPING=Fe;var Tr=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;y(this,n),n.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=o}return b(n,[{key:"width",get:function(){return this.z},set:function(e){this.z=e}},{key:"height",get:function(){return this.w},set:function(e){this.w=e}},{key:"set",value:function(e,n,t,r){return this.x=e,this.y=n,this.z=t,this.w=r,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setW",value:function(e){return this.w=e,this}},{key:"setComponent",value:function(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}},{key:"addScaledVector",value:function(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"applyMatrix4",value:function(e){var n=this.x,t=this.y,r=this.z,o=this.w,a=e.elements;return this.x=a[0]*n+a[4]*t+a[8]*r+a[12]*o,this.y=a[1]*n+a[5]*t+a[9]*r+a[13]*o,this.z=a[2]*n+a[6]*t+a[10]*r+a[14]*o,this.w=a[3]*n+a[7]*t+a[11]*r+a[15]*o,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*Math.acos(e.w);var n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var n,t,r,o,a=.01,i=.1,v=e.elements,s=v[0],c=v[4],l=v[8],u=v[1],f=v[5],p=v[9],m=v[2],d=v[6],h=v[10];if(Math.abs(c-u)<a&&Math.abs(l-m)<a&&Math.abs(p-d)<a){if(Math.abs(c+u)<i&&Math.abs(l+m)<i&&Math.abs(p+d)<i&&Math.abs(s+f+h-3)<i)return this.set(1,0,0,0),this;n=Math.PI;var x=(s+1)/2,g=(f+1)/2,y=(h+1)/2,_=(c+u)/4,b=(l+m)/4,U=(p+d)/4;return x>g&&x>y?x<a?(t=0,r=.707106781,o=.707106781):(r=_/(t=Math.sqrt(x)),o=b/t):g>y?g<a?(t=.707106781,r=0,o=.707106781):(t=_/(r=Math.sqrt(g)),o=U/r):y<a?(t=.707106781,r=.707106781,o=0):(t=b/(o=Math.sqrt(y)),r=U/o),this.set(t,r,o,n),this}var w=Math.sqrt((d-p)*(d-p)+(l-m)*(l-m)+(u-c)*(u-c));return Math.abs(w)<.001&&(w=1),this.x=(d-p)/w,this.y=(l-m)/w,this.z=(u-c)/w,this.w=Math.acos((s+f+h-1)/2),this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}},{key:"clamp",value:function(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}},{key:"clampScalar",value:function(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}},{key:"clampLength",value:function(e,n){var t=this.length();return this.divideScalar(t||1).multiplyScalar(Math.max(e,Math.min(n,t)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}},{key:"lerpVectors",value:function(e,n,t){return this.x=e.x+(n.x-e.x)*t,this.y=e.y+(n.y-e.y)*t,this.z=e.z+(n.z-e.z)*t,this.w=e.w+(n.w-e.w)*t,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}},{key:"fromBufferAttribute",value:function(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}},{key:Symbol.iterator,value:F().mark((function e(){return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:return e.next=8,this.w;case 8:case"end":return e.stop()}}),e,this)}))}]),n}(),Rr=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};y(this,t),(e=n.call(this)).isWebGLRenderTarget=!0,e.width=r,e.height=o,e.depth=1,e.scissor=new Tr(0,0,r,o),e.scissorTest=!1,e.viewport=new Tr(0,0,r,o);var i={width:r,height:o,depth:1};return e.texture=new Cr(i,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),e.texture.isRenderTargetTexture=!0,e.texture.flipY=!1,e.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,e.texture.internalFormat=void 0!==a.internalFormat?a.internalFormat:null,e.texture.minFilter=void 0!==a.minFilter?a.minFilter:Xe,e.depthBuffer=void 0===a.depthBuffer||a.depthBuffer,e.stencilBuffer=void 0!==a.stencilBuffer&&a.stencilBuffer,e.depthTexture=void 0!==a.depthTexture?a.depthTexture:null,e.samples=void 0!==a.samples?a.samples:0,e}return b(t,[{key:"setSize",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.width===e&&this.height===n&&this.depth===t||(this.width=e,this.height=n,this.depth=t,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=t,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;var n=Object.assign({},e.texture.image);return this.texture.source=new Mr(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),t}(Wt),zr=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(e=n.call(this,null)).isDataArrayTexture=!0,e.image={data:r,width:o,height:a,depth:i},e.magFilter=Ge,e.minFilter=Ge,e.wrapR=Be,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return b(t)}(Cr),Pr=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return y(this,t),(e=n.call(this,r,o)).isWebGLArrayRenderTarget=!0,e.depth=a,e.texture=new zr(null,r,o,a),e.texture.isRenderTargetTexture=!0,e}return b(t)}(Rr),Fr=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(e=n.call(this,null)).isData3DTexture=!0,e.image={data:r,width:o,height:a,depth:i},e.magFilter=Ge,e.minFilter=Ge,e.wrapR=Be,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return b(t)}(Cr),Dr=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return y(this,t),(e=n.call(this,r,o)).isWebGL3DRenderTarget=!0,e.depth=a,e.texture=new Fr(null,r,o,a),e.texture.isRenderTargetTexture=!0,e}return b(t)}(Rr),Er=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};y(this,t),(e=n.call(this,r,o,i)).isWebGLMultipleRenderTargets=!0;var v=e.texture;e.texture=[];for(var s=0;s<a;s++)e.texture[s]=v.clone(),e.texture[s].isRenderTargetTexture=!0;return e}return b(t,[{key:"setSize",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(this.width!==e||this.height!==n||this.depth!==t){this.width=e,this.height=n,this.depth=t;for(var r=0,o=this.texture.length;r<o;r++)this.texture[r].image.width=e,this.texture[r].image.height=n,this.texture[r].image.depth=t;this.dispose()}return this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n),this}},{key:"copy",value:function(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(var n=0,t=e.texture.length;n<t;n++)this.texture[n]=e.texture[n].clone(),this.texture[n].isRenderTargetTexture=!0;return this}}]),t}(Rr),Ir=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;y(this,n),this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=o}return b(n,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"w",get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}},{key:"set",value:function(e,n,t,r){return this._x=e,this._y=n,this._z=t,this._w=r,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._w)}},{key:"copy",value:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}},{key:"setFromEuler",value:function(e,n){var t=e._x,r=e._y,o=e._z,a=e._order,i=Math.cos,v=Math.sin,s=i(t/2),c=i(r/2),l=i(o/2),u=v(t/2),f=v(r/2),p=v(o/2);switch(a){case"XYZ":this._x=u*c*l+s*f*p,this._y=s*f*l-u*c*p,this._z=s*c*p+u*f*l,this._w=s*c*l-u*f*p;break;case"YXZ":this._x=u*c*l+s*f*p,this._y=s*f*l-u*c*p,this._z=s*c*p-u*f*l,this._w=s*c*l+u*f*p;break;case"ZXY":this._x=u*c*l-s*f*p,this._y=s*f*l+u*c*p,this._z=s*c*p+u*f*l,this._w=s*c*l-u*f*p;break;case"ZYX":this._x=u*c*l-s*f*p,this._y=s*f*l+u*c*p,this._z=s*c*p-u*f*l,this._w=s*c*l+u*f*p;break;case"YZX":this._x=u*c*l+s*f*p,this._y=s*f*l+u*c*p,this._z=s*c*p-u*f*l,this._w=s*c*l-u*f*p;break;case"XZY":this._x=u*c*l-s*f*p,this._y=s*f*l-u*c*p,this._z=s*c*p+u*f*l,this._w=s*c*l+u*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==n&&this._onChangeCallback(),this}},{key:"setFromAxisAngle",value:function(e,n){var t=n/2,r=Math.sin(t);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(t),this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var n=e.elements,t=n[0],r=n[4],o=n[8],a=n[1],i=n[5],v=n[9],s=n[2],c=n[6],l=n[10],u=t+i+l;if(u>0){var f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(c-v)*f,this._y=(o-s)*f,this._z=(a-r)*f}else if(t>i&&t>l){var p=2*Math.sqrt(1+t-i-l);this._w=(c-v)/p,this._x=.25*p,this._y=(r+a)/p,this._z=(o+s)/p}else if(i>l){var m=2*Math.sqrt(1+i-t-l);this._w=(o-s)/m,this._x=(r+a)/m,this._y=.25*m,this._z=(v+c)/m}else{var d=2*Math.sqrt(1+l-t-i);this._w=(a-r)/d,this._x=(o+s)/d,this._y=(v+c)/d,this._z=.25*d}return this._onChangeCallback(),this}},{key:"setFromUnitVectors",value:function(e,n){var t=e.dot(n)+1;return t<Number.EPSILON?(t=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=t):(this._x=0,this._y=-e.z,this._z=e.y,this._w=t)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=t),this.normalize()}},{key:"angleTo",value:function(e){return 2*Math.acos(Math.abs(Jt(this.dot(e),-1,1)))}},{key:"rotateTowards",value:function(e,n){var t=this.angleTo(e);if(0===t)return this;var r=Math.min(1,n/t);return this.slerp(e,r),this}},{key:"identity",value:function(){return this.set(0,0,0,1)}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}},{key:"dot",value:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}},{key:"lengthSq",value:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}},{key:"length",value:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}},{key:"normalize",value:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}},{key:"multiply",value:function(e){return this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"multiplyQuaternions",value:function(e,n){var t=e._x,r=e._y,o=e._z,a=e._w,i=n._x,v=n._y,s=n._z,c=n._w;return this._x=t*c+a*i+r*s-o*v,this._y=r*c+a*v+o*i-t*s,this._z=o*c+a*s+t*v-r*i,this._w=a*c-t*i-r*v-o*s,this._onChangeCallback(),this}},{key:"slerp",value:function(e,n){if(0===n)return this;if(1===n)return this.copy(e);var t=this._x,r=this._y,o=this._z,a=this._w,i=a*e._w+t*e._x+r*e._y+o*e._z;if(i<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,i=-i):this.copy(e),i>=1)return this._w=a,this._x=t,this._y=r,this._z=o,this;var v=1-i*i;if(v<=Number.EPSILON){var s=1-n;return this._w=s*a+n*this._w,this._x=s*t+n*this._x,this._y=s*r+n*this._y,this._z=s*o+n*this._z,this.normalize(),this._onChangeCallback(),this}var c=Math.sqrt(v),l=Math.atan2(c,i),u=Math.sin((1-n)*l)/c,f=Math.sin(n*l)/c;return this._w=a*u+this._w*f,this._x=t*u+this._x*f,this._y=r*u+this._y*f,this._z=o*u+this._z*f,this._onChangeCallback(),this}},{key:"slerpQuaternions",value:function(e,n,t){return this.copy(e).slerp(n,t)}},{key:"random",value:function(){var e=Math.random(),n=Math.sqrt(1-e),t=Math.sqrt(e),r=2*Math.PI*Math.random(),o=2*Math.PI*Math.random();return this.set(n*Math.cos(r),t*Math.sin(o),t*Math.cos(o),n*Math.sin(r))}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}},{key:"fromBufferAttribute",value:function(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:F().mark((function e(){return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._x;case 2:return e.next=4,this._y;case 4:return e.next=6,this._z;case 6:return e.next=8,this._w;case 8:case"end":return e.stop()}}),e,this)}))}],[{key:"slerpFlat",value:function(e,n,t,r,o,a,i){var v=t[r+0],s=t[r+1],c=t[r+2],l=t[r+3],u=o[a+0],f=o[a+1],p=o[a+2],m=o[a+3];if(0===i)return e[n+0]=v,e[n+1]=s,e[n+2]=c,void(e[n+3]=l);if(1===i)return e[n+0]=u,e[n+1]=f,e[n+2]=p,void(e[n+3]=m);if(l!==m||v!==u||s!==f||c!==p){var d=1-i,h=v*u+s*f+c*p+l*m,x=h>=0?1:-1,g=1-h*h;if(g>Number.EPSILON){var y=Math.sqrt(g),_=Math.atan2(y,h*x);d=Math.sin(d*_)/y,i=Math.sin(i*_)/y}var b=i*x;if(v=v*d+u*b,s=s*d+f*b,c=c*d+p*b,l=l*d+m*b,d===1-i){var U=1/Math.sqrt(v*v+s*s+c*c+l*l);v*=U,s*=U,c*=U,l*=U}}e[n]=v,e[n+1]=s,e[n+2]=c,e[n+3]=l}},{key:"multiplyQuaternionsFlat",value:function(e,n,t,r,o,a){var i=t[r],v=t[r+1],s=t[r+2],c=t[r+3],l=o[a],u=o[a+1],f=o[a+2],p=o[a+3];return e[n]=i*p+c*l+v*f-s*u,e[n+1]=v*p+c*u+s*l-i*f,e[n+2]=s*p+c*f+i*u-v*l,e[n+3]=c*p-i*l-v*u-s*f,e}}]),n}(),Lr=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;y(this,n),n.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}return b(n,[{key:"set",value:function(e,n,t){return void 0===t&&(t=this.z),this.x=e,this.y=n,this.z=t,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setComponent",value:function(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}},{key:"addScaledVector",value:function(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}},{key:"applyEuler",value:function(e){return this.applyQuaternion(Or.setFromEuler(e))}},{key:"applyAxisAngle",value:function(e,n){return this.applyQuaternion(Or.setFromAxisAngle(e,n))}},{key:"applyMatrix3",value:function(e){var n=this.x,t=this.y,r=this.z,o=e.elements;return this.x=o[0]*n+o[3]*t+o[6]*r,this.y=o[1]*n+o[4]*t+o[7]*r,this.z=o[2]*n+o[5]*t+o[8]*r,this}},{key:"applyNormalMatrix",value:function(e){return this.applyMatrix3(e).normalize()}},{key:"applyMatrix4",value:function(e){var n=this.x,t=this.y,r=this.z,o=e.elements,a=1/(o[3]*n+o[7]*t+o[11]*r+o[15]);return this.x=(o[0]*n+o[4]*t+o[8]*r+o[12])*a,this.y=(o[1]*n+o[5]*t+o[9]*r+o[13])*a,this.z=(o[2]*n+o[6]*t+o[10]*r+o[14])*a,this}},{key:"applyQuaternion",value:function(e){var n=this.x,t=this.y,r=this.z,o=e.x,a=e.y,i=e.z,v=e.w,s=v*n+a*r-i*t,c=v*t+i*n-o*r,l=v*r+o*t-a*n,u=-o*n-a*t-i*r;return this.x=s*v+u*-o+c*-i-l*-a,this.y=c*v+u*-a+l*-o-s*-i,this.z=l*v+u*-i+s*-a-c*-o,this}},{key:"project",value:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}},{key:"unproject",value:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}},{key:"transformDirection",value:function(e){var n=this.x,t=this.y,r=this.z,o=e.elements;return this.x=o[0]*n+o[4]*t+o[8]*r,this.y=o[1]*n+o[5]*t+o[9]*r,this.z=o[2]*n+o[6]*t+o[10]*r,this.normalize()}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}},{key:"clamp",value:function(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}},{key:"clampScalar",value:function(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}},{key:"clampLength",value:function(e,n){var t=this.length();return this.divideScalar(t||1).multiplyScalar(Math.max(e,Math.min(n,t)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}},{key:"lerpVectors",value:function(e,n,t){return this.x=e.x+(n.x-e.x)*t,this.y=e.y+(n.y-e.y)*t,this.z=e.z+(n.z-e.z)*t,this}},{key:"cross",value:function(e){return this.crossVectors(this,e)}},{key:"crossVectors",value:function(e,n){var t=e.x,r=e.y,o=e.z,a=n.x,i=n.y,v=n.z;return this.x=r*v-o*i,this.y=o*a-t*v,this.z=t*i-r*a,this}},{key:"projectOnVector",value:function(e){var n=e.lengthSq();if(0===n)return this.set(0,0,0);var t=e.dot(this)/n;return this.copy(e).multiplyScalar(t)}},{key:"projectOnPlane",value:function(e){return Ar.copy(this).projectOnVector(e),this.sub(Ar)}},{key:"reflect",value:function(e){return this.sub(Ar.copy(e).multiplyScalar(2*this.dot(e)))}},{key:"angleTo",value:function(e){var n=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===n)return Math.PI/2;var t=this.dot(e)/n;return Math.acos(Jt(t,-1,1))}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var n=this.x-e.x,t=this.y-e.y,r=this.z-e.z;return n*n+t*t+r*r}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}},{key:"setFromSpherical",value:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,n,t){var r=Math.sin(n)*e;return this.x=r*Math.sin(t),this.y=Math.cos(n)*e,this.z=r*Math.cos(t),this}},{key:"setFromCylindrical",value:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,n,t){return this.x=e*Math.sin(n),this.y=t,this.z=e*Math.cos(n),this}},{key:"setFromMatrixPosition",value:function(e){var n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}},{key:"setFromMatrixScale",value:function(e){var n=this.setFromMatrixColumn(e,0).length(),t=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=t,this.z=r,this}},{key:"setFromMatrixColumn",value:function(e,n){return this.fromArray(e.elements,4*n)}},{key:"setFromMatrix3Column",value:function(e,n){return this.fromArray(e.elements,3*n)}},{key:"setFromEuler",value:function(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}},{key:"fromBufferAttribute",value:function(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}},{key:"randomDirection",value:function(){var e=2*(Math.random()-.5),n=Math.random()*Math.PI*2,t=Math.sqrt(1-Math.pow(e,2));return this.x=t*Math.cos(n),this.y=t*Math.sin(n),this.z=e,this}},{key:Symbol.iterator,value:F().mark((function e(){return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:case"end":return e.stop()}}),e,this)}))}]),n}(),Ar=new Lr,Or=new Ir,Br=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr(1/0,1/0,1/0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr(-1/0,-1/0,-1/0);y(this,e),this.isBox3=!0,this.min=n,this.max=t}return b(e,[{key:"set",value:function(e,n){return this.min.copy(e),this.max.copy(n),this}},{key:"setFromArray",value:function(e){for(var n=1/0,t=1/0,r=1/0,o=-1/0,a=-1/0,i=-1/0,v=0,s=e.length;v<s;v+=3){var c=e[v],l=e[v+1],u=e[v+2];c<n&&(n=c),l<t&&(t=l),u<r&&(r=u),c>o&&(o=c),l>a&&(a=l),u>i&&(i=u)}return this.min.set(n,t,r),this.max.set(o,a,i),this}},{key:"setFromBufferAttribute",value:function(e){for(var n=1/0,t=1/0,r=1/0,o=-1/0,a=-1/0,i=-1/0,v=0,s=e.count;v<s;v++){var c=e.getX(v),l=e.getY(v),u=e.getZ(v);c<n&&(n=c),l<t&&(t=l),u<r&&(r=u),c>o&&(o=c),l>a&&(a=l),u>i&&(i=u)}return this.min.set(n,t,r),this.max.set(o,a,i),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var n=0,t=e.length;n<t;n++)this.expandByPoint(e[n]);return this}},{key:"setFromCenterAndSize",value:function(e,n){var t=Gr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:"setFromObject",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.makeEmpty(),this.expandByObject(e,n)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"expandByObject",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e.updateWorldMatrix(!1,!1);var t=e.geometry;if(void 0!==t)if(n&&void 0!=t.attributes&&void 0!==t.attributes.position)for(var r=t.attributes.position,o=0,a=r.count;o<a;o++)Gr.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Gr);else null===t.boundingBox&&t.computeBoundingBox(),Vr.copy(t.boundingBox),Vr.applyMatrix4(e.matrixWorld),this.union(Vr);for(var i=e.children,v=0,s=i.length;v<s;v++)this.expandByObject(i[v],n);return this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}},{key:"getParameter",value:function(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}},{key:"intersectsSphere",value:function(e){return this.clampPoint(e.center,Gr),Gr.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var n,t;return e.normal.x>0?(n=e.normal.x*this.min.x,t=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,t=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,t+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,t+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,t+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,t+=e.normal.z*this.min.z),n<=-e.constant&&t>=-e.constant}},{key:"intersectsTriangle",value:function(e){if(this.isEmpty())return!1;this.getCenter(Qr),Jr.subVectors(this.max,Qr),qr.subVectors(e.a,Qr),Wr.subVectors(e.b,Qr),Hr.subVectors(e.c,Qr),Xr.subVectors(Wr,qr),Yr.subVectors(Hr,Wr),Zr.subVectors(qr,Hr);var n=[0,-Xr.z,Xr.y,0,-Yr.z,Yr.y,0,-Zr.z,Zr.y,Xr.z,0,-Xr.x,Yr.z,0,-Yr.x,Zr.z,0,-Zr.x,-Xr.y,Xr.x,0,-Yr.y,Yr.x,0,-Zr.y,Zr.x,0];return!!eo(n,qr,Wr,Hr,Jr)&&(!!eo(n=[1,0,0,0,1,0,0,0,1],qr,Wr,Hr,Jr)&&($r.crossVectors(Xr,Yr),eo(n=[$r.x,$r.y,$r.z],qr,Wr,Hr,Jr)))}},{key:"clampPoint",value:function(e,n){return n.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return Gr.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"getBoundingSphere",value:function(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Gr).length(),e}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"applyMatrix4",value:function(e){return this.isEmpty()||(Nr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Nr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Nr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Nr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Nr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Nr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Nr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Nr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Nr)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),Nr=[new Lr,new Lr,new Lr,new Lr,new Lr,new Lr,new Lr,new Lr],Gr=new Lr,Vr=new Br,qr=new Lr,Wr=new Lr,Hr=new Lr,Xr=new Lr,Yr=new Lr,Zr=new Lr,Qr=new Lr,Jr=new Lr,$r=new Lr,Kr=new Lr;function eo(e,n,t,r,o){for(var a=0,i=e.length-3;a<=i;a+=3){Kr.fromArray(e,a);var v=o.x*Math.abs(Kr.x)+o.y*Math.abs(Kr.y)+o.z*Math.abs(Kr.z),s=n.dot(Kr),c=t.dot(Kr),l=r.dot(Kr);if(Math.max(-Math.max(s,c,l),Math.min(s,c,l))>v)return!1}return!0}var no=new Br,to=new Lr,ro=new Lr,oo=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;y(this,e),this.center=n,this.radius=t}return b(e,[{key:"set",value:function(e,n){return this.center.copy(e),this.radius=n,this}},{key:"setFromPoints",value:function(e,n){var t=this.center;void 0!==n?t.copy(n):no.setFromPoints(e).getCenter(t);for(var r=0,o=0,a=e.length;o<a;o++)r=Math.max(r,t.distanceToSquared(e[o]));return this.radius=Math.sqrt(r),this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"isEmpty",value:function(){return this.radius<0}},{key:"makeEmpty",value:function(){return this.center.set(0,0,0),this.radius=-1,this}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"intersectsSphere",value:function(e){var n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}},{key:"clampPoint",value:function(e,n){var t=this.center.distanceToSquared(e);return n.copy(e),t>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}},{key:"getBoundingBox",value:function(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}},{key:"applyMatrix4",value:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"expandByPoint",value:function(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;to.subVectors(e,this.center);var n=to.lengthSq();if(n>this.radius*this.radius){var t=Math.sqrt(n),r=.5*(t-this.radius);this.center.addScaledVector(to,r/t),this.radius+=r}return this}},{key:"union",value:function(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(ro.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(to.copy(e.center).add(ro)),this.expandByPoint(to.copy(e.center).sub(ro))),this)}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),ao=new Lr,io=new Lr,vo=new Lr,so=new Lr,co=new Lr,lo=new Lr,uo=new Lr,fo=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr(0,0,-1);y(this,e),this.origin=n,this.direction=t}return b(e,[{key:"set",value:function(e,n){return this.origin.copy(e),this.direction.copy(n),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"at",value:function(e,n){return n.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,ao)),this}},{key:"closestPointToPoint",value:function(e,n){n.subVectors(e,this.origin);var t=n.dot(this.direction);return t<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(t).add(this.origin)}},{key:"distanceToPoint",value:function(e){return Math.sqrt(this.distanceSqToPoint(e))}},{key:"distanceSqToPoint",value:function(e){var n=ao.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(ao.copy(this.direction).multiplyScalar(n).add(this.origin),ao.distanceToSquared(e))}},{key:"distanceSqToSegment",value:function(e,n,t,r){io.copy(e).add(n).multiplyScalar(.5),vo.copy(n).sub(e).normalize(),so.copy(this.origin).sub(io);var o,a,i,v,s=.5*e.distanceTo(n),c=-this.direction.dot(vo),l=so.dot(this.direction),u=-so.dot(vo),f=so.lengthSq(),p=Math.abs(1-c*c);if(p>0)if(a=c*l-u,v=s*p,(o=c*u-l)>=0)if(a>=-v)if(a<=v){var m=1/p;i=(o*=m)*(o+c*(a*=m)+2*l)+a*(c*o+a+2*u)+f}else a=s,i=-(o=Math.max(0,-(c*a+l)))*o+a*(a+2*u)+f;else a=-s,i=-(o=Math.max(0,-(c*a+l)))*o+a*(a+2*u)+f;else a<=-v?i=-(o=Math.max(0,-(-c*s+l)))*o+(a=o>0?-s:Math.min(Math.max(-s,-u),s))*(a+2*u)+f:a<=v?(o=0,i=(a=Math.min(Math.max(-s,-u),s))*(a+2*u)+f):i=-(o=Math.max(0,-(c*s+l)))*o+(a=o>0?s:Math.min(Math.max(-s,-u),s))*(a+2*u)+f;else a=c>0?-s:s,i=-(o=Math.max(0,-(c*a+l)))*o+a*(a+2*u)+f;return t&&t.copy(this.direction).multiplyScalar(o).add(this.origin),r&&r.copy(vo).multiplyScalar(a).add(io),i}},{key:"intersectSphere",value:function(e,n){ao.subVectors(e.center,this.origin);var t=ao.dot(this.direction),r=ao.dot(ao)-t*t,o=e.radius*e.radius;if(r>o)return null;var a=Math.sqrt(o-r),i=t-a,v=t+a;return i<0&&v<0?null:i<0?this.at(v,n):this.at(i,n)}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"distanceToPlane",value:function(e){var n=e.normal.dot(this.direction);if(0===n)return 0===e.distanceToPoint(this.origin)?0:null;var t=-(this.origin.dot(e.normal)+e.constant)/n;return t>=0?t:null}},{key:"intersectPlane",value:function(e,n){var t=this.distanceToPlane(e);return null===t?null:this.at(t,n)}},{key:"intersectsPlane",value:function(e){var n=e.distanceToPoint(this.origin);return 0===n||e.normal.dot(this.direction)*n<0}},{key:"intersectBox",value:function(e,n){var t,r,o,a,i,v,s=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return s>=0?(t=(e.min.x-u.x)*s,r=(e.max.x-u.x)*s):(t=(e.max.x-u.x)*s,r=(e.min.x-u.x)*s),c>=0?(o=(e.min.y-u.y)*c,a=(e.max.y-u.y)*c):(o=(e.max.y-u.y)*c,a=(e.min.y-u.y)*c),t>a||o>r?null:((o>t||isNaN(t))&&(t=o),(a<r||isNaN(r))&&(r=a),l>=0?(i=(e.min.z-u.z)*l,v=(e.max.z-u.z)*l):(i=(e.max.z-u.z)*l,v=(e.min.z-u.z)*l),t>v||i>r?null:((i>t||t!==t)&&(t=i),(v<r||r!==r)&&(r=v),r<0?null:this.at(t>=0?t:r,n)))}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,ao)}},{key:"intersectTriangle",value:function(e,n,t,r,o){co.subVectors(n,e),lo.subVectors(t,e),uo.crossVectors(co,lo);var a,i=this.direction.dot(uo);if(i>0){if(r)return null;a=1}else{if(!(i<0))return null;a=-1,i=-i}so.subVectors(this.origin,e);var v=a*this.direction.dot(lo.crossVectors(so,lo));if(v<0)return null;var s=a*this.direction.dot(co.cross(so));if(s<0)return null;if(v+s>i)return null;var c=-a*so.dot(uo);return c<0?null:this.at(c/i,o)}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),po=function(){function e(){y(this,e),e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}return b(e,[{key:"set",value:function(e,n,t,r,o,a,i,v,s,c,l,u,f,p,m,d){var h=this.elements;return h[0]=e,h[4]=n,h[8]=t,h[12]=r,h[1]=o,h[5]=a,h[9]=i,h[13]=v,h[2]=s,h[6]=c,h[10]=l,h[14]=u,h[3]=f,h[7]=p,h[11]=m,h[15]=d,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"clone",value:function(){return(new e).fromArray(this.elements)}},{key:"copy",value:function(e){var n=this.elements,t=e.elements;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],this}},{key:"copyPosition",value:function(e){var n=this.elements,t=e.elements;return n[12]=t[12],n[13]=t[13],n[14]=t[14],this}},{key:"setFromMatrix3",value:function(e){var n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}},{key:"extractBasis",value:function(e,n,t){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),t.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,n,t){return this.set(e.x,n.x,t.x,0,e.y,n.y,t.y,0,e.z,n.z,t.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var n=this.elements,t=e.elements,r=1/mo.setFromMatrixColumn(e,0).length(),o=1/mo.setFromMatrixColumn(e,1).length(),a=1/mo.setFromMatrixColumn(e,2).length();return n[0]=t[0]*r,n[1]=t[1]*r,n[2]=t[2]*r,n[3]=0,n[4]=t[4]*o,n[5]=t[5]*o,n[6]=t[6]*o,n[7]=0,n[8]=t[8]*a,n[9]=t[9]*a,n[10]=t[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}},{key:"makeRotationFromEuler",value:function(e){var n=this.elements,t=e.x,r=e.y,o=e.z,a=Math.cos(t),i=Math.sin(t),v=Math.cos(r),s=Math.sin(r),c=Math.cos(o),l=Math.sin(o);if("XYZ"===e.order){var u=a*c,f=a*l,p=i*c,m=i*l;n[0]=v*c,n[4]=-v*l,n[8]=s,n[1]=f+p*s,n[5]=u-m*s,n[9]=-i*v,n[2]=m-u*s,n[6]=p+f*s,n[10]=a*v}else if("YXZ"===e.order){var d=v*c,h=v*l,x=s*c,g=s*l;n[0]=d+g*i,n[4]=x*i-h,n[8]=a*s,n[1]=a*l,n[5]=a*c,n[9]=-i,n[2]=h*i-x,n[6]=g+d*i,n[10]=a*v}else if("ZXY"===e.order){var y=v*c,_=v*l,b=s*c,U=s*l;n[0]=y-U*i,n[4]=-a*l,n[8]=b+_*i,n[1]=_+b*i,n[5]=a*c,n[9]=U-y*i,n[2]=-a*s,n[6]=i,n[10]=a*v}else if("ZYX"===e.order){var w=a*c,S=a*l,M=i*c,j=i*l;n[0]=v*c,n[4]=M*s-S,n[8]=w*s+j,n[1]=v*l,n[5]=j*s+w,n[9]=S*s-M,n[2]=-s,n[6]=i*v,n[10]=a*v}else if("YZX"===e.order){var k=a*v,C=a*s,T=i*v,R=i*s;n[0]=v*c,n[4]=R-k*l,n[8]=T*l+C,n[1]=l,n[5]=a*c,n[9]=-i*c,n[2]=-s*c,n[6]=C*l+T,n[10]=k-R*l}else if("XZY"===e.order){var z=a*v,P=a*s,F=i*v,D=i*s;n[0]=v*c,n[4]=-l,n[8]=s*c,n[1]=z*l+D,n[5]=a*c,n[9]=P*l-F,n[2]=F*l-P,n[6]=i*c,n[10]=D*l+z}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(xo,e,go)}},{key:"lookAt",value:function(e,n,t){var r=this.elements;return bo.subVectors(e,n),0===bo.lengthSq()&&(bo.z=1),bo.normalize(),yo.crossVectors(t,bo),0===yo.lengthSq()&&(1===Math.abs(t.z)?bo.x+=1e-4:bo.z+=1e-4,bo.normalize(),yo.crossVectors(t,bo)),yo.normalize(),_o.crossVectors(bo,yo),r[0]=yo.x,r[4]=_o.x,r[8]=bo.x,r[1]=yo.y,r[5]=_o.y,r[9]=bo.y,r[2]=yo.z,r[6]=_o.z,r[10]=bo.z,this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,n){var t=e.elements,r=n.elements,o=this.elements,a=t[0],i=t[4],v=t[8],s=t[12],c=t[1],l=t[5],u=t[9],f=t[13],p=t[2],m=t[6],d=t[10],h=t[14],x=t[3],g=t[7],y=t[11],_=t[15],b=r[0],U=r[4],w=r[8],S=r[12],M=r[1],j=r[5],k=r[9],C=r[13],T=r[2],R=r[6],z=r[10],P=r[14],F=r[3],D=r[7],E=r[11],I=r[15];return o[0]=a*b+i*M+v*T+s*F,o[4]=a*U+i*j+v*R+s*D,o[8]=a*w+i*k+v*z+s*E,o[12]=a*S+i*C+v*P+s*I,o[1]=c*b+l*M+u*T+f*F,o[5]=c*U+l*j+u*R+f*D,o[9]=c*w+l*k+u*z+f*E,o[13]=c*S+l*C+u*P+f*I,o[2]=p*b+m*M+d*T+h*F,o[6]=p*U+m*j+d*R+h*D,o[10]=p*w+m*k+d*z+h*E,o[14]=p*S+m*C+d*P+h*I,o[3]=x*b+g*M+y*T+_*F,o[7]=x*U+g*j+y*R+_*D,o[11]=x*w+g*k+y*z+_*E,o[15]=x*S+g*C+y*P+_*I,this}},{key:"multiplyScalar",value:function(e){var n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,n=e[0],t=e[4],r=e[8],o=e[12],a=e[1],i=e[5],v=e[9],s=e[13],c=e[2],l=e[6],u=e[10],f=e[14];return e[3]*(+o*v*l-r*s*l-o*i*u+t*s*u+r*i*f-t*v*f)+e[7]*(+n*v*f-n*s*u+o*a*u-r*a*f+r*s*c-o*v*c)+e[11]*(+n*s*l-n*i*f-o*a*l+t*a*f+o*i*c-t*s*c)+e[15]*(-r*i*c-n*v*l+n*i*u+r*a*l-t*a*u+t*v*c)}},{key:"transpose",value:function(){var e,n=this.elements;return e=n[1],n[1]=n[4],n[4]=e,e=n[2],n[2]=n[8],n[8]=e,e=n[6],n[6]=n[9],n[9]=e,e=n[3],n[3]=n[12],n[12]=e,e=n[7],n[7]=n[13],n[13]=e,e=n[11],n[11]=n[14],n[14]=e,this}},{key:"setPosition",value:function(e,n,t){var r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=t),this}},{key:"invert",value:function(){var e=this.elements,n=e[0],t=e[1],r=e[2],o=e[3],a=e[4],i=e[5],v=e[6],s=e[7],c=e[8],l=e[9],u=e[10],f=e[11],p=e[12],m=e[13],d=e[14],h=e[15],x=l*d*s-m*u*s+m*v*f-i*d*f-l*v*h+i*u*h,g=p*u*s-c*d*s-p*v*f+a*d*f+c*v*h-a*u*h,y=c*m*s-p*l*s+p*i*f-a*m*f-c*i*h+a*l*h,_=p*l*v-c*m*v-p*i*u+a*m*u+c*i*d-a*l*d,b=n*x+t*g+r*y+o*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var U=1/b;return e[0]=x*U,e[1]=(m*u*o-l*d*o-m*r*f+t*d*f+l*r*h-t*u*h)*U,e[2]=(i*d*o-m*v*o+m*r*s-t*d*s-i*r*h+t*v*h)*U,e[3]=(l*v*o-i*u*o-l*r*s+t*u*s+i*r*f-t*v*f)*U,e[4]=g*U,e[5]=(c*d*o-p*u*o+p*r*f-n*d*f-c*r*h+n*u*h)*U,e[6]=(p*v*o-a*d*o-p*r*s+n*d*s+a*r*h-n*v*h)*U,e[7]=(a*u*o-c*v*o+c*r*s-n*u*s-a*r*f+n*v*f)*U,e[8]=y*U,e[9]=(p*l*o-c*m*o-p*t*f+n*m*f+c*t*h-n*l*h)*U,e[10]=(a*m*o-p*i*o+p*t*s-n*m*s-a*t*h+n*i*h)*U,e[11]=(c*i*o-a*l*o-c*t*s+n*l*s+a*t*f-n*i*f)*U,e[12]=_*U,e[13]=(c*m*r-p*l*r+p*t*u-n*m*u-c*t*d+n*l*d)*U,e[14]=(p*i*r-a*m*r-p*t*v+n*m*v+a*t*d-n*i*d)*U,e[15]=(a*l*r-c*i*r+c*t*v-n*l*v-a*t*u+n*i*u)*U,this}},{key:"scale",value:function(e){var n=this.elements,t=e.x,r=e.y,o=e.z;return n[0]*=t,n[4]*=r,n[8]*=o,n[1]*=t,n[5]*=r,n[9]*=o,n[2]*=t,n[6]*=r,n[10]*=o,n[3]*=t,n[7]*=r,n[11]*=o,this}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],t=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,t,r))}},{key:"makeTranslation",value:function(e,n,t){return this.set(1,0,0,e,0,1,0,n,0,0,1,t,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var n=Math.cos(e),t=Math.sin(e);return this.set(1,0,0,0,0,n,-t,0,0,t,n,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var n=Math.cos(e),t=Math.sin(e);return this.set(n,0,t,0,0,1,0,0,-t,0,n,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var n=Math.cos(e),t=Math.sin(e);return this.set(n,-t,0,0,t,n,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,n){var t=Math.cos(n),r=Math.sin(n),o=1-t,a=e.x,i=e.y,v=e.z,s=o*a,c=o*i;return this.set(s*a+t,s*i-r*v,s*v+r*i,0,s*i+r*v,c*i+t,c*v-r*a,0,s*v-r*i,c*v+r*a,o*v*v+t,0,0,0,0,1),this}},{key:"makeScale",value:function(e,n,t){return this.set(e,0,0,0,0,n,0,0,0,0,t,0,0,0,0,1),this}},{key:"makeShear",value:function(e,n,t,r,o,a){return this.set(1,t,o,0,e,1,a,0,n,r,1,0,0,0,0,1),this}},{key:"compose",value:function(e,n,t){var r=this.elements,o=n._x,a=n._y,i=n._z,v=n._w,s=o+o,c=a+a,l=i+i,u=o*s,f=o*c,p=o*l,m=a*c,d=a*l,h=i*l,x=v*s,g=v*c,y=v*l,_=t.x,b=t.y,U=t.z;return r[0]=(1-(m+h))*_,r[1]=(f+y)*_,r[2]=(p-g)*_,r[3]=0,r[4]=(f-y)*b,r[5]=(1-(u+h))*b,r[6]=(d+x)*b,r[7]=0,r[8]=(p+g)*U,r[9]=(d-x)*U,r[10]=(1-(u+m))*U,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}},{key:"decompose",value:function(e,n,t){var r=this.elements,o=mo.set(r[0],r[1],r[2]).length(),a=mo.set(r[4],r[5],r[6]).length(),i=mo.set(r[8],r[9],r[10]).length();this.determinant()<0&&(o=-o),e.x=r[12],e.y=r[13],e.z=r[14],ho.copy(this);var v=1/o,s=1/a,c=1/i;return ho.elements[0]*=v,ho.elements[1]*=v,ho.elements[2]*=v,ho.elements[4]*=s,ho.elements[5]*=s,ho.elements[6]*=s,ho.elements[8]*=c,ho.elements[9]*=c,ho.elements[10]*=c,n.setFromRotationMatrix(ho),t.x=o,t.y=a,t.z=i,this}},{key:"makePerspective",value:function(e,n,t,r,o,a){var i=this.elements,v=2*o/(n-e),s=2*o/(t-r),c=(n+e)/(n-e),l=(t+r)/(t-r),u=-(a+o)/(a-o),f=-2*a*o/(a-o);return i[0]=v,i[4]=0,i[8]=c,i[12]=0,i[1]=0,i[5]=s,i[9]=l,i[13]=0,i[2]=0,i[6]=0,i[10]=u,i[14]=f,i[3]=0,i[7]=0,i[11]=-1,i[15]=0,this}},{key:"makeOrthographic",value:function(e,n,t,r,o,a){var i=this.elements,v=1/(n-e),s=1/(t-r),c=1/(a-o),l=(n+e)*v,u=(t+r)*s,f=(a+o)*c;return i[0]=2*v,i[4]=0,i[8]=0,i[12]=-l,i[1]=0,i[5]=2*s,i[9]=0,i[13]=-u,i[2]=0,i[6]=0,i[10]=-2*c,i[14]=-f,i[3]=0,i[7]=0,i[11]=0,i[15]=1,this}},{key:"equals",value:function(e){for(var n=this.elements,t=e.elements,r=0;r<16;r++)if(n[r]!==t[r])return!1;return!0}},{key:"fromArray",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=0;t<16;t++)this.elements[t]=e[t+n];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.elements;return e[n]=t[0],e[n+1]=t[1],e[n+2]=t[2],e[n+3]=t[3],e[n+4]=t[4],e[n+5]=t[5],e[n+6]=t[6],e[n+7]=t[7],e[n+8]=t[8],e[n+9]=t[9],e[n+10]=t[10],e[n+11]=t[11],e[n+12]=t[12],e[n+13]=t[13],e[n+14]=t[14],e[n+15]=t[15],e}}]),e}(),mo=new Lr,ho=new po,xo=new Lr(0,0,0),go=new Lr(1,1,1),yo=new Lr,_o=new Lr,bo=new Lr,Uo=new po,wo=new Ir,So=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n.DefaultOrder;y(this,n),this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=o}return b(n,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"order",get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}},{key:"set",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=n,this._z=t,this._order=r,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._order)}},{key:"copy",value:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=e.elements,o=r[0],a=r[4],i=r[8],v=r[1],s=r[5],c=r[9],l=r[2],u=r[6],f=r[10];switch(n){case"XYZ":this._y=Math.asin(Jt(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(u,s),this._z=0);break;case"YXZ":this._x=Math.asin(-Jt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(i,f),this._z=Math.atan2(v,s)):(this._y=Math.atan2(-l,o),this._z=0);break;case"ZXY":this._x=Math.asin(Jt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-l,f),this._z=Math.atan2(-a,s)):(this._y=0,this._z=Math.atan2(v,o));break;case"ZYX":this._y=Math.asin(-Jt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(v,o)):(this._x=0,this._z=Math.atan2(-a,s));break;case"YZX":this._z=Math.asin(Jt(v,-1,1)),Math.abs(v)<.9999999?(this._x=Math.atan2(-c,s),this._y=Math.atan2(-l,o)):(this._x=0,this._y=Math.atan2(i,f));break;case"XZY":this._z=Math.asin(-Jt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,s),this._y=Math.atan2(i,o)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,!0===t&&this._onChangeCallback(),this}},{key:"setFromQuaternion",value:function(e,n,t){return Uo.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Uo,n,t)}},{key:"setFromVector3",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,n)}},{key:"reorder",value:function(e){return wo.setFromEuler(this),this.setFromQuaternion(wo,e)}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}},{key:"fromArray",value:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:F().mark((function e(){return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._x;case 2:return e.next=4,this._y;case 4:return e.next=6,this._z;case 6:return e.next=8,this._order;case 8:case"end":return e.stop()}}),e,this)}))},{key:"toVector3",value:function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}]),n}();So.DefaultOrder="XYZ",So.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var Mo=function(){function e(){y(this,e),this.mask=1}return b(e,[{key:"set",value:function(e){this.mask=(1<<e|0)>>>0}},{key:"enable",value:function(e){this.mask|=1<<e|0}},{key:"enableAll",value:function(){this.mask=-1}},{key:"toggle",value:function(e){this.mask^=1<<e|0}},{key:"disable",value:function(e){this.mask&=~(1<<e|0)}},{key:"disableAll",value:function(){this.mask=0}},{key:"test",value:function(e){return 0!==(this.mask&e.mask)}},{key:"isEnabled",value:function(e){return 0!==(this.mask&(1<<e|0))}}]),e}(),jo=0,ko=new Lr,Co=new Ir,To=new po,Ro=new Lr,zo=new Lr,Po=new Lr,Fo=new Ir,Do=new Lr(1,0,0),Eo=new Lr(0,1,0),Io=new Lr(0,0,1),Lo={type:"added"},Ao={type:"removed"},Oo=function(e){U(t,e);var n=k(t);function t(){var e;y(this,t),(e=n.call(this)).isObject3D=!0,Object.defineProperty(M(e),"id",{value:jo++}),e.uuid=Qt(),e.name="",e.type="Object3D",e.parent=null,e.children=[],e.up=t.DefaultUp.clone();var r=new Lr,o=new So,a=new Ir,i=new Lr(1,1,1);return o._onChange((function(){a.setFromEuler(o,!1)})),a._onChange((function(){o.setFromQuaternion(a,void 0,!1)})),Object.defineProperties(M(e),{position:{configurable:!0,enumerable:!0,value:r},rotation:{configurable:!0,enumerable:!0,value:o},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new po},normalMatrix:{value:new vr}}),e.matrix=new po,e.matrixWorld=new po,e.matrixAutoUpdate=t.DefaultMatrixAutoUpdate,e.matrixWorldNeedsUpdate=!1,e.matrixWorldAutoUpdate=t.DefaultMatrixWorldAutoUpdate,e.layers=new Mo,e.visible=!0,e.castShadow=!1,e.receiveShadow=!1,e.frustumCulled=!0,e.renderOrder=0,e.animations=[],e.userData={},e}return b(t,[{key:"onBeforeRender",value:function(){}},{key:"onAfterRender",value:function(){}},{key:"applyMatrix4",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}},{key:"applyQuaternion",value:function(e){return this.quaternion.premultiply(e),this}},{key:"setRotationFromAxisAngle",value:function(e,n){this.quaternion.setFromAxisAngle(e,n)}},{key:"setRotationFromEuler",value:function(e){this.quaternion.setFromEuler(e,!0)}},{key:"setRotationFromMatrix",value:function(e){this.quaternion.setFromRotationMatrix(e)}},{key:"setRotationFromQuaternion",value:function(e){this.quaternion.copy(e)}},{key:"rotateOnAxis",value:function(e,n){return Co.setFromAxisAngle(e,n),this.quaternion.multiply(Co),this}},{key:"rotateOnWorldAxis",value:function(e,n){return Co.setFromAxisAngle(e,n),this.quaternion.premultiply(Co),this}},{key:"rotateX",value:function(e){return this.rotateOnAxis(Do,e)}},{key:"rotateY",value:function(e){return this.rotateOnAxis(Eo,e)}},{key:"rotateZ",value:function(e){return this.rotateOnAxis(Io,e)}},{key:"translateOnAxis",value:function(e,n){return ko.copy(e).applyQuaternion(this.quaternion),this.position.add(ko.multiplyScalar(n)),this}},{key:"translateX",value:function(e){return this.translateOnAxis(Do,e)}},{key:"translateY",value:function(e){return this.translateOnAxis(Eo,e)}},{key:"translateZ",value:function(e){return this.translateOnAxis(Io,e)}},{key:"localToWorld",value:function(e){return e.applyMatrix4(this.matrixWorld)}},{key:"worldToLocal",value:function(e){return e.applyMatrix4(To.copy(this.matrixWorld).invert())}},{key:"lookAt",value:function(e,n,t){e.isVector3?Ro.copy(e):Ro.set(e,n,t);var r=this.parent;this.updateWorldMatrix(!0,!1),zo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?To.lookAt(zo,Ro,this.up):To.lookAt(Ro,zo,this.up),this.quaternion.setFromRotationMatrix(To),r&&(To.extractRotation(r.matrixWorld),Co.setFromRotationMatrix(To),this.quaternion.premultiply(Co.invert()))}},{key:"add",value:function(e){if(arguments.length>1){for(var n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Lo)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}},{key:"remove",value:function(e){if(arguments.length>1){for(var n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ao)),this}},{key:"removeFromParent",value:function(){var e=this.parent;return null!==e&&e.remove(this),this}},{key:"clear",value:function(){for(var e=0;e<this.children.length;e++){var n=this.children[e];n.parent=null,n.dispatchEvent(Ao)}return this.children.length=0,this}},{key:"attach",value:function(e){return this.updateWorldMatrix(!0,!1),To.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),To.multiply(e.parent.matrixWorld)),e.applyMatrix4(To),this.add(e),e.updateWorldMatrix(!1,!0),this}},{key:"getObjectById",value:function(e){return this.getObjectByProperty("id",e)}},{key:"getObjectByName",value:function(e){return this.getObjectByProperty("name",e)}},{key:"getObjectByProperty",value:function(e,n){if(this[e]===n)return this;for(var t=0,r=this.children.length;t<r;t++){var o=this.children[t].getObjectByProperty(e,n);if(void 0!==o)return o}}},{key:"getWorldPosition",value:function(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}},{key:"getWorldQuaternion",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zo,e,Po),e}},{key:"getWorldScale",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zo,Fo,e),e}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}},{key:"raycast",value:function(){}},{key:"traverse",value:function(e){e(this);for(var n=this.children,t=0,r=n.length;t<r;t++)n[t].traverse(e)}},{key:"traverseVisible",value:function(e){if(!1!==this.visible){e(this);for(var n=this.children,t=0,r=n.length;t<r;t++)n[t].traverseVisible(e)}}},{key:"traverseAncestors",value:function(e){var n=this.parent;null!==n&&(e(n),n.traverseAncestors(e))}},{key:"updateMatrix",value:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}},{key:"updateMatrixWorld",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var n=this.children,t=0,r=n.length;t<r;t++){var o=n[t];!0!==o.matrixWorldAutoUpdate&&!0!==e||o.updateMatrixWorld(e)}}},{key:"updateWorldMatrix",value:function(e,n){var t=this.parent;if(!0===e&&null!==t&&!0===t.matrixWorldAutoUpdate&&t.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===n)for(var r=this.children,o=0,a=r.length;o<a;o++){var i=r[o];!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!1,!0)}}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e,t={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},t.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var r={};function o(n,t){return void 0===n[t.uuid]&&(n[t.uuid]=t.toJSON(e)),t.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=o(e.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var i=a.shapes;if(Array.isArray(i))for(var v=0,s=i.length;v<s;v++){var c=i[v];o(e.shapes,c)}else o(e.shapes,i)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(o(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){for(var l=[],u=0,f=this.material.length;u<f;u++)l.push(o(e.materials,this.material[u]));r.material=l}else r.material=o(e.materials,this.material);if(this.children.length>0){r.children=[];for(var p=0;p<this.children.length;p++)r.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(var m=0;m<this.animations.length;m++){var d=this.animations[m];r.animations.push(o(e.animations,d))}}if(n){var h=S(e.geometries),x=S(e.materials),g=S(e.textures),y=S(e.images),_=S(e.shapes),b=S(e.skeletons),U=S(e.animations),w=S(e.nodes);h.length>0&&(t.geometries=h),x.length>0&&(t.materials=x),g.length>0&&(t.textures=g),y.length>0&&(t.images=y),_.length>0&&(t.shapes=_),b.length>0&&(t.skeletons=b),U.length>0&&(t.animations=U),w.length>0&&(t.nodes=w)}return t.object=r,t;function S(e){var n=[];for(var t in e){var r=e[t];delete r.metadata,n.push(r)}return n}}},{key:"clone",value:function(e){return(new this.constructor).copy(this,e)}},{key:"copy",value:function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===n)for(var t=0;t<e.children.length;t++){var r=e.children[t];this.add(r.clone())}return this}}]),t}(Wt);Oo.DefaultUp=new Lr(0,1,0),Oo.DefaultMatrixAutoUpdate=!0,Oo.DefaultMatrixWorldAutoUpdate=!0;var Bo=new Lr,No=new Lr,Go=new Lr,Vo=new Lr,qo=new Lr,Wo=new Lr,Ho=new Lr,Xo=new Lr,Yo=new Lr,Zo=new Lr,Qo=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Lr;y(this,e),this.a=n,this.b=t,this.c=r}return b(e,[{key:"set",value:function(e,n,t){return this.a.copy(e),this.b.copy(n),this.c.copy(t),this}},{key:"setFromPointsAndIndices",value:function(e,n,t,r){return this.a.copy(e[n]),this.b.copy(e[t]),this.c.copy(e[r]),this}},{key:"setFromAttributeAndIndices",value:function(e,n,t,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,t),this.c.fromBufferAttribute(e,r),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}},{key:"getArea",value:function(){return Bo.subVectors(this.c,this.b),No.subVectors(this.a,this.b),.5*Bo.cross(No).length()}},{key:"getMidpoint",value:function(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}},{key:"getNormal",value:function(n){return e.getNormal(this.a,this.b,this.c,n)}},{key:"getPlane",value:function(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}},{key:"getBarycoord",value:function(n,t){return e.getBarycoord(n,this.a,this.b,this.c,t)}},{key:"getUV",value:function(n,t,r,o,a){return e.getUV(n,this.a,this.b,this.c,t,r,o,a)}},{key:"containsPoint",value:function(n){return e.containsPoint(n,this.a,this.b,this.c)}},{key:"isFrontFacing",value:function(n){return e.isFrontFacing(this.a,this.b,this.c,n)}},{key:"intersectsBox",value:function(e){return e.intersectsTriangle(this)}},{key:"closestPointToPoint",value:function(e,n){var t,r,o=this.a,a=this.b,i=this.c;qo.subVectors(a,o),Wo.subVectors(i,o),Xo.subVectors(e,o);var v=qo.dot(Xo),s=Wo.dot(Xo);if(v<=0&&s<=0)return n.copy(o);Yo.subVectors(e,a);var c=qo.dot(Yo),l=Wo.dot(Yo);if(c>=0&&l<=c)return n.copy(a);var u=v*l-c*s;if(u<=0&&v>=0&&c<=0)return t=v/(v-c),n.copy(o).addScaledVector(qo,t);Zo.subVectors(e,i);var f=qo.dot(Zo),p=Wo.dot(Zo);if(p>=0&&f<=p)return n.copy(i);var m=f*s-v*p;if(m<=0&&s>=0&&p<=0)return r=s/(s-p),n.copy(o).addScaledVector(Wo,r);var d=c*p-f*l;if(d<=0&&l-c>=0&&f-p>=0)return Ho.subVectors(i,a),r=(l-c)/(l-c+(f-p)),n.copy(a).addScaledVector(Ho,r);var h=1/(d+m+u);return t=m*h,r=u*h,n.copy(o).addScaledVector(qo,t).addScaledVector(Wo,r)}},{key:"equals",value:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}],[{key:"getNormal",value:function(e,n,t,r){r.subVectors(t,n),Bo.subVectors(e,n),r.cross(Bo);var o=r.lengthSq();return o>0?r.multiplyScalar(1/Math.sqrt(o)):r.set(0,0,0)}},{key:"getBarycoord",value:function(e,n,t,r,o){Bo.subVectors(r,n),No.subVectors(t,n),Go.subVectors(e,n);var a=Bo.dot(Bo),i=Bo.dot(No),v=Bo.dot(Go),s=No.dot(No),c=No.dot(Go),l=a*s-i*i;if(0===l)return o.set(-2,-1,-1);var u=1/l,f=(s*v-i*c)*u,p=(a*c-i*v)*u;return o.set(1-f-p,p,f)}},{key:"containsPoint",value:function(e,n,t,r){return this.getBarycoord(e,n,t,r,Vo),Vo.x>=0&&Vo.y>=0&&Vo.x+Vo.y<=1}},{key:"getUV",value:function(e,n,t,r,o,a,i,v){return this.getBarycoord(e,n,t,r,Vo),v.set(0,0),v.addScaledVector(o,Vo.x),v.addScaledVector(a,Vo.y),v.addScaledVector(i,Vo.z),v}},{key:"isFrontFacing",value:function(e,n,t,r){return Bo.subVectors(t,n),No.subVectors(e,n),Bo.cross(No).dot(r)<0}}]),e}(),Jo=0,$o=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isMaterial=!0,Object.defineProperty(M(e),"id",{value:Jo++}),e.uuid=Qt(),e.name="",e.type="Material",e.blending=Z,e.side=W,e.vertexColors=!1,e.opacity=1,e.transparent=!1,e.blendSrc=ce,e.blendDst=le,e.blendEquation=ee,e.blendSrcAlpha=null,e.blendDstAlpha=null,e.blendEquationAlpha=null,e.depthFunc=ye,e.depthTest=!0,e.depthWrite=!0,e.stencilWriteMask=255,e.stencilFunc=Pt,e.stencilRef=0,e.stencilFuncMask=255,e.stencilFail=gt,e.stencilZFail=gt,e.stencilZPass=gt,e.stencilWrite=!1,e.clippingPlanes=null,e.clipIntersection=!1,e.clipShadows=!1,e.shadowSide=null,e.colorWrite=!0,e.precision=null,e.polygonOffset=!1,e.polygonOffsetFactor=0,e.polygonOffsetUnits=0,e.dithering=!1,e.alphaToCoverage=!1,e.premultipliedAlpha=!1,e.visible=!0,e.toneMapped=!0,e.userData={},e.version=0,e._alphaTest=0,e}return b(t,[{key:"alphaTest",get:function(){return this._alphaTest},set:function(e){this._alphaTest>0!==e>0&&this.version++,this._alphaTest=e}},{key:"onBuild",value:function(){}},{key:"onBeforeRender",value:function(){}},{key:"onBeforeCompile",value:function(){}},{key:"customProgramCacheKey",value:function(){return this.onBeforeCompile.toString()}},{key:"setValues",value:function(e){if(void 0!==e)for(var n in e){var t=e[n];if(void 0!==t){var r=this[n];void 0!==r?r&&r.isColor?r.set(t):r&&r.isVector3&&t&&t.isVector3?r.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}else console.warn("THREE.Material: '"+n+"' parameter is undefined.")}}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e;n&&(e={textures:{},images:{}});var t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){var n=[];for(var t in e){var r=e[t];delete r.metadata,n.push(r)}return n}if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),void 0!==this.roughness&&(t.roughness=this.roughness),void 0!==this.metalness&&(t.metalness=this.metalness),void 0!==this.sheen&&(t.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(t.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(t.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(t.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(t.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(t.shininess=this.shininess),void 0!==this.clearcoat&&(t.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(t.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(t.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(t.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(t.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(t.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(e).uuid,t.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(e).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(e).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(e).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(e).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(t.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(t.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(t.combine=this.combine)),void 0!==this.envMapIntensity&&(t.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(t.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(t.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(t.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(t.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(t.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(t.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(t.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(t.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(t.size=this.size),null!==this.shadowSide&&(t.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==Z&&(t.blending=this.blending),this.side!==W&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),!0===this.transparent&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.colorWrite=this.colorWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(t.rotation=this.rotation),!0===this.polygonOffset&&(t.polygonOffset=!0),0!==this.polygonOffsetFactor&&(t.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(t.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(t.linewidth=this.linewidth),void 0!==this.dashSize&&(t.dashSize=this.dashSize),void 0!==this.gapSize&&(t.gapSize=this.gapSize),void 0!==this.scale&&(t.scale=this.scale),!0===this.dithering&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(t.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(t.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(t.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(t.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(t.flatShading=this.flatShading),!1===this.visible&&(t.visible=!1),!1===this.toneMapped&&(t.toneMapped=!1),!1===this.fog&&(t.fog=!1),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),n){var o=r(e.textures),a=r(e.images);o.length>0&&(t.textures=o),a.length>0&&(t.images=a)}return t}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var n=e.clippingPlanes,t=null;if(null!==n){var r=n.length;t=new Array(r);for(var o=0;o!==r;++o)t[o]=n[o].clone()}return this.clippingPlanes=t,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),t}(Wt),Ko=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshBasicMaterial=!0,r.type="MeshBasicMaterial",r.color=new wr(16777215),r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=Se,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}]),t}($o),ea=new Lr,na=new ir,ta=function(){function e(n,t,r){if(y(this,e),Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=n,this.itemSize=t,this.count=void 0!==n?n.length/t:0,this.normalized=!0===r,this.usage=Ft,this.updateRange={offset:0,count:-1},this.version=0}return b(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}},{key:"copyAt",value:function(e,n,t){e*=this.itemSize,t*=n.itemSize;for(var r=0,o=this.itemSize;r<o;r++)this.array[e+r]=n.array[t+r];return this}},{key:"copyArray",value:function(e){return this.array.set(e),this}},{key:"applyMatrix3",value:function(e){if(2===this.itemSize)for(var n=0,t=this.count;n<t;n++)na.fromBufferAttribute(this,n),na.applyMatrix3(e),this.setXY(n,na.x,na.y);else if(3===this.itemSize)for(var r=0,o=this.count;r<o;r++)ea.fromBufferAttribute(this,r),ea.applyMatrix3(e),this.setXYZ(r,ea.x,ea.y,ea.z);return this}},{key:"applyMatrix4",value:function(e){for(var n=0,t=this.count;n<t;n++)ea.fromBufferAttribute(this,n),ea.applyMatrix4(e),this.setXYZ(n,ea.x,ea.y,ea.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var n=0,t=this.count;n<t;n++)ea.fromBufferAttribute(this,n),ea.applyNormalMatrix(e),this.setXYZ(n,ea.x,ea.y,ea.z);return this}},{key:"transformDirection",value:function(e){for(var n=0,t=this.count;n<t;n++)ea.fromBufferAttribute(this,n),ea.transformDirection(e),this.setXYZ(n,ea.x,ea.y,ea.z);return this}},{key:"set",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,n),this}},{key:"getX",value:function(e){var n=this.array[e*this.itemSize];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setX",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.array[e*this.itemSize]=n,this}},{key:"getY",value:function(e){var n=this.array[e*this.itemSize+1];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setY",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.array[e*this.itemSize+1]=n,this}},{key:"getZ",value:function(e){var n=this.array[e*this.itemSize+2];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setZ",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.array[e*this.itemSize+2]=n,this}},{key:"getW",value:function(e){var n=this.array[e*this.itemSize+3];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setW",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.array[e*this.itemSize+3]=n,this}},{key:"setXY",value:function(e,n,t){return e*=this.itemSize,this.normalized&&(n=or(n,this.array),t=or(t,this.array)),this.array[e+0]=n,this.array[e+1]=t,this}},{key:"setXYZ",value:function(e,n,t,r){return e*=this.itemSize,this.normalized&&(n=or(n,this.array),t=or(t,this.array),r=or(r,this.array)),this.array[e+0]=n,this.array[e+1]=t,this.array[e+2]=r,this}},{key:"setXYZW",value:function(e,n,t,r,o){return e*=this.itemSize,this.normalized&&(n=or(n,this.array),t=or(t,this.array),r=or(r,this.array),o=or(o,this.array)),this.array[e+0]=n,this.array[e+1]=t,this.array[e+2]=r,this.array[e+3]=o,this}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"clone",value:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},{key:"toJSON",value:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Ft&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}},{key:"copyColorsArray",value:function(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}},{key:"copyVector2sArray",value:function(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}},{key:"copyVector3sArray",value:function(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}},{key:"copyVector4sArray",value:function(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}]),e}(),ra=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Int8Array(e),r,o)}return b(t)}(ta),oa=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Uint8Array(e),r,o)}return b(t)}(ta),aa=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Uint8ClampedArray(e),r,o)}return b(t)}(ta),ia=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Int16Array(e),r,o)}return b(t)}(ta),va=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Uint16Array(e),r,o)}return b(t)}(ta),sa=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Int32Array(e),r,o)}return b(t)}(ta),ca=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Uint32Array(e),r,o)}return b(t)}(ta),la=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;return y(this,t),(a=n.call(this,new Uint16Array(e),r,o)).isFloat16BufferAttribute=!0,a}return b(t)}(ta),ua=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Float32Array(e),r,o)}return b(t)}(ta),fa=function(e){U(t,e);var n=k(t);function t(e,r,o){return y(this,t),n.call(this,new Float64Array(e),r,o)}return b(t)}(ta),pa=0,ma=new po,da=new Oo,ha=new Lr,xa=new Br,ga=new Br,ya=new Lr,_a=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isBufferGeometry=!0,Object.defineProperty(M(e),"id",{value:pa++}),e.uuid=Qt(),e.name="",e.type="BufferGeometry",e.index=null,e.attributes={},e.morphAttributes={},e.morphTargetsRelative=!1,e.groups=[],e.boundingBox=null,e.boundingSphere=null,e.drawRange={start:0,count:1/0},e.userData={},e}return b(t,[{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(e){return Array.isArray(e)?this.index=new(sr(e)?ca:va)(e,1):this.index=e,this}},{key:"getAttribute",value:function(e){return this.attributes[e]}},{key:"setAttribute",value:function(e,n){return this.attributes[e]=n,this}},{key:"deleteAttribute",value:function(e){return delete this.attributes[e],this}},{key:"hasAttribute",value:function(e){return void 0!==this.attributes[e]}},{key:"addGroup",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:n,materialIndex:t})}},{key:"clearGroups",value:function(){this.groups=[]}},{key:"setDrawRange",value:function(e,n){this.drawRange.start=e,this.drawRange.count=n}},{key:"applyMatrix4",value:function(e){var n=this.attributes.position;void 0!==n&&(n.applyMatrix4(e),n.needsUpdate=!0);var t=this.attributes.normal;if(void 0!==t){var r=(new vr).getNormalMatrix(e);t.applyNormalMatrix(r),t.needsUpdate=!0}var o=this.attributes.tangent;return void 0!==o&&(o.transformDirection(e),o.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"applyQuaternion",value:function(e){return ma.makeRotationFromQuaternion(e),this.applyMatrix4(ma),this}},{key:"rotateX",value:function(e){return ma.makeRotationX(e),this.applyMatrix4(ma),this}},{key:"rotateY",value:function(e){return ma.makeRotationY(e),this.applyMatrix4(ma),this}},{key:"rotateZ",value:function(e){return ma.makeRotationZ(e),this.applyMatrix4(ma),this}},{key:"translate",value:function(e,n,t){return ma.makeTranslation(e,n,t),this.applyMatrix4(ma),this}},{key:"scale",value:function(e,n,t){return ma.makeScale(e,n,t),this.applyMatrix4(ma),this}},{key:"lookAt",value:function(e){return da.lookAt(e),da.updateMatrix(),this.applyMatrix4(da.matrix),this}},{key:"center",value:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ha).negate(),this.translate(ha.x,ha.y,ha.z),this}},{key:"setFromPoints",value:function(e){for(var n=[],t=0,r=e.length;t<r;t++){var o=e[t];n.push(o.x,o.y,o.z||0)}return this.setAttribute("position",new ua(n,3)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new Br);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Lr(-1/0,-1/0,-1/0),new Lr(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(var t=0,r=n.length;t<r;t++){var o=n[t];xa.setFromBufferAttribute(o),this.morphTargetsRelative?(ya.addVectors(this.boundingBox.min,xa.min),this.boundingBox.expandByPoint(ya),ya.addVectors(this.boundingBox.max,xa.max),this.boundingBox.expandByPoint(ya)):(this.boundingBox.expandByPoint(xa.min),this.boundingBox.expandByPoint(xa.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new oo);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Lr,1/0);if(e){var t=this.boundingSphere.center;if(xa.setFromBufferAttribute(e),n)for(var r=0,o=n.length;r<o;r++){var a=n[r];ga.setFromBufferAttribute(a),this.morphTargetsRelative?(ya.addVectors(xa.min,ga.min),xa.expandByPoint(ya),ya.addVectors(xa.max,ga.max),xa.expandByPoint(ya)):(xa.expandByPoint(ga.min),xa.expandByPoint(ga.max))}xa.getCenter(t);for(var i=0,v=0,s=e.count;v<s;v++)ya.fromBufferAttribute(e,v),i=Math.max(i,t.distanceToSquared(ya));if(n)for(var c=0,l=n.length;c<l;c++)for(var u=n[c],f=this.morphTargetsRelative,p=0,m=u.count;p<m;p++)ya.fromBufferAttribute(u,p),f&&(ha.fromBufferAttribute(e,p),ya.add(ha)),i=Math.max(i,t.distanceToSquared(ya));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},{key:"computeTangents",value:function(){var e=this.index,n=this.attributes;if(null!==e&&void 0!==n.position&&void 0!==n.normal&&void 0!==n.uv){var t=e.array,r=n.position.array,o=n.normal.array,a=n.uv.array,i=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new ta(new Float32Array(4*i),4));for(var v=this.getAttribute("tangent").array,s=[],c=[],l=0;l<i;l++)s[l]=new Lr,c[l]=new Lr;var u=new Lr,f=new Lr,p=new Lr,m=new ir,d=new ir,h=new ir,x=new Lr,g=new Lr,y=this.groups;0===y.length&&(y=[{start:0,count:t.length}]);for(var _=0,b=y.length;_<b;++_)for(var U=y[_],w=U.start,S=w,M=w+U.count;S<M;S+=3)I(t[S+0],t[S+1],t[S+2]);for(var j=new Lr,k=new Lr,C=new Lr,T=new Lr,R=0,z=y.length;R<z;++R)for(var P=y[R],F=P.start,D=F,E=F+P.count;D<E;D+=3)L(t[D+0]),L(t[D+1]),L(t[D+2])}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");function I(e,n,t){u.fromArray(r,3*e),f.fromArray(r,3*n),p.fromArray(r,3*t),m.fromArray(a,2*e),d.fromArray(a,2*n),h.fromArray(a,2*t),f.sub(u),p.sub(u),d.sub(m),h.sub(m);var o=1/(d.x*h.y-h.x*d.y);isFinite(o)&&(x.copy(f).multiplyScalar(h.y).addScaledVector(p,-d.y).multiplyScalar(o),g.copy(p).multiplyScalar(d.x).addScaledVector(f,-h.x).multiplyScalar(o),s[e].add(x),s[n].add(x),s[t].add(x),c[e].add(g),c[n].add(g),c[t].add(g))}function L(e){C.fromArray(o,3*e),T.copy(C);var n=s[e];j.copy(n),j.sub(C.multiplyScalar(C.dot(n))).normalize(),k.crossVectors(T,n);var t=k.dot(c[e])<0?-1:1;v[4*e]=j.x,v[4*e+1]=j.y,v[4*e+2]=j.z,v[4*e+3]=t}}},{key:"computeVertexNormals",value:function(){var e=this.index,n=this.getAttribute("position");if(void 0!==n){var t=this.getAttribute("normal");if(void 0===t)t=new ta(new Float32Array(3*n.count),3),this.setAttribute("normal",t);else for(var r=0,o=t.count;r<o;r++)t.setXYZ(r,0,0,0);var a=new Lr,i=new Lr,v=new Lr,s=new Lr,c=new Lr,l=new Lr,u=new Lr,f=new Lr;if(e)for(var p=0,m=e.count;p<m;p+=3){var d=e.getX(p+0),h=e.getX(p+1),x=e.getX(p+2);a.fromBufferAttribute(n,d),i.fromBufferAttribute(n,h),v.fromBufferAttribute(n,x),u.subVectors(v,i),f.subVectors(a,i),u.cross(f),s.fromBufferAttribute(t,d),c.fromBufferAttribute(t,h),l.fromBufferAttribute(t,x),s.add(u),c.add(u),l.add(u),t.setXYZ(d,s.x,s.y,s.z),t.setXYZ(h,c.x,c.y,c.z),t.setXYZ(x,l.x,l.y,l.z)}else for(var g=0,y=n.count;g<y;g+=3)a.fromBufferAttribute(n,g+0),i.fromBufferAttribute(n,g+1),v.fromBufferAttribute(n,g+2),u.subVectors(v,i),f.subVectors(a,i),u.cross(f),t.setXYZ(g+0,u.x,u.y,u.z),t.setXYZ(g+1,u.x,u.y,u.z),t.setXYZ(g+2,u.x,u.y,u.z);this.normalizeNormals(),t.needsUpdate=!0}}},{key:"merge",value:function(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}},{key:"normalizeNormals",value:function(){for(var e=this.attributes.normal,n=0,t=e.count;n<t;n++)ya.fromBufferAttribute(e,n),ya.normalize(),e.setXYZ(n,ya.x,ya.y,ya.z)}},{key:"toNonIndexed",value:function(){function e(e,n){for(var t=e.array,r=e.itemSize,o=e.normalized,a=new t.constructor(n.length*r),i=0,v=0,s=0,c=n.length;s<c;s++){i=e.isInterleavedBufferAttribute?n[s]*e.data.stride+e.offset:n[s]*r;for(var l=0;l<r;l++)a[v++]=t[i++]}return new ta(a,r,o)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var n=new t,r=this.index.array,o=this.attributes;for(var a in o){var i=e(o[a],r);n.setAttribute(a,i)}var v=this.morphAttributes;for(var s in v){for(var c=[],l=v[s],u=0,f=l.length;u<f;u++){var p=e(l[u],r);c.push(p)}n.morphAttributes[s]=c}n.morphTargetsRelative=this.morphTargetsRelative;for(var m=this.groups,d=0,h=m.length;d<h;d++){var x=m[d];n.addGroup(x.start,x.count,x.materialIndex)}return n}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var n=this.parameters;for(var t in n)void 0!==n[t]&&(e[t]=n[t]);return e}e.data={attributes:{}};var r=this.index;null!==r&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var o=this.attributes;for(var a in o){var i=o[a];e.data.attributes[a]=i.toJSON(e.data)}var v={},s=!1;for(var c in this.morphAttributes){for(var l=this.morphAttributes[c],u=[],f=0,p=l.length;f<p;f++){var m=l[f];u.push(m.toJSON(e.data))}u.length>0&&(v[c]=u,s=!0)}s&&(e.data.morphAttributes=v,e.data.morphTargetsRelative=this.morphTargetsRelative);var d=this.groups;d.length>0&&(e.data.groups=JSON.parse(JSON.stringify(d)));var h=this.boundingSphere;return null!==h&&(e.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),e}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var n={};this.name=e.name;var t=e.index;null!==t&&this.setIndex(t.clone(n));var r=e.attributes;for(var o in r){var a=r[o];this.setAttribute(o,a.clone(n))}var i=e.morphAttributes;for(var v in i){for(var s=[],c=i[v],l=0,u=c.length;l<u;l++)s.push(c[l].clone(n));this.morphAttributes[v]=s}this.morphTargetsRelative=e.morphTargetsRelative;for(var f=e.groups,p=0,m=f.length;p<m;p++){var d=f[p];this.addGroup(d.start,d.count,d.materialIndex)}var h=e.boundingBox;null!==h&&(this.boundingBox=h.clone());var x=e.boundingSphere;return null!==x&&(this.boundingSphere=x.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),t}(Wt),ba=new po,Ua=new fo,wa=new oo,Sa=new Lr,Ma=new Lr,ja=new Lr,ka=new Lr,Ca=new Lr,Ta=new Lr,Ra=new Lr,za=new Lr,Pa=new Lr,Fa=new ir,Da=new ir,Ea=new ir,Ia=new Lr,La=new Lr,Aa=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new _a,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ko;return y(this,t),(e=n.call(this)).isMesh=!0,e.type="Mesh",e.geometry=r,e.material=o,e.updateMorphTargets(),e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){var t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,o=t.length;r<o;r++){var a=t[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}},{key:"raycast",value:function(e,n){var t=this.geometry,r=this.material,o=this.matrixWorld;if(void 0!==r&&(null===t.boundingSphere&&t.computeBoundingSphere(),wa.copy(t.boundingSphere),wa.applyMatrix4(o),!1!==e.ray.intersectsSphere(wa)&&(ba.copy(o).invert(),Ua.copy(e.ray).applyMatrix4(ba),null===t.boundingBox||!1!==Ua.intersectsBox(t.boundingBox)))){var a,i=t.index,v=t.attributes.position,s=t.morphAttributes.position,c=t.morphTargetsRelative,l=t.attributes.uv,u=t.attributes.uv2,f=t.groups,p=t.drawRange;if(null!==i)if(Array.isArray(r))for(var m=0,d=f.length;m<d;m++)for(var h=f[m],x=r[h.materialIndex],g=Math.max(h.start,p.start),y=Math.min(i.count,Math.min(h.start+h.count,p.start+p.count));g<y;g+=3){var _=i.getX(g),b=i.getX(g+1),U=i.getX(g+2);(a=Oa(this,x,e,Ua,v,s,c,l,u,_,b,U))&&(a.faceIndex=Math.floor(g/3),a.face.materialIndex=h.materialIndex,n.push(a))}else for(var w=Math.max(0,p.start),S=Math.min(i.count,p.start+p.count);w<S;w+=3){var M=i.getX(w),j=i.getX(w+1),k=i.getX(w+2);(a=Oa(this,r,e,Ua,v,s,c,l,u,M,j,k))&&(a.faceIndex=Math.floor(w/3),n.push(a))}else if(void 0!==v)if(Array.isArray(r))for(var C=0,T=f.length;C<T;C++)for(var R=f[C],z=r[R.materialIndex],P=Math.max(R.start,p.start),F=Math.min(v.count,Math.min(R.start+R.count,p.start+p.count));P<F;P+=3){(a=Oa(this,z,e,Ua,v,s,c,l,u,P,P+1,P+2))&&(a.faceIndex=Math.floor(P/3),a.face.materialIndex=R.materialIndex,n.push(a))}else for(var D=Math.max(0,p.start),E=Math.min(v.count,p.start+p.count);D<E;D+=3){(a=Oa(this,r,e,Ua,v,s,c,l,u,D,D+1,D+2))&&(a.faceIndex=Math.floor(D/3),n.push(a))}}}}]),t}(Oo);function Oa(e,n,t,r,o,a,i,v,s,c,l,u){Sa.fromBufferAttribute(o,c),Ma.fromBufferAttribute(o,l),ja.fromBufferAttribute(o,u);var f=e.morphTargetInfluences;if(a&&f){Ra.set(0,0,0),za.set(0,0,0),Pa.set(0,0,0);for(var p=0,m=a.length;p<m;p++){var d=f[p],h=a[p];0!==d&&(ka.fromBufferAttribute(h,c),Ca.fromBufferAttribute(h,l),Ta.fromBufferAttribute(h,u),i?(Ra.addScaledVector(ka,d),za.addScaledVector(Ca,d),Pa.addScaledVector(Ta,d)):(Ra.addScaledVector(ka.sub(Sa),d),za.addScaledVector(Ca.sub(Ma),d),Pa.addScaledVector(Ta.sub(ja),d)))}Sa.add(Ra),Ma.add(za),ja.add(Pa)}e.isSkinnedMesh&&(e.boneTransform(c,Sa),e.boneTransform(l,Ma),e.boneTransform(u,ja));var x=function(e,n,t,r,o,a,i,v){if(null===(n.side===H?r.intersectTriangle(i,a,o,!0,v):r.intersectTriangle(o,a,i,n.side!==X,v)))return null;La.copy(v),La.applyMatrix4(e.matrixWorld);var s=t.ray.origin.distanceTo(La);return s<t.near||s>t.far?null:{distance:s,point:La.clone(),object:e}}(e,n,t,r,Sa,Ma,ja,Ia);if(x){v&&(Fa.fromBufferAttribute(v,c),Da.fromBufferAttribute(v,l),Ea.fromBufferAttribute(v,u),x.uv=Qo.getUV(Ia,Sa,Ma,ja,Fa,Da,Ea,new ir)),s&&(Fa.fromBufferAttribute(s,c),Da.fromBufferAttribute(s,l),Ea.fromBufferAttribute(s,u),x.uv2=Qo.getUV(Ia,Sa,Ma,ja,Fa,Da,Ea,new ir));var g={a:c,b:l,c:u,normal:new Lr,materialIndex:0};Qo.getNormal(Sa,Ma,ja,g.normal),x.face=g}return x}var Ba=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;y(this,t),(e=n.call(this)).type="BoxGeometry",e.parameters={width:r,height:o,depth:a,widthSegments:i,heightSegments:v,depthSegments:s};var c=M(e);i=Math.floor(i),v=Math.floor(v),s=Math.floor(s);var l=[],u=[],f=[],p=[],m=0,d=0;function h(e,n,t,r,o,a,i,v,s,h,x){for(var g=a/s,y=i/h,_=a/2,b=i/2,U=v/2,w=s+1,S=h+1,M=0,j=0,k=new Lr,C=0;C<S;C++)for(var T=C*y-b,R=0;R<w;R++){var z=R*g-_;k[e]=z*r,k[n]=T*o,k[t]=U,u.push(k.x,k.y,k.z),k[e]=0,k[n]=0,k[t]=v>0?1:-1,f.push(k.x,k.y,k.z),p.push(R/s),p.push(1-C/h),M+=1}for(var P=0;P<h;P++)for(var F=0;F<s;F++){var D=m+F+w*P,E=m+F+w*(P+1),I=m+(F+1)+w*(P+1),L=m+(F+1)+w*P;l.push(D,E,L),l.push(E,I,L),j+=6}c.addGroup(d,j,x),d+=j,m+=M}return h("z","y","x",-1,-1,a,o,r,s,v,0),h("z","y","x",1,-1,a,o,-r,s,v,1),h("x","z","y",1,1,r,a,o,i,s,2),h("x","z","y",1,-1,r,a,-o,i,s,3),h("x","y","z",1,-1,r,o,a,i,v,4),h("x","y","z",-1,-1,r,o,-a,i,v,5),e.setIndex(l),e.setAttribute("position",new ua(u,3)),e.setAttribute("normal",new ua(f,3)),e.setAttribute("uv",new ua(p,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}]),t}(_a);function Na(e){var n={};for(var t in e)for(var r in n[t]={},e[t]){var o=e[t][r];o&&(o.isColor||o.isMatrix3||o.isMatrix4||o.isVector2||o.isVector3||o.isVector4||o.isTexture||o.isQuaternion)?n[t][r]=o.clone():Array.isArray(o)?n[t][r]=o.slice():n[t][r]=o}return n}function Ga(e){for(var n={},t=0;t<e.length;t++){var r=Na(e[t]);for(var o in r)n[o]=r[o]}return n}var Va={clone:Na,merge:Ga},qa=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isShaderMaterial=!0,r.type="ShaderMaterial",r.defines={},r.uniforms={},r.uniformsGroups=[],r.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",r.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",r.linewidth=1,r.wireframe=!1,r.wireframeLinewidth=1,r.fog=!1,r.lights=!1,r.clipping=!1,r.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},r.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},r.index0AttributeName=void 0,r.uniformsNeedUpdate=!1,r.glslVersion=null,void 0!==e&&r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Na(e.uniforms),this.uniformsGroups=function(e){for(var n=[],t=0;t<e.length;t++)n.push(e[t].clone());return n}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);for(var r in n.glslVersion=this.glslVersion,n.uniforms={},this.uniforms){var o=this.uniforms[r].value;o&&o.isTexture?n.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?n.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?n.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?n.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?n.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?n.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?n.uniforms[r]={type:"m4",value:o.toArray()}:n.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;var a={};for(var i in this.extensions)!0===this.extensions[i]&&(a[i]=!0);return Object.keys(a).length>0&&(n.extensions=a),n}}]),t}($o),Wa=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isCamera=!0,e.type="Camera",e.matrixWorldInverse=new po,e.projectionMatrix=new po,e.projectionMatrixInverse=new po,e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}},{key:"updateMatrixWorld",value:function(e){P(w(t.prototype),"updateMatrixWorld",this).call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"updateWorldMatrix",value:function(e,n){P(w(t.prototype),"updateWorldMatrix",this).call(this,e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),t}(Oo),Ha=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;return y(this,t),(e=n.call(this)).isPerspectiveCamera=!0,e.type="PerspectiveCamera",e.fov=r,e.zoom=1,e.near=a,e.far=i,e.focus=10,e.aspect=o,e.view=null,e.filmGauge=35,e.filmOffset=0,e.updateProjectionMatrix(),e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}},{key:"setFocalLength",value:function(e){var n=.5*this.getFilmHeight()/e;this.fov=2*Zt*Math.atan(n),this.updateProjectionMatrix()}},{key:"getFocalLength",value:function(){var e=Math.tan(.5*Yt*this.fov);return.5*this.getFilmHeight()/e}},{key:"getEffectiveFOV",value:function(){return 2*Zt*Math.atan(Math.tan(.5*Yt*this.fov)/this.zoom)}},{key:"getFilmWidth",value:function(){return this.filmGauge*Math.min(this.aspect,1)}},{key:"getFilmHeight",value:function(){return this.filmGauge/Math.max(this.aspect,1)}},{key:"setViewOffset",value:function(e,n,t,r,o,a){this.aspect=e/n,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=t,this.view.offsetY=r,this.view.width=o,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=this.near,n=e*Math.tan(.5*Yt*this.fov)/this.zoom,t=2*n,r=this.aspect*t,o=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){var i=a.fullWidth,v=a.fullHeight;o+=a.offsetX*r/i,n-=a.offsetY*t/v,r*=a.width/i,t*=a.height/v}var s=this.filmOffset;0!==s&&(o+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+r,n,n-t,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,null!==this.view&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}]),t}(Wa),Xa=90,Ya=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;y(this,t),(a=n.call(this)).type="CubeCamera",a.renderTarget=o;var i=new Ha(Xa,1,e,r);i.layers=a.layers,i.up.set(0,-1,0),i.lookAt(new Lr(1,0,0)),a.add(i);var v=new Ha(Xa,1,e,r);v.layers=a.layers,v.up.set(0,-1,0),v.lookAt(new Lr(-1,0,0)),a.add(v);var s=new Ha(Xa,1,e,r);s.layers=a.layers,s.up.set(0,0,1),s.lookAt(new Lr(0,1,0)),a.add(s);var c=new Ha(Xa,1,e,r);c.layers=a.layers,c.up.set(0,0,-1),c.lookAt(new Lr(0,-1,0)),a.add(c);var l=new Ha(Xa,1,e,r);l.layers=a.layers,l.up.set(0,-1,0),l.lookAt(new Lr(0,0,1)),a.add(l);var u=new Ha(Xa,1,e,r);return u.layers=a.layers,u.up.set(0,-1,0),u.lookAt(new Lr(0,0,-1)),a.add(u),a}return b(t,[{key:"update",value:function(e,n){null===this.parent&&this.updateMatrixWorld();var t=this.renderTarget,r=s(this.children,6),o=r[0],a=r[1],i=r[2],v=r[3],c=r[4],l=r[5],u=e.getRenderTarget(),f=e.toneMapping,p=e.xr.enabled;e.toneMapping=ke,e.xr.enabled=!1;var m=t.texture.generateMipmaps;t.texture.generateMipmaps=!1,e.setRenderTarget(t,0),e.render(n,o),e.setRenderTarget(t,1),e.render(n,a),e.setRenderTarget(t,2),e.render(n,i),e.setRenderTarget(t,3),e.render(n,v),e.setRenderTarget(t,4),e.render(n,c),t.texture.generateMipmaps=m,e.setRenderTarget(t,5),e.render(n,l),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=p,t.texture.needsPMREMUpdate=!0}}]),t}(Oo),Za=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s,c,l,u){var f;return y(this,t),e=void 0!==e?e:[],r=void 0!==r?r:De,(f=n.call(this,e,r,o,a,i,v,s,c,l,u)).isCubeTexture=!0,f.flipY=!1,f}return b(t,[{key:"images",get:function(){return this.image},set:function(e){this.image=e}}]),t}(Cr),Qa=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};y(this,t),(e=n.call(this,r,r,o)).isWebGLCubeRenderTarget=!0;var a={width:r,height:r,depth:1},i=[a,a,a,a,a,a];return e.texture=new Za(i,o.mapping,o.wrapS,o.wrapT,o.magFilter,o.minFilter,o.format,o.type,o.anisotropy,o.encoding),e.texture.isRenderTargetTexture=!0,e.texture.generateMipmaps=void 0!==o.generateMipmaps&&o.generateMipmaps,e.texture.minFilter=void 0!==o.minFilter?o.minFilter:Xe,e}return b(t,[{key:"fromEquirectangularTexture",value:function(e,n){this.texture.type=n.type,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;var t={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",o="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Ba(5,5,5),i=new qa({name:"CubemapFromEquirect",uniforms:Na(t),vertexShader:r,fragmentShader:o,side:H,blending:Y});i.uniforms.tEquirect.value=n;var v=new Aa(a,i),s=n.minFilter;return n.minFilter===Qe&&(n.minFilter=Xe),new Ya(1,10,this).update(e,v),n.minFilter=s,v.geometry.dispose(),v.material.dispose(),this}},{key:"clear",value:function(e,n,t,r){for(var o=e.getRenderTarget(),a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,t,r);e.setRenderTarget(o)}}]),t}(Rr),Ja=new Lr,$a=new Lr,Ka=new vr,ei=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr(1,0,0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,e),this.isPlane=!0,this.normal=n,this.constant=t}return b(e,[{key:"set",value:function(e,n){return this.normal.copy(e),this.constant=n,this}},{key:"setComponents",value:function(e,n,t,r){return this.normal.set(e,n,t),this.constant=r,this}},{key:"setFromNormalAndCoplanarPoint",value:function(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,n,t){var r=Ja.subVectors(t,n).cross($a.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.constant*=-1,this.normal.negate(),this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,n){return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"intersectLine",value:function(e,n){var t=e.delta(Ja),r=this.normal.dot(t);if(0===r)return 0===this.distanceToPoint(e.start)?n.copy(e.start):null;var o=-(e.start.dot(this.normal)+this.constant)/r;return o<0||o>1?null:n.copy(t).multiplyScalar(o).add(e.start)}},{key:"intersectsLine",value:function(e){var n=this.distanceToPoint(e.start),t=this.distanceToPoint(e.end);return n<0&&t>0||t<0&&n>0}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"applyMatrix4",value:function(e,n){var t=n||Ka.getNormalMatrix(e),r=this.coplanarPoint(Ja).applyMatrix4(e),o=this.normal.applyMatrix3(t).normalize();return this.constant=-r.dot(o),this}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),ni=new oo,ti=new Lr,ri=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ei,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ei,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new ei,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new ei,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new ei,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new ei;y(this,e),this.planes=[n,t,r,o,a,i]}return b(e,[{key:"set",value:function(e,n,t,r,o,a){var i=this.planes;return i[0].copy(e),i[1].copy(n),i[2].copy(t),i[3].copy(r),i[4].copy(o),i[5].copy(a),this}},{key:"copy",value:function(e){for(var n=this.planes,t=0;t<6;t++)n[t].copy(e.planes[t]);return this}},{key:"setFromProjectionMatrix",value:function(e){var n=this.planes,t=e.elements,r=t[0],o=t[1],a=t[2],i=t[3],v=t[4],s=t[5],c=t[6],l=t[7],u=t[8],f=t[9],p=t[10],m=t[11],d=t[12],h=t[13],x=t[14],g=t[15];return n[0].setComponents(i-r,l-v,m-u,g-d).normalize(),n[1].setComponents(i+r,l+v,m+u,g+d).normalize(),n[2].setComponents(i+o,l+s,m+f,g+h).normalize(),n[3].setComponents(i-o,l-s,m-f,g-h).normalize(),n[4].setComponents(i-a,l-c,m-p,g-x).normalize(),n[5].setComponents(i+a,l+c,m+p,g+x).normalize(),this}},{key:"intersectsObject",value:function(e){var n=e.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),ni.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ni)}},{key:"intersectsSprite",value:function(e){return ni.center.set(0,0,0),ni.radius=.7071067811865476,ni.applyMatrix4(e.matrixWorld),this.intersectsSphere(ni)}},{key:"intersectsSphere",value:function(e){for(var n=this.planes,t=e.center,r=-e.radius,o=0;o<6;o++){if(n[o].distanceToPoint(t)<r)return!1}return!0}},{key:"intersectsBox",value:function(e){for(var n=this.planes,t=0;t<6;t++){var r=n[t];if(ti.x=r.normal.x>0?e.max.x:e.min.x,ti.y=r.normal.y>0?e.max.y:e.min.y,ti.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(ti)<0)return!1}return!0}},{key:"containsPoint",value:function(e){for(var n=this.planes,t=0;t<6;t++)if(n[t].distanceToPoint(e)<0)return!1;return!0}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();function oi(){var e=null,n=!1,t=null,r=null;function o(n,a){t(n,a),r=e.requestAnimationFrame(o)}return{start:function(){!0!==n&&null!==t&&(r=e.requestAnimationFrame(o),n=!0)},stop:function(){e.cancelAnimationFrame(r),n=!1},setAnimationLoop:function(e){t=e},setContext:function(n){e=n}}}function ai(e,n){var t=n.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);var t=r.get(n);t&&(e.deleteBuffer(t.buffer),r.delete(n))},update:function(n,o){if(n.isGLBufferAttribute){var a=r.get(n);(!a||a.version<n.version)&&r.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version})}else{n.isInterleavedBufferAttribute&&(n=n.data);var i=r.get(n);void 0===i?r.set(n,function(n,r){var o,a=n.array,i=n.usage,v=e.createBuffer();if(e.bindBuffer(r,v),e.bufferData(r,a,i),n.onUploadCallback(),a instanceof Float32Array)o=5126;else if(a instanceof Uint16Array)if(n.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(a instanceof Int16Array)o=5122;else if(a instanceof Uint32Array)o=5125;else if(a instanceof Int32Array)o=5124;else if(a instanceof Int8Array)o=5120;else if(a instanceof Uint8Array)o=5121;else{if(!(a instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);o=5121}return{buffer:v,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:n.version}}(n,o)):i.version<n.version&&(!function(n,r,o){var a=r.array,i=r.updateRange;e.bindBuffer(o,n),-1===i.count?e.bufferSubData(o,0,a):(t?e.bufferSubData(o,i.offset*a.BYTES_PER_ELEMENT,a,i.offset,i.count):e.bufferSubData(o,i.offset*a.BYTES_PER_ELEMENT,a.subarray(i.offset,i.offset+i.count)),i.count=-1)}(i.buffer,n,o),i.version=n.version)}}}}var ii=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;y(this,t),(e=n.call(this)).type="PlaneGeometry",e.parameters={width:r,height:o,widthSegments:a,heightSegments:i};for(var v=r/2,s=o/2,c=Math.floor(a),l=Math.floor(i),u=c+1,f=l+1,p=r/c,m=o/l,d=[],h=[],x=[],g=[],_=0;_<f;_++)for(var b=_*m-s,U=0;U<u;U++){var w=U*p-v;h.push(w,-b,0),x.push(0,0,1),g.push(U/c),g.push(1-_/l)}for(var S=0;S<l;S++)for(var M=0;M<c;M++){var j=M+u*S,k=M+u*(S+1),C=M+1+u*(S+1),T=M+1+u*S;d.push(j,k,T),d.push(k,C,T)}return e.setIndex(d),e.setAttribute("position",new ua(h,3)),e.setAttribute("normal",new ua(x,3)),e.setAttribute("uv",new ua(g,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.width,e.height,e.widthSegments,e.heightSegments)}}]),t}(_a),vi={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )\t(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},si={common:{diffuse:{value:new wr(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new vr},uv2Transform:{value:new vr},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ir(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new wr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new wr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new vr}},sprite:{diffuse:{value:new wr(16777215)},opacity:{value:1},center:{value:new ir(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new vr}}},ci={basic:{uniforms:Ga([si.common,si.specularmap,si.envmap,si.aomap,si.lightmap,si.fog]),vertexShader:vi.meshbasic_vert,fragmentShader:vi.meshbasic_frag},lambert:{uniforms:Ga([si.common,si.specularmap,si.envmap,si.aomap,si.lightmap,si.emissivemap,si.bumpmap,si.normalmap,si.displacementmap,si.fog,si.lights,{emissive:{value:new wr(0)}}]),vertexShader:vi.meshlambert_vert,fragmentShader:vi.meshlambert_frag},phong:{uniforms:Ga([si.common,si.specularmap,si.envmap,si.aomap,si.lightmap,si.emissivemap,si.bumpmap,si.normalmap,si.displacementmap,si.fog,si.lights,{emissive:{value:new wr(0)},specular:{value:new wr(1118481)},shininess:{value:30}}]),vertexShader:vi.meshphong_vert,fragmentShader:vi.meshphong_frag},standard:{uniforms:Ga([si.common,si.envmap,si.aomap,si.lightmap,si.emissivemap,si.bumpmap,si.normalmap,si.displacementmap,si.roughnessmap,si.metalnessmap,si.fog,si.lights,{emissive:{value:new wr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:vi.meshphysical_vert,fragmentShader:vi.meshphysical_frag},toon:{uniforms:Ga([si.common,si.aomap,si.lightmap,si.emissivemap,si.bumpmap,si.normalmap,si.displacementmap,si.gradientmap,si.fog,si.lights,{emissive:{value:new wr(0)}}]),vertexShader:vi.meshtoon_vert,fragmentShader:vi.meshtoon_frag},matcap:{uniforms:Ga([si.common,si.bumpmap,si.normalmap,si.displacementmap,si.fog,{matcap:{value:null}}]),vertexShader:vi.meshmatcap_vert,fragmentShader:vi.meshmatcap_frag},points:{uniforms:Ga([si.points,si.fog]),vertexShader:vi.points_vert,fragmentShader:vi.points_frag},dashed:{uniforms:Ga([si.common,si.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:vi.linedashed_vert,fragmentShader:vi.linedashed_frag},depth:{uniforms:Ga([si.common,si.displacementmap]),vertexShader:vi.depth_vert,fragmentShader:vi.depth_frag},normal:{uniforms:Ga([si.common,si.bumpmap,si.normalmap,si.displacementmap,{opacity:{value:1}}]),vertexShader:vi.meshnormal_vert,fragmentShader:vi.meshnormal_frag},sprite:{uniforms:Ga([si.sprite,si.fog]),vertexShader:vi.sprite_vert,fragmentShader:vi.sprite_frag},background:{uniforms:{uvTransform:{value:new vr},t2D:{value:null}},vertexShader:vi.background_vert,fragmentShader:vi.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:vi.backgroundCube_vert,fragmentShader:vi.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:vi.cube_vert,fragmentShader:vi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:vi.equirect_vert,fragmentShader:vi.equirect_frag},distanceRGBA:{uniforms:Ga([si.common,si.displacementmap,{referencePosition:{value:new Lr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:vi.distanceRGBA_vert,fragmentShader:vi.distanceRGBA_frag},shadow:{uniforms:Ga([si.lights,si.fog,{color:{value:new wr(0)},opacity:{value:1}}]),vertexShader:vi.shadow_vert,fragmentShader:vi.shadow_frag}};function li(e,n,t,r,o,a,i){var v,s,c=new wr(0),l=!0===a?0:1,u=null,f=0,p=null;function m(e,n){r.buffers.color.setClear(e.r,e.g,e.b,n,i)}return{getClearColor:function(){return c},setClearColor:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;c.set(e),m(c,l=n)},getClearAlpha:function(){return l},setClearAlpha:function(e){m(c,l=e)},render:function(r,a){var i=!1,d=!0===a.isScene?a.background:null;d&&d.isTexture&&(d=(a.backgroundBlurriness>0?t:n).get(d));var h=e.xr,x=h.getSession&&h.getSession();x&&"additive"===x.environmentBlendMode&&(d=null),null===d?m(c,l):d&&d.isColor&&(m(d,1),i=!0),(e.autoClear||i)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),d&&(d.isCubeTexture||d.mapping===Ae)?(void 0===s&&((s=new Aa(new Ba(1,1,1),new qa({name:"BackgroundCubeMaterial",uniforms:Na(ci.backgroundCube.uniforms),vertexShader:ci.backgroundCube.vertexShader,fragmentShader:ci.backgroundCube.fragmentShader,side:H,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,n,t){this.matrixWorld.copyPosition(t.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(s)),s.material.uniforms.envMap.value=d,s.material.uniforms.flipEnvMap.value=d.isCubeTexture&&!1===d.isRenderTargetTexture?-1:1,s.material.uniforms.backgroundBlurriness.value=a.backgroundBlurriness,u===d&&f===d.version&&p===e.toneMapping||(s.material.needsUpdate=!0,u=d,f=d.version,p=e.toneMapping),s.layers.enableAll(),r.unshift(s,s.geometry,s.material,0,0,null)):d&&d.isTexture&&(void 0===v&&((v=new Aa(new ii(2,2),new qa({name:"BackgroundMaterial",uniforms:Na(ci.background.uniforms),vertexShader:ci.background.vertexShader,fragmentShader:ci.background.fragmentShader,side:W,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(v.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(v)),v.material.uniforms.t2D.value=d,!0===d.matrixAutoUpdate&&d.updateMatrix(),v.material.uniforms.uvTransform.value.copy(d.matrix),u===d&&f===d.version&&p===e.toneMapping||(v.material.needsUpdate=!0,u=d,f=d.version,p=e.toneMapping),v.layers.enableAll(),r.unshift(v,v.geometry,v.material,0,0,null))}}}function ui(e,n,t,r){var o=e.getParameter(34921),a=r.isWebGL2?null:n.get("OES_vertex_array_object"),i=r.isWebGL2||null!==a,v={},s=p(null),c=s,l=!1;function u(n){return r.isWebGL2?e.bindVertexArray(n):a.bindVertexArrayOES(n)}function f(n){return r.isWebGL2?e.deleteVertexArray(n):a.deleteVertexArrayOES(n)}function p(e){for(var n=[],t=[],r=[],a=0;a<o;a++)n[a]=0,t[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:n,enabledAttributes:t,attributeDivisors:r,object:e,attributes:{},index:null}}function m(){for(var e=c.newAttributes,n=0,t=e.length;n<t;n++)e[n]=0}function d(e){h(e,0)}function h(t,o){var a=c.newAttributes,i=c.enabledAttributes,v=c.attributeDivisors;(a[t]=1,0===i[t]&&(e.enableVertexAttribArray(t),i[t]=1),v[t]!==o)&&((r.isWebGL2?e:n.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](t,o),v[t]=o)}function x(){for(var n=c.newAttributes,t=c.enabledAttributes,r=0,o=t.length;r<o;r++)t[r]!==n[r]&&(e.disableVertexAttribArray(r),t[r]=0)}function g(n,t,o,a,i,v){!0!==r.isWebGL2||5124!==o&&5125!==o?e.vertexAttribPointer(n,t,o,a,i,v):e.vertexAttribIPointer(n,t,o,i,v)}function y(){_(),l=!0,c!==s&&u((c=s).object)}function _(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:function(o,s,f,y,_){var b=!1;if(i){var U=function(n,t,o){var i=!0===o.wireframe,s=v[n.id];void 0===s&&(s={},v[n.id]=s);var c=s[t.id];void 0===c&&(c={},s[t.id]=c);var l=c[i];void 0===l&&(l=p(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),c[i]=l);return l}(y,f,s);c!==U&&u((c=U).object),b=function(e,n,t,r){var o=c.attributes,a=n.attributes,i=0,v=t.getAttributes();for(var s in v){if(v[s].location>=0){var l=o[s],u=a[s];if(void 0===u&&("instanceMatrix"===s&&e.instanceMatrix&&(u=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(u=e.instanceColor)),void 0===l)return!0;if(l.attribute!==u)return!0;if(u&&l.data!==u.data)return!0;i++}}return c.attributesNum!==i||c.index!==r}(o,y,f,_),b&&function(e,n,t,r){var o={},a=n.attributes,i=0,v=t.getAttributes();for(var s in v){if(v[s].location>=0){var l=a[s];void 0===l&&("instanceMatrix"===s&&e.instanceMatrix&&(l=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(l=e.instanceColor));var u={};u.attribute=l,l&&l.data&&(u.data=l.data),o[s]=u,i++}}c.attributes=o,c.attributesNum=i,c.index=r}(o,y,f,_)}else{var w=!0===s.wireframe;c.geometry===y.id&&c.program===f.id&&c.wireframe===w||(c.geometry=y.id,c.program=f.id,c.wireframe=w,b=!0)}null!==_&&t.update(_,34963),(b||l)&&(l=!1,function(o,a,i,v){if(!1===r.isWebGL2&&(o.isInstancedMesh||v.isInstancedBufferGeometry)&&null===n.get("ANGLE_instanced_arrays"))return;m();var s=v.attributes,c=i.getAttributes(),l=a.defaultAttributeValues;for(var u in c){var f=c[u];if(f.location>=0){var p=s[u];if(void 0===p&&("instanceMatrix"===u&&o.instanceMatrix&&(p=o.instanceMatrix),"instanceColor"===u&&o.instanceColor&&(p=o.instanceColor)),void 0!==p){var y=p.normalized,_=p.itemSize,b=t.get(p);if(void 0===b)continue;var U=b.buffer,w=b.type,S=b.bytesPerElement;if(p.isInterleavedBufferAttribute){var M=p.data,j=M.stride,k=p.offset;if(M.isInstancedInterleavedBuffer){for(var C=0;C<f.locationSize;C++)h(f.location+C,M.meshPerAttribute);!0!==o.isInstancedMesh&&void 0===v._maxInstanceCount&&(v._maxInstanceCount=M.meshPerAttribute*M.count)}else for(var T=0;T<f.locationSize;T++)d(f.location+T);e.bindBuffer(34962,U);for(var R=0;R<f.locationSize;R++)g(f.location+R,_/f.locationSize,w,y,j*S,(k+_/f.locationSize*R)*S)}else{if(p.isInstancedBufferAttribute){for(var z=0;z<f.locationSize;z++)h(f.location+z,p.meshPerAttribute);!0!==o.isInstancedMesh&&void 0===v._maxInstanceCount&&(v._maxInstanceCount=p.meshPerAttribute*p.count)}else for(var P=0;P<f.locationSize;P++)d(f.location+P);e.bindBuffer(34962,U);for(var F=0;F<f.locationSize;F++)g(f.location+F,_/f.locationSize,w,y,_*S,_/f.locationSize*F*S)}}else if(void 0!==l){var D=l[u];if(void 0!==D)switch(D.length){case 2:e.vertexAttrib2fv(f.location,D);break;case 3:e.vertexAttrib3fv(f.location,D);break;case 4:e.vertexAttrib4fv(f.location,D);break;default:e.vertexAttrib1fv(f.location,D)}}}}x()}(o,s,f,y),null!==_&&e.bindBuffer(34963,t.get(_).buffer))},reset:y,resetDefaultState:_,dispose:function(){for(var e in y(),v){var n=v[e];for(var t in n){var r=n[t];for(var o in r)f(r[o].object),delete r[o];delete n[t]}delete v[e]}},releaseStatesOfGeometry:function(e){if(void 0!==v[e.id]){var n=v[e.id];for(var t in n){var r=n[t];for(var o in r)f(r[o].object),delete r[o];delete n[t]}delete v[e.id]}},releaseStatesOfProgram:function(e){for(var n in v){var t=v[n];if(void 0!==t[e.id]){var r=t[e.id];for(var o in r)f(r[o].object),delete r[o];delete t[e.id]}}},initAttributes:m,enableAttribute:d,disableUnusedAttributes:x}}function fi(e,n,t,r){var o,a=r.isWebGL2;this.setMode=function(e){o=e},this.render=function(n,r){e.drawArrays(o,n,r),t.update(r,o,1)},this.renderInstances=function(r,i,v){if(0!==v){var s,c;if(a)s=e,c="drawArraysInstanced";else if(c="drawArraysInstancedANGLE",null===(s=n.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");s[c](o,r,i,v),t.update(i,o,v)}}}function pi(e,n,t){var r;function o(n){if("highp"===n){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";n="mediump"}return"mediump"===n&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var a="undefined"!==typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,i=void 0!==t.precision?t.precision:"highp",v=o(i);v!==i&&(console.warn("THREE.WebGLRenderer:",i,"not supported, using",v,"instead."),i=v);var s=a||n.has("WEBGL_draw_buffers"),c=!0===t.logarithmicDepthBuffer,l=e.getParameter(34930),u=e.getParameter(35660),f=e.getParameter(3379),p=e.getParameter(34076),m=e.getParameter(34921),d=e.getParameter(36347),h=e.getParameter(36348),x=e.getParameter(36349),g=u>0,y=a||n.has("OES_texture_float");return{isWebGL2:a,drawBuffers:s,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===n.has("EXT_texture_filter_anisotropic")){var t=n.get("EXT_texture_filter_anisotropic");r=e.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:o,precision:i,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:d,maxVaryings:h,maxFragmentUniforms:x,vertexTextures:g,floatFragmentTextures:y,floatVertexTextures:g&&y,maxSamples:a?e.getParameter(36183):0}}function mi(e){var n=this,t=null,r=0,o=!1,a=!1,i=new ei,v=new vr,s={value:null,needsUpdate:!1};function c(){s.value!==t&&(s.value=t,s.needsUpdate=r>0),n.numPlanes=r,n.numIntersection=0}function l(e,t,r,o){var a=null!==e?e.length:0,c=null;if(0!==a){if(c=s.value,!0!==o||null===c){var l=r+4*a,u=t.matrixWorldInverse;v.getNormalMatrix(u),(null===c||c.length<l)&&(c=new Float32Array(l));for(var f=0,p=r;f!==a;++f,p+=4)i.copy(e[f]).applyMatrix4(u,v),i.normal.toArray(c,p),c[p+3]=i.constant}s.value=c,s.needsUpdate=!0}return n.numPlanes=a,n.numIntersection=0,c}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,n,a){var i=0!==e.length||n||0!==r||o;return o=n,t=l(e,a,0),r=e.length,i},this.beginShadows=function(){a=!0,l(null)},this.endShadows=function(){a=!1,c()},this.setState=function(n,i,v){var u=n.clippingPlanes,f=n.clipIntersection,p=n.clipShadows,m=e.get(n);if(!o||null===u||0===u.length||a&&!p)a?l(null):c();else{var d=a?0:r,h=4*d,x=m.clippingState||null;s.value=x,x=l(u,i,h,v);for(var g=0;g!==h;++g)x[g]=t[g];m.clippingState=x,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=d}}}function di(e){var n=new WeakMap;function t(e,n){return n===Ie?e.mapping=De:n===Le&&(e.mapping=Ee),e}function r(e){var t=e.target;t.removeEventListener("dispose",r);var o=n.get(t);void 0!==o&&(n.delete(t),o.dispose())}return{get:function(o){if(o&&o.isTexture&&!1===o.isRenderTargetTexture){var a=o.mapping;if(a===Ie||a===Le){if(n.has(o))return t(n.get(o).texture,o.mapping);var i=o.image;if(i&&i.height>0){var v=new Qa(i.height/2);return v.fromEquirectangularTexture(e,o),n.set(o,v),o.addEventListener("dispose",r),t(v.texture,o.mapping)}return null}}return o},dispose:function(){n=new WeakMap}}}ci.physical={uniforms:Ga([ci.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ir(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new wr(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ir},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new wr(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new wr(1,1,1)},specularColorMap:{value:null}}]),vertexShader:vi.meshphysical_vert,fragmentShader:vi.meshphysical_frag};var hi=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;return y(this,t),(e=n.call(this)).isOrthographicCamera=!0,e.type="OrthographicCamera",e.zoom=1,e.view=null,e.left=r,e.right=o,e.top=a,e.bottom=i,e.near=v,e.far=s,e.updateProjectionMatrix(),e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}},{key:"setViewOffset",value:function(e,n,t,r,o,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=t,this.view.offsetY=r,this.view.width=o,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),t=(this.right+this.left)/2,r=(this.top+this.bottom)/2,o=t-e,a=t+e,i=r+n,v=r-n;if(null!==this.view&&this.view.enabled){var s=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a=(o+=s*this.view.offsetX)+s*this.view.width,v=(i-=c*this.view.offsetY)-c*this.view.height}this.projectionMatrix.makeOrthographic(o,a,i,v,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,null!==this.view&&(n.object.view=Object.assign({},this.view)),n}}]),t}(Wa),xi=[.125,.215,.35,.446,.526,.582],gi=20,yi=new hi,_i=new wr,bi=null,Ui=(1+Math.sqrt(5))/2,wi=1/Ui,Si=[new Lr(1,1,1),new Lr(-1,1,1),new Lr(1,1,-1),new Lr(-1,1,-1),new Lr(0,Ui,wi),new Lr(0,Ui,-wi),new Lr(wi,0,Ui),new Lr(-wi,0,Ui),new Lr(Ui,wi,0),new Lr(-Ui,wi,0)],Mi=function(){function e(n){y(this,e),this._renderer=n,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}return b(e,[{key:"fromScene",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;bi=this._renderer.getRenderTarget(),this._setSize(256);var o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(e,t,r,o),n>0&&this._blur(o,0,0,n),this._applyPMREM(o),this._cleanup(o),o}},{key:"fromEquirectangular",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,n)}},{key:"fromCubemap",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,n)}},{key:"compileCubemapShader",value:function(){null===this._cubemapMaterial&&(this._cubemapMaterial=Ti(),this._compileMaterial(this._cubemapMaterial))}},{key:"compileEquirectangularShader",value:function(){null===this._equirectMaterial&&(this._equirectMaterial=Ci(),this._compileMaterial(this._equirectMaterial))}},{key:"dispose",value:function(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}},{key:"_setSize",value:function(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}},{key:"_dispose",value:function(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(var e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}},{key:"_cleanup",value:function(e){this._renderer.setRenderTarget(bi),e.scissorTest=!1,ki(e,0,0,e.width,e.height)}},{key:"_fromTexture",value:function(e,n){e.mapping===De||e.mapping===Ee?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),bi=this._renderer.getRenderTarget();var t=n||this._allocateTargets();return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}},{key:"_allocateTargets",value:function(){var e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,t={magFilter:Xe,minFilter:Xe,generateMipmaps:!1,type:an,format:fn,encoding:st,depthBuffer:!1},r=ji(e,n,t);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=ji(e,n,t);var o=this._lodMax,a=function(e){for(var n=[],t=[],r=[],o=e,a=e-4+1+xi.length,i=0;i<a;i++){var v=Math.pow(2,o);t.push(v);var s=1/v;i>e-4?s=xi[i-e+4-1]:0===i&&(s=0),r.push(s);for(var c=1/(v-2),l=-c,u=1+c,f=[l,l,u,l,u,u,l,l,u,u,l,u],p=6,m=6,d=3,h=2,x=1,g=new Float32Array(d*m*p),y=new Float32Array(h*m*p),_=new Float32Array(x*m*p),b=0;b<p;b++){var U=b%3*2/3-1,w=b>2?0:-1,S=[U,w,0,U+2/3,w,0,U+2/3,w+1,0,U,w,0,U+2/3,w+1,0,U,w+1,0];g.set(S,d*m*b),y.set(f,h*m*b);var M=[b,b,b,b,b,b];_.set(M,x*m*b)}var j=new _a;j.setAttribute("position",new ta(g,d)),j.setAttribute("uv",new ta(y,h)),j.setAttribute("faceIndex",new ta(_,x)),n.push(j),o>4&&o--}return{lodPlanes:n,sizeLods:t,sigmas:r}}(o);this._sizeLods=a.sizeLods,this._lodPlanes=a.lodPlanes,this._sigmas=a.sigmas,this._blurMaterial=function(e,n,t){var r=new Float32Array(gi),o=new Lr(0,1,0);return new qa({name:"SphericalGaussianBlur",defines:{n:gi,CUBEUV_TEXEL_WIDTH:1/n,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:"".concat(e,".0")},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:o}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}(o,e,n)}return r}},{key:"_compileMaterial",value:function(e){var n=new Aa(this._lodPlanes[0],e);this._renderer.compile(n,yi)}},{key:"_sceneToCubeUV",value:function(e,n,t,r){var o=new Ha(90,1,n,t),a=[1,-1,1,1,1,1],i=[1,1,1,-1,-1,-1],v=this._renderer,s=v.autoClear,c=v.toneMapping;v.getClearColor(_i),v.toneMapping=ke,v.autoClear=!1;var l=new Ko({name:"PMREM.Background",side:H,depthWrite:!1,depthTest:!1}),u=new Aa(new Ba,l),f=!1,p=e.background;p?p.isColor&&(l.color.copy(p),e.background=null,f=!0):(l.color.copy(_i),f=!0);for(var m=0;m<6;m++){var d=m%3;0===d?(o.up.set(0,a[m],0),o.lookAt(i[m],0,0)):1===d?(o.up.set(0,0,a[m]),o.lookAt(0,i[m],0)):(o.up.set(0,a[m],0),o.lookAt(0,0,i[m]));var h=this._cubeSize;ki(r,d*h,m>2?h:0,h,h),v.setRenderTarget(r),f&&v.render(u,o),v.render(e,o)}u.geometry.dispose(),u.material.dispose(),v.toneMapping=c,v.autoClear=s,e.background=p}},{key:"_textureToCubeUV",value:function(e,n){var t=this._renderer,r=e.mapping===De||e.mapping===Ee;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=Ti()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Ci());var o=r?this._cubemapMaterial:this._equirectMaterial,a=new Aa(this._lodPlanes[0],o);o.uniforms.envMap.value=e;var i=this._cubeSize;ki(n,0,0,3*i,2*i),t.setRenderTarget(n),t.render(a,yi)}},{key:"_applyPMREM",value:function(e){var n=this._renderer,t=n.autoClear;n.autoClear=!1;for(var r=1;r<this._lodPlanes.length;r++){var o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Si[(r-1)%Si.length];this._blur(e,r-1,r,o,a)}n.autoClear=t}},{key:"_blur",value:function(e,n,t,r,o){var a=this._pingPongRenderTarget;this._halfBlur(e,a,n,t,r,"latitudinal",o),this._halfBlur(a,e,t,t,r,"longitudinal",o)}},{key:"_halfBlur",value:function(e,n,t,r,o,a,i){var v=this._renderer,s=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var c=new Aa(this._lodPlanes[r],s),l=s.uniforms,u=this._sizeLods[t]-1,f=isFinite(o)?Math.PI/(2*u):2*Math.PI/39,p=o/f,m=isFinite(o)?1+Math.floor(3*p):gi;m>gi&&console.warn("sigmaRadians, ".concat(o,", is too large and will clip, as it requested ").concat(m," samples when the maximum is set to ").concat(gi));for(var d=[],h=0,x=0;x<gi;++x){var g=x/p,y=Math.exp(-g*g/2);d.push(y),0===x?h+=y:x<m&&(h+=2*y)}for(var _=0;_<d.length;_++)d[_]=d[_]/h;l.envMap.value=e.texture,l.samples.value=m,l.weights.value=d,l.latitudinal.value="latitudinal"===a,i&&(l.poleAxis.value=i);var b=this._lodMax;l.dTheta.value=f,l.mipInt.value=b-t;var U=this._sizeLods[r];ki(n,3*U*(r>b-4?r-b+4:0),4*(this._cubeSize-U),3*U,2*U),v.setRenderTarget(n),v.render(c,yi)}}]),e}();function ji(e,n,t){var r=new Rr(e,n,t);return r.texture.mapping=Ae,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function ki(e,n,t,r,o){e.viewport.set(n,t,r,o),e.scissor.set(n,t,r,o)}function Ci(){return new qa({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}function Ti(){return new qa({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}function Ri(e){var n=new WeakMap,t=null;function r(e){var t=e.target;t.removeEventListener("dispose",r);var o=n.get(t);void 0!==o&&(n.delete(t),o.dispose())}return{get:function(o){if(o&&o.isTexture){var a=o.mapping,i=a===Ie||a===Le,v=a===De||a===Ee;if(i||v){if(o.isRenderTargetTexture&&!0===o.needsPMREMUpdate){o.needsPMREMUpdate=!1;var s=n.get(o);return null===t&&(t=new Mi(e)),s=i?t.fromEquirectangular(o,s):t.fromCubemap(o,s),n.set(o,s),s.texture}if(n.has(o))return n.get(o).texture;var c=o.image;if(i&&c&&c.height>0||v&&c&&function(e){for(var n=0,t=6,r=0;r<t;r++)void 0!==e[r]&&n++;return n===t}(c)){null===t&&(t=new Mi(e));var l=i?t.fromEquirectangular(o):t.fromCubemap(o);return n.set(o,l),o.addEventListener("dispose",r),l.texture}return null}}return o},dispose:function(){n=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function zi(e){var n={};function t(t){if(void 0!==n[t])return n[t];var r;switch(t){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(t)}return n[t]=r,r}return{has:function(e){return null!==t(e)},init:function(e){e.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(e){var n=t(e);return null===n&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),n}}}function Pi(e,n,t,r){var o={},a=new WeakMap;function i(e){var v=e.target;for(var s in null!==v.index&&n.remove(v.index),v.attributes)n.remove(v.attributes[s]);v.removeEventListener("dispose",i),delete o[v.id];var c=a.get(v);c&&(n.remove(c),a.delete(v)),r.releaseStatesOfGeometry(v),!0===v.isInstancedBufferGeometry&&delete v._maxInstanceCount,t.memory.geometries--}function v(e){var t=[],r=e.index,o=e.attributes.position,i=0;if(null!==r){var v=r.array;i=r.version;for(var s=0,c=v.length;s<c;s+=3){var l=v[s+0],u=v[s+1],f=v[s+2];t.push(l,u,u,f,f,l)}}else{var p=o.array;i=o.version;for(var m=0,d=p.length/3-1;m<d;m+=3){var h=m+0,x=m+1,g=m+2;t.push(h,x,x,g,g,h)}}var y=new(sr(t)?ca:va)(t,1);y.version=i;var _=a.get(e);_&&n.remove(_),a.set(e,y)}return{get:function(e,n){return!0===o[n.id]||(n.addEventListener("dispose",i),o[n.id]=!0,t.memory.geometries++),n},update:function(e){var t=e.attributes;for(var r in t)n.update(t[r],34962);var o=e.morphAttributes;for(var a in o)for(var i=o[a],v=0,s=i.length;v<s;v++)n.update(i[v],34962)},getWireframeAttribute:function(e){var n=a.get(e);if(n){var t=e.index;null!==t&&n.version<t.version&&v(e)}else v(e);return a.get(e)}}}function Fi(e,n,t,r){var o,a,i,v=r.isWebGL2;this.setMode=function(e){o=e},this.setIndex=function(e){a=e.type,i=e.bytesPerElement},this.render=function(n,r){e.drawElements(o,r,a,n*i),t.update(r,o,1)},this.renderInstances=function(r,s,c){if(0!==c){var l,u;if(v)l=e,u="drawElementsInstanced";else if(u="drawElementsInstancedANGLE",null===(l=n.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](o,s,a,r*i,c),t.update(s,o,c)}}}function Di(e){var n={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:n,programs:null,autoReset:!0,reset:function(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0},update:function(e,t,r){switch(n.calls++,t){case 4:n.triangles+=r*(e/3);break;case 1:n.lines+=r*(e/2);break;case 3:n.lines+=r*(e-1);break;case 2:n.lines+=r*e;break;case 0:n.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function Ei(e,n){return e[0]-n[0]}function Ii(e,n){return Math.abs(n[1])-Math.abs(e[1])}function Li(e,n,t){for(var r={},o=new Float32Array(8),a=new WeakMap,i=new Tr,v=[],s=0;s<8;s++)v[s]=[s,0];return{update:function(s,c,l,u){var f=s.morphTargetInfluences;if(!0===n.isWebGL2){var p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=void 0!==p?p.length:0,d=a.get(c);if(void 0===d||d.count!==m){void 0!==d&&d.texture.dispose();var h=void 0!==c.morphAttributes.position,x=void 0!==c.morphAttributes.normal,g=void 0!==c.morphAttributes.color,y=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],b=c.morphAttributes.color||[],U=0;!0===h&&(U=1),!0===x&&(U=2),!0===g&&(U=3);var w=c.attributes.position.count*U,S=1;w>n.maxTextureSize&&(S=Math.ceil(w/n.maxTextureSize),w=n.maxTextureSize);var M=new Float32Array(w*S*4*m),j=new zr(M,w,S,m);j.type=on,j.needsUpdate=!0;for(var k=4*U,C=0;C<m;C++)for(var T=y[C],R=_[C],z=b[C],P=w*S*4*C,F=0;F<T.count;F++){var D=F*k;!0===h&&(i.fromBufferAttribute(T,F),M[P+D+0]=i.x,M[P+D+1]=i.y,M[P+D+2]=i.z,M[P+D+3]=0),!0===x&&(i.fromBufferAttribute(R,F),M[P+D+4]=i.x,M[P+D+5]=i.y,M[P+D+6]=i.z,M[P+D+7]=0),!0===g&&(i.fromBufferAttribute(z,F),M[P+D+8]=i.x,M[P+D+9]=i.y,M[P+D+10]=i.z,M[P+D+11]=4===z.itemSize?i.w:1)}d={count:m,texture:j,size:new ir(w,S)},a.set(c,d),c.addEventListener("dispose",(function e(){j.dispose(),a.delete(c),c.removeEventListener("dispose",e)}))}for(var E=0,I=0;I<f.length;I++)E+=f[I];var L=c.morphTargetsRelative?1:1-E;u.getUniforms().setValue(e,"morphTargetBaseInfluence",L),u.getUniforms().setValue(e,"morphTargetInfluences",f),u.getUniforms().setValue(e,"morphTargetsTexture",d.texture,t),u.getUniforms().setValue(e,"morphTargetsTextureSize",d.size)}else{var A=void 0===f?0:f.length,O=r[c.id];if(void 0===O||O.length!==A){O=[];for(var B=0;B<A;B++)O[B]=[B,0];r[c.id]=O}for(var N=0;N<A;N++){var G=O[N];G[0]=N,G[1]=f[N]}O.sort(Ii);for(var V=0;V<8;V++)V<A&&O[V][1]?(v[V][0]=O[V][0],v[V][1]=O[V][1]):(v[V][0]=Number.MAX_SAFE_INTEGER,v[V][1]=0);v.sort(Ei);for(var q=c.morphAttributes.position,W=c.morphAttributes.normal,H=0,X=0;X<8;X++){var Y=v[X],Z=Y[0],Q=Y[1];Z!==Number.MAX_SAFE_INTEGER&&Q?(q&&c.getAttribute("morphTarget"+X)!==q[Z]&&c.setAttribute("morphTarget"+X,q[Z]),W&&c.getAttribute("morphNormal"+X)!==W[Z]&&c.setAttribute("morphNormal"+X,W[Z]),o[X]=Q,H+=Q):(q&&!0===c.hasAttribute("morphTarget"+X)&&c.deleteAttribute("morphTarget"+X),W&&!0===c.hasAttribute("morphNormal"+X)&&c.deleteAttribute("morphNormal"+X),o[X]=0)}var J=c.morphTargetsRelative?1:1-H;u.getUniforms().setValue(e,"morphTargetBaseInfluence",J),u.getUniforms().setValue(e,"morphTargetInfluences",o)}}}}function Ai(e,n,t,r){var o=new WeakMap;function a(e){var n=e.target;n.removeEventListener("dispose",a),t.remove(n.instanceMatrix),null!==n.instanceColor&&t.remove(n.instanceColor)}return{update:function(e){var i=r.render.frame,v=e.geometry,s=n.get(e,v);return o.get(s)!==i&&(n.update(s),o.set(s,i)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),t.update(e.instanceMatrix,34962),null!==e.instanceColor&&t.update(e.instanceColor,34962)),s},dispose:function(){o=new WeakMap}}}var Oi=new Cr,Bi=new zr,Ni=new Fr,Gi=new Za,Vi=[],qi=[],Wi=new Float32Array(16),Hi=new Float32Array(9),Xi=new Float32Array(4);function Yi(e,n,t){var r=e[0];if(r<=0||r>0)return e;var o=n*t,a=Vi[o];if(void 0===a&&(a=new Float32Array(o),Vi[o]=a),0!==n){r.toArray(a,0);for(var i=1,v=0;i!==n;++i)v+=t,e[i].toArray(a,v)}return a}function Zi(e,n){if(e.length!==n.length)return!1;for(var t=0,r=e.length;t<r;t++)if(e[t]!==n[t])return!1;return!0}function Qi(e,n){for(var t=0,r=n.length;t<r;t++)e[t]=n[t]}function Ji(e,n){var t=qi[n];void 0===t&&(t=new Int32Array(n),qi[n]=t);for(var r=0;r!==n;++r)t[r]=e.allocateTextureUnit();return t}function $i(e,n){var t=this.cache;t[0]!==n&&(e.uniform1f(this.addr,n),t[0]=n)}function Ki(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y||(e.uniform2f(this.addr,n.x,n.y),t[0]=n.x,t[1]=n.y);else{if(Zi(t,n))return;e.uniform2fv(this.addr,n),Qi(t,n)}}function ev(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z||(e.uniform3f(this.addr,n.x,n.y,n.z),t[0]=n.x,t[1]=n.y,t[2]=n.z);else if(void 0!==n.r)t[0]===n.r&&t[1]===n.g&&t[2]===n.b||(e.uniform3f(this.addr,n.r,n.g,n.b),t[0]=n.r,t[1]=n.g,t[2]=n.b);else{if(Zi(t,n))return;e.uniform3fv(this.addr,n),Qi(t,n)}}function nv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z&&t[3]===n.w||(e.uniform4f(this.addr,n.x,n.y,n.z,n.w),t[0]=n.x,t[1]=n.y,t[2]=n.z,t[3]=n.w);else{if(Zi(t,n))return;e.uniform4fv(this.addr,n),Qi(t,n)}}function tv(e,n){var t=this.cache,r=n.elements;if(void 0===r){if(Zi(t,n))return;e.uniformMatrix2fv(this.addr,!1,n),Qi(t,n)}else{if(Zi(t,r))return;Xi.set(r),e.uniformMatrix2fv(this.addr,!1,Xi),Qi(t,r)}}function rv(e,n){var t=this.cache,r=n.elements;if(void 0===r){if(Zi(t,n))return;e.uniformMatrix3fv(this.addr,!1,n),Qi(t,n)}else{if(Zi(t,r))return;Hi.set(r),e.uniformMatrix3fv(this.addr,!1,Hi),Qi(t,r)}}function ov(e,n){var t=this.cache,r=n.elements;if(void 0===r){if(Zi(t,n))return;e.uniformMatrix4fv(this.addr,!1,n),Qi(t,n)}else{if(Zi(t,r))return;Wi.set(r),e.uniformMatrix4fv(this.addr,!1,Wi),Qi(t,r)}}function av(e,n){var t=this.cache;t[0]!==n&&(e.uniform1i(this.addr,n),t[0]=n)}function iv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y||(e.uniform2i(this.addr,n.x,n.y),t[0]=n.x,t[1]=n.y);else{if(Zi(t,n))return;e.uniform2iv(this.addr,n),Qi(t,n)}}function vv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z||(e.uniform3i(this.addr,n.x,n.y,n.z),t[0]=n.x,t[1]=n.y,t[2]=n.z);else{if(Zi(t,n))return;e.uniform3iv(this.addr,n),Qi(t,n)}}function sv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z&&t[3]===n.w||(e.uniform4i(this.addr,n.x,n.y,n.z,n.w),t[0]=n.x,t[1]=n.y,t[2]=n.z,t[3]=n.w);else{if(Zi(t,n))return;e.uniform4iv(this.addr,n),Qi(t,n)}}function cv(e,n){var t=this.cache;t[0]!==n&&(e.uniform1ui(this.addr,n),t[0]=n)}function lv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y||(e.uniform2ui(this.addr,n.x,n.y),t[0]=n.x,t[1]=n.y);else{if(Zi(t,n))return;e.uniform2uiv(this.addr,n),Qi(t,n)}}function uv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z||(e.uniform3ui(this.addr,n.x,n.y,n.z),t[0]=n.x,t[1]=n.y,t[2]=n.z);else{if(Zi(t,n))return;e.uniform3uiv(this.addr,n),Qi(t,n)}}function fv(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z&&t[3]===n.w||(e.uniform4ui(this.addr,n.x,n.y,n.z,n.w),t[0]=n.x,t[1]=n.y,t[2]=n.z,t[3]=n.w);else{if(Zi(t,n))return;e.uniform4uiv(this.addr,n),Qi(t,n)}}function pv(e,n,t){var r=this.cache,o=t.allocateTextureUnit();r[0]!==o&&(e.uniform1i(this.addr,o),r[0]=o),t.setTexture2D(n||Oi,o)}function mv(e,n,t){var r=this.cache,o=t.allocateTextureUnit();r[0]!==o&&(e.uniform1i(this.addr,o),r[0]=o),t.setTexture3D(n||Ni,o)}function dv(e,n,t){var r=this.cache,o=t.allocateTextureUnit();r[0]!==o&&(e.uniform1i(this.addr,o),r[0]=o),t.setTextureCube(n||Gi,o)}function hv(e,n,t){var r=this.cache,o=t.allocateTextureUnit();r[0]!==o&&(e.uniform1i(this.addr,o),r[0]=o),t.setTexture2DArray(n||Bi,o)}function xv(e,n){e.uniform1fv(this.addr,n)}function gv(e,n){var t=Yi(n,this.size,2);e.uniform2fv(this.addr,t)}function yv(e,n){var t=Yi(n,this.size,3);e.uniform3fv(this.addr,t)}function _v(e,n){var t=Yi(n,this.size,4);e.uniform4fv(this.addr,t)}function bv(e,n){var t=Yi(n,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Uv(e,n){var t=Yi(n,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function wv(e,n){var t=Yi(n,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Sv(e,n){e.uniform1iv(this.addr,n)}function Mv(e,n){e.uniform2iv(this.addr,n)}function jv(e,n){e.uniform3iv(this.addr,n)}function kv(e,n){e.uniform4iv(this.addr,n)}function Cv(e,n){e.uniform1uiv(this.addr,n)}function Tv(e,n){e.uniform2uiv(this.addr,n)}function Rv(e,n){e.uniform3uiv(this.addr,n)}function zv(e,n){e.uniform4uiv(this.addr,n)}function Pv(e,n,t){var r=this.cache,o=n.length,a=Ji(t,o);Zi(r,a)||(e.uniform1iv(this.addr,a),Qi(r,a));for(var i=0;i!==o;++i)t.setTexture2D(n[i]||Oi,a[i])}function Fv(e,n,t){var r=this.cache,o=n.length,a=Ji(t,o);Zi(r,a)||(e.uniform1iv(this.addr,a),Qi(r,a));for(var i=0;i!==o;++i)t.setTexture3D(n[i]||Ni,a[i])}function Dv(e,n,t){var r=this.cache,o=n.length,a=Ji(t,o);Zi(r,a)||(e.uniform1iv(this.addr,a),Qi(r,a));for(var i=0;i!==o;++i)t.setTextureCube(n[i]||Gi,a[i])}function Ev(e,n,t){var r=this.cache,o=n.length,a=Ji(t,o);Zi(r,a)||(e.uniform1iv(this.addr,a),Qi(r,a));for(var i=0;i!==o;++i)t.setTexture2DArray(n[i]||Bi,a[i])}var Iv=b((function e(n,t,r){y(this,e),this.id=n,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return $i;case 35664:return Ki;case 35665:return ev;case 35666:return nv;case 35674:return tv;case 35675:return rv;case 35676:return ov;case 5124:case 35670:return av;case 35667:case 35671:return iv;case 35668:case 35672:return vv;case 35669:case 35673:return sv;case 5125:return cv;case 36294:return lv;case 36295:return uv;case 36296:return fv;case 35678:case 36198:case 36298:case 36306:case 35682:return pv;case 35679:case 36299:case 36307:return mv;case 35680:case 36300:case 36308:case 36293:return dv;case 36289:case 36303:case 36311:case 36292:return hv}}(t.type)})),Lv=b((function e(n,t,r){y(this,e),this.id=n,this.addr=r,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return xv;case 35664:return gv;case 35665:return yv;case 35666:return _v;case 35674:return bv;case 35675:return Uv;case 35676:return wv;case 5124:case 35670:return Sv;case 35667:case 35671:return Mv;case 35668:case 35672:return jv;case 35669:case 35673:return kv;case 5125:return Cv;case 36294:return Tv;case 36295:return Rv;case 36296:return zv;case 35678:case 36198:case 36298:case 36306:case 35682:return Pv;case 35679:case 36299:case 36307:return Fv;case 35680:case 36300:case 36308:case 36293:return Dv;case 36289:case 36303:case 36311:case 36292:return Ev}}(t.type)})),Av=function(){function e(n){y(this,e),this.id=n,this.seq=[],this.map={}}return b(e,[{key:"setValue",value:function(e,n,t){for(var r=this.seq,o=0,a=r.length;o!==a;++o){var i=r[o];i.setValue(e,n[i.id],t)}}}]),e}(),Ov=/(\w+)(\])?(\[|\.)?/g;function Bv(e,n){e.seq.push(n),e.map[n.id]=n}function Nv(e,n,t){var r=e.name,o=r.length;for(Ov.lastIndex=0;;){var a=Ov.exec(r),i=Ov.lastIndex,v=a[1],s="]"===a[2],c=a[3];if(s&&(v|=0),void 0===c||"["===c&&i+2===o){Bv(t,void 0===c?new Iv(v,e,n):new Lv(v,e,n));break}var l=t.map[v];void 0===l&&Bv(t,l=new Av(v)),t=l}}var Gv=function(){function e(n,t){y(this,e),this.seq=[],this.map={};for(var r=n.getProgramParameter(t,35718),o=0;o<r;++o){var a=n.getActiveUniform(t,o);Nv(a,n.getUniformLocation(t,a.name),this)}}return b(e,[{key:"setValue",value:function(e,n,t,r){var o=this.map[n];void 0!==o&&o.setValue(e,t,r)}},{key:"setOptional",value:function(e,n,t){var r=n[t];void 0!==r&&this.setValue(e,t,r)}}],[{key:"upload",value:function(e,n,t,r){for(var o=0,a=n.length;o!==a;++o){var i=n[o],v=t[i.id];!1!==v.needsUpdate&&i.setValue(e,v.value,r)}}},{key:"seqWithValue",value:function(e,n){for(var t=[],r=0,o=e.length;r!==o;++r){var a=e[r];a.id in n&&t.push(a)}return t}}]),e}();function Vv(e,n,t){var r=e.createShader(n);return e.shaderSource(r,t),e.compileShader(r),r}var qv=0;function Wv(e,n,t){var r=e.getShaderParameter(n,35713),o=e.getShaderInfoLog(n).trim();if(r&&""===o)return"";var a=/ERROR: 0:(\d+)/.exec(o);if(a){var i=parseInt(a[1]);return t.toUpperCase()+"\n\n"+o+"\n\n"+function(e,n){for(var t=e.split("\n"),r=[],o=Math.max(n-6,0),a=Math.min(n+6,t.length),i=o;i<a;i++){var v=i+1;r.push("".concat(v===n?">":" "," ").concat(v,": ").concat(t[i]))}return r.join("\n")}(e.getShaderSource(n),i)}return o}function Hv(e,n){var t=function(e){switch(e){case st:return["Linear","( value )"];case ct:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(n);return"vec4 "+e+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Xv(e,n){var t;switch(n){case Ce:t="Linear";break;case Te:t="Reinhard";break;case Re:t="OptimizedCineon";break;case ze:t="ACESFilmic";break;case Pe:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",n),t="Linear"}return"vec3 "+e+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Yv(e){return""!==e}function Zv(e,n){var t=n.numSpotLightShadows+n.numSpotLightMaps-n.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,n.numDirLights).replace(/NUM_SPOT_LIGHTS/g,n.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,n.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,n.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,n.numPointLights).replace(/NUM_HEMI_LIGHTS/g,n.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,n.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,n.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,n.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,n.numPointLightShadows)}function Qv(e,n){return e.replace(/NUM_CLIPPING_PLANES/g,n.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,n.numClippingPlanes-n.numClipIntersection)}var Jv=/^[ \t]*#include +<([\w\d./]+)>/gm;function $v(e){return e.replace(Jv,Kv)}function Kv(e,n){var t=vi[n];if(void 0===t)throw new Error("Can not resolve #include <"+n+">");return $v(t)}var es=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ns(e){return e.replace(es,ts)}function ts(e,n,t,r){for(var o="",a=parseInt(n);a<parseInt(t);a++)o+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return o}function rs(e){var n="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?n+="\n#define HIGH_PRECISION":"mediump"===e.precision?n+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(n+="\n#define LOW_PRECISION"),n}function os(e,n,t,r){var o,a,i=e.getContext(),v=t.defines,s=t.vertexShader,c=t.fragmentShader,l=function(e){var n="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===G?n="SHADOWMAP_TYPE_PCF":e.shadowMapType===V?n="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===q&&(n="SHADOWMAP_TYPE_VSM"),n}(t),u=function(e){var n="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case De:case Ee:n="ENVMAP_TYPE_CUBE";break;case Ae:n="ENVMAP_TYPE_CUBE_UV"}return n}(t),f=function(e){var n="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===Ee&&(n="ENVMAP_MODE_REFRACTION");return n}(t),p=function(e){var n="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Se:n="ENVMAP_BLENDING_MULTIPLY";break;case Me:n="ENVMAP_BLENDING_MIX";break;case je:n="ENVMAP_BLENDING_ADD"}return n}(t),m=function(e){var n=e.envMapCubeUVHeight;if(null===n)return null;var t=Math.log2(n)-2,r=1/n;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:r,maxMip:t}}(t),d=t.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Yv).join("\n")}(t),h=function(e){var n=[];for(var t in e){var r=e[t];!1!==r&&n.push("#define "+t+" "+r)}return n.join("\n")}(v),x=i.createProgram(),g=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?((o=[h].filter(Yv).join("\n")).length>0&&(o+="\n"),(a=[d,h].filter(Yv).join("\n")).length>0&&(a+="\n")):(o=[rs(t),"#define SHADER_NAME "+t.shaderName,h,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Yv).join("\n"),a=[d,rs(t),"#define SHADER_NAME "+t.shaderName,h,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ke?"#define TONE_MAPPING":"",t.toneMapping!==ke?vi.tonemapping_pars_fragment:"",t.toneMapping!==ke?Xv("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",vi.encodings_pars_fragment,Hv("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(Yv).join("\n")),s=Qv(s=Zv(s=$v(s),t),t),c=Qv(c=Zv(c=$v(c),t),t),s=ns(s),c=ns(c),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(g="#version 300 es\n",o=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+o,a=["#define varying in",t.glslVersion===Vt?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Vt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);var y,_,b=g+a+c,U=Vv(i,35633,g+o+s),w=Vv(i,35632,b);if(i.attachShader(x,U),i.attachShader(x,w),void 0!==t.index0AttributeName?i.bindAttribLocation(x,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x),e.debug.checkShaderErrors){var S=i.getProgramInfoLog(x).trim(),M=i.getShaderInfoLog(U).trim(),j=i.getShaderInfoLog(w).trim(),k=!0,C=!0;if(!1===i.getProgramParameter(x,35714)){k=!1;var T=Wv(i,U,"vertex"),R=Wv(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,35715)+"\n\nProgram Info Log: "+S+"\n"+T+"\n"+R)}else""!==S?console.warn("THREE.WebGLProgram: Program Info Log:",S):""!==M&&""!==j||(C=!1);C&&(this.diagnostics={runnable:k,programLog:S,vertexShader:{log:M,prefix:o},fragmentShader:{log:j,prefix:a}})}return i.deleteShader(U),i.deleteShader(w),this.getUniforms=function(){return void 0===y&&(y=new Gv(i,x)),y},this.getAttributes=function(){return void 0===_&&(_=function(e,n){for(var t={},r=e.getProgramParameter(n,35721),o=0;o<r;o++){var a=e.getActiveAttrib(n,o),i=a.name,v=1;35674===a.type&&(v=2),35675===a.type&&(v=3),35676===a.type&&(v=4),t[i]={type:a.type,location:e.getAttribLocation(n,i),locationSize:v}}return t}(i,x)),_},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=qv++,this.cacheKey=n,this.usedTimes=1,this.program=x,this.vertexShader=U,this.fragmentShader=w,this}var as=0,is=function(){function e(){y(this,e),this.shaderCache=new Map,this.materialCache=new Map}return b(e,[{key:"update",value:function(e){var n=e.vertexShader,t=e.fragmentShader,r=this._getShaderStage(n),o=this._getShaderStage(t),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(o)&&(a.add(o),o.usedTimes++),this}},{key:"remove",value:function(e){var n,t=f(this.materialCache.get(e));try{for(t.s();!(n=t.n()).done;){var r=n.value;r.usedTimes--,0===r.usedTimes&&this.shaderCache.delete(r.code)}}catch(o){t.e(o)}finally{t.f()}return this.materialCache.delete(e),this}},{key:"getVertexShaderID",value:function(e){return this._getShaderStage(e.vertexShader).id}},{key:"getFragmentShaderID",value:function(e){return this._getShaderStage(e.fragmentShader).id}},{key:"dispose",value:function(){this.shaderCache.clear(),this.materialCache.clear()}},{key:"_getShaderCacheForMaterial",value:function(e){var n=this.materialCache,t=n.get(e);return void 0===t&&(t=new Set,n.set(e,t)),t}},{key:"_getShaderStage",value:function(e){var n=this.shaderCache,t=n.get(e);return void 0===t&&(t=new vs(e),n.set(e,t)),t}}]),e}(),vs=b((function e(n){y(this,e),this.id=as++,this.code=n,this.usedTimes=0}));function ss(e,n,t,r,o,a,i){var v=new Mo,s=new is,c=[],l=o.isWebGL2,u=o.logarithmicDepthBuffer,f=o.vertexTextures,p=o.precision,m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,v,c,d,h){var x=d.fog,g=h.geometry,y=a.isMeshStandardMaterial?d.environment:null,_=(a.isMeshStandardMaterial?t:n).get(a.envMap||y),b=_&&_.mapping===Ae?_.image.height:null,U=m[a.type];null!==a.precision&&(p=o.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead.");var w,S,M,j,k=g.morphAttributes.position||g.morphAttributes.normal||g.morphAttributes.color,C=void 0!==k?k.length:0,T=0;if(void 0!==g.morphAttributes.position&&(T=1),void 0!==g.morphAttributes.normal&&(T=2),void 0!==g.morphAttributes.color&&(T=3),U){var R=ci[U];w=R.vertexShader,S=R.fragmentShader}else w=a.vertexShader,S=a.fragmentShader,s.update(a),M=s.getVertexShaderID(a),j=s.getFragmentShaderID(a);var z=e.getRenderTarget(),P=a.alphaTest>0,F=a.clearcoat>0,D=a.iridescence>0;return{isWebGL2:l,shaderID:U,shaderName:a.type,vertexShader:w,fragmentShader:S,defines:a.defines,customVertexShaderID:M,customFragmentShaderID:j,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:!0===h.isInstancedMesh,instancingColor:!0===h.isInstancedMesh&&null!==h.instanceColor,supportsVertexTextures:f,outputEncoding:null===z?e.outputEncoding:!0===z.isXRRenderTarget?z.texture.encoding:st,map:!!a.map,matcap:!!a.matcap,envMap:!!_,envMapMode:_&&_.mapping,envMapCubeUVHeight:b,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===pt,tangentSpaceNormalMap:a.normalMapType===ft,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===ct,clearcoat:F,clearcoatMap:F&&!!a.clearcoatMap,clearcoatRoughnessMap:F&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:F&&!!a.clearcoatNormalMap,iridescence:D,iridescenceMap:D&&!!a.iridescenceMap,iridescenceThicknessMap:D&&!!a.iridescenceThicknessMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&a.blending===Z,alphaMap:!!a.alphaMap,alphaTest:P,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!g.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!g.attributes.color&&4===g.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.iridescenceMap||!!a.iridescenceThicknessMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularColorMap||!!a.sheenColorMap||!!a.sheenRoughnessMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap)&&!!a.displacementMap,fog:!!x,useFog:!0===a.fog,fogExp2:x&&x.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===h.isSkinnedMesh,morphTargets:void 0!==g.morphAttributes.position,morphNormals:void 0!==g.morphAttributes.normal,morphColors:void 0!==g.morphAttributes.color,morphTargetsCount:C,morphTextureStride:T,numDirLights:v.directional.length,numPointLights:v.point.length,numSpotLights:v.spot.length,numSpotLightMaps:v.spotLightMap.length,numRectAreaLights:v.rectArea.length,numHemiLights:v.hemi.length,numDirLightShadows:v.directionalShadowMap.length,numPointLightShadows:v.pointShadowMap.length,numSpotLightShadows:v.spotShadowMap.length,numSpotLightShadowsWithMaps:v.numSpotLightShadowsWithMaps,numClippingPlanes:i.numPlanes,numClipIntersection:i.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:ke,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===X,flipSided:a.side===H,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||r.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(n){var t=[];if(n.shaderID?t.push(n.shaderID):(t.push(n.customVertexShaderID),t.push(n.customFragmentShaderID)),void 0!==n.defines)for(var r in n.defines)t.push(r),t.push(n.defines[r]);return!1===n.isRawShaderMaterial&&(!function(e,n){e.push(n.precision),e.push(n.outputEncoding),e.push(n.envMapMode),e.push(n.envMapCubeUVHeight),e.push(n.combine),e.push(n.vertexUvs),e.push(n.fogExp2),e.push(n.sizeAttenuation),e.push(n.morphTargetsCount),e.push(n.morphAttributeCount),e.push(n.numDirLights),e.push(n.numPointLights),e.push(n.numSpotLights),e.push(n.numSpotLightMaps),e.push(n.numHemiLights),e.push(n.numRectAreaLights),e.push(n.numDirLightShadows),e.push(n.numPointLightShadows),e.push(n.numSpotLightShadows),e.push(n.numSpotLightShadowsWithMaps),e.push(n.shadowMapType),e.push(n.toneMapping),e.push(n.numClippingPlanes),e.push(n.numClipIntersection),e.push(n.depthPacking)}(t,n),function(e,n){v.disableAll(),n.isWebGL2&&v.enable(0);n.supportsVertexTextures&&v.enable(1);n.instancing&&v.enable(2);n.instancingColor&&v.enable(3);n.map&&v.enable(4);n.matcap&&v.enable(5);n.envMap&&v.enable(6);n.lightMap&&v.enable(7);n.aoMap&&v.enable(8);n.emissiveMap&&v.enable(9);n.bumpMap&&v.enable(10);n.normalMap&&v.enable(11);n.objectSpaceNormalMap&&v.enable(12);n.tangentSpaceNormalMap&&v.enable(13);n.clearcoat&&v.enable(14);n.clearcoatMap&&v.enable(15);n.clearcoatRoughnessMap&&v.enable(16);n.clearcoatNormalMap&&v.enable(17);n.iridescence&&v.enable(18);n.iridescenceMap&&v.enable(19);n.iridescenceThicknessMap&&v.enable(20);n.displacementMap&&v.enable(21);n.specularMap&&v.enable(22);n.roughnessMap&&v.enable(23);n.metalnessMap&&v.enable(24);n.gradientMap&&v.enable(25);n.alphaMap&&v.enable(26);n.alphaTest&&v.enable(27);n.vertexColors&&v.enable(28);n.vertexAlphas&&v.enable(29);n.vertexUvs&&v.enable(30);n.vertexTangents&&v.enable(31);n.uvsVertexOnly&&v.enable(32);e.push(v.mask),v.disableAll(),n.fog&&v.enable(0);n.useFog&&v.enable(1);n.flatShading&&v.enable(2);n.logarithmicDepthBuffer&&v.enable(3);n.skinning&&v.enable(4);n.morphTargets&&v.enable(5);n.morphNormals&&v.enable(6);n.morphColors&&v.enable(7);n.premultipliedAlpha&&v.enable(8);n.shadowMapEnabled&&v.enable(9);n.physicallyCorrectLights&&v.enable(10);n.doubleSided&&v.enable(11);n.flipSided&&v.enable(12);n.useDepthPacking&&v.enable(13);n.dithering&&v.enable(14);n.specularIntensityMap&&v.enable(15);n.specularColorMap&&v.enable(16);n.transmission&&v.enable(17);n.transmissionMap&&v.enable(18);n.thicknessMap&&v.enable(19);n.sheen&&v.enable(20);n.sheenColorMap&&v.enable(21);n.sheenRoughnessMap&&v.enable(22);n.decodeVideoTexture&&v.enable(23);n.opaque&&v.enable(24);e.push(v.mask)}(t,n),t.push(e.outputEncoding)),t.push(n.customProgramCacheKey),t.join()},getUniforms:function(e){var n,t=m[e.type];if(t){var r=ci[t];n=Va.clone(r.uniforms)}else n=e.uniforms;return n},acquireProgram:function(n,t){for(var r,o=0,i=c.length;o<i;o++){var v=c[o];if(v.cacheKey===t){++(r=v).usedTimes;break}}return void 0===r&&(r=new os(e,t,n,a),c.push(r)),r},releaseProgram:function(e){if(0===--e.usedTimes){var n=c.indexOf(e);c[n]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){s.remove(e)},programs:c,dispose:function(){s.dispose()}}}function cs(){var e=new WeakMap;return{get:function(n){var t=e.get(n);return void 0===t&&(t={},e.set(n,t)),t},remove:function(n){e.delete(n)},update:function(n,t,r){e.get(n)[t]=r},dispose:function(){e=new WeakMap}}}function ls(e,n){return e.groupOrder!==n.groupOrder?e.groupOrder-n.groupOrder:e.renderOrder!==n.renderOrder?e.renderOrder-n.renderOrder:e.material.id!==n.material.id?e.material.id-n.material.id:e.z!==n.z?e.z-n.z:e.id-n.id}function us(e,n){return e.groupOrder!==n.groupOrder?e.groupOrder-n.groupOrder:e.renderOrder!==n.renderOrder?e.renderOrder-n.renderOrder:e.z!==n.z?n.z-e.z:e.id-n.id}function fs(){var e=[],n=0,t=[],r=[],o=[];function a(t,r,o,a,i,v){var s=e[n];return void 0===s?(s={id:t.id,object:t,geometry:r,material:o,groupOrder:a,renderOrder:t.renderOrder,z:i,group:v},e[n]=s):(s.id=t.id,s.object=t,s.geometry=r,s.material=o,s.groupOrder=a,s.renderOrder=t.renderOrder,s.z=i,s.group=v),n++,s}return{opaque:t,transmissive:r,transparent:o,init:function(){n=0,t.length=0,r.length=0,o.length=0},push:function(e,n,i,v,s,c){var l=a(e,n,i,v,s,c);i.transmission>0?r.push(l):!0===i.transparent?o.push(l):t.push(l)},unshift:function(e,n,i,v,s,c){var l=a(e,n,i,v,s,c);i.transmission>0?r.unshift(l):!0===i.transparent?o.unshift(l):t.unshift(l)},finish:function(){for(var t=n,r=e.length;t<r;t++){var o=e[t];if(null===o.id)break;o.id=null,o.object=null,o.geometry=null,o.material=null,o.group=null}},sort:function(e,n){t.length>1&&t.sort(e||ls),r.length>1&&r.sort(n||us),o.length>1&&o.sort(n||us)}}}function ps(){var e=new WeakMap;return{get:function(n,t){var r,o=e.get(n);return void 0===o?(r=new fs,e.set(n,[r])):t>=o.length?(r=new fs,o.push(r)):r=o[t],r},dispose:function(){e=new WeakMap}}}function ms(){var e={};return{get:function(n){if(void 0!==e[n.id])return e[n.id];var t;switch(n.type){case"DirectionalLight":t={direction:new Lr,color:new wr};break;case"SpotLight":t={position:new Lr,direction:new Lr,color:new wr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Lr,color:new wr,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Lr,skyColor:new wr,groundColor:new wr};break;case"RectAreaLight":t={color:new wr,position:new Lr,halfWidth:new Lr,halfHeight:new Lr}}return e[n.id]=t,t}}}var ds=0;function hs(e,n){return(n.castShadow?2:0)-(e.castShadow?2:0)+(n.map?1:0)-(e.map?1:0)}function xs(e,n){for(var t=new ms,r=function(){var e={};return{get:function(n){if(void 0!==e[n.id])return e[n.id];var t;switch(n.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ir};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ir,shadowCameraNear:1,shadowCameraFar:1e3}}return e[n.id]=t,t}}}(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0},a=0;a<9;a++)o.probe.push(new Lr);var i=new Lr,v=new po,s=new po;return{setup:function(a,i){for(var v=0,s=0,c=0,l=0;l<9;l++)o.probe[l].set(0,0,0);var u=0,f=0,p=0,m=0,d=0,h=0,x=0,g=0,y=0,_=0;a.sort(hs);for(var b=!0!==i?Math.PI:1,U=0,w=a.length;U<w;U++){var S=a[U],M=S.color,j=S.intensity,k=S.distance,C=S.shadow&&S.shadow.map?S.shadow.map.texture:null;if(S.isAmbientLight)v+=M.r*j*b,s+=M.g*j*b,c+=M.b*j*b;else if(S.isLightProbe)for(var T=0;T<9;T++)o.probe[T].addScaledVector(S.sh.coefficients[T],j);else if(S.isDirectionalLight){var R=t.get(S);if(R.color.copy(S.color).multiplyScalar(S.intensity*b),S.castShadow){var z=S.shadow,P=r.get(S);P.shadowBias=z.bias,P.shadowNormalBias=z.normalBias,P.shadowRadius=z.radius,P.shadowMapSize=z.mapSize,o.directionalShadow[u]=P,o.directionalShadowMap[u]=C,o.directionalShadowMatrix[u]=S.shadow.matrix,h++}o.directional[u]=R,u++}else if(S.isSpotLight){var F=t.get(S);F.position.setFromMatrixPosition(S.matrixWorld),F.color.copy(M).multiplyScalar(j*b),F.distance=k,F.coneCos=Math.cos(S.angle),F.penumbraCos=Math.cos(S.angle*(1-S.penumbra)),F.decay=S.decay,o.spot[p]=F;var D=S.shadow;if(S.map&&(o.spotLightMap[y]=S.map,y++,D.updateMatrices(S),S.castShadow&&_++),o.spotLightMatrix[p]=D.matrix,S.castShadow){var E=r.get(S);E.shadowBias=D.bias,E.shadowNormalBias=D.normalBias,E.shadowRadius=D.radius,E.shadowMapSize=D.mapSize,o.spotShadow[p]=E,o.spotShadowMap[p]=C,g++}p++}else if(S.isRectAreaLight){var I=t.get(S);I.color.copy(M).multiplyScalar(j),I.halfWidth.set(.5*S.width,0,0),I.halfHeight.set(0,.5*S.height,0),o.rectArea[m]=I,m++}else if(S.isPointLight){var L=t.get(S);if(L.color.copy(S.color).multiplyScalar(S.intensity*b),L.distance=S.distance,L.decay=S.decay,S.castShadow){var A=S.shadow,O=r.get(S);O.shadowBias=A.bias,O.shadowNormalBias=A.normalBias,O.shadowRadius=A.radius,O.shadowMapSize=A.mapSize,O.shadowCameraNear=A.camera.near,O.shadowCameraFar=A.camera.far,o.pointShadow[f]=O,o.pointShadowMap[f]=C,o.pointShadowMatrix[f]=S.shadow.matrix,x++}o.point[f]=L,f++}else if(S.isHemisphereLight){var B=t.get(S);B.skyColor.copy(S.color).multiplyScalar(j*b),B.groundColor.copy(S.groundColor).multiplyScalar(j*b),o.hemi[d]=B,d++}}m>0&&(n.isWebGL2||!0===e.has("OES_texture_float_linear")?(o.rectAreaLTC1=si.LTC_FLOAT_1,o.rectAreaLTC2=si.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(o.rectAreaLTC1=si.LTC_HALF_1,o.rectAreaLTC2=si.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=v,o.ambient[1]=s,o.ambient[2]=c;var N=o.hash;N.directionalLength===u&&N.pointLength===f&&N.spotLength===p&&N.rectAreaLength===m&&N.hemiLength===d&&N.numDirectionalShadows===h&&N.numPointShadows===x&&N.numSpotShadows===g&&N.numSpotMaps===y||(o.directional.length=u,o.spot.length=p,o.rectArea.length=m,o.point.length=f,o.hemi.length=d,o.directionalShadow.length=h,o.directionalShadowMap.length=h,o.pointShadow.length=x,o.pointShadowMap.length=x,o.spotShadow.length=g,o.spotShadowMap.length=g,o.directionalShadowMatrix.length=h,o.pointShadowMatrix.length=x,o.spotLightMatrix.length=g+y-_,o.spotLightMap.length=y,o.numSpotLightShadowsWithMaps=_,N.directionalLength=u,N.pointLength=f,N.spotLength=p,N.rectAreaLength=m,N.hemiLength=d,N.numDirectionalShadows=h,N.numPointShadows=x,N.numSpotShadows=g,N.numSpotMaps=y,o.version=ds++)},setupView:function(e,n){for(var t=0,r=0,a=0,c=0,l=0,u=n.matrixWorldInverse,f=0,p=e.length;f<p;f++){var m=e[f];if(m.isDirectionalLight){var d=o.directional[t];d.direction.setFromMatrixPosition(m.matrixWorld),i.setFromMatrixPosition(m.target.matrixWorld),d.direction.sub(i),d.direction.transformDirection(u),t++}else if(m.isSpotLight){var h=o.spot[a];h.position.setFromMatrixPosition(m.matrixWorld),h.position.applyMatrix4(u),h.direction.setFromMatrixPosition(m.matrixWorld),i.setFromMatrixPosition(m.target.matrixWorld),h.direction.sub(i),h.direction.transformDirection(u),a++}else if(m.isRectAreaLight){var x=o.rectArea[c];x.position.setFromMatrixPosition(m.matrixWorld),x.position.applyMatrix4(u),s.identity(),v.copy(m.matrixWorld),v.premultiply(u),s.extractRotation(v),x.halfWidth.set(.5*m.width,0,0),x.halfHeight.set(0,.5*m.height,0),x.halfWidth.applyMatrix4(s),x.halfHeight.applyMatrix4(s),c++}else if(m.isPointLight){var g=o.point[r];g.position.setFromMatrixPosition(m.matrixWorld),g.position.applyMatrix4(u),r++}else if(m.isHemisphereLight){var y=o.hemi[l];y.direction.setFromMatrixPosition(m.matrixWorld),y.direction.transformDirection(u),l++}}},state:o}}function gs(e,n){var t=new xs(e,n),r=[],o=[];return{init:function(){r.length=0,o.length=0},state:{lightsArray:r,shadowsArray:o,lights:t},setupLights:function(e){t.setup(r,e)},setupLightsView:function(e){t.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){o.push(e)}}}function ys(e,n){var t=new WeakMap;return{get:function(r){var o,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=t.get(r);return void 0===i?(o=new gs(e,n),t.set(r,[o])):a>=i.length?(o=new gs(e,n),i.push(o)):o=i[a],o},dispose:function(){t=new WeakMap}}}var _s=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshDepthMaterial=!0,r.type="MeshDepthMaterial",r.depthPacking=lt,r.map=null,r.alphaMap=null,r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.wireframe=!1,r.wireframeLinewidth=1,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}]),t}($o),bs=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshDistanceMaterial=!0,r.type="MeshDistanceMaterial",r.referencePosition=new Lr,r.nearDistance=1,r.farDistance=1e3,r.map=null,r.alphaMap=null,r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}]),t}($o);function Us(e,n,t){var r=new ri,o=new ir,a=new ir,i=new Tr,v=new _s({depthPacking:ut}),s=new bs,c={},l=t.maxTextureSize,u={0:H,1:W,2:X},f=new qa({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ir},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=f.clone();p.defines.HORIZONTAL_PASS=1;var m=new _a;m.setAttribute("position",new ta(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var d=new Aa(m,f),h=this;function x(t,r){var a=n.update(d);f.defines.VSM_SAMPLES!==t.blurSamples&&(f.defines.VSM_SAMPLES=t.blurSamples,p.defines.VSM_SAMPLES=t.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),null===t.mapPass&&(t.mapPass=new Rr(o.x,o.y)),f.uniforms.shadow_pass.value=t.map.texture,f.uniforms.resolution.value=t.mapSize,f.uniforms.radius.value=t.radius,e.setRenderTarget(t.mapPass),e.clear(),e.renderBufferDirect(r,null,a,f,d,null),p.uniforms.shadow_pass.value=t.mapPass.texture,p.uniforms.resolution.value=t.mapSize,p.uniforms.radius.value=t.radius,e.setRenderTarget(t.map),e.clear(),e.renderBufferDirect(r,null,a,p,d,null)}function g(n,t,r,o,a,i){var l=null,f=!0===r.isPointLight?n.customDistanceMaterial:n.customDepthMaterial;if(l=void 0!==f?f:!0===r.isPointLight?s:v,e.localClippingEnabled&&!0===t.clipShadows&&Array.isArray(t.clippingPlanes)&&0!==t.clippingPlanes.length||t.displacementMap&&0!==t.displacementScale||t.alphaMap&&t.alphaTest>0){var p=l.uuid,m=t.uuid,d=c[p];void 0===d&&(d={},c[p]=d);var h=d[m];void 0===h&&(h=l.clone(),d[m]=h),l=h}return l.visible=t.visible,l.wireframe=t.wireframe,l.side=i===q?null!==t.shadowSide?t.shadowSide:t.side:null!==t.shadowSide?t.shadowSide:u[t.side],l.alphaMap=t.alphaMap,l.alphaTest=t.alphaTest,l.clipShadows=t.clipShadows,l.clippingPlanes=t.clippingPlanes,l.clipIntersection=t.clipIntersection,l.displacementMap=t.displacementMap,l.displacementScale=t.displacementScale,l.displacementBias=t.displacementBias,l.wireframeLinewidth=t.wireframeLinewidth,l.linewidth=t.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=o,l.farDistance=a),l}function y(t,o,a,i,v){if(!1!==t.visible){if(t.layers.test(o.layers)&&(t.isMesh||t.isLine||t.isPoints)&&(t.castShadow||t.receiveShadow&&v===q)&&(!t.frustumCulled||r.intersectsObject(t))){t.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,t.matrixWorld);var s=n.update(t),c=t.material;if(Array.isArray(c))for(var l=s.groups,u=0,f=l.length;u<f;u++){var p=l[u],m=c[p.materialIndex];if(m&&m.visible){var d=g(t,m,i,a.near,a.far,v);e.renderBufferDirect(a,null,s,d,t,p)}}else if(c.visible){var h=g(t,c,i,a.near,a.far,v);e.renderBufferDirect(a,null,s,h,t,null)}}for(var x=t.children,_=0,b=x.length;_<b;_++)y(x[_],o,a,i,v)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=G,this.render=function(n,t,v){if(!1!==h.enabled&&(!1!==h.autoUpdate||!1!==h.needsUpdate)&&0!==n.length){var s=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),f=e.state;f.setBlending(Y),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(var p=0,m=n.length;p<m;p++){var d=n[p],g=d.shadow;if(void 0!==g){if(!1!==g.autoUpdate||!1!==g.needsUpdate){o.copy(g.mapSize);var _=g.getFrameExtents();if(o.multiply(_),a.copy(g.mapSize),(o.x>l||o.y>l)&&(o.x>l&&(a.x=Math.floor(l/_.x),o.x=a.x*_.x,g.mapSize.x=a.x),o.y>l&&(a.y=Math.floor(l/_.y),o.y=a.y*_.y,g.mapSize.y=a.y)),null===g.map){var b=this.type!==q?{minFilter:Ge,magFilter:Ge}:{};g.map=new Rr(o.x,o.y,b),g.map.texture.name=d.name+".shadowMap",g.camera.updateProjectionMatrix()}e.setRenderTarget(g.map),e.clear();for(var U=g.getViewportCount(),w=0;w<U;w++){var S=g.getViewport(w);i.set(a.x*S.x,a.y*S.y,a.x*S.z,a.y*S.w),f.viewport(i),g.updateMatrices(d,w),r=g.getFrustum(),y(t,v,g.camera,d,this.type)}!0!==g.isPointLightShadow&&this.type===q&&x(g,v),g.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",d,"has no shadow.")}h.needsUpdate=!1,e.setRenderTarget(s,c,u)}}}function ws(e,n,t){var r,o,a=t.isWebGL2;var i=new function(){var n=!1,t=new Tr,r=null,o=new Tr(0,0,0,0);return{setMask:function(t){r===t||n||(e.colorMask(t,t,t,t),r=t)},setLocked:function(e){n=e},setClear:function(n,r,a,i,v){!0===v&&(n*=i,r*=i,a*=i),t.set(n,r,a,i),!1===o.equals(t)&&(e.clearColor(n,r,a,i),o.copy(t))},reset:function(){n=!1,r=null,o.set(-1,0,0,0)}}},v=new function(){var n=!1,t=null,r=null,o=null;return{setTest:function(e){e?Se(2929):Me(2929)},setMask:function(r){t===r||n||(e.depthMask(r),t=r)},setFunc:function(n){if(r!==n){switch(n){case he:e.depthFunc(512);break;case xe:e.depthFunc(519);break;case ge:e.depthFunc(513);break;case ye:e.depthFunc(515);break;case _e:e.depthFunc(514);break;case be:e.depthFunc(518);break;case Ue:e.depthFunc(516);break;case we:e.depthFunc(517);break;default:e.depthFunc(515)}r=n}},setLocked:function(e){n=e},setClear:function(n){o!==n&&(e.clearDepth(n),o=n)},reset:function(){n=!1,t=null,r=null,o=null}}},s=new function(){var n=!1,t=null,r=null,o=null,a=null,i=null,v=null,s=null,c=null;return{setTest:function(e){n||(e?Se(2960):Me(2960))},setMask:function(r){t===r||n||(e.stencilMask(r),t=r)},setFunc:function(n,t,i){r===n&&o===t&&a===i||(e.stencilFunc(n,t,i),r=n,o=t,a=i)},setOp:function(n,t,r){i===n&&v===t&&s===r||(e.stencilOp(n,t,r),i=n,v=t,s=r)},setLocked:function(e){n=e},setClear:function(n){c!==n&&(e.clearStencil(n),c=n)},reset:function(){n=!1,t=null,r=null,o=null,a=null,i=null,v=null,s=null,c=null}}},l=new WeakMap,u=new WeakMap,f={},p={},m=new WeakMap,d=[],h=null,x=!1,g=null,y=null,_=null,b=null,U=null,w=null,S=null,M=!1,j=null,k=null,C=null,T=null,R=null,z=e.getParameter(35661),P=!1,F=0,D=e.getParameter(7938);-1!==D.indexOf("WebGL")?(F=parseFloat(/^WebGL (\d)/.exec(D)[1]),P=F>=1):-1!==D.indexOf("OpenGL ES")&&(F=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),P=F>=2);var E=null,I={},B=e.getParameter(3088),N=e.getParameter(2978),G=(new Tr).fromArray(B),V=(new Tr).fromArray(N);function q(n,t,r){var o=new Uint8Array(4),a=e.createTexture();e.bindTexture(n,a),e.texParameteri(n,10241,9728),e.texParameteri(n,10240,9728);for(var i=0;i<r;i++)e.texImage2D(t+i,0,6408,1,1,0,6408,5121,o);return a}var W={};function Se(n){!0!==f[n]&&(e.enable(n),f[n]=!0)}function Me(n){!1!==f[n]&&(e.disable(n),f[n]=!1)}W[3553]=q(3553,3553,1),W[34067]=q(34067,34069,6),i.setClear(0,0,0,1),v.setClear(1),s.setClear(0),Se(2929),v.setFunc(ye),Re(!1),ze(A),Se(2884),Te(Y);var je=(c(r={},ee,32774),c(r,ne,32778),c(r,te,32779),r);if(a)je[re]=32775,je[oe]=32776;else{var ke=n.get("EXT_blend_minmax");null!==ke&&(je[re]=ke.MIN_EXT,je[oe]=ke.MAX_EXT)}var Ce=(c(o={},ae,0),c(o,ie,1),c(o,ve,768),c(o,ce,770),c(o,de,776),c(o,pe,774),c(o,ue,772),c(o,se,769),c(o,le,771),c(o,me,775),c(o,fe,773),o);function Te(n,t,r,o,a,i,v,s){if(n!==Y){if(!1===x&&(Se(3042),x=!0),n===K)a=a||t,i=i||r,v=v||o,t===y&&a===U||(e.blendEquationSeparate(je[t],je[a]),y=t,U=a),r===_&&o===b&&i===w&&v===S||(e.blendFuncSeparate(Ce[r],Ce[o],Ce[i],Ce[v]),_=r,b=o,w=i,S=v),g=n,M=null;else if(n!==g||s!==M){if(y===ee&&U===ee||(e.blendEquation(32774),y=ee,U=ee),s)switch(n){case Z:e.blendFuncSeparate(1,771,1,771);break;case Q:e.blendFunc(1,1);break;case J:e.blendFuncSeparate(0,769,0,1);break;case $:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}else switch(n){case Z:e.blendFuncSeparate(770,771,1,771);break;case Q:e.blendFunc(770,1);break;case J:e.blendFuncSeparate(0,769,0,1);break;case $:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}_=null,b=null,w=null,S=null,g=n,M=s}}else!0===x&&(Me(3042),x=!1)}function Re(n){j!==n&&(n?e.frontFace(2304):e.frontFace(2305),j=n)}function ze(n){n!==L?(Se(2884),n!==k&&(n===A?e.cullFace(1029):n===O?e.cullFace(1028):e.cullFace(1032))):Me(2884),k=n}function Pe(n,t,r){n?(Se(32823),T===t&&R===r||(e.polygonOffset(t,r),T=t,R=r)):Me(32823)}return{buffers:{color:i,depth:v,stencil:s},enable:Se,disable:Me,bindFramebuffer:function(n,t){return p[n]!==t&&(e.bindFramebuffer(n,t),p[n]=t,a&&(36009===n&&(p[36160]=t),36160===n&&(p[36009]=t)),!0)},drawBuffers:function(r,o){var a=d,i=!1;if(r)if(void 0===(a=m.get(o))&&(a=[],m.set(o,a)),r.isWebGLMultipleRenderTargets){var v=r.texture;if(a.length!==v.length||36064!==a[0]){for(var s=0,c=v.length;s<c;s++)a[s]=36064+s;a.length=v.length,i=!0}}else 36064!==a[0]&&(a[0]=36064,i=!0);else 1029!==a[0]&&(a[0]=1029,i=!0);i&&(t.isWebGL2?e.drawBuffers(a):n.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(n){return h!==n&&(e.useProgram(n),h=n,!0)},setBlending:Te,setMaterial:function(e,n){e.side===X?Me(2884):Se(2884);var t=e.side===H;n&&(t=!t),Re(t),e.blending===Z&&!1===e.transparent?Te(Y):Te(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),v.setFunc(e.depthFunc),v.setTest(e.depthTest),v.setMask(e.depthWrite),i.setMask(e.colorWrite);var r=e.stencilWrite;s.setTest(r),r&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Pe(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?Se(32926):Me(32926)},setFlipSided:Re,setCullFace:ze,setLineWidth:function(n){n!==C&&(P&&e.lineWidth(n),C=n)},setPolygonOffset:Pe,setScissorTest:function(e){e?Se(3089):Me(3089)},activeTexture:function(n){void 0===n&&(n=33984+z-1),E!==n&&(e.activeTexture(n),E=n)},bindTexture:function(n,t,r){void 0===r&&(r=null===E?33984+z-1:E);var o=I[r];void 0===o&&(o={type:void 0,texture:void 0},I[r]=o),o.type===n&&o.texture===t||(E!==r&&(e.activeTexture(r),E=r),e.bindTexture(n,t||W[n]),o.type=n,o.texture=t)},unbindTexture:function(){var n=I[E];void 0!==n&&void 0!==n.type&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},updateUBOMapping:function(n,t){var r=u.get(t);void 0===r&&(r=new WeakMap,u.set(t,r));var o=r.get(n);void 0===o&&(o=e.getUniformBlockIndex(t,n.name),r.set(n,o))},uniformBlockBinding:function(n,t){var r=u.get(t).get(n);l.get(n)!==r&&(e.uniformBlockBinding(t,r,n.__bindingPointIndex),l.set(n,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},scissor:function(n){!1===G.equals(n)&&(e.scissor(n.x,n.y,n.z,n.w),G.copy(n))},viewport:function(n){!1===V.equals(n)&&(e.viewport(n.x,n.y,n.z,n.w),V.copy(n))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===a&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),f={},E=null,I={},p={},m=new WeakMap,d=[],h=null,x=!1,g=null,y=null,_=null,b=null,U=null,w=null,S=null,M=!1,j=null,k=null,C=null,T=null,R=null,G.set(0,0,e.canvas.width,e.canvas.height),V.set(0,0,e.canvas.width,e.canvas.height),i.reset(),v.reset(),s.reset()}}}function Ss(e,n,t,r,o,a,i){var v,s,l,u=o.isWebGL2,f=o.maxTextures,p=o.maxCubemapSize,m=o.maxTextureSize,d=o.maxSamples,h=n.has("WEBGL_multisampled_render_to_texture")?n.get("WEBGL_multisampled_render_to_texture"):null,x=/OculusBrowser/g.test("undefined"===typeof navigator?"":navigator.userAgent),g=new WeakMap,y=new WeakMap,_=!1;try{_="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(W){}function b(e,n){return _?new OffscreenCanvas(e,n):ur("canvas")}function U(e,n,t,r){var o=1;if((e.width>r||e.height>r)&&(o=r/Math.max(e.width,e.height)),o<1||!0===n){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var a=n?tr:Math.floor,i=a(o*e.width),v=a(o*e.height);void 0===l&&(l=b(i,v));var s=t?b(i,v):l;return s.width=i,s.height=v,s.getContext("2d").drawImage(e,0,0,i,v),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+i+"x"+v+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function w(e){return er(e.width)&&er(e.height)}function S(e,n){return e.generateMipmaps&&n&&e.minFilter!==Ge&&e.minFilter!==Xe}function M(n){e.generateMipmap(n)}function j(t,r,o,a){var i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!1===u)return r;if(null!==t){if(void 0!==e[t])return e[t];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+t+"'")}var v=r;return 6403===r&&(5126===o&&(v=33326),5131===o&&(v=33325),5121===o&&(v=33321)),33319===r&&(5126===o&&(v=33328),5131===o&&(v=33327),5121===o&&(v=33323)),6408===r&&(5126===o&&(v=34836),5131===o&&(v=34842),5121===o&&(v=a===ct&&!1===i?35907:32856),32819===o&&(v=32854),32820===o&&(v=32855)),33325!==v&&33326!==v&&33327!==v&&33328!==v&&34842!==v&&34836!==v||n.get("EXT_color_buffer_float"),v}function k(e,n,t){return!0===S(e,t)||e.isFramebufferTexture&&e.minFilter!==Ge&&e.minFilter!==Xe?Math.log2(Math.max(n.width,n.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?n.mipmaps.length:1}function C(e){return e===Ge||e===Ve||e===We?9728:9729}function T(e){var n=e.target;n.removeEventListener("dispose",T),function(e){var n=r.get(e);if(void 0===n.__webglInit)return;var t=e.source,o=y.get(t);if(o){var a=o[n.__cacheKey];a.usedTimes--,0===a.usedTimes&&z(e),0===Object.keys(o).length&&y.delete(t)}r.remove(e)}(n),n.isVideoTexture&&g.delete(n)}function R(n){var t=n.target;t.removeEventListener("dispose",R),function(n){var t=n.texture,o=r.get(n),a=r.get(t);void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),i.memory.textures--);n.depthTexture&&n.depthTexture.dispose();if(n.isWebGLCubeRenderTarget)for(var v=0;v<6;v++)e.deleteFramebuffer(o.__webglFramebuffer[v]),o.__webglDepthbuffer&&e.deleteRenderbuffer(o.__webglDepthbuffer[v]);else{if(e.deleteFramebuffer(o.__webglFramebuffer),o.__webglDepthbuffer&&e.deleteRenderbuffer(o.__webglDepthbuffer),o.__webglMultisampledFramebuffer&&e.deleteFramebuffer(o.__webglMultisampledFramebuffer),o.__webglColorRenderbuffer)for(var s=0;s<o.__webglColorRenderbuffer.length;s++)o.__webglColorRenderbuffer[s]&&e.deleteRenderbuffer(o.__webglColorRenderbuffer[s]);o.__webglDepthRenderbuffer&&e.deleteRenderbuffer(o.__webglDepthRenderbuffer)}if(n.isWebGLMultipleRenderTargets)for(var c=0,l=t.length;c<l;c++){var u=r.get(t[c]);u.__webglTexture&&(e.deleteTexture(u.__webglTexture),i.memory.textures--),r.remove(t[c])}r.remove(t),r.remove(n)}(t)}function z(n){var t=r.get(n);e.deleteTexture(t.__webglTexture);var o=n.source;delete y.get(o)[t.__cacheKey],i.memory.textures--}var P=0;function F(e,n){var o=r.get(e);if(e.isVideoTexture&&function(e){var n=i.render.frame;g.get(e)!==n&&(g.set(e,n),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&o.__version!==e.version){var a=e.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==a.complete)return void A(o,e,n);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.bindTexture(3553,o.__webglTexture,33984+n)}var D=(c(v={},Oe,10497),c(v,Be,33071),c(v,Ne,33648),v),E=(c(s={},Ge,9728),c(s,Ve,9984),c(s,We,9986),c(s,Xe,9729),c(s,Ye,9985),c(s,Qe,9987),s);function I(t,a,i){if(i?(e.texParameteri(t,10242,D[a.wrapS]),e.texParameteri(t,10243,D[a.wrapT]),32879!==t&&35866!==t||e.texParameteri(t,32882,D[a.wrapR]),e.texParameteri(t,10240,E[a.magFilter]),e.texParameteri(t,10241,E[a.minFilter])):(e.texParameteri(t,10242,33071),e.texParameteri(t,10243,33071),32879!==t&&35866!==t||e.texParameteri(t,32882,33071),a.wrapS===Be&&a.wrapT===Be||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(t,10240,C(a.magFilter)),e.texParameteri(t,10241,C(a.minFilter)),a.minFilter!==Ge&&a.minFilter!==Xe&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){var v=n.get("EXT_texture_filter_anisotropic");if(a.type===on&&!1===n.has("OES_texture_float_linear"))return;if(!1===u&&a.type===an&&!1===n.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(t,v.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,o.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function L(n,t){var r=!1;void 0===n.__webglInit&&(n.__webglInit=!0,t.addEventListener("dispose",T));var o=t.source,a=y.get(o);void 0===a&&(a={},y.set(o,a));var v=function(e){var n=[];return n.push(e.wrapS),n.push(e.wrapT),n.push(e.wrapR||0),n.push(e.magFilter),n.push(e.minFilter),n.push(e.anisotropy),n.push(e.internalFormat),n.push(e.format),n.push(e.type),n.push(e.generateMipmaps),n.push(e.premultiplyAlpha),n.push(e.flipY),n.push(e.unpackAlignment),n.push(e.encoding),n.join()}(t);if(v!==n.__cacheKey){void 0===a[v]&&(a[v]={texture:e.createTexture(),usedTimes:0},i.memory.textures++,r=!0),a[v].usedTimes++;var s=a[n.__cacheKey];void 0!==s&&(a[n.__cacheKey].usedTimes--,0===s.usedTimes&&z(t)),n.__cacheKey=v,n.__webglTexture=a[v].texture}return r}function A(n,o,i){var v=3553;(o.isDataArrayTexture||o.isCompressedArrayTexture)&&(v=35866),o.isData3DTexture&&(v=32879);var s=L(n,o),c=o.source;t.bindTexture(v,n.__webglTexture,33984+i);var l=r.get(c);if(c.version!==l.__version||!0===s){t.activeTexture(33984+i),e.pixelStorei(37440,o.flipY),e.pixelStorei(37441,o.premultiplyAlpha),e.pixelStorei(3317,o.unpackAlignment),e.pixelStorei(37443,0);var f,p=function(e){return!u&&(e.wrapS!==Be||e.wrapT!==Be||e.minFilter!==Ge&&e.minFilter!==Xe)}(o)&&!1===w(o.image),d=U(o.image,p,!1,m),h=w(d=q(o,d))||u,x=a.convert(o.format,o.encoding),g=a.convert(o.type),y=j(o.internalFormat,x,g,o.encoding,o.isVideoTexture);I(v,o,h);var _=o.mipmaps,b=u&&!0!==o.isVideoTexture,C=void 0===l.__version||!0===s,T=k(o,d,h);if(o.isDepthTexture)y=6402,u?y=o.type===on?36012:o.type===rn?33190:o.type===cn?35056:33189:o.type===on&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),o.format===dn&&6402===y&&o.type!==nn&&o.type!==rn&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),o.type=rn,g=a.convert(o.type)),o.format===hn&&6402===y&&(y=34041,o.type!==cn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),o.type=cn,g=a.convert(o.type))),C&&(b?t.texStorage2D(3553,1,y,d.width,d.height):t.texImage2D(3553,0,y,d.width,d.height,0,x,g,null));else if(o.isDataTexture)if(_.length>0&&h){b&&C&&t.texStorage2D(3553,T,y,_[0].width,_[0].height);for(var R=0,z=_.length;R<z;R++)f=_[R],b?t.texSubImage2D(3553,R,0,0,f.width,f.height,x,g,f.data):t.texImage2D(3553,R,y,f.width,f.height,0,x,g,f.data);o.generateMipmaps=!1}else b?(C&&t.texStorage2D(3553,T,y,d.width,d.height),t.texSubImage2D(3553,0,0,0,d.width,d.height,x,g,d.data)):t.texImage2D(3553,0,y,d.width,d.height,0,x,g,d.data);else if(o.isCompressedTexture)if(o.isCompressedArrayTexture){b&&C&&t.texStorage3D(35866,T,y,_[0].width,_[0].height,d.depth);for(var P=0,F=_.length;P<F;P++)f=_[P],o.format!==fn?null!==x?b?t.compressedTexSubImage3D(35866,P,0,0,0,f.width,f.height,d.depth,x,f.data,0,0):t.compressedTexImage3D(35866,P,y,f.width,f.height,d.depth,0,f.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?t.texSubImage3D(35866,P,0,0,0,f.width,f.height,d.depth,x,g,f.data):t.texImage3D(35866,P,y,f.width,f.height,d.depth,0,x,g,f.data)}else{b&&C&&t.texStorage2D(3553,T,y,_[0].width,_[0].height);for(var D=0,E=_.length;D<E;D++)f=_[D],o.format!==fn?null!==x?b?t.compressedTexSubImage2D(3553,D,0,0,f.width,f.height,x,f.data):t.compressedTexImage2D(3553,D,y,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?t.texSubImage2D(3553,D,0,0,f.width,f.height,x,g,f.data):t.texImage2D(3553,D,y,f.width,f.height,0,x,g,f.data)}else if(o.isDataArrayTexture)b?(C&&t.texStorage3D(35866,T,y,d.width,d.height,d.depth),t.texSubImage3D(35866,0,0,0,0,d.width,d.height,d.depth,x,g,d.data)):t.texImage3D(35866,0,y,d.width,d.height,d.depth,0,x,g,d.data);else if(o.isData3DTexture)b?(C&&t.texStorage3D(32879,T,y,d.width,d.height,d.depth),t.texSubImage3D(32879,0,0,0,0,d.width,d.height,d.depth,x,g,d.data)):t.texImage3D(32879,0,y,d.width,d.height,d.depth,0,x,g,d.data);else if(o.isFramebufferTexture){if(C)if(b)t.texStorage2D(3553,T,y,d.width,d.height);else for(var A=d.width,O=d.height,B=0;B<T;B++)t.texImage2D(3553,B,y,A,O,0,x,g,null),A>>=1,O>>=1}else if(_.length>0&&h){b&&C&&t.texStorage2D(3553,T,y,_[0].width,_[0].height);for(var N=0,G=_.length;N<G;N++)f=_[N],b?t.texSubImage2D(3553,N,0,0,x,g,f):t.texImage2D(3553,N,y,x,g,f);o.generateMipmaps=!1}else b?(C&&t.texStorage2D(3553,T,y,d.width,d.height),t.texSubImage2D(3553,0,0,0,x,g,d)):t.texImage2D(3553,0,y,x,g,d);S(o,h)&&M(v),l.__version=c.version,o.onUpdate&&o.onUpdate(o)}n.__version=o.version}function O(n,o,i,v,s){var c=a.convert(i.format,i.encoding),l=a.convert(i.type),u=j(i.internalFormat,c,l,i.encoding);r.get(o).__hasExternalTextures||(32879===s||35866===s?t.texImage3D(s,0,u,o.width,o.height,o.depth,0,c,l,null):t.texImage2D(s,0,u,o.width,o.height,0,c,l,null)),t.bindFramebuffer(36160,n),V(o)?h.framebufferTexture2DMultisampleEXT(36160,v,s,r.get(i).__webglTexture,0,G(o)):(3553===s||s>=34069&&s<=34074)&&e.framebufferTexture2D(36160,v,s,r.get(i).__webglTexture,0),t.bindFramebuffer(36160,null)}function B(n,t,r){if(e.bindRenderbuffer(36161,n),t.depthBuffer&&!t.stencilBuffer){var o=33189;if(r||V(t)){var i=t.depthTexture;i&&i.isDepthTexture&&(i.type===on?o=36012:i.type===rn&&(o=33190));var v=G(t);V(t)?h.renderbufferStorageMultisampleEXT(36161,v,o,t.width,t.height):e.renderbufferStorageMultisample(36161,v,o,t.width,t.height)}else e.renderbufferStorage(36161,o,t.width,t.height);e.framebufferRenderbuffer(36160,36096,36161,n)}else if(t.depthBuffer&&t.stencilBuffer){var s=G(t);r&&!1===V(t)?e.renderbufferStorageMultisample(36161,s,35056,t.width,t.height):V(t)?h.renderbufferStorageMultisampleEXT(36161,s,35056,t.width,t.height):e.renderbufferStorage(36161,34041,t.width,t.height),e.framebufferRenderbuffer(36160,33306,36161,n)}else for(var c=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture],l=0;l<c.length;l++){var u=c[l],f=a.convert(u.format,u.encoding),p=a.convert(u.type),m=j(u.internalFormat,f,p,u.encoding),d=G(t);r&&!1===V(t)?e.renderbufferStorageMultisample(36161,d,m,t.width,t.height):V(t)?h.renderbufferStorageMultisampleEXT(36161,d,m,t.width,t.height):e.renderbufferStorage(36161,m,t.width,t.height)}e.bindRenderbuffer(36161,null)}function N(n){var o=r.get(n),a=!0===n.isWebGLCubeRenderTarget;if(n.depthTexture&&!o.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(n,o){if(o&&o.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,n),!o.depthTexture||!o.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(o.depthTexture).__webglTexture&&o.depthTexture.image.width===o.width&&o.depthTexture.image.height===o.height||(o.depthTexture.image.width=o.width,o.depthTexture.image.height=o.height,o.depthTexture.needsUpdate=!0),F(o.depthTexture,0);var a=r.get(o.depthTexture).__webglTexture,i=G(o);if(o.depthTexture.format===dn)V(o)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,i):e.framebufferTexture2D(36160,36096,3553,a,0);else{if(o.depthTexture.format!==hn)throw new Error("Unknown depthTexture format");V(o)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,i):e.framebufferTexture2D(36160,33306,3553,a,0)}}(o.__webglFramebuffer,n)}else if(a){o.__webglDepthbuffer=[];for(var i=0;i<6;i++)t.bindFramebuffer(36160,o.__webglFramebuffer[i]),o.__webglDepthbuffer[i]=e.createRenderbuffer(),B(o.__webglDepthbuffer[i],n,!1)}else t.bindFramebuffer(36160,o.__webglFramebuffer),o.__webglDepthbuffer=e.createRenderbuffer(),B(o.__webglDepthbuffer,n,!1);t.bindFramebuffer(36160,null)}function G(e){return Math.min(d,e.samples)}function V(e){var t=r.get(e);return u&&e.samples>0&&!0===n.has("WEBGL_multisampled_render_to_texture")&&!1!==t.__useRenderToTexture}function q(e,t){var r=e.encoding,o=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===qt||r!==st&&(r===ct?!1===u?!0===n.has("EXT_sRGB")&&o===fn?(e.format=qt,e.minFilter=Xe,e.generateMipmaps=!1):t=Sr.sRGBToLinear(t):o===fn&&a===$e||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),t}this.allocateTextureUnit=function(){var e=P;return e>=f&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+f),P+=1,e},this.resetTextureUnits=function(){P=0},this.setTexture2D=F,this.setTexture2DArray=function(e,n){var o=r.get(e);e.version>0&&o.__version!==e.version?A(o,e,n):t.bindTexture(35866,o.__webglTexture,33984+n)},this.setTexture3D=function(e,n){var o=r.get(e);e.version>0&&o.__version!==e.version?A(o,e,n):t.bindTexture(32879,o.__webglTexture,33984+n)},this.setTextureCube=function(n,o){var i=r.get(n);n.version>0&&i.__version!==n.version?function(n,o,i){if(6!==o.image.length)return;var v=L(n,o),s=o.source;t.bindTexture(34067,n.__webglTexture,33984+i);var c=r.get(s);if(s.version!==c.__version||!0===v){t.activeTexture(33984+i),e.pixelStorei(37440,o.flipY),e.pixelStorei(37441,o.premultiplyAlpha),e.pixelStorei(3317,o.unpackAlignment),e.pixelStorei(37443,0);for(var l=o.isCompressedTexture||o.image[0].isCompressedTexture,f=o.image[0]&&o.image[0].isDataTexture,m=[],d=0;d<6;d++)m[d]=l||f?f?o.image[d].image:o.image[d]:U(o.image[d],!1,!0,p),m[d]=q(o,m[d]);var h,x=m[0],g=w(x)||u,y=a.convert(o.format,o.encoding),_=a.convert(o.type),b=j(o.internalFormat,y,_,o.encoding),C=u&&!0!==o.isVideoTexture,T=void 0===c.__version||!0===v,R=k(o,x,g);if(I(34067,o,g),l){C&&T&&t.texStorage2D(34067,R,b,x.width,x.height);for(var z=0;z<6;z++){h=m[z].mipmaps;for(var P=0;P<h.length;P++){var F=h[P];o.format!==fn?null!==y?C?t.compressedTexSubImage2D(34069+z,P,0,0,F.width,F.height,y,F.data):t.compressedTexImage2D(34069+z,P,b,F.width,F.height,0,F.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):C?t.texSubImage2D(34069+z,P,0,0,F.width,F.height,y,_,F.data):t.texImage2D(34069+z,P,b,F.width,F.height,0,y,_,F.data)}}}else{h=o.mipmaps,C&&T&&(h.length>0&&R++,t.texStorage2D(34067,R,b,m[0].width,m[0].height));for(var D=0;D<6;D++)if(f){C?t.texSubImage2D(34069+D,0,0,0,m[D].width,m[D].height,y,_,m[D].data):t.texImage2D(34069+D,0,b,m[D].width,m[D].height,0,y,_,m[D].data);for(var E=0;E<h.length;E++){var A=h[E].image[D].image;C?t.texSubImage2D(34069+D,E+1,0,0,A.width,A.height,y,_,A.data):t.texImage2D(34069+D,E+1,b,A.width,A.height,0,y,_,A.data)}}else{C?t.texSubImage2D(34069+D,0,0,0,y,_,m[D]):t.texImage2D(34069+D,0,b,y,_,m[D]);for(var O=0;O<h.length;O++){var B=h[O];C?t.texSubImage2D(34069+D,O+1,0,0,y,_,B.image[D]):t.texImage2D(34069+D,O+1,b,y,_,B.image[D])}}}S(o,g)&&M(34067),c.__version=s.version,o.onUpdate&&o.onUpdate(o)}n.__version=o.version}(i,n,o):t.bindTexture(34067,i.__webglTexture,33984+o)},this.rebindTextures=function(e,n,t){var o=r.get(e);void 0!==n&&O(o.__webglFramebuffer,e,e.texture,36064,3553),void 0!==t&&N(e)},this.setupRenderTarget=function(n){var v=n.texture,s=r.get(n),c=r.get(v);n.addEventListener("dispose",R),!0!==n.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=v.version,i.memory.textures++);var l=!0===n.isWebGLCubeRenderTarget,f=!0===n.isWebGLMultipleRenderTargets,p=w(n)||u;if(l){s.__webglFramebuffer=[];for(var m=0;m<6;m++)s.__webglFramebuffer[m]=e.createFramebuffer()}else{if(s.__webglFramebuffer=e.createFramebuffer(),f)if(o.drawBuffers)for(var d=n.texture,h=0,x=d.length;h<x;h++){var g=r.get(d[h]);void 0===g.__webglTexture&&(g.__webglTexture=e.createTexture(),i.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(u&&n.samples>0&&!1===V(n)){var y=f?v:[v];s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,s.__webglMultisampledFramebuffer);for(var _=0;_<y.length;_++){var b=y[_];s.__webglColorRenderbuffer[_]=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer[_]);var U=a.convert(b.format,b.encoding),k=a.convert(b.type),C=j(b.internalFormat,U,k,b.encoding,!0===n.isXRRenderTarget),T=G(n);e.renderbufferStorageMultisample(36161,T,C,n.width,n.height),e.framebufferRenderbuffer(36160,36064+_,36161,s.__webglColorRenderbuffer[_])}e.bindRenderbuffer(36161,null),n.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),B(s.__webglDepthRenderbuffer,n,!0)),t.bindFramebuffer(36160,null)}}if(l){t.bindTexture(34067,c.__webglTexture),I(34067,v,p);for(var z=0;z<6;z++)O(s.__webglFramebuffer[z],n,v,36064,34069+z);S(v,p)&&M(34067),t.unbindTexture()}else if(f){for(var P=n.texture,F=0,D=P.length;F<D;F++){var E=P[F],L=r.get(E);t.bindTexture(3553,L.__webglTexture),I(3553,E,p),O(s.__webglFramebuffer,n,E,36064+F,3553),S(E,p)&&M(3553)}t.unbindTexture()}else{var A=3553;(n.isWebGL3DRenderTarget||n.isWebGLArrayRenderTarget)&&(u?A=n.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(A,c.__webglTexture),I(A,v,p),O(s.__webglFramebuffer,n,v,36064,A),S(v,p)&&M(A),t.unbindTexture()}n.depthBuffer&&N(n)},this.updateRenderTargetMipmap=function(e){for(var n=w(e)||u,o=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture],a=0,i=o.length;a<i;a++){var v=o[a];if(S(v,n)){var s=e.isWebGLCubeRenderTarget?34067:3553,c=r.get(v).__webglTexture;t.bindTexture(s,c),M(s),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function(n){if(u&&n.samples>0&&!1===V(n)){var o=n.isWebGLMultipleRenderTargets?n.texture:[n.texture],a=n.width,i=n.height,v=16384,s=[],c=n.stencilBuffer?33306:36096,l=r.get(n),f=!0===n.isWebGLMultipleRenderTargets;if(f)for(var p=0;p<o.length;p++)t.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+p,36161,null),t.bindFramebuffer(36160,l.__webglFramebuffer),e.framebufferTexture2D(36009,36064+p,3553,null,0);t.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,l.__webglFramebuffer);for(var m=0;m<o.length;m++){s.push(36064+m),n.depthBuffer&&s.push(c);var d=void 0!==l.__ignoreDepthValues&&l.__ignoreDepthValues;if(!1===d&&(n.depthBuffer&&(v|=256),n.stencilBuffer&&(v|=1024)),f&&e.framebufferRenderbuffer(36008,36064,36161,l.__webglColorRenderbuffer[m]),!0===d&&(e.invalidateFramebuffer(36008,[c]),e.invalidateFramebuffer(36009,[c])),f){var h=r.get(o[m]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,h,0)}e.blitFramebuffer(0,0,a,i,0,0,a,i,v,9728),x&&e.invalidateFramebuffer(36008,s)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),f)for(var g=0;g<o.length;g++){t.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+g,36161,l.__webglColorRenderbuffer[g]);var y=r.get(o[g]).__webglTexture;t.bindFramebuffer(36160,l.__webglFramebuffer),e.framebufferTexture2D(36009,36064+g,3553,y,0)}t.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=N,this.setupFrameBufferTexture=O,this.useMultisampledRTT=V}function Ms(e,n,t){var r=t.isWebGL2;return{convert:function(t){var o,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(t===$e)return 5121;if(t===vn)return 32819;if(t===sn)return 32820;if(t===Ke)return 5120;if(t===en)return 5122;if(t===nn)return 5123;if(t===tn)return 5124;if(t===rn)return 5125;if(t===on)return 5126;if(t===an)return r?5131:null!==(o=n.get("OES_texture_half_float"))?o.HALF_FLOAT_OES:null;if(t===ln)return 6406;if(t===fn)return 6408;if(t===pn)return 6409;if(t===mn)return 6410;if(t===dn)return 6402;if(t===hn)return 34041;if(t===xn)return 6403;if(t===un)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(t===qt)return null!==(o=n.get("EXT_sRGB"))?o.SRGB_ALPHA_EXT:null;if(t===gn)return 36244;if(t===yn)return 33319;if(t===_n)return 33320;if(t===bn)return 36249;if(t===Un||t===wn||t===Sn||t===Mn)if(a===ct){if(null===(o=n.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(t===Un)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===wn)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===Sn)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===Mn)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(o=n.get("WEBGL_compressed_texture_s3tc")))return null;if(t===Un)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===wn)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Sn)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Mn)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===jn||t===kn||t===Cn||t===Tn){if(null===(o=n.get("WEBGL_compressed_texture_pvrtc")))return null;if(t===jn)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===kn)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Cn)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Tn)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Rn)return null!==(o=n.get("WEBGL_compressed_texture_etc1"))?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(t===zn||t===Pn){if(null===(o=n.get("WEBGL_compressed_texture_etc")))return null;if(t===zn)return a===ct?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(t===Pn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}if(t===Fn||t===Dn||t===En||t===In||t===Ln||t===An||t===On||t===Bn||t===Nn||t===Gn||t===Vn||t===qn||t===Wn||t===Hn){if(null===(o=n.get("WEBGL_compressed_texture_astc")))return null;if(t===Fn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===Dn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===En)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===In)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===Ln)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===An)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===On)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===Bn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===Nn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===Gn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===Vn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===qn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===Wn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===Hn)return a===ct?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}if(t===Xn){if(null===(o=n.get("EXT_texture_compression_bptc")))return null;if(t===Xn)return a===ct?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}return t===cn?r?34042:null!==(o=n.get("WEBGL_depth_texture"))?o.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[t]?e[t]:null}}}var js=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return y(this,t),(e=n.call(this)).isArrayCamera=!0,e.cameras=r,e}return b(t)}(Ha),ks=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isGroup=!0,e.type="Group",e}return b(t)}(Oo),Cs={type:"move"},Ts=function(){function e(){y(this,e),this._targetRay=null,this._grip=null,this._hand=null}return b(e,[{key:"getHandSpace",value:function(){return null===this._hand&&(this._hand=new ks,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}},{key:"getTargetRaySpace",value:function(){return null===this._targetRay&&(this._targetRay=new ks,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Lr,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Lr),this._targetRay}},{key:"getGripSpace",value:function(){return null===this._grip&&(this._grip=new ks,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Lr,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Lr),this._grip}},{key:"dispatchEvent",value:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}},{key:"disconnect",value:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}},{key:"update",value:function(e,n,t){var r=null,o=null,a=null,i=this._targetRay,v=this._grip,s=this._hand;if(e&&"visible-blurred"!==n.session.visibilityState){if(s&&e.hand){a=!0;var c,l=f(e.hand.values());try{for(l.s();!(c=l.n()).done;){var u=c.value,p=n.getJointPose(u,t);if(void 0===s.joints[u.jointName]){var m=new ks;m.matrixAutoUpdate=!1,m.visible=!1,s.joints[u.jointName]=m,s.add(m)}var d=s.joints[u.jointName];null!==p&&(d.matrix.fromArray(p.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=p.radius),d.visible=null!==p}}catch(y){l.e(y)}finally{l.f()}var h=s.joints["index-finger-tip"],x=s.joints["thumb-tip"],g=h.position.distanceTo(x.position);s.inputState.pinching&&g>.025?(s.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!s.inputState.pinching&&g<=.015&&(s.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==v&&e.gripSpace&&null!==(o=n.getPose(e.gripSpace,t))&&(v.matrix.fromArray(o.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),o.linearVelocity?(v.hasLinearVelocity=!0,v.linearVelocity.copy(o.linearVelocity)):v.hasLinearVelocity=!1,o.angularVelocity?(v.hasAngularVelocity=!0,v.angularVelocity.copy(o.angularVelocity)):v.hasAngularVelocity=!1);null!==i&&(null===(r=n.getPose(e.targetRaySpace,t))&&null!==o&&(r=o),null!==r&&(i.matrix.fromArray(r.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),r.linearVelocity?(i.hasLinearVelocity=!0,i.linearVelocity.copy(r.linearVelocity)):i.hasLinearVelocity=!1,r.angularVelocity?(i.hasAngularVelocity=!0,i.angularVelocity.copy(r.angularVelocity)):i.hasAngularVelocity=!1,this.dispatchEvent(Cs)))}return null!==i&&(i.visible=null!==r),null!==v&&(v.visible=null!==o),null!==s&&(s.visible=null!==a),this}}]),e}(),Rs=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s,c,l,u){var f;if(y(this,t),(u=void 0!==u?u:dn)!==dn&&u!==hn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");return void 0===o&&u===dn&&(o=rn),void 0===o&&u===hn&&(o=cn),(f=n.call(this,null,a,i,v,s,c,u,o,l)).isDepthTexture=!0,f.image={width:e,height:r},f.magFilter=void 0!==s?s:Ge,f.minFilter=void 0!==c?c:Ge,f.flipY=!1,f.generateMipmaps=!1,f}return b(t)}(Cr),zs=function(e){U(t,e);var n=k(t);function t(e,r){var o;y(this,t);var a=M(o=n.call(this)),i=null,v=1,s=null,c="local-floor",l=null,u=null,f=null,p=null,m=null,d=null,h=r.getContextAttributes(),x=null,g=null,_=[],b=[],U=new Ha;U.layers.enable(1),U.viewport=new Tr;var w=new Ha;w.layers.enable(2),w.viewport=new Tr;var S=[U,w],j=new js;j.layers.enable(1),j.layers.enable(2);var k=null,C=null;function T(e){var n=b.indexOf(e.inputSource);if(-1!==n){var t=_[n];void 0!==t&&t.dispatchEvent({type:e.type,data:e.inputSource})}}function z(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",z),i.removeEventListener("inputsourceschange",P);for(var n=0;n<_.length;n++){var t=b[n];null!==t&&(b[n]=null,_[n].disconnect(t))}k=null,C=null,e.setRenderTarget(x),m=null,p=null,f=null,i=null,g=null,A.stop(),a.isPresenting=!1,a.dispatchEvent({type:"sessionend"})}function P(e){for(var n=0;n<e.removed.length;n++){var t=e.removed[n],r=b.indexOf(t);r>=0&&(b[r]=null,_[r].dispatchEvent({type:"disconnected",data:t}))}for(var o=0;o<e.added.length;o++){var a=e.added[o],i=b.indexOf(a);if(-1===i){for(var v=0;v<_.length;v++){if(v>=b.length){b.push(a),i=v;break}if(null===b[v]){b[v]=a,i=v;break}}if(-1===i)break}var s=_[i];s&&s.dispatchEvent({type:"connected",data:a})}}o.cameraAutoUpdate=!0,o.enabled=!1,o.isPresenting=!1,o.getController=function(e){var n=_[e];return void 0===n&&(n=new Ts,_[e]=n),n.getTargetRaySpace()},o.getControllerGrip=function(e){var n=_[e];return void 0===n&&(n=new Ts,_[e]=n),n.getGripSpace()},o.getHand=function(e){var n=_[e];return void 0===n&&(n=new Ts,_[e]=n),n.getHandSpace()},o.setFramebufferScaleFactor=function(e){v=e,!0===a.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},o.setReferenceSpaceType=function(e){c=e,!0===a.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},o.getReferenceSpace=function(){return l||s},o.setReferenceSpace=function(e){l=e},o.getBaseLayer=function(){return null!==p?p:m},o.getBinding=function(){return f},o.getFrame=function(){return d},o.getSession=function(){return i},o.setSession=function(){var n=R(F().mark((function n(t){var o,u,d,y,_;return F().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(null===(i=t)){n.next=25;break}if(x=e.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",z),i.addEventListener("inputsourceschange",P),!0===h.xrCompatible){n.next=14;break}return n.next=14,r.makeXRCompatible();case 14:return void 0===i.renderState.layers||!1===e.capabilities.isWebGL2?(o={antialias:void 0!==i.renderState.layers||h.antialias,alpha:h.alpha,depth:h.depth,stencil:h.stencil,framebufferScaleFactor:v},m=new XRWebGLLayer(i,r,o),i.updateRenderState({baseLayer:m}),g=new Rr(m.framebufferWidth,m.framebufferHeight,{format:fn,type:$e,encoding:e.outputEncoding,stencilBuffer:h.stencil})):(u=null,d=null,y=null,h.depth&&(y=h.stencil?35056:33190,u=h.stencil?hn:dn,d=h.stencil?cn:rn),_={colorFormat:32856,depthFormat:y,scaleFactor:v},f=new XRWebGLBinding(i,r),p=f.createProjectionLayer(_),i.updateRenderState({layers:[p]}),g=new Rr(p.textureWidth,p.textureHeight,{format:fn,type:$e,depthTexture:new Rs(p.textureWidth,p.textureHeight,d,void 0,void 0,void 0,void 0,void 0,void 0,u),stencilBuffer:h.stencil,encoding:e.outputEncoding,samples:h.antialias?4:0}),e.properties.get(g).__ignoreDepthValues=p.ignoreDepthValues),g.isXRRenderTarget=!0,this.setFoveation(1),l=null,n.next=20,i.requestReferenceSpace(c);case 20:s=n.sent,A.setContext(i),A.start(),a.isPresenting=!0,a.dispatchEvent({type:"sessionstart"});case 25:case"end":return n.stop()}}),n,this)})));return function(e){return n.apply(this,arguments)}}();var D=new Lr,E=new Lr;function I(e,n){null===n?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(n.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}o.updateCamera=function(e){if(null!==i){j.near=w.near=U.near=e.near,j.far=w.far=U.far=e.far,k===j.near&&C===j.far||(i.updateRenderState({depthNear:j.near,depthFar:j.far}),k=j.near,C=j.far);var n=e.parent,t=j.cameras;I(j,n);for(var r=0;r<t.length;r++)I(t[r],n);j.matrixWorld.decompose(j.position,j.quaternion,j.scale),e.matrix.copy(j.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);for(var o=e.children,a=0,v=o.length;a<v;a++)o[a].updateMatrixWorld(!0);2===t.length?function(e,n,t){D.setFromMatrixPosition(n.matrixWorld),E.setFromMatrixPosition(t.matrixWorld);var r=D.distanceTo(E),o=n.projectionMatrix.elements,a=t.projectionMatrix.elements,i=o[14]/(o[10]-1),v=o[14]/(o[10]+1),s=(o[9]+1)/o[5],c=(o[9]-1)/o[5],l=(o[8]-1)/o[0],u=(a[8]+1)/a[0],f=i*l,p=i*u,m=r/(-l+u),d=m*-l;n.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(d),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();var h=i+m,x=v+m,g=f-d,y=p+(r-d),_=s*v/x*h,b=c*v/x*h;e.projectionMatrix.makePerspective(g,y,_,b,h,x)}(j,U,w):j.projectionMatrix.copy(U.projectionMatrix)}},o.getCamera=function(){return j},o.getFoveation=function(){return null!==p?p.fixedFoveation:null!==m?m.fixedFoveation:void 0},o.setFoveation=function(e){null!==p&&(p.fixedFoveation=e),null!==m&&void 0!==m.fixedFoveation&&(m.fixedFoveation=e)};var L=null;var A=new oi;return A.setAnimationLoop((function(n,t){if(u=t.getViewerPose(l||s),d=t,null!==u){var r=u.views;null!==m&&(e.setRenderTargetFramebuffer(g,m.framebuffer),e.setRenderTarget(g));var o=!1;r.length!==j.cameras.length&&(j.cameras.length=0,o=!0);for(var a=0;a<r.length;a++){var i=r[a],v=null;if(null!==m)v=m.getViewport(i);else{var c=f.getViewSubImage(p,i);v=c.viewport,0===a&&(e.setRenderTargetTextures(g,c.colorTexture,p.ignoreDepthValues?void 0:c.depthStencilTexture),e.setRenderTarget(g))}var h=S[a];void 0===h&&((h=new Ha).layers.enable(a),h.viewport=new Tr,S[a]=h),h.matrix.fromArray(i.transform.matrix),h.projectionMatrix.fromArray(i.projectionMatrix),h.viewport.set(v.x,v.y,v.width,v.height),0===a&&j.matrix.copy(h.matrix),!0===o&&j.cameras.push(h)}}for(var x=0;x<_.length;x++){var y=b[x],U=_[x];null!==y&&void 0!==U&&U.update(y,t,l||s)}L&&L(n,t),d=null})),o.setAnimationLoop=function(e){L=e},o.dispose=function(){},o}return b(t)}(Wt);function Ps(e,n){function t(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.bumpMap&&(t.bumpMap.value=r.bumpMap,t.bumpScale.value=r.bumpScale,r.side===H&&(t.bumpScale.value*=-1)),r.displacementMap&&(t.displacementMap.value=r.displacementMap,t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap),r.normalMap&&(t.normalMap.value=r.normalMap,t.normalScale.value.copy(r.normalScale),r.side===H&&t.normalScale.value.negate()),r.specularMap&&(t.specularMap.value=r.specularMap),r.alphaTest>0&&(t.alphaTest.value=r.alphaTest);var o,a,i=n.get(r).envMap;if(i&&(t.envMap.value=i,t.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,t.reflectivity.value=r.reflectivity,t.ior.value=r.ior,t.refractionRatio.value=r.refractionRatio),r.lightMap){t.lightMap.value=r.lightMap;var v=!0!==e.physicallyCorrectLights?Math.PI:1;t.lightMapIntensity.value=r.lightMapIntensity*v}r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity),r.map?o=r.map:r.specularMap?o=r.specularMap:r.displacementMap?o=r.displacementMap:r.normalMap?o=r.normalMap:r.bumpMap?o=r.bumpMap:r.roughnessMap?o=r.roughnessMap:r.metalnessMap?o=r.metalnessMap:r.alphaMap?o=r.alphaMap:r.emissiveMap?o=r.emissiveMap:r.clearcoatMap?o=r.clearcoatMap:r.clearcoatNormalMap?o=r.clearcoatNormalMap:r.clearcoatRoughnessMap?o=r.clearcoatRoughnessMap:r.iridescenceMap?o=r.iridescenceMap:r.iridescenceThicknessMap?o=r.iridescenceThicknessMap:r.specularIntensityMap?o=r.specularIntensityMap:r.specularColorMap?o=r.specularColorMap:r.transmissionMap?o=r.transmissionMap:r.thicknessMap?o=r.thicknessMap:r.sheenColorMap?o=r.sheenColorMap:r.sheenRoughnessMap&&(o=r.sheenRoughnessMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uvTransform.value.copy(o.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}return{refreshFogUniforms:function(e,n){e.fogColor.value.copy(n.color),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,o,a,i){r.isMeshBasicMaterial||r.isMeshLambertMaterial?t(e,r):r.isMeshToonMaterial?(t(e,r),function(e,n){n.gradientMap&&(e.gradientMap.value=n.gradientMap)}(e,r)):r.isMeshPhongMaterial?(t(e,r),function(e,n){e.specular.value.copy(n.specular),e.shininess.value=Math.max(n.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(t(e,r),function(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap);t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap);n.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,n,t){e.ior.value=n.ior,n.sheen>0&&(e.sheenColor.value.copy(n.sheenColor).multiplyScalar(n.sheen),e.sheenRoughness.value=n.sheenRoughness,n.sheenColorMap&&(e.sheenColorMap.value=n.sheenColorMap),n.sheenRoughnessMap&&(e.sheenRoughnessMap.value=n.sheenRoughnessMap));n.clearcoat>0&&(e.clearcoat.value=n.clearcoat,e.clearcoatRoughness.value=n.clearcoatRoughness,n.clearcoatMap&&(e.clearcoatMap.value=n.clearcoatMap),n.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=n.clearcoatRoughnessMap),n.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(n.clearcoatNormalScale),e.clearcoatNormalMap.value=n.clearcoatNormalMap,n.side===H&&e.clearcoatNormalScale.value.negate()));n.iridescence>0&&(e.iridescence.value=n.iridescence,e.iridescenceIOR.value=n.iridescenceIOR,e.iridescenceThicknessMinimum.value=n.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=n.iridescenceThicknessRange[1],n.iridescenceMap&&(e.iridescenceMap.value=n.iridescenceMap),n.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=n.iridescenceThicknessMap));n.transmission>0&&(e.transmission.value=n.transmission,e.transmissionSamplerMap.value=t.texture,e.transmissionSamplerSize.value.set(t.width,t.height),n.transmissionMap&&(e.transmissionMap.value=n.transmissionMap),e.thickness.value=n.thickness,n.thicknessMap&&(e.thicknessMap.value=n.thicknessMap),e.attenuationDistance.value=n.attenuationDistance,e.attenuationColor.value.copy(n.attenuationColor));e.specularIntensity.value=n.specularIntensity,e.specularColor.value.copy(n.specularColor),n.specularIntensityMap&&(e.specularIntensityMap.value=n.specularIntensityMap);n.specularColorMap&&(e.specularColorMap.value=n.specularColorMap)}(e,r,i)):r.isMeshMatcapMaterial?(t(e,r),function(e,n){n.matcap&&(e.matcap.value=n.matcap)}(e,r)):r.isMeshDepthMaterial?t(e,r):r.isMeshDistanceMaterial?(t(e,r),function(e,n){e.referencePosition.value.copy(n.referencePosition),e.nearDistance.value=n.nearDistance,e.farDistance.value=n.farDistance}(e,r)):r.isMeshNormalMaterial?t(e,r):r.isLineBasicMaterial?(function(e,n){e.diffuse.value.copy(n.color),e.opacity.value=n.opacity}(e,r),r.isLineDashedMaterial&&function(e,n){e.dashSize.value=n.dashSize,e.totalSize.value=n.dashSize+n.gapSize,e.scale.value=n.scale}(e,r)):r.isPointsMaterial?function(e,n,t,r){e.diffuse.value.copy(n.color),e.opacity.value=n.opacity,e.size.value=n.size*t,e.scale.value=.5*r,n.map&&(e.map.value=n.map);n.alphaMap&&(e.alphaMap.value=n.alphaMap);n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);var o;n.map?o=n.map:n.alphaMap&&(o=n.alphaMap);void 0!==o&&(!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix))}(e,r,o,a):r.isSpriteMaterial?function(e,n){e.diffuse.value.copy(n.color),e.opacity.value=n.opacity,e.rotation.value=n.rotation,n.map&&(e.map.value=n.map);n.alphaMap&&(e.alphaMap.value=n.alphaMap);n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);var t;n.map?t=n.map:n.alphaMap&&(t=n.alphaMap);void 0!==t&&(!0===t.matrixAutoUpdate&&t.updateMatrix(),e.uvTransform.value.copy(t.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Fs(e,n,t,r){var o={},a={},i=[],v=t.isWebGL2?e.getParameter(35375):0;function s(e,n,t){var r=e.value;if(void 0===t[n])return t[n]="number"===typeof r?r:r.clone(),!0;if("number"===typeof r){if(t[n]!==r)return t[n]=r,!0}else{var o=t[n];if(!1===o.equals(r))return o.copy(r),!0}return!1}function c(e){var n=e.value,t={boundary:0,storage:0};return"number"===typeof n?(t.boundary=4,t.storage=4):n.isVector2?(t.boundary=8,t.storage=8):n.isVector3||n.isColor?(t.boundary=16,t.storage=12):n.isVector4?(t.boundary=16,t.storage=16):n.isMatrix3?(t.boundary=48,t.storage=48):n.isMatrix4?(t.boundary=64,t.storage=64):n.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",n),t}function l(n){var t=n.target;t.removeEventListener("dispose",l);var r=i.indexOf(t.__bindingPointIndex);i.splice(r,1),e.deleteBuffer(o[t.id]),delete o[t.id],delete a[t.id]}return{bind:function(e,n){var t=n.program;r.uniformBlockBinding(e,t)},update:function(t,u){var f=o[t.id];void 0===f&&(!function(e){for(var n=e.uniforms,t=0,r=16,o=0,a=0,i=n.length;a<i;a++){var v=n[a],s=c(v);if(v.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),v.__offset=t,a>0)0!==(o=t%r)&&r-o-s.boundary<0&&(t+=r-o,v.__offset=t);t+=s.storage}(o=t%r)>0&&(t+=r-o);e.__size=t,e.__cache={}}(t),f=function(n){var t=function(){for(var e=0;e<v;e++)if(-1===i.indexOf(e))return i.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();n.__bindingPointIndex=t;var r=e.createBuffer(),o=n.__size,a=n.usage;return e.bindBuffer(35345,r),e.bufferData(35345,o,a),e.bindBuffer(35345,null),e.bindBufferBase(35345,t,r),r}(t),o[t.id]=f,t.addEventListener("dispose",l));var p=u.program;r.updateUBOMapping(t,p);var m=n.render.frame;a[t.id]!==m&&(!function(n){var t=o[n.id],r=n.uniforms,a=n.__cache;e.bindBuffer(35345,t);for(var i=0,v=r.length;i<v;i++){var c=r[i];if(!0===s(c,i,a)){var l=c.value,u=c.__offset;"number"===typeof l?(c.__data[0]=l,e.bufferSubData(35345,u,c.__data)):(c.value.isMatrix3?(c.__data[0]=c.value.elements[0],c.__data[1]=c.value.elements[1],c.__data[2]=c.value.elements[2],c.__data[3]=c.value.elements[0],c.__data[4]=c.value.elements[3],c.__data[5]=c.value.elements[4],c.__data[6]=c.value.elements[5],c.__data[7]=c.value.elements[0],c.__data[8]=c.value.elements[6],c.__data[9]=c.value.elements[7],c.__data[10]=c.value.elements[8],c.__data[11]=c.value.elements[0]):l.toArray(c.__data),e.bufferSubData(35345,u,c.__data))}}e.bindBuffer(35345,null)}(t),a[t.id]=m)},dispose:function(){for(var n in o)e.deleteBuffer(o[n]);i=[],o={},a={}}}}function Ds(){var e=ur("canvas");return e.style.display="block",e}function Es(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.isWebGLRenderer=!0;var n,t=void 0!==e.canvas?e.canvas:Ds(),r=void 0!==e.context?e.context:null,o=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,i=void 0!==e.antialias&&e.antialias,v=void 0===e.premultipliedAlpha||e.premultipliedAlpha,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",l=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;n=null!==r?r.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;var u=null,f=null,p=[],m=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=st,this.physicallyCorrectLights=!1,this.toneMapping=ke,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});var d=this,h=!1,x=0,g=0,y=null,_=-1,b=null,U=new Tr,w=new Tr,S=null,M=t.width,j=t.height,k=1,C=null,T=null,R=new Tr(0,0,M,j),z=new Tr(0,0,M,j),P=!1,F=new ri,E=!1,I=!1,L=null,A=new po,O=new ir,B=new Lr,N={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function G(){return null===y?k:1}var V,q,Y,Z,Q,J,$,K,ee,ne,te,re,oe,ae,ie,ve,se,ce,le,ue,fe,pe,me,de,he=r;function xe(e,n){for(var r=0;r<e.length;r++){var o=e[r],a=t.getContext(o,n);if(null!==a)return a}return null}try{var ge={alpha:!0,depth:o,stencil:a,antialias:i,premultipliedAlpha:v,preserveDrawingBuffer:s,powerPreference:c,failIfMajorPerformanceCaveat:l};if("setAttribute"in t&&t.setAttribute("data-engine","three.js r".concat(D)),t.addEventListener("webglcontextlost",Ue,!1),t.addEventListener("webglcontextrestored",we,!1),t.addEventListener("webglcontextcreationerror",Se,!1),null===he){var ye=["webgl2","webgl","experimental-webgl"];if(!0===d.isWebGL1Renderer&&ye.shift(),null===(he=xe(ye,ge)))throw xe(ye)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===he.getShaderPrecisionFormat&&(he.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(qe){throw console.error("THREE.WebGLRenderer: "+qe.message),qe}function _e(){V=new zi(he),q=new pi(he,V,e),V.init(q),pe=new Ms(he,V,q),Y=new ws(he,V,q),Z=new Di,Q=new cs,J=new Ss(he,V,Y,Q,q,pe,Z),$=new di(d),K=new Ri(d),ee=new ai(he,q),me=new ui(he,V,ee,q),ne=new Pi(he,ee,Z,me),te=new Ai(he,ne,ee,Z),le=new Li(he,q,J),ve=new mi(Q),re=new ss(d,$,K,V,q,me,ve),oe=new Ps(d,Q),ae=new ps,ie=new ys(V,q),ce=new li(d,$,K,Y,te,n,v),se=new Us(d,te,q),de=new Fs(he,Z,q,Y),ue=new fi(he,V,Z,q),fe=new Fi(he,V,Z,q),Z.programs=re.programs,d.capabilities=q,d.extensions=V,d.properties=Q,d.renderLists=ae,d.shadowMap=se,d.state=Y,d.info=Z}_e();var be=new zs(d,he);function Ue(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),h=!0}function we(){console.log("THREE.WebGLRenderer: Context Restored."),h=!1;var e=Z.autoReset,n=se.enabled,t=se.autoUpdate,r=se.needsUpdate,o=se.type;_e(),Z.autoReset=e,se.enabled=n,se.autoUpdate=t,se.needsUpdate=r,se.type=o}function Se(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Me(e){var n=e.target;n.removeEventListener("dispose",Me),je(n)}function je(e){Ce(e),Q.remove(e)}function Ce(e){var n=Q.get(e).programs;void 0!==n&&(n.forEach((function(e){re.releaseProgram(e)})),e.isShaderMaterial&&re.releaseShaderCache(e))}this.xr=be,this.getContext=function(){return he},this.getContextAttributes=function(){return he.getContextAttributes()},this.forceContextLoss=function(){var e=V.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=V.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(e){void 0!==e&&(k=e,this.setSize(M,j,!1))},this.getSize=function(e){return e.set(M,j)},this.setSize=function(e,n,r){be.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,j=n,t.width=Math.floor(e*k),t.height=Math.floor(n*k),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(M*k,j*k).floor()},this.setDrawingBufferSize=function(e,n,r){M=e,j=n,k=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(U)},this.getViewport=function(e){return e.copy(R)},this.setViewport=function(e,n,t,r){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,n,t,r),Y.viewport(U.copy(R).multiplyScalar(k).floor())},this.getScissor=function(e){return e.copy(z)},this.setScissor=function(e,n,t,r){e.isVector4?z.set(e.x,e.y,e.z,e.w):z.set(e,n,t,r),Y.scissor(w.copy(z).multiplyScalar(k).floor())},this.getScissorTest=function(){return P},this.setScissorTest=function(e){Y.setScissorTest(P=e)},this.setOpaqueSort=function(e){C=e},this.setTransparentSort=function(e){T=e},this.getClearColor=function(e){return e.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=0;e&&(r|=16384),n&&(r|=256),t&&(r|=1024),he.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ue,!1),t.removeEventListener("webglcontextrestored",we,!1),t.removeEventListener("webglcontextcreationerror",Se,!1),ae.dispose(),ie.dispose(),Q.dispose(),$.dispose(),K.dispose(),te.dispose(),me.dispose(),de.dispose(),re.dispose(),be.dispose(),be.removeEventListener("sessionstart",ze),be.removeEventListener("sessionend",Pe),L&&(L.dispose(),L=null),Fe.stop()},this.renderBufferDirect=function(e,n,t,r,o,a){null===n&&(n=N);var i=o.isMesh&&o.matrixWorld.determinant()<0,v=Ne(e,n,t,r,o);Y.setMaterial(r,i);var s=t.index,c=t.attributes.position;if(null===s){if(void 0===c||0===c.count)return}else if(0===s.count)return;var l,u=1;!0===r.wireframe&&(s=ne.getWireframeAttribute(t),u=2),me.setup(o,r,v,t,s);var f=ue;null!==s&&(l=ee.get(s),(f=fe).setIndex(l));var p=null!==s?s.count:c.count,m=t.drawRange.start*u,d=t.drawRange.count*u,h=null!==a?a.start*u:0,x=null!==a?a.count*u:1/0,g=Math.max(m,h),y=Math.min(p,m+d,h+x)-1,_=Math.max(0,y-g+1);if(0!==_){if(o.isMesh)!0===r.wireframe?(Y.setLineWidth(r.wireframeLinewidth*G()),f.setMode(1)):f.setMode(4);else if(o.isLine){var b=r.linewidth;void 0===b&&(b=1),Y.setLineWidth(b*G()),o.isLineSegments?f.setMode(1):o.isLineLoop?f.setMode(2):f.setMode(3)}else o.isPoints?f.setMode(0):o.isSprite&&f.setMode(4);if(o.isInstancedMesh)f.renderInstances(g,_,o.count);else if(t.isInstancedBufferGeometry){var U=Math.min(t.instanceCount,t._maxInstanceCount);f.renderInstances(g,_,U)}else f.render(g,_)}},this.compile=function(e,n){function t(e,n,t){!0===e.transparent&&e.side===X?(e.side=H,e.needsUpdate=!0,Oe(e,n,t),e.side=W,e.needsUpdate=!0,Oe(e,n,t),e.side=X):Oe(e,n,t)}(f=ie.get(e)).init(),m.push(f),e.traverseVisible((function(e){e.isLight&&e.layers.test(n.layers)&&(f.pushLight(e),e.castShadow&&f.pushShadow(e))})),f.setupLights(d.physicallyCorrectLights),e.traverse((function(n){var r=n.material;if(r)if(Array.isArray(r))for(var o=0;o<r.length;o++){t(r[o],e,n)}else t(r,e,n)})),m.pop(),f=null};var Te=null;function Re(e){Te&&Te(e)}function ze(){Fe.stop()}function Pe(){Fe.start()}var Fe=new oi;function De(e,n,t,r){if(!1!==e.visible){if(e.layers.test(n.layers))if(e.isGroup)t=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(n);else if(e.isLight)f.pushLight(e),e.castShadow&&f.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||F.intersectsSprite(e)){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(A);var o=te.update(e),a=e.material;a.visible&&u.push(e,o,a,t,B.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Z.render.frame&&(e.skeleton.update(),e.skeleton.frame=Z.render.frame),!e.frustumCulled||F.intersectsObject(e))){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(A);var i=te.update(e),v=e.material;if(Array.isArray(v))for(var s=i.groups,c=0,l=s.length;c<l;c++){var p=s[c],m=v[p.materialIndex];m&&m.visible&&u.push(e,i,m,t,B.z,p)}else v.visible&&u.push(e,i,v,t,B.z,null)}for(var d=e.children,h=0,x=d.length;h<x;h++)De(d[h],n,t,r)}}function Ee(e,n,t,r){var o=e.opaque,a=e.transmissive,i=e.transparent;f.setupLightsView(t),a.length>0&&Ie(o,n,t),r&&Y.viewport(U.copy(r)),o.length>0&&Le(o,n,t),a.length>0&&Le(a,n,t),i.length>0&&Le(i,n,t),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function Ie(e,n,t){var r=q.isWebGL2;null===L&&(L=new Rr(1,1,{generateMipmaps:!0,type:V.has("EXT_color_buffer_half_float")?an:$e,minFilter:Qe,samples:r&&!0===i?4:0})),d.getDrawingBufferSize(O),r?L.setSize(O.x,O.y):L.setSize(tr(O.x),tr(O.y));var o=d.getRenderTarget();d.setRenderTarget(L),d.clear();var a=d.toneMapping;d.toneMapping=ke,Le(e,n,t),d.toneMapping=a,J.updateMultisampleRenderTarget(L),J.updateRenderTargetMipmap(L),d.setRenderTarget(o)}function Le(e,n,t){for(var r=!0===n.isScene?n.overrideMaterial:null,o=0,a=e.length;o<a;o++){var i=e[o],v=i.object,s=i.geometry,c=null===r?i.material:r,l=i.group;v.layers.test(t.layers)&&Ae(v,n,t,s,c,l)}}function Ae(e,n,t,r,o,a){e.onBeforeRender(d,n,t,r,o,a),e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),o.onBeforeRender(d,n,t,r,e,a),!0===o.transparent&&o.side===X?(o.side=H,o.needsUpdate=!0,d.renderBufferDirect(t,n,r,o,e,a),o.side=W,o.needsUpdate=!0,d.renderBufferDirect(t,n,r,o,e,a),o.side=X):d.renderBufferDirect(t,n,r,o,e,a),e.onAfterRender(d,n,t,r,o,a)}function Oe(e,n,t){!0!==n.isScene&&(n=N);var r=Q.get(e),o=f.state.lights,a=f.state.shadowsArray,i=o.state.version,v=re.getParameters(e,o.state,a,n,t),s=re.getProgramCacheKey(v),c=r.programs;r.environment=e.isMeshStandardMaterial?n.environment:null,r.fog=n.fog,r.envMap=(e.isMeshStandardMaterial?K:$).get(e.envMap||r.environment),void 0===c&&(e.addEventListener("dispose",Me),c=new Map,r.programs=c);var l=c.get(s);if(void 0!==l){if(r.currentProgram===l&&r.lightsStateVersion===i)return Be(e,v),l}else v.uniforms=re.getUniforms(e),e.onBuild(t,v,d),e.onBeforeCompile(v,d),l=re.acquireProgram(v,s),c.set(s,l),r.uniforms=v.uniforms;var u=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=ve.uniform),Be(e,v),r.needsLights=Ve(e),r.lightsStateVersion=i,r.needsLights&&(u.ambientLightColor.value=o.state.ambient,u.lightProbe.value=o.state.probe,u.directionalLights.value=o.state.directional,u.directionalLightShadows.value=o.state.directionalShadow,u.spotLights.value=o.state.spot,u.spotLightShadows.value=o.state.spotShadow,u.rectAreaLights.value=o.state.rectArea,u.ltc_1.value=o.state.rectAreaLTC1,u.ltc_2.value=o.state.rectAreaLTC2,u.pointLights.value=o.state.point,u.pointLightShadows.value=o.state.pointShadow,u.hemisphereLights.value=o.state.hemi,u.directionalShadowMap.value=o.state.directionalShadowMap,u.directionalShadowMatrix.value=o.state.directionalShadowMatrix,u.spotShadowMap.value=o.state.spotShadowMap,u.spotLightMatrix.value=o.state.spotLightMatrix,u.spotLightMap.value=o.state.spotLightMap,u.pointShadowMap.value=o.state.pointShadowMap,u.pointShadowMatrix.value=o.state.pointShadowMatrix);var p=l.getUniforms(),m=Gv.seqWithValue(p.seq,u);return r.currentProgram=l,r.uniformsList=m,l}function Be(e,n){var t=Q.get(e);t.outputEncoding=n.outputEncoding,t.instancing=n.instancing,t.skinning=n.skinning,t.morphTargets=n.morphTargets,t.morphNormals=n.morphNormals,t.morphColors=n.morphColors,t.morphTargetsCount=n.morphTargetsCount,t.numClippingPlanes=n.numClippingPlanes,t.numIntersection=n.numClipIntersection,t.vertexAlphas=n.vertexAlphas,t.vertexTangents=n.vertexTangents,t.toneMapping=n.toneMapping}function Ne(e,n,t,r,o){!0!==n.isScene&&(n=N),J.resetTextureUnits();var a=n.fog,i=r.isMeshStandardMaterial?n.environment:null,v=null===y?d.outputEncoding:!0===y.isXRRenderTarget?y.texture.encoding:st,s=(r.isMeshStandardMaterial?K:$).get(r.envMap||i),c=!0===r.vertexColors&&!!t.attributes.color&&4===t.attributes.color.itemSize,l=!!r.normalMap&&!!t.attributes.tangent,u=!!t.morphAttributes.position,p=!!t.morphAttributes.normal,m=!!t.morphAttributes.color,h=r.toneMapped?d.toneMapping:ke,x=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,g=void 0!==x?x.length:0,U=Q.get(r),w=f.state.lights;if(!0===E&&(!0===I||e!==b)){var S=e===b&&r.id===_;ve.setState(r,e,S)}var M=!1;r.version===U.__version?U.needsLights&&U.lightsStateVersion!==w.state.version||U.outputEncoding!==v||o.isInstancedMesh&&!1===U.instancing?M=!0:o.isInstancedMesh||!0!==U.instancing?o.isSkinnedMesh&&!1===U.skinning?M=!0:o.isSkinnedMesh||!0!==U.skinning?U.envMap!==s||!0===r.fog&&U.fog!==a?M=!0:void 0===U.numClippingPlanes||U.numClippingPlanes===ve.numPlanes&&U.numIntersection===ve.numIntersection?(U.vertexAlphas!==c||U.vertexTangents!==l||U.morphTargets!==u||U.morphNormals!==p||U.morphColors!==m||U.toneMapping!==h||!0===q.isWebGL2&&U.morphTargetsCount!==g)&&(M=!0):M=!0:M=!0:M=!0:(M=!0,U.__version=r.version);var C=U.currentProgram;!0===M&&(C=Oe(r,n,o));var T=!1,R=!1,z=!1,P=C.getUniforms(),F=U.uniforms;if(Y.useProgram(C.program)&&(T=!0,R=!0,z=!0),r.id!==_&&(_=r.id,R=!0),T||b!==e){if(P.setValue(he,"projectionMatrix",e.projectionMatrix),q.logarithmicDepthBuffer&&P.setValue(he,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),b!==e&&(b=e,R=!0,z=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var D=P.map.cameraPosition;void 0!==D&&D.setValue(he,B.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&P.setValue(he,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||o.isSkinnedMesh)&&P.setValue(he,"viewMatrix",e.matrixWorldInverse)}if(o.isSkinnedMesh){P.setOptional(he,o,"bindMatrix"),P.setOptional(he,o,"bindMatrixInverse");var A=o.skeleton;A&&(q.floatVertexTextures?(null===A.boneTexture&&A.computeBoneTexture(),P.setValue(he,"boneTexture",A.boneTexture,J),P.setValue(he,"boneTextureSize",A.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}var O=t.morphAttributes;if((void 0!==O.position||void 0!==O.normal||void 0!==O.color&&!0===q.isWebGL2)&&le.update(o,t,r,C),(R||U.receiveShadow!==o.receiveShadow)&&(U.receiveShadow=o.receiveShadow,P.setValue(he,"receiveShadow",o.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(F.envMap.value=s,F.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1),R&&(P.setValue(he,"toneMappingExposure",d.toneMappingExposure),U.needsLights&&Ge(F,z),a&&!0===r.fog&&oe.refreshFogUniforms(F,a),oe.refreshMaterialUniforms(F,r,k,j,L),Gv.upload(he,U.uniformsList,F,J)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Gv.upload(he,U.uniformsList,F,J),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&P.setValue(he,"center",o.center),P.setValue(he,"modelViewMatrix",o.modelViewMatrix),P.setValue(he,"normalMatrix",o.normalMatrix),P.setValue(he,"modelMatrix",o.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial)for(var G=r.uniformsGroups,V=0,W=G.length;V<W;V++)if(q.isWebGL2){var H=G[V];de.update(H,C),de.bind(H,C)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");return C}function Ge(e,n){e.ambientLightColor.needsUpdate=n,e.lightProbe.needsUpdate=n,e.directionalLights.needsUpdate=n,e.directionalLightShadows.needsUpdate=n,e.pointLights.needsUpdate=n,e.pointLightShadows.needsUpdate=n,e.spotLights.needsUpdate=n,e.spotLightShadows.needsUpdate=n,e.rectAreaLights.needsUpdate=n,e.hemisphereLights.needsUpdate=n}function Ve(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}Fe.setAnimationLoop(Re),"undefined"!==typeof self&&Fe.setContext(self),this.setAnimationLoop=function(e){Te=e,be.setAnimationLoop(e),null===e?Fe.stop():Fe.start()},be.addEventListener("sessionstart",ze),be.addEventListener("sessionend",Pe),this.render=function(e,n){if(void 0===n||!0===n.isCamera){if(!0!==h){!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===n.parent&&!0===n.matrixWorldAutoUpdate&&n.updateMatrixWorld(),!0===be.enabled&&!0===be.isPresenting&&(!0===be.cameraAutoUpdate&&be.updateCamera(n),n=be.getCamera()),!0===e.isScene&&e.onBeforeRender(d,e,n,y),(f=ie.get(e,m.length)).init(),m.push(f),A.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),F.setFromProjectionMatrix(A),I=this.localClippingEnabled,E=ve.init(this.clippingPlanes,I,n),(u=ae.get(e,p.length)).init(),p.push(u),De(e,n,0,d.sortObjects),u.finish(),!0===d.sortObjects&&u.sort(C,T),!0===E&&ve.beginShadows();var t=f.state.shadowsArray;if(se.render(t,e,n),!0===E&&ve.endShadows(),!0===this.info.autoReset&&this.info.reset(),ce.render(u,e),f.setupLights(d.physicallyCorrectLights),n.isArrayCamera)for(var r=n.cameras,o=0,a=r.length;o<a;o++){var i=r[o];Ee(u,e,i,i.viewport)}else Ee(u,e,n);null!==y&&(J.updateMultisampleRenderTarget(y),J.updateRenderTargetMipmap(y)),!0===e.isScene&&e.onAfterRender(d,e,n),me.resetDefaultState(),_=-1,b=null,m.pop(),f=m.length>0?m[m.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(e,n,t){Q.get(e.texture).__webglTexture=n,Q.get(e.depthTexture).__webglTexture=t;var r=Q.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===t,r.__autoAllocateDepthBuffer||!0===V.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,n){var t=Q.get(e);t.__webglFramebuffer=n,t.__useDefaultFramebuffer=void 0===n},this.setRenderTarget=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;y=e,x=n,g=t;var r=!0,o=null,a=!1,i=!1;if(e){var v=Q.get(e);void 0!==v.__useDefaultFramebuffer?(Y.bindFramebuffer(36160,null),r=!1):void 0===v.__webglFramebuffer?J.setupRenderTarget(e):v.__hasExternalTextures&&J.rebindTextures(e,Q.get(e.texture).__webglTexture,Q.get(e.depthTexture).__webglTexture);var s=e.texture;(s.isData3DTexture||s.isDataArrayTexture||s.isCompressedArrayTexture)&&(i=!0);var c=Q.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(o=c[n],a=!0):o=q.isWebGL2&&e.samples>0&&!1===J.useMultisampledRTT(e)?Q.get(e).__webglMultisampledFramebuffer:c,U.copy(e.viewport),w.copy(e.scissor),S=e.scissorTest}else U.copy(R).multiplyScalar(k).floor(),w.copy(z).multiplyScalar(k).floor(),S=P;var l=Y.bindFramebuffer(36160,o);if(l&&q.drawBuffers&&r&&Y.drawBuffers(e,o),Y.viewport(U),Y.scissor(w),Y.setScissorTest(S),a){var u=Q.get(e.texture);he.framebufferTexture2D(36160,36064,34069+n,u.__webglTexture,t)}else if(i){var f=Q.get(e.texture),p=n||0;he.framebufferTextureLayer(36160,36064,f.__webglTexture,t||0,p)}_=-1},this.readRenderTargetPixels=function(e,n,t,r,o,a,i){if(e&&e.isWebGLRenderTarget){var v=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==i&&(v=v[i]),v){Y.bindFramebuffer(36160,v);try{var s=e.texture,c=s.format,l=s.type;if(c!==fn&&pe.convert(c)!==he.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=l===an&&(V.has("EXT_color_buffer_half_float")||q.isWebGL2&&V.has("EXT_color_buffer_float"));if(l!==$e&&pe.convert(l)!==he.getParameter(35738)&&(l!==on||!(q.isWebGL2||V.has("OES_texture_float")||V.has("WEBGL_color_buffer_float")))&&!u)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");n>=0&&n<=e.width-r&&t>=0&&t<=e.height-o&&he.readPixels(n,t,r,o,pe.convert(c),pe.convert(l),a)}finally{var f=null!==y?Q.get(y).__webglFramebuffer:null;Y.bindFramebuffer(36160,f)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=Math.pow(2,-t),o=Math.floor(n.image.width*r),a=Math.floor(n.image.height*r);J.setTexture2D(n,0),he.copyTexSubImage2D(3553,t,0,0,e.x,e.y,o,a),Y.unbindTexture()},this.copyTextureToTexture=function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=n.image.width,a=n.image.height,i=pe.convert(t.format),v=pe.convert(t.type);J.setTexture2D(t,0),he.pixelStorei(37440,t.flipY),he.pixelStorei(37441,t.premultiplyAlpha),he.pixelStorei(3317,t.unpackAlignment),n.isDataTexture?he.texSubImage2D(3553,r,e.x,e.y,o,a,i,v,n.image.data):n.isCompressedTexture?he.compressedTexSubImage2D(3553,r,e.x,e.y,n.mipmaps[0].width,n.mipmaps[0].height,i,n.mipmaps[0].data):he.texSubImage2D(3553,r,e.x,e.y,i,v,n.image),0===r&&t.generateMipmaps&&he.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(e,n,t,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if(d.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var a,i=e.max.x-e.min.x+1,v=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,c=pe.convert(r.format),l=pe.convert(r.type);if(r.isData3DTexture)J.setTexture3D(r,0),a=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(r,0),a=35866}he.pixelStorei(37440,r.flipY),he.pixelStorei(37441,r.premultiplyAlpha),he.pixelStorei(3317,r.unpackAlignment);var u=he.getParameter(3314),f=he.getParameter(32878),p=he.getParameter(3316),m=he.getParameter(3315),h=he.getParameter(32877),x=t.isCompressedTexture?t.mipmaps[0]:t.image;he.pixelStorei(3314,x.width),he.pixelStorei(32878,x.height),he.pixelStorei(3316,e.min.x),he.pixelStorei(3315,e.min.y),he.pixelStorei(32877,e.min.z),t.isDataTexture||t.isData3DTexture?he.texSubImage3D(a,o,n.x,n.y,n.z,i,v,s,c,l,x.data):t.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),he.compressedTexSubImage3D(a,o,n.x,n.y,n.z,i,v,s,c,x.data)):he.texSubImage3D(a,o,n.x,n.y,n.z,i,v,s,c,l,x),he.pixelStorei(3314,u),he.pixelStorei(32878,f),he.pixelStorei(3316,p),he.pixelStorei(3315,m),he.pixelStorei(32877,h),0===o&&r.generateMipmaps&&he.generateMipmap(a),Y.unbindTexture()}},this.initTexture=function(e){e.isCubeTexture?J.setTextureCube(e,0):e.isData3DTexture?J.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?J.setTexture2DArray(e,0):J.setTexture2D(e,0),Y.unbindTexture()},this.resetState=function(){x=0,g=0,y=null,Y.reset(),me.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var Is=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(Es);Is.prototype.isWebGL1Renderer=!0;var Ls,As=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25e-5;y(this,e),this.isFogExp2=!0,this.name="",this.color=new wr(n),this.density=t}return b(e,[{key:"clone",value:function(){return new e(this.color,this.density)}},{key:"toJSON",value:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}]),e}(),Os=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;y(this,e),this.isFog=!0,this.name="",this.color=new wr(n),this.near=t,this.far=r}return b(e,[{key:"clone",value:function(){return new e(this.color,this.near,this.far)}},{key:"toJSON",value:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}]),e}(),Bs=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isScene=!0,e.type="Scene",e.background=null,e.environment=null,e.fog=null,e.backgroundBlurriness=0,e.overrideMaterial=null,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:M(e)})),e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return null!==this.fog&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.backgroundBlurriness=this.backgroundBlurriness),n}},{key:"autoUpdate",get:function(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate},set:function(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}]),t}(Oo),Ns=function(){function e(n,t){y(this,e),this.isInterleavedBuffer=!0,this.array=n,this.stride=t,this.count=void 0!==n?n.length/t:0,this.usage=Ft,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Qt()}return b(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}},{key:"copyAt",value:function(e,n,t){e*=this.stride,t*=n.stride;for(var r=0,o=this.stride;r<o;r++)this.array[e+r]=n.array[t+r];return this}},{key:"set",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,n),this}},{key:"clone",value:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Qt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);var n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),t=new this.constructor(n,this.stride);return t.setUsage(this.usage),t}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"toJSON",value:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Qt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}]),e}(),Gs=new Lr,Vs=function(){function e(n,t,r){var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];y(this,e),this.isInterleavedBufferAttribute=!0,this.name="",this.data=n,this.itemSize=t,this.offset=r,this.normalized=!0===o}return b(e,[{key:"count",get:function(){return this.data.count}},{key:"array",get:function(){return this.data.array}},{key:"needsUpdate",set:function(e){this.data.needsUpdate=e}},{key:"applyMatrix4",value:function(e){for(var n=0,t=this.data.count;n<t;n++)Gs.fromBufferAttribute(this,n),Gs.applyMatrix4(e),this.setXYZ(n,Gs.x,Gs.y,Gs.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var n=0,t=this.count;n<t;n++)Gs.fromBufferAttribute(this,n),Gs.applyNormalMatrix(e),this.setXYZ(n,Gs.x,Gs.y,Gs.z);return this}},{key:"transformDirection",value:function(e){for(var n=0,t=this.count;n<t;n++)Gs.fromBufferAttribute(this,n),Gs.transformDirection(e),this.setXYZ(n,Gs.x,Gs.y,Gs.z);return this}},{key:"setX",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.data.array[e*this.data.stride+this.offset]=n,this}},{key:"setY",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.data.array[e*this.data.stride+this.offset+1]=n,this}},{key:"setZ",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.data.array[e*this.data.stride+this.offset+2]=n,this}},{key:"setW",value:function(e,n){return this.normalized&&(n=or(n,this.array)),this.data.array[e*this.data.stride+this.offset+3]=n,this}},{key:"getX",value:function(e){var n=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(n=rr(n,this.array)),n}},{key:"getY",value:function(e){var n=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(n=rr(n,this.array)),n}},{key:"getZ",value:function(e){var n=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(n=rr(n,this.array)),n}},{key:"getW",value:function(e){var n=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setXY",value:function(e,n,t){return e=e*this.data.stride+this.offset,this.normalized&&(n=or(n,this.array),t=or(t,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=t,this}},{key:"setXYZ",value:function(e,n,t,r){return e=e*this.data.stride+this.offset,this.normalized&&(n=or(n,this.array),t=or(t,this.array),r=or(r,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=t,this.data.array[e+2]=r,this}},{key:"setXYZW",value:function(e,n,t,r,o){return e=e*this.data.stride+this.offset,this.normalized&&(n=or(n,this.array),t=or(t,this.array),r=or(r,this.array),o=or(o,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=t,this.data.array[e+2]=r,this.data.array[e+3]=o,this}},{key:"clone",value:function(n){if(void 0===n){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");for(var t=[],r=0;r<this.count;r++)for(var o=r*this.data.stride+this.offset,a=0;a<this.itemSize;a++)t.push(this.data.array[o+a]);return new ta(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===n.interleavedBuffers&&(n.interleavedBuffers={}),void 0===n.interleavedBuffers[this.data.uuid]&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new e(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}},{key:"toJSON",value:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");for(var n=[],t=0;t<this.count;t++)for(var r=t*this.data.stride+this.offset,o=0;o<this.itemSize;o++)n.push(this.data.array[r+o]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}]),e}(),qs=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isSpriteMaterial=!0,r.type="SpriteMaterial",r.color=new wr(16777215),r.map=null,r.alphaMap=null,r.rotation=0,r.sizeAttenuation=!0,r.transparent=!0,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}]),t}($o),Ws=new Lr,Hs=new Lr,Xs=new Lr,Ys=new ir,Zs=new ir,Qs=new po,Js=new Lr,$s=new Lr,Ks=new Lr,ec=new ir,nc=new ir,tc=new ir,rc=function(e){U(t,e);var n=k(t);function t(e){var r;if(y(this,t),(r=n.call(this)).isSprite=!0,r.type="Sprite",void 0===Ls){Ls=new _a;var o=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),a=new Ns(o,5);Ls.setIndex([0,1,2,0,2,3]),Ls.setAttribute("position",new Vs(a,3,0,!1)),Ls.setAttribute("uv",new Vs(a,2,3,!1))}return r.geometry=Ls,r.material=void 0!==e?e:new qs,r.center=new ir(.5,.5),r}return b(t,[{key:"raycast",value:function(e,n){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Hs.setFromMatrixScale(this.matrixWorld),Qs.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Xs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Hs.multiplyScalar(-Xs.z);var t,r,o=this.material.rotation;0!==o&&(r=Math.cos(o),t=Math.sin(o));var a=this.center;oc(Js.set(-.5,-.5,0),Xs,a,Hs,t,r),oc($s.set(.5,-.5,0),Xs,a,Hs,t,r),oc(Ks.set(.5,.5,0),Xs,a,Hs,t,r),ec.set(0,0),nc.set(1,0),tc.set(1,1);var i=e.ray.intersectTriangle(Js,$s,Ks,!1,Ws);if(null!==i||(oc($s.set(-.5,.5,0),Xs,a,Hs,t,r),nc.set(0,1),null!==(i=e.ray.intersectTriangle(Js,Ks,$s,!1,Ws)))){var v=e.ray.origin.distanceTo(Ws);v<e.near||v>e.far||n.push({distance:v,point:Ws.clone(),uv:Qo.getUV(Ws,Js,$s,Ks,ec,nc,tc,new ir),face:null,object:this})}}},{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}]),t}(Oo);function oc(e,n,t,r,o,a){Ys.subVectors(e,t).addScalar(.5).multiply(r),void 0!==o?(Zs.x=a*Ys.x-o*Ys.y,Zs.y=o*Ys.x+a*Ys.y):Zs.copy(Ys),e.copy(n),e.x+=Zs.x,e.y+=Zs.y,e.applyMatrix4(Qs)}var ac=new Lr,ic=new Lr,vc=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this))._currentLevel=0,e.type="LOD",Object.defineProperties(M(e),{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),e.autoUpdate=!0,e}return b(t,[{key:"copy",value:function(e){P(w(t.prototype),"copy",this).call(this,e,!1);for(var n=e.levels,r=0,o=n.length;r<o;r++){var a=n[r];this.addLevel(a.object.clone(),a.distance)}return this.autoUpdate=e.autoUpdate,this}},{key:"addLevel",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;n=Math.abs(n);var t,r=this.levels;for(t=0;t<r.length&&!(n<r[t].distance);t++);return r.splice(t,0,{distance:n,object:e}),this.add(e),this}},{key:"getCurrentLevel",value:function(){return this._currentLevel}},{key:"getObjectForDistance",value:function(e){var n=this.levels;if(n.length>0){var t,r;for(t=1,r=n.length;t<r&&!(e<n[t].distance);t++);return n[t-1].object}return null}},{key:"raycast",value:function(e,n){if(this.levels.length>0){ac.setFromMatrixPosition(this.matrixWorld);var t=e.ray.origin.distanceTo(ac);this.getObjectForDistance(t).raycast(e,n)}}},{key:"update",value:function(e){var n=this.levels;if(n.length>1){ac.setFromMatrixPosition(e.matrixWorld),ic.setFromMatrixPosition(this.matrixWorld);var t,r,o=ac.distanceTo(ic)/e.zoom;for(n[0].object.visible=!0,t=1,r=n.length;t<r&&o>=n[t].distance;t++)n[t-1].object.visible=!1,n[t].object.visible=!0;for(this._currentLevel=t-1;t<r;t++)n[t].object.visible=!1}}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[];for(var r=this.levels,o=0,a=r.length;o<a;o++){var i=r[o];n.object.levels.push({object:i.object.uuid,distance:i.distance})}return n}}]),t}(Oo),sc=new Lr,cc=new Tr,lc=new Tr,uc=new Lr,fc=new po,pc=function(e){U(t,e);var n=k(t);function t(e,r){var o;return y(this,t),(o=n.call(this,e,r)).isSkinnedMesh=!0,o.type="SkinnedMesh",o.bindMode="attached",o.bindMatrix=new po,o.bindMatrixInverse=new po,o}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}},{key:"bind",value:function(e,n){this.skeleton=e,void 0===n&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),n=this.matrixWorld),this.bindMatrix.copy(n),this.bindMatrixInverse.copy(n).invert()}},{key:"pose",value:function(){this.skeleton.pose()}},{key:"normalizeSkinWeights",value:function(){for(var e=new Tr,n=this.geometry.attributes.skinWeight,t=0,r=n.count;t<r;t++){e.fromBufferAttribute(n,t);var o=1/e.manhattanLength();o!==1/0?e.multiplyScalar(o):e.set(1,0,0,0),n.setXYZW(t,e.x,e.y,e.z,e.w)}}},{key:"updateMatrixWorld",value:function(e){P(w(t.prototype),"updateMatrixWorld",this).call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}},{key:"boneTransform",value:function(e,n){var t=this.skeleton,r=this.geometry;cc.fromBufferAttribute(r.attributes.skinIndex,e),lc.fromBufferAttribute(r.attributes.skinWeight,e),sc.copy(n).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(var o=0;o<4;o++){var a=lc.getComponent(o);if(0!==a){var i=cc.getComponent(o);fc.multiplyMatrices(t.bones[i].matrixWorld,t.boneInverses[i]),n.addScaledVector(uc.copy(sc).applyMatrix4(fc),a)}}return n.applyMatrix4(this.bindMatrixInverse)}}]),t}(Aa),mc=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isBone=!0,e.type="Bone",e}return b(t)}(Oo),dc=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3?arguments[3]:void 0,v=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0,l=arguments.length>7?arguments[7]:void 0,u=arguments.length>8&&void 0!==arguments[8]?arguments[8]:Ge,f=arguments.length>9&&void 0!==arguments[9]?arguments[9]:Ge,p=arguments.length>10?arguments[10]:void 0,m=arguments.length>11?arguments[11]:void 0;return y(this,t),(e=n.call(this,null,s,c,l,u,f,i,v,p,m)).isDataTexture=!0,e.image={data:r,width:o,height:a},e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return b(t)}(Cr),hc=new po,xc=new po,gc=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];y(this,e),this.uuid=Qt(),this.bones=n.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}return b(e,[{key:"init",value:function(){var e=this.bones,n=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===n.length)this.calculateInverses();else if(e.length!==n.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(var t=0,r=this.bones.length;t<r;t++)this.boneInverses.push(new po)}}},{key:"calculateInverses",value:function(){this.boneInverses.length=0;for(var e=0,n=this.bones.length;e<n;e++){var t=new po;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}},{key:"pose",value:function(){for(var e=0,n=this.bones.length;e<n;e++){var t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(var r=0,o=this.bones.length;r<o;r++){var a=this.bones[r];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}},{key:"update",value:function(){for(var e=this.bones,n=this.boneInverses,t=this.boneMatrices,r=this.boneTexture,o=0,a=e.length;o<a;o++){var i=e[o]?e[o].matrixWorld:xc;hc.multiplyMatrices(i,n[o]),hc.toArray(t,16*o)}null!==r&&(r.needsUpdate=!0)}},{key:"clone",value:function(){return new e(this.bones,this.boneInverses)}},{key:"computeBoneTexture",value:function(){var e=Math.sqrt(4*this.bones.length);e=nr(e),e=Math.max(e,4);var n=new Float32Array(e*e*4);n.set(this.boneMatrices);var t=new dc(n,e,e,fn,on);return t.needsUpdate=!0,this.boneMatrices=n,this.boneTexture=t,this.boneTextureSize=e,this}},{key:"getBoneByName",value:function(e){for(var n=0,t=this.bones.length;n<t;n++){var r=this.bones[n];if(r.name===e)return r}}},{key:"dispose",value:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}},{key:"fromJSON",value:function(e,n){this.uuid=e.uuid;for(var t=0,r=e.bones.length;t<r;t++){var o=e.bones[t],a=n[o];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),a=new mc),this.bones.push(a),this.boneInverses.push((new po).fromArray(e.boneInverses[t]))}return this.init(),this}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;for(var n=this.bones,t=this.boneInverses,r=0,o=n.length;r<o;r++){var a=n[r];e.bones.push(a.uuid);var i=t[r];e.boneInverses.push(i.toArray())}return e}}]),e}(),yc=function(e){U(t,e);var n=k(t);function t(e,r,o){var a,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(a=n.call(this,e,r,o)).isInstancedBufferAttribute=!0,a.meshPerAttribute=i,a}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}]),t}(ta),_c=new po,bc=new po,Uc=[],wc=new po,Sc=new Aa,Mc=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;y(this,t),(a=n.call(this,e,r)).isInstancedMesh=!0,a.instanceMatrix=new yc(new Float32Array(16*o),16),a.instanceColor=null,a.count=o,a.frustumCulled=!1;for(var i=0;i<o;i++)a.setMatrixAt(i,wc);return a}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}},{key:"getColorAt",value:function(e,n){n.fromArray(this.instanceColor.array,3*e)}},{key:"getMatrixAt",value:function(e,n){n.fromArray(this.instanceMatrix.array,16*e)}},{key:"raycast",value:function(e,n){var t=this.matrixWorld,r=this.count;if(Sc.geometry=this.geometry,Sc.material=this.material,void 0!==Sc.material)for(var o=0;o<r;o++){this.getMatrixAt(o,_c),bc.multiplyMatrices(t,_c),Sc.matrixWorld=bc,Sc.raycast(e,Uc);for(var a=0,i=Uc.length;a<i;a++){var v=Uc[a];v.instanceId=o,v.object=this,n.push(v)}Uc.length=0}}},{key:"setColorAt",value:function(e,n){null===this.instanceColor&&(this.instanceColor=new yc(new Float32Array(3*this.instanceMatrix.count),3)),n.toArray(this.instanceColor.array,3*e)}},{key:"setMatrixAt",value:function(e,n){n.toArray(this.instanceMatrix.array,16*e)}},{key:"updateMorphTargets",value:function(){}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),t}(Aa),jc=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isLineBasicMaterial=!0,r.type="LineBasicMaterial",r.color=new wr(16777215),r.linewidth=1,r.linecap="round",r.linejoin="round",r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}]),t}($o),kc=new Lr,Cc=new Lr,Tc=new po,Rc=new fo,zc=new oo,Pc=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new _a,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new jc;return y(this,t),(e=n.call(this)).isLine=!0,e.type="Line",e.geometry=r,e.material=o,e.updateMorphTargets(),e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.material=e.material,this.geometry=e.geometry,this}},{key:"computeLineDistances",value:function(){var e=this.geometry;if(null===e.index){for(var n=e.attributes.position,t=[0],r=1,o=n.count;r<o;r++)kc.fromBufferAttribute(n,r-1),Cc.fromBufferAttribute(n,r),t[r]=t[r-1],t[r]+=kc.distanceTo(Cc);e.setAttribute("lineDistance",new ua(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}},{key:"raycast",value:function(e,n){var t=this.geometry,r=this.matrixWorld,o=e.params.Line.threshold,a=t.drawRange;if(null===t.boundingSphere&&t.computeBoundingSphere(),zc.copy(t.boundingSphere),zc.applyMatrix4(r),zc.radius+=o,!1!==e.ray.intersectsSphere(zc)){Tc.copy(r).invert(),Rc.copy(e.ray).applyMatrix4(Tc);var i=o/((this.scale.x+this.scale.y+this.scale.z)/3),v=i*i,s=new Lr,c=new Lr,l=new Lr,u=new Lr,f=this.isLineSegments?2:1,p=t.index,m=t.attributes.position;if(null!==p)for(var d=Math.max(0,a.start),h=Math.min(p.count,a.start+a.count)-1;d<h;d+=f){var x=p.getX(d),g=p.getX(d+1);if(s.fromBufferAttribute(m,x),c.fromBufferAttribute(m,g),!(Rc.distanceSqToSegment(s,c,u,l)>v)){u.applyMatrix4(this.matrixWorld);var y=e.ray.origin.distanceTo(u);y<e.near||y>e.far||n.push({distance:y,point:l.clone().applyMatrix4(this.matrixWorld),index:d,face:null,faceIndex:null,object:this})}}else for(var _=Math.max(0,a.start),b=Math.min(m.count,a.start+a.count)-1;_<b;_+=f){if(s.fromBufferAttribute(m,_),c.fromBufferAttribute(m,_+1),!(Rc.distanceSqToSegment(s,c,u,l)>v)){u.applyMatrix4(this.matrixWorld);var U=e.ray.origin.distanceTo(u);U<e.near||U>e.far||n.push({distance:U,point:l.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){var t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,o=t.length;r<o;r++){var a=t[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}]),t}(Oo),Fc=new Lr,Dc=new Lr,Ec=function(e){U(t,e);var n=k(t);function t(e,r){var o;return y(this,t),(o=n.call(this,e,r)).isLineSegments=!0,o.type="LineSegments",o}return b(t,[{key:"computeLineDistances",value:function(){var e=this.geometry;if(null===e.index){for(var n=e.attributes.position,t=[],r=0,o=n.count;r<o;r+=2)Fc.fromBufferAttribute(n,r),Dc.fromBufferAttribute(n,r+1),t[r]=0===r?0:t[r-1],t[r+1]=t[r]+Fc.distanceTo(Dc);e.setAttribute("lineDistance",new ua(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}]),t}(Pc),Ic=function(e){U(t,e);var n=k(t);function t(e,r){var o;return y(this,t),(o=n.call(this,e,r)).isLineLoop=!0,o.type="LineLoop",o}return b(t)}(Pc),Lc=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isPointsMaterial=!0,r.type="PointsMaterial",r.color=new wr(16777215),r.map=null,r.alphaMap=null,r.size=1,r.sizeAttenuation=!0,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}]),t}($o),Ac=new po,Oc=new fo,Bc=new oo,Nc=new Lr,Gc=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new _a,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lc;return y(this,t),(e=n.call(this)).isPoints=!0,e.type="Points",e.geometry=r,e.material=o,e.updateMorphTargets(),e}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.material=e.material,this.geometry=e.geometry,this}},{key:"raycast",value:function(e,n){var t=this.geometry,r=this.matrixWorld,o=e.params.Points.threshold,a=t.drawRange;if(null===t.boundingSphere&&t.computeBoundingSphere(),Bc.copy(t.boundingSphere),Bc.applyMatrix4(r),Bc.radius+=o,!1!==e.ray.intersectsSphere(Bc)){Ac.copy(r).invert(),Oc.copy(e.ray).applyMatrix4(Ac);var i=o/((this.scale.x+this.scale.y+this.scale.z)/3),v=i*i,s=t.index,c=t.attributes.position;if(null!==s)for(var l=Math.max(0,a.start),u=Math.min(s.count,a.start+a.count);l<u;l++){var f=s.getX(l);Nc.fromBufferAttribute(c,f),Vc(Nc,f,v,r,e,n,this)}else for(var p=Math.max(0,a.start),m=Math.min(c.count,a.start+a.count);p<m;p++)Nc.fromBufferAttribute(c,p),Vc(Nc,p,v,r,e,n,this)}}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){var t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,o=t.length;r<o;r++){var a=t[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}]),t}(Oo);function Vc(e,n,t,r,o,a,i){var v=Oc.distanceSqToPoint(e);if(v<t){var s=new Lr;Oc.closestPointToPoint(e,s),s.applyMatrix4(r);var c=o.ray.origin.distanceTo(s);if(c<o.near||c>o.far)return;a.push({distance:c,distanceToRay:Math.sqrt(v),point:s,index:n,face:null,object:i})}}var qc=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s,c,l){var u;y(this,t),(u=n.call(this,e,r,o,a,i,v,s,c,l)).isVideoTexture=!0,u.minFilter=void 0!==v?v:Xe,u.magFilter=void 0!==i?i:Xe,u.generateMipmaps=!1;var f=M(u);return"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function n(){f.needsUpdate=!0,e.requestVideoFrameCallback(n)})),u}return b(t,[{key:"clone",value:function(){return new this.constructor(this.image).copy(this)}},{key:"update",value:function(){var e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}]),t}(Cr),Wc=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;return y(this,t),(a=n.call(this,{width:e,height:r})).isFramebufferTexture=!0,a.format=o,a.magFilter=Ge,a.minFilter=Ge,a.generateMipmaps=!1,a.needsUpdate=!0,a}return b(t)}(Cr),Hc=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s,c,l,u,f,p){var m;return y(this,t),(m=n.call(this,null,v,s,c,l,u,a,i,f,p)).isCompressedTexture=!0,m.image={width:r,height:o},m.mipmaps=e,m.flipY=!1,m.generateMipmaps=!1,m}return b(t)}(Cr),Xc=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v){var s;return y(this,t),(s=n.call(this,e,r,o,i,v)).isCompressedArrayTexture=!0,s.image.depth=a,s.wrapR=Be,s}return b(t)}(Hc),Yc=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s,c,l){var u;return y(this,t),(u=n.call(this,e,r,o,a,i,v,s,c,l)).isCanvasTexture=!0,u.needsUpdate=!0,u}return b(t)}(Cr),Zc=function(){function e(){y(this,e),this.type="Curve",this.arcLengthDivisions=200}return b(e,[{key:"getPoint",value:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}},{key:"getPointAt",value:function(e,n){var t=this.getUtoTmapping(e);return this.getPoint(t,n)}},{key:"getPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,n=[],t=0;t<=e;t++)n.push(this.getPoint(t/e));return n}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,n=[],t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n}},{key:"getLength",value:function(){var e=this.getLengths();return e[e.length-1]}},{key:"getLengths",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var n,t=[],r=this.getPoint(0),o=0;t.push(0);for(var a=1;a<=e;a++)o+=(n=this.getPoint(a/e)).distanceTo(r),t.push(o),r=n;return this.cacheArcLengths=t,t}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.getLengths()}},{key:"getUtoTmapping",value:function(e,n){var t,r=this.getLengths(),o=0,a=r.length;t=n||e*r[a-1];for(var i,v=0,s=a-1;v<=s;)if((i=r[o=Math.floor(v+(s-v)/2)]-t)<0)v=o+1;else{if(!(i>0)){s=o;break}s=o-1}if(r[o=s]===t)return o/(a-1);var c=r[o];return(o+(t-c)/(r[o+1]-c))/(a-1)}},{key:"getTangent",value:function(e,n){var t=1e-4,r=e-t,o=e+t;r<0&&(r=0),o>1&&(o=1);var a=this.getPoint(r),i=this.getPoint(o),v=n||(a.isVector2?new ir:new Lr);return v.copy(i).sub(a).normalize(),v}},{key:"getTangentAt",value:function(e,n){var t=this.getUtoTmapping(e);return this.getTangent(t,n)}},{key:"computeFrenetFrames",value:function(e,n){for(var t=new Lr,r=[],o=[],a=[],i=new Lr,v=new po,s=0;s<=e;s++){var c=s/e;r[s]=this.getTangentAt(c,new Lr)}o[0]=new Lr,a[0]=new Lr;var l=Number.MAX_VALUE,u=Math.abs(r[0].x),f=Math.abs(r[0].y),p=Math.abs(r[0].z);u<=l&&(l=u,t.set(1,0,0)),f<=l&&(l=f,t.set(0,1,0)),p<=l&&t.set(0,0,1),i.crossVectors(r[0],t).normalize(),o[0].crossVectors(r[0],i),a[0].crossVectors(r[0],o[0]);for(var m=1;m<=e;m++){if(o[m]=o[m-1].clone(),a[m]=a[m-1].clone(),i.crossVectors(r[m-1],r[m]),i.length()>Number.EPSILON){i.normalize();var d=Math.acos(Jt(r[m-1].dot(r[m]),-1,1));o[m].applyMatrix4(v.makeRotationAxis(i,d))}a[m].crossVectors(r[m],o[m])}if(!0===n){var h=Math.acos(Jt(o[0].dot(o[e]),-1,1));h/=e,r[0].dot(i.crossVectors(o[0],o[e]))>0&&(h=-h);for(var x=1;x<=e;x++)o[x].applyMatrix4(v.makeRotationAxis(r[x],h*x)),a[x].crossVectors(r[x],o[x])}return{tangents:r,normals:o,binormals:a}}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}},{key:"fromJSON",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}]),e}(),Qc=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI,c=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0;return y(this,t),(e=n.call(this)).isEllipseCurve=!0,e.type="EllipseCurve",e.aX=r,e.aY=o,e.xRadius=a,e.yRadius=i,e.aStartAngle=v,e.aEndAngle=s,e.aClockwise=c,e.aRotation=l,e}return b(t,[{key:"getPoint",value:function(e,n){for(var t=n||new ir,r=2*Math.PI,o=this.aEndAngle-this.aStartAngle,a=Math.abs(o)<Number.EPSILON;o<0;)o+=r;for(;o>r;)o-=r;o<Number.EPSILON&&(o=a?0:r),!0!==this.aClockwise||a||(o===r?o=-r:o-=r);var i=this.aStartAngle+e*o,v=this.aX+this.xRadius*Math.cos(i),s=this.aY+this.yRadius*Math.sin(i);if(0!==this.aRotation){var c=Math.cos(this.aRotation),l=Math.sin(this.aRotation),u=v-this.aX,f=s-this.aY;v=u*c-f*l+this.aX,s=u*l+f*c+this.aY}return t.set(v,s)}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}]),t}(Zc),Jc=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v){var s;return y(this,t),(s=n.call(this,e,r,o,o,a,i,v)).isArcCurve=!0,s.type="ArcCurve",s}return b(t)}(Qc);function $c(){var e=0,n=0,t=0,r=0;function o(o,a,i,v){e=o,n=i,t=-3*o+3*a-2*i-v,r=2*o-2*a+i+v}return{initCatmullRom:function(e,n,t,r,a){o(n,t,a*(t-e),a*(r-n))},initNonuniformCatmullRom:function(e,n,t,r,a,i,v){var s=(n-e)/a-(t-e)/(a+i)+(t-n)/i,c=(t-n)/i-(r-n)/(i+v)+(r-t)/v;o(n,t,s*=i,c*=i)},calc:function(o){var a=o*o;return e+n*o+t*a+r*(a*o)}}}var Kc=new Lr,el=new $c,nl=new $c,tl=new $c,rl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],o=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"centripetal",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;return y(this,t),(e=n.call(this)).isCatmullRomCurve3=!0,e.type="CatmullRomCurve3",e.points=r,e.closed=o,e.curveType=a,e.tension=i,e}return b(t,[{key:"getPoint",value:function(e){var n,t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,o=r,a=this.points,i=a.length,v=(i-(this.closed?0:1))*e,s=Math.floor(v),c=v-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/i)+1)*i:0===c&&s===i-1&&(s=i-2,c=1),this.closed||s>0?n=a[(s-1)%i]:(Kc.subVectors(a[0],a[1]).add(a[0]),n=Kc);var l=a[s%i],u=a[(s+1)%i];if(this.closed||s+2<i?t=a[(s+2)%i]:(Kc.subVectors(a[i-1],a[i-2]).add(a[i-1]),t=Kc),"centripetal"===this.curveType||"chordal"===this.curveType){var f="chordal"===this.curveType?.5:.25,p=Math.pow(n.distanceToSquared(l),f),m=Math.pow(l.distanceToSquared(u),f),d=Math.pow(u.distanceToSquared(t),f);m<1e-4&&(m=1),p<1e-4&&(p=m),d<1e-4&&(d=m),el.initNonuniformCatmullRom(n.x,l.x,u.x,t.x,p,m,d),nl.initNonuniformCatmullRom(n.y,l.y,u.y,t.y,p,m,d),tl.initNonuniformCatmullRom(n.z,l.z,u.z,t.z,p,m,d)}else"catmullrom"===this.curveType&&(el.initCatmullRom(n.x,l.x,u.x,t.x,this.tension),nl.initCatmullRom(n.y,l.y,u.y,t.y,this.tension),tl.initCatmullRom(n.z,l.z,u.z,t.z,this.tension));return o.set(el.calc(c),nl.calc(c),tl.calc(c)),o}},{key:"copy",value:function(e){P(w(t.prototype),"copy",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var o=e.points[n];this.points.push(o.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);e.points=[];for(var n=0,r=this.points.length;n<r;n++){var o=this.points[n];e.points.push(o.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}},{key:"fromJSON",value:function(e){P(w(t.prototype),"fromJSON",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var o=e.points[n];this.points.push((new Lr).fromArray(o))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}]),t}(Zc);function ol(e,n,t,r,o){var a=.5*(r-n),i=.5*(o-t),v=e*e;return(2*t-2*r+a+i)*(e*v)+(-3*t+3*r-2*a-i)*v+a*e+t}function al(e,n,t,r){return function(e,n){var t=1-e;return t*t*n}(e,n)+function(e,n){return 2*(1-e)*e*n}(e,t)+function(e,n){return e*e*n}(e,r)}function il(e,n,t,r,o){return function(e,n){var t=1-e;return t*t*t*n}(e,n)+function(e,n){var t=1-e;return 3*t*t*e*n}(e,t)+function(e,n){return 3*(1-e)*e*e*n}(e,r)+function(e,n){return e*e*e*n}(e,o)}var vl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ir,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new ir,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new ir;return y(this,t),(e=n.call(this)).isCubicBezierCurve=!0,e.type="CubicBezierCurve",e.v0=r,e.v1=o,e.v2=a,e.v3=i,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir,t=n,r=this.v0,o=this.v1,a=this.v2,i=this.v3;return t.set(il(e,r.x,o.x,a.x,i.x),il(e,r.y,o.y,a.y,i.y)),t}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),t}(Zc),sl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Lr,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Lr;return y(this,t),(e=n.call(this)).isCubicBezierCurve3=!0,e.type="CubicBezierCurve3",e.v0=r,e.v1=o,e.v2=a,e.v3=i,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,t=n,r=this.v0,o=this.v1,a=this.v2,i=this.v3;return t.set(il(e,r.x,o.x,a.x,i.x),il(e,r.y,o.y,a.y,i.y),il(e,r.z,o.z,a.z,i.z)),t}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),t}(Zc),cl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ir,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir;return y(this,t),(e=n.call(this)).isLineCurve=!0,e.type="LineCurve",e.v1=r,e.v2=o,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir,t=n;return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}},{key:"getPointAt",value:function(e,n){return this.getPoint(e,n)}},{key:"getTangent",value:function(e,n){var t=n||new ir;return t.copy(this.v2).sub(this.v1).normalize(),t}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),ll=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr;return y(this,t),(e=n.call(this)).isLineCurve3=!0,e.type="LineCurve3",e.v1=r,e.v2=o,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,t=n;return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}},{key:"getPointAt",value:function(e,n){return this.getPoint(e,n)}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),ul=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ir,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new ir;return y(this,t),(e=n.call(this)).isQuadraticBezierCurve=!0,e.type="QuadraticBezierCurve",e.v0=r,e.v1=o,e.v2=a,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir,t=n,r=this.v0,o=this.v1,a=this.v2;return t.set(al(e,r.x,o.x,a.x),al(e,r.y,o.y,a.y)),t}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),fl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Lr;return y(this,t),(e=n.call(this)).isQuadraticBezierCurve3=!0,e.type="QuadraticBezierCurve3",e.v0=r,e.v1=o,e.v2=a,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr,t=n,r=this.v0,o=this.v1,a=this.v2;return t.set(al(e,r.x,o.x,a.x),al(e,r.y,o.y,a.y),al(e,r.z,o.z,a.z)),t}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),pl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return y(this,t),(e=n.call(this)).isSplineCurve=!0,e.type="SplineCurve",e.points=r,e}return b(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir,t=n,r=this.points,o=(r.length-1)*e,a=Math.floor(o),i=o-a,v=r[0===a?a:a-1],s=r[a],c=r[a>r.length-2?r.length-1:a+1],l=r[a>r.length-3?r.length-1:a+2];return t.set(ol(i,v.x,s.x,c.x,l.x),ol(i,v.y,s.y,c.y,l.y)),t}},{key:"copy",value:function(e){P(w(t.prototype),"copy",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var o=e.points[n];this.points.push(o.clone())}return this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);e.points=[];for(var n=0,r=this.points.length;n<r;n++){var o=this.points[n];e.points.push(o.toArray())}return e}},{key:"fromJSON",value:function(e){P(w(t.prototype),"fromJSON",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var o=e.points[n];this.points.push((new ir).fromArray(o))}return this}}]),t}(Zc),ml=Object.freeze({__proto__:null,ArcCurve:Jc,CatmullRomCurve3:rl,CubicBezierCurve:vl,CubicBezierCurve3:sl,EllipseCurve:Qc,LineCurve:cl,LineCurve3:ll,QuadraticBezierCurve:ul,QuadraticBezierCurve3:fl,SplineCurve:pl}),dl=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).type="CurvePath",e.curves=[],e.autoClose=!1,e}return b(t,[{key:"add",value:function(e){this.curves.push(e)}},{key:"closePath",value:function(){var e=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);e.equals(n)||this.curves.push(new cl(n,e))}},{key:"getPoint",value:function(e,n){for(var t=e*this.getLength(),r=this.getCurveLengths(),o=0;o<r.length;){if(r[o]>=t){var a=r[o]-t,i=this.curves[o],v=i.getLength(),s=0===v?0:1-a/v;return i.getPointAt(s,n)}o++}return null}},{key:"getLength",value:function(){var e=this.getCurveLengths();return e[e.length-1]}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}},{key:"getCurveLengths",value:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],n=0,t=0,r=this.curves.length;t<r;t++)n+=this.curves[t].getLength(),e.push(n);return this.cacheLengths=e,e}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:40,n=[],t=0;t<=e;t++)n.push(this.getPoint(t/e));return this.autoClose&&n.push(n[0]),n}},{key:"getPoints",value:function(){for(var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12,t=[],r=0,o=this.curves;r<o.length;r++)for(var a=o[r],i=a.isEllipseCurve?2*n:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?n*a.points.length:n,v=a.getPoints(i),s=0;s<v.length;s++){var c=v[s];e&&e.equals(c)||(t.push(c),e=c)}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}},{key:"copy",value:function(e){P(w(t.prototype),"copy",this).call(this,e),this.curves=[];for(var n=0,r=e.curves.length;n<r;n++){var o=e.curves[n];this.curves.push(o.clone())}return this.autoClose=e.autoClose,this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);e.autoClose=this.autoClose,e.curves=[];for(var n=0,r=this.curves.length;n<r;n++){var o=this.curves[n];e.curves.push(o.toJSON())}return e}},{key:"fromJSON",value:function(e){P(w(t.prototype),"fromJSON",this).call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var n=0,r=e.curves.length;n<r;n++){var o=e.curves[n];this.curves.push((new ml[o.type]).fromJSON(o))}return this}}]),t}(Zc),hl=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).type="Path",r.currentPoint=new ir,e&&r.setFromPoints(e),r}return b(t,[{key:"setFromPoints",value:function(e){this.moveTo(e[0].x,e[0].y);for(var n=1,t=e.length;n<t;n++)this.lineTo(e[n].x,e[n].y);return this}},{key:"moveTo",value:function(e,n){return this.currentPoint.set(e,n),this}},{key:"lineTo",value:function(e,n){var t=new cl(this.currentPoint.clone(),new ir(e,n));return this.curves.push(t),this.currentPoint.set(e,n),this}},{key:"quadraticCurveTo",value:function(e,n,t,r){var o=new ul(this.currentPoint.clone(),new ir(e,n),new ir(t,r));return this.curves.push(o),this.currentPoint.set(t,r),this}},{key:"bezierCurveTo",value:function(e,n,t,r,o,a){var i=new vl(this.currentPoint.clone(),new ir(e,n),new ir(t,r),new ir(o,a));return this.curves.push(i),this.currentPoint.set(o,a),this}},{key:"splineThru",value:function(e){var n=[this.currentPoint.clone()].concat(e),t=new pl(n);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}},{key:"arc",value:function(e,n,t,r,o,a){var i=this.currentPoint.x,v=this.currentPoint.y;return this.absarc(e+i,n+v,t,r,o,a),this}},{key:"absarc",value:function(e,n,t,r,o,a){return this.absellipse(e,n,t,t,r,o,a),this}},{key:"ellipse",value:function(e,n,t,r,o,a,i,v){var s=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+s,n+c,t,r,o,a,i,v),this}},{key:"absellipse",value:function(e,n,t,r,o,a,i,v){var s=new Qc(e,n,t,r,o,a,i,v);if(this.curves.length>0){var c=s.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(s);var l=s.getPoint(1);return this.currentPoint.copy(l),this}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.currentPoint.copy(e.currentPoint),this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.currentPoint=this.currentPoint.toArray(),e}},{key:"fromJSON",value:function(e){return P(w(t.prototype),"fromJSON",this).call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}]),t}(dl),xl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[new ir(0,-.5),new ir(.5,0),new ir(0,.5)],o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;y(this,t),(e=n.call(this)).type="LatheGeometry",e.parameters={points:r,segments:o,phiStart:a,phiLength:i},o=Math.floor(o),i=Jt(i,0,2*Math.PI);for(var v=[],s=[],c=[],l=[],u=[],f=1/o,p=new Lr,m=new ir,d=new Lr,h=new Lr,x=new Lr,g=0,_=0,b=0;b<=r.length-1;b++)switch(b){case 0:g=r[b+1].x-r[b].x,_=r[b+1].y-r[b].y,d.x=1*_,d.y=-g,d.z=0*_,x.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case r.length-1:l.push(x.x,x.y,x.z);break;default:g=r[b+1].x-r[b].x,_=r[b+1].y-r[b].y,d.x=1*_,d.y=-g,d.z=0*_,h.copy(d),d.x+=x.x,d.y+=x.y,d.z+=x.z,d.normalize(),l.push(d.x,d.y,d.z),x.copy(h)}for(var U=0;U<=o;U++)for(var w=a+U*f*i,S=Math.sin(w),M=Math.cos(w),j=0;j<=r.length-1;j++){p.x=r[j].x*S,p.y=r[j].y,p.z=r[j].x*M,s.push(p.x,p.y,p.z),m.x=U/o,m.y=j/(r.length-1),c.push(m.x,m.y);var k=l[3*j+0]*S,C=l[3*j+1],T=l[3*j+0]*M;u.push(k,C,T)}for(var R=0;R<o;R++)for(var z=0;z<r.length-1;z++){var P=z+R*r.length,F=P,D=P+r.length,E=P+r.length+1,I=P+1;v.push(F,D,I),v.push(E,I,D)}return e.setIndex(v),e.setAttribute("position",new ua(s,3)),e.setAttribute("uv",new ua(c,2)),e.setAttribute("normal",new ua(u,3)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.points,e.segments,e.phiStart,e.phiLength)}}]),t}(_a),gl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8;y(this,t);var v=new hl;return v.absarc(0,-o/2,r,1.5*Math.PI,0),v.absarc(0,o/2,r,0,.5*Math.PI),(e=n.call(this,v.getPoints(a),i)).type="CapsuleGeometry",e.parameters={radius:r,height:o,capSegments:a,radialSegments:i},e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.length,e.capSegments,e.radialSegments)}}]),t}(xl),yl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:8,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;y(this,t),(e=n.call(this)).type="CircleGeometry",e.parameters={radius:r,segments:o,thetaStart:a,thetaLength:i},o=Math.max(3,o);var v=[],s=[],c=[],l=[],u=new Lr,f=new ir;s.push(0,0,0),c.push(0,0,1),l.push(.5,.5);for(var p=0,m=3;p<=o;p++,m+=3){var d=a+p/o*i;u.x=r*Math.cos(d),u.y=r*Math.sin(d),s.push(u.x,u.y,u.z),c.push(0,0,1),f.x=(s[m]/r+1)/2,f.y=(s[m+1]/r+1)/2,l.push(f.x,f.y)}for(var h=1;h<=o;h++)v.push(h,h+1,0);return e.setIndex(v),e.setAttribute("position",new ua(s,3)),e.setAttribute("normal",new ua(c,3)),e.setAttribute("uv",new ua(l,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.segments,e.thetaStart,e.thetaLength)}}]),t}(_a),_l=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:2*Math.PI;y(this,t),(e=n.call(this)).type="CylinderGeometry",e.parameters={radiusTop:r,radiusBottom:o,height:a,radialSegments:i,heightSegments:v,openEnded:s,thetaStart:c,thetaLength:l};var u=M(e);i=Math.floor(i),v=Math.floor(v);var f=[],p=[],m=[],d=[],h=0,x=[],g=a/2,_=0;function b(){for(var e=new Lr,n=new Lr,t=0,s=(o-r)/a,y=0;y<=v;y++){for(var b=[],U=y/v,w=U*(o-r)+r,S=0;S<=i;S++){var M=S/i,j=M*l+c,k=Math.sin(j),C=Math.cos(j);n.x=w*k,n.y=-U*a+g,n.z=w*C,p.push(n.x,n.y,n.z),e.set(k,s,C).normalize(),m.push(e.x,e.y,e.z),d.push(M,1-U),b.push(h++)}x.push(b)}for(var T=0;T<i;T++)for(var R=0;R<v;R++){var z=x[R][T],P=x[R+1][T],F=x[R+1][T+1],D=x[R][T+1];f.push(z,P,D),f.push(P,F,D),t+=6}u.addGroup(_,t,0),_+=t}function U(e){for(var n=h,t=new ir,a=new Lr,v=0,s=!0===e?r:o,x=!0===e?1:-1,y=1;y<=i;y++)p.push(0,g*x,0),m.push(0,x,0),d.push(.5,.5),h++;for(var b=h,U=0;U<=i;U++){var w=U/i*l+c,S=Math.cos(w),M=Math.sin(w);a.x=s*M,a.y=g*x,a.z=s*S,p.push(a.x,a.y,a.z),m.push(0,x,0),t.x=.5*S+.5,t.y=.5*M*x+.5,d.push(t.x,t.y),h++}for(var j=0;j<i;j++){var k=n+j,C=b+j;!0===e?f.push(C,C+1,k):f.push(C+1,C,k),v+=3}u.addGroup(_,v,!0===e?1:2),_+=v}return b(),!1===s&&(r>0&&U(!0),o>0&&U(!1)),e.setIndex(f),e.setAttribute("position",new ua(p,3)),e.setAttribute("normal",new ua(m,3)),e.setAttribute("uv",new ua(d,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}]),t}(_a),bl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,v=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2*Math.PI;return y(this,t),(e=n.call(this,0,r,o,a,i,v,s,c)).type="ConeGeometry",e.parameters={radius:r,height:o,radialSegments:a,heightSegments:i,openEnded:v,thetaStart:s,thetaLength:c},e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}]),t}(_l),Ul=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;y(this,t),(e=n.call(this)).type="PolyhedronGeometry",e.parameters={vertices:r,indices:o,radius:a,detail:i};var v=[],s=[];function c(e){for(var n=new Lr,t=new Lr,r=new Lr,a=0;a<o.length;a+=3)d(o[a+0],n),d(o[a+1],t),d(o[a+2],r),l(n,t,r,e)}function l(e,n,t,r){for(var o=r+1,a=[],i=0;i<=o;i++){a[i]=[];for(var v=e.clone().lerp(t,i/o),s=n.clone().lerp(t,i/o),c=o-i,l=0;l<=c;l++)a[i][l]=0===l&&i===o?v:v.clone().lerp(s,l/c)}for(var u=0;u<o;u++)for(var f=0;f<2*(o-u)-1;f++){var p=Math.floor(f/2);f%2===0?(m(a[u][p+1]),m(a[u+1][p]),m(a[u][p])):(m(a[u][p+1]),m(a[u+1][p+1]),m(a[u+1][p]))}}function u(e){for(var n=new Lr,t=0;t<v.length;t+=3)n.x=v[t+0],n.y=v[t+1],n.z=v[t+2],n.normalize().multiplyScalar(e),v[t+0]=n.x,v[t+1]=n.y,v[t+2]=n.z}function f(){for(var e=new Lr,n=0;n<v.length;n+=3){e.x=v[n+0],e.y=v[n+1],e.z=v[n+2];var t=g(e)/2/Math.PI+.5,r=_(e)/Math.PI+.5;s.push(t,1-r)}h(),p()}function p(){for(var e=0;e<s.length;e+=6){var n=s[e+0],t=s[e+2],r=s[e+4],o=Math.max(n,t,r),a=Math.min(n,t,r);o>.9&&a<.1&&(n<.2&&(s[e+0]+=1),t<.2&&(s[e+2]+=1),r<.2&&(s[e+4]+=1))}}function m(e){v.push(e.x,e.y,e.z)}function d(e,n){var t=3*e;n.x=r[t+0],n.y=r[t+1],n.z=r[t+2]}function h(){for(var e=new Lr,n=new Lr,t=new Lr,r=new Lr,o=new ir,a=new ir,i=new ir,c=0,l=0;c<v.length;c+=9,l+=6){e.set(v[c+0],v[c+1],v[c+2]),n.set(v[c+3],v[c+4],v[c+5]),t.set(v[c+6],v[c+7],v[c+8]),o.set(s[l+0],s[l+1]),a.set(s[l+2],s[l+3]),i.set(s[l+4],s[l+5]),r.copy(e).add(n).add(t).divideScalar(3);var u=g(r);x(o,l+0,e,u),x(a,l+2,n,u),x(i,l+4,t,u)}}function x(e,n,t,r){r<0&&1===e.x&&(s[n]=e.x-1),0===t.x&&0===t.z&&(s[n]=r/2/Math.PI+.5)}function g(e){return Math.atan2(e.z,-e.x)}function _(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}return c(i),u(a),f(),e.setAttribute("position",new ua(v,3)),e.setAttribute("normal",new ua(v.slice(),3)),e.setAttribute("uv",new ua(s,2)),0===i?e.computeVertexNormals():e.normalizeNormals(),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.vertices,e.indices,e.radius,e.details)}}]),t}(_a),wl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var a=(1+Math.sqrt(5))/2,i=1/a,v=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-a,0,-i,a,0,i,-a,0,i,a,-i,-a,0,-i,a,0,i,-a,0,i,a,0,-a,0,-i,a,0,-i,-a,0,i,a,0,i],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];return(e=n.call(this,v,s,r,o)).type="DodecahedronGeometry",e.parameters={radius:r,detail:o},e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(Ul),Sl=new Lr,Ml=new Lr,jl=new Lr,kl=new Qo,Cl=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(y(this,t),(e=n.call(this)).type="EdgesGeometry",e.parameters={geometry:r,thresholdAngle:o},null!==r){for(var a=4,i=Math.pow(10,a),v=Math.cos(Yt*o),s=r.getIndex(),c=r.getAttribute("position"),l=s?s.count:c.count,u=[0,0,0],f=["a","b","c"],p=new Array(3),m={},d=[],h=0;h<l;h+=3){s?(u[0]=s.getX(h),u[1]=s.getX(h+1),u[2]=s.getX(h+2)):(u[0]=h,u[1]=h+1,u[2]=h+2);var x=kl.a,g=kl.b,_=kl.c;if(x.fromBufferAttribute(c,u[0]),g.fromBufferAttribute(c,u[1]),_.fromBufferAttribute(c,u[2]),kl.getNormal(jl),p[0]="".concat(Math.round(x.x*i),",").concat(Math.round(x.y*i),",").concat(Math.round(x.z*i)),p[1]="".concat(Math.round(g.x*i),",").concat(Math.round(g.y*i),",").concat(Math.round(g.z*i)),p[2]="".concat(Math.round(_.x*i),",").concat(Math.round(_.y*i),",").concat(Math.round(_.z*i)),p[0]!==p[1]&&p[1]!==p[2]&&p[2]!==p[0])for(var b=0;b<3;b++){var U=(b+1)%3,w=p[b],S=p[U],M=kl[f[b]],j=kl[f[U]],k="".concat(w,"_").concat(S),C="".concat(S,"_").concat(w);C in m&&m[C]?(jl.dot(m[C].normal)<=v&&(d.push(M.x,M.y,M.z),d.push(j.x,j.y,j.z)),m[C]=null):k in m||(m[k]={index0:u[b],index1:u[U],normal:jl.clone()})}}for(var T in m)if(m[T]){var R=m[T],z=R.index0,P=R.index1;Sl.fromBufferAttribute(c,z),Ml.fromBufferAttribute(c,P),d.push(Sl.x,Sl.y,Sl.z),d.push(Ml.x,Ml.y,Ml.z)}e.setAttribute("position",new ua(d,3))}return e}return b(t)}(_a),Tl=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).uuid=Qt(),r.type="Shape",r.holes=[],r}return b(t,[{key:"getPointsHoles",value:function(e){for(var n=[],t=0,r=this.holes.length;t<r;t++)n[t]=this.holes[t].getPoints(e);return n}},{key:"extractPoints",value:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}},{key:"copy",value:function(e){P(w(t.prototype),"copy",this).call(this,e),this.holes=[];for(var n=0,r=e.holes.length;n<r;n++){var o=e.holes[n];this.holes.push(o.clone())}return this}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);e.uuid=this.uuid,e.holes=[];for(var n=0,r=this.holes.length;n<r;n++){var o=this.holes[n];e.holes.push(o.toJSON())}return e}},{key:"fromJSON",value:function(e){P(w(t.prototype),"fromJSON",this).call(this,e),this.uuid=e.uuid,this.holes=[];for(var n=0,r=e.holes.length;n<r;n++){var o=e.holes[n];this.holes.push((new hl).fromJSON(o))}return this}}]),t}(hl),Rl=function(e,n){var t,r,o,a,i,v,s,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,l=n&&n.length,u=l?n[0]*c:e.length,f=zl(e,0,u,c,!0),p=[];if(!f||f.next===f.prev)return p;if(l&&(f=Al(e,n,f,c)),e.length>80*c){t=o=e[0],r=a=e[1];for(var m=c;m<u;m+=c)(i=e[m])<t&&(t=i),(v=e[m+1])<r&&(r=v),i>o&&(o=i),v>a&&(a=v);s=0!==(s=Math.max(o-t,a-r))?32767/s:0}return Fl(f,p,c,t,r,s,0),p};function zl(e,n,t,r,o){var a,i;if(o===function(e,n,t,r){for(var o=0,a=n,i=t-r;a<t;a+=r)o+=(e[i]-e[a])*(e[a+1]+e[i+1]),i=a;return o}(e,n,t,r)>0)for(a=n;a<t;a+=r)i=Kl(a,e[a],e[a+1],i);else for(a=t-r;a>=n;a-=r)i=Kl(a,e[a],e[a+1],i);return i&&Xl(i,i.next)&&(eu(i),i=i.next),i}function Pl(e,n){if(!e)return e;n||(n=e);var t,r=e;do{if(t=!1,r.steiner||!Xl(r,r.next)&&0!==Hl(r.prev,r,r.next))r=r.next;else{if(eu(r),(r=n=r.prev)===r.next)break;t=!0}}while(t||r!==n);return n}function Fl(e,n,t,r,o,a,i){if(e){!i&&a&&function(e,n,t,r){var o=e;do{0===o.z&&(o.z=Gl(o.x,o.y,n,t,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var n,t,r,o,a,i,v,s,c=1;do{for(t=e,e=null,a=null,i=0;t;){for(i++,r=t,v=0,n=0;n<c&&(v++,r=r.nextZ);n++);for(s=c;v>0||s>0&&r;)0!==v&&(0===s||!r||t.z<=r.z)?(o=t,t=t.nextZ,v--):(o=r,r=r.nextZ,s--),a?a.nextZ=o:e=o,o.prevZ=a,a=o;t=r}a.nextZ=null,c*=2}while(i>1)}(o)}(e,r,o,a);for(var v,s,c=e;e.prev!==e.next;)if(v=e.prev,s=e.next,a?El(e,r,o,a):Dl(e))n.push(v.i/t|0),n.push(e.i/t|0),n.push(s.i/t|0),eu(e),e=s.next,c=s.next;else if((e=s)===c){i?1===i?Fl(e=Il(Pl(e),n,t),n,t,r,o,a,2):2===i&&Ll(e,n,t,r,o,a):Fl(Pl(e),n,t,r,o,a,1);break}}}function Dl(e){var n=e.prev,t=e,r=e.next;if(Hl(n,t,r)>=0)return!1;for(var o=n.x,a=t.x,i=r.x,v=n.y,s=t.y,c=r.y,l=o<a?o<i?o:i:a<i?a:i,u=v<s?v<c?v:c:s<c?s:c,f=o>a?o>i?o:i:a>i?a:i,p=v>s?v>c?v:c:s>c?s:c,m=r.next;m!==n;){if(m.x>=l&&m.x<=f&&m.y>=u&&m.y<=p&&ql(o,v,a,s,i,c,m.x,m.y)&&Hl(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function El(e,n,t,r){var o=e.prev,a=e,i=e.next;if(Hl(o,a,i)>=0)return!1;for(var v=o.x,s=a.x,c=i.x,l=o.y,u=a.y,f=i.y,p=v<s?v<c?v:c:s<c?s:c,m=l<u?l<f?l:f:u<f?u:f,d=v>s?v>c?v:c:s>c?s:c,h=l>u?l>f?l:f:u>f?u:f,x=Gl(p,m,n,t,r),g=Gl(d,h,n,t,r),y=e.prevZ,_=e.nextZ;y&&y.z>=x&&_&&_.z<=g;){if(y.x>=p&&y.x<=d&&y.y>=m&&y.y<=h&&y!==o&&y!==i&&ql(v,l,s,u,c,f,y.x,y.y)&&Hl(y.prev,y,y.next)>=0)return!1;if(y=y.prevZ,_.x>=p&&_.x<=d&&_.y>=m&&_.y<=h&&_!==o&&_!==i&&ql(v,l,s,u,c,f,_.x,_.y)&&Hl(_.prev,_,_.next)>=0)return!1;_=_.nextZ}for(;y&&y.z>=x;){if(y.x>=p&&y.x<=d&&y.y>=m&&y.y<=h&&y!==o&&y!==i&&ql(v,l,s,u,c,f,y.x,y.y)&&Hl(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=g;){if(_.x>=p&&_.x<=d&&_.y>=m&&_.y<=h&&_!==o&&_!==i&&ql(v,l,s,u,c,f,_.x,_.y)&&Hl(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function Il(e,n,t){var r=e;do{var o=r.prev,a=r.next.next;!Xl(o,a)&&Yl(o,r,r.next,a)&&Jl(o,a)&&Jl(a,o)&&(n.push(o.i/t|0),n.push(r.i/t|0),n.push(a.i/t|0),eu(r),eu(r.next),r=e=a),r=r.next}while(r!==e);return Pl(r)}function Ll(e,n,t,r,o,a){var i=e;do{for(var v=i.next.next;v!==i.prev;){if(i.i!==v.i&&Wl(i,v)){var s=$l(i,v);return i=Pl(i,i.next),s=Pl(s,s.next),Fl(i,n,t,r,o,a,0),void Fl(s,n,t,r,o,a,0)}v=v.next}i=i.next}while(i!==e)}function Al(e,n,t,r){var o,a,i,v=[];for(o=0,a=n.length;o<a;o++)(i=zl(e,n[o]*r,o<a-1?n[o+1]*r:e.length,r,!1))===i.next&&(i.steiner=!0),v.push(Vl(i));for(v.sort(Ol),o=0;o<v.length;o++)t=Bl(v[o],t);return t}function Ol(e,n){return e.x-n.x}function Bl(e,n){var t=function(e,n){var t,r=n,o=-1/0,a=e.x,i=e.y;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var v=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(v<=a&&v>o&&(o=v,t=r.x<r.next.x?r:r.next,v===a))return t}r=r.next}while(r!==n);if(!t)return null;var s,c=t,l=t.x,u=t.y,f=1/0;r=t;do{a>=r.x&&r.x>=l&&a!==r.x&&ql(i<u?a:o,i,l,u,i<u?o:a,i,r.x,r.y)&&(s=Math.abs(i-r.y)/(a-r.x),Jl(r,e)&&(s<f||s===f&&(r.x>t.x||r.x===t.x&&Nl(t,r)))&&(t=r,f=s)),r=r.next}while(r!==c);return t}(e,n);if(!t)return n;var r=$l(t,e);return Pl(r,r.next),Pl(t,t.next)}function Nl(e,n){return Hl(e.prev,e,n.prev)<0&&Hl(n.next,e,e.next)<0}function Gl(e,n,t,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-t)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=(n-r)*o|0)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function Vl(e){var n=e,t=e;do{(n.x<t.x||n.x===t.x&&n.y<t.y)&&(t=n),n=n.next}while(n!==e);return t}function ql(e,n,t,r,o,a,i,v){return(o-i)*(n-v)>=(e-i)*(a-v)&&(e-i)*(r-v)>=(t-i)*(n-v)&&(t-i)*(a-v)>=(o-i)*(r-v)}function Wl(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!function(e,n){var t=e;do{if(t.i!==e.i&&t.next.i!==e.i&&t.i!==n.i&&t.next.i!==n.i&&Yl(t,t.next,e,n))return!0;t=t.next}while(t!==e);return!1}(e,n)&&(Jl(e,n)&&Jl(n,e)&&function(e,n){var t=e,r=!1,o=(e.x+n.x)/2,a=(e.y+n.y)/2;do{t.y>a!==t.next.y>a&&t.next.y!==t.y&&o<(t.next.x-t.x)*(a-t.y)/(t.next.y-t.y)+t.x&&(r=!r),t=t.next}while(t!==e);return r}(e,n)&&(Hl(e.prev,e,n.prev)||Hl(e,n.prev,n))||Xl(e,n)&&Hl(e.prev,e,e.next)>0&&Hl(n.prev,n,n.next)>0)}function Hl(e,n,t){return(n.y-e.y)*(t.x-n.x)-(n.x-e.x)*(t.y-n.y)}function Xl(e,n){return e.x===n.x&&e.y===n.y}function Yl(e,n,t,r){var o=Ql(Hl(e,n,t)),a=Ql(Hl(e,n,r)),i=Ql(Hl(t,r,e)),v=Ql(Hl(t,r,n));return o!==a&&i!==v||(!(0!==o||!Zl(e,t,n))||(!(0!==a||!Zl(e,r,n))||(!(0!==i||!Zl(t,e,r))||!(0!==v||!Zl(t,n,r)))))}function Zl(e,n,t){return n.x<=Math.max(e.x,t.x)&&n.x>=Math.min(e.x,t.x)&&n.y<=Math.max(e.y,t.y)&&n.y>=Math.min(e.y,t.y)}function Ql(e){return e>0?1:e<0?-1:0}function Jl(e,n){return Hl(e.prev,e,e.next)<0?Hl(e,n,e.next)>=0&&Hl(e,e.prev,n)>=0:Hl(e,n,e.prev)<0||Hl(e,e.next,n)<0}function $l(e,n){var t=new nu(e.i,e.x,e.y),r=new nu(n.i,n.x,n.y),o=e.next,a=n.prev;return e.next=n,n.prev=e,t.next=o,o.prev=t,r.next=t,t.prev=r,a.next=r,r.prev=a,r}function Kl(e,n,t,r){var o=new nu(e,n,t);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function eu(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function nu(e,n,t){this.i=e,this.x=n,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}var tu=function(){function e(){y(this,e)}return b(e,null,[{key:"area",value:function(e){for(var n=e.length,t=0,r=n-1,o=0;o<n;r=o++)t+=e[r].x*e[o].y-e[o].x*e[r].y;return.5*t}},{key:"isClockWise",value:function(n){return e.area(n)<0}},{key:"triangulateShape",value:function(e,n){var t=[],r=[],o=[];ru(e),ou(t,e);var a=e.length;n.forEach(ru);for(var i=0;i<n.length;i++)r.push(a),a+=n[i].length,ou(t,n[i]);for(var v=Rl(t,r),s=0;s<v.length;s+=3)o.push(v.slice(s,s+3));return o}}]),e}();function ru(e){var n=e.length;n>2&&e[n-1].equals(e[0])&&e.pop()}function ou(e,n){for(var t=0;t<n.length;t++)e.push(n[t].x),e.push(n[t].y)}var au=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Tl([new ir(.5,.5),new ir(-.5,.5),new ir(-.5,-.5),new ir(.5,-.5)]),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};y(this,t),(e=n.call(this)).type="ExtrudeGeometry",e.parameters={shapes:r,options:o},r=Array.isArray(r)?r:[r];for(var a=M(e),i=[],v=[],s=0,c=r.length;s<c;s++){var l=r[s];u(l)}function u(e){var n,t,r,s,c,l=[],u=void 0!==o.curveSegments?o.curveSegments:12,f=void 0!==o.steps?o.steps:1,p=void 0!==o.depth?o.depth:1,m=void 0===o.bevelEnabled||o.bevelEnabled,d=void 0!==o.bevelThickness?o.bevelThickness:.2,h=void 0!==o.bevelSize?o.bevelSize:d-.1,x=void 0!==o.bevelOffset?o.bevelOffset:0,g=void 0!==o.bevelSegments?o.bevelSegments:3,y=o.extrudePath,_=void 0!==o.UVGenerator?o.UVGenerator:iu,b=!1;y&&(n=y.getSpacedPoints(f),b=!0,m=!1,t=y.computeFrenetFrames(f,!1),r=new Lr,s=new Lr,c=new Lr),m||(g=0,d=0,h=0,x=0);var U=e.extractPoints(u),w=U.shape,S=U.holes;if(!tu.isClockWise(w)){w=w.reverse();for(var M=0,j=S.length;M<j;M++){var k=S[M];tu.isClockWise(k)&&(S[M]=k.reverse())}}for(var C=tu.triangulateShape(w,S),T=w,R=0,z=S.length;R<z;R++){var P=S[R];w=w.concat(P)}function F(e,n,t){return n||console.error("THREE.ExtrudeGeometry: vec does not exist"),n.clone().multiplyScalar(t).add(e)}var D=w.length,E=C.length;function I(e,n,t){var r,o,a,i=e.x-n.x,v=e.y-n.y,s=t.x-e.x,c=t.y-e.y,l=i*i+v*v,u=i*c-v*s;if(Math.abs(u)>Number.EPSILON){var f=Math.sqrt(l),p=Math.sqrt(s*s+c*c),m=n.x-v/f,d=n.y+i/f,h=((t.x-c/p-m)*c-(t.y+s/p-d)*s)/(i*c-v*s),x=(r=m+i*h-e.x)*r+(o=d+v*h-e.y)*o;if(x<=2)return new ir(r,o);a=Math.sqrt(x/2)}else{var g=!1;i>Number.EPSILON?s>Number.EPSILON&&(g=!0):i<-Number.EPSILON?s<-Number.EPSILON&&(g=!0):Math.sign(v)===Math.sign(c)&&(g=!0),g?(r=-v,o=i,a=Math.sqrt(l)):(r=i,o=v,a=Math.sqrt(l/2))}return new ir(r/a,o/a)}for(var L=[],A=0,O=T.length,B=O-1,N=A+1;A<O;A++,B++,N++)B===O&&(B=0),N===O&&(N=0),L[A]=I(T[A],T[B],T[N]);for(var G,V=[],q=L.concat(),W=0,H=S.length;W<H;W++){var X=S[W];G=[];for(var Y=0,Z=X.length,Q=Z-1,J=Y+1;Y<Z;Y++,Q++,J++)Q===Z&&(Q=0),J===Z&&(J=0),G[Y]=I(X[Y],X[Q],X[J]);V.push(G),q=q.concat(G)}for(var $=0;$<g;$++){for(var K=$/g,ee=d*Math.cos(K*Math.PI/2),ne=h*Math.sin(K*Math.PI/2)+x,te=0,re=T.length;te<re;te++){var oe=F(T[te],L[te],ne);ze(oe.x,oe.y,-ee)}for(var ae=0,ie=S.length;ae<ie;ae++){var ve=S[ae];G=V[ae];for(var se=0,ce=ve.length;se<ce;se++){var le=F(ve[se],G[se],ne);ze(le.x,le.y,-ee)}}}for(var ue=h+x,fe=0;fe<D;fe++){var pe=m?F(w[fe],q[fe],ue):w[fe];b?(s.copy(t.normals[0]).multiplyScalar(pe.x),r.copy(t.binormals[0]).multiplyScalar(pe.y),c.copy(n[0]).add(s).add(r),ze(c.x,c.y,c.z)):ze(pe.x,pe.y,0)}for(var me=1;me<=f;me++)for(var de=0;de<D;de++){var he=m?F(w[de],q[de],ue):w[de];b?(s.copy(t.normals[me]).multiplyScalar(he.x),r.copy(t.binormals[me]).multiplyScalar(he.y),c.copy(n[me]).add(s).add(r),ze(c.x,c.y,c.z)):ze(he.x,he.y,p/f*me)}for(var xe=g-1;xe>=0;xe--){for(var ge=xe/g,ye=d*Math.cos(ge*Math.PI/2),_e=h*Math.sin(ge*Math.PI/2)+x,be=0,Ue=T.length;be<Ue;be++){var we=F(T[be],L[be],_e);ze(we.x,we.y,p+ye)}for(var Se=0,Me=S.length;Se<Me;Se++){var je=S[Se];G=V[Se];for(var ke=0,Ce=je.length;ke<Ce;ke++){var Te=F(je[ke],G[ke],_e);b?ze(Te.x,Te.y+n[f-1].y,n[f-1].x+ye):ze(Te.x,Te.y,p+ye)}}}function Re(e,n){for(var t=e.length;--t>=0;){var r=t,o=t-1;o<0&&(o=e.length-1);for(var a=0,i=f+2*g;a<i;a++){var v=D*a,s=D*(a+1);Fe(n+r+v,n+o+v,n+o+s,n+r+s)}}}function ze(e,n,t){l.push(e),l.push(n),l.push(t)}function Pe(e,n,t){De(e),De(n),De(t);var r=i.length/3,o=_.generateTopUV(a,i,r-3,r-2,r-1);Ee(o[0]),Ee(o[1]),Ee(o[2])}function Fe(e,n,t,r){De(e),De(n),De(r),De(n),De(t),De(r);var o=i.length/3,v=_.generateSideWallUV(a,i,o-6,o-3,o-2,o-1);Ee(v[0]),Ee(v[1]),Ee(v[3]),Ee(v[1]),Ee(v[2]),Ee(v[3])}function De(e){i.push(l[3*e+0]),i.push(l[3*e+1]),i.push(l[3*e+2])}function Ee(e){v.push(e.x),v.push(e.y)}!function(){var e=i.length/3;if(m){for(var n=0,t=D*n,r=0;r<E;r++){var o=C[r];Pe(o[2]+t,o[1]+t,o[0]+t)}t=D*(n=f+2*g);for(var v=0;v<E;v++){var s=C[v];Pe(s[0]+t,s[1]+t,s[2]+t)}}else{for(var c=0;c<E;c++){var l=C[c];Pe(l[2],l[1],l[0])}for(var u=0;u<E;u++){var p=C[u];Pe(p[0]+D*f,p[1]+D*f,p[2]+D*f)}}a.addGroup(e,i.length/3-e,0)}(),function(){var e=i.length/3,n=0;Re(T,n),n+=T.length;for(var t=0,r=S.length;t<r;t++){var o=S[t];Re(o,n),n+=o.length}a.addGroup(e,i.length/3-e,1)}()}return e.setAttribute("position",new ua(i,3)),e.setAttribute("uv",new ua(v,2)),e.computeVertexNormals(),e}return b(t,[{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return function(e,n,t){if(t.shapes=[],Array.isArray(e))for(var r=0,o=e.length;r<o;r++){var a=e[r];t.shapes.push(a.uuid)}else t.shapes.push(e.uuid);t.options=Object.assign({},n),void 0!==n.extrudePath&&(t.options.extrudePath=n.extrudePath.toJSON());return t}(this.parameters.shapes,this.parameters.options,e)}}],[{key:"fromJSON",value:function(e,n){for(var r=[],o=0,a=e.shapes.length;o<a;o++){var i=n[e.shapes[o]];r.push(i)}var v=e.options.extrudePath;return void 0!==v&&(e.options.extrudePath=(new ml[v.type]).fromJSON(v)),new t(r,e.options)}}]),t}(_a),iu={generateTopUV:function(e,n,t,r,o){var a=n[3*t],i=n[3*t+1],v=n[3*r],s=n[3*r+1],c=n[3*o],l=n[3*o+1];return[new ir(a,i),new ir(v,s),new ir(c,l)]},generateSideWallUV:function(e,n,t,r,o,a){var i=n[3*t],v=n[3*t+1],s=n[3*t+2],c=n[3*r],l=n[3*r+1],u=n[3*r+2],f=n[3*o],p=n[3*o+1],m=n[3*o+2],d=n[3*a],h=n[3*a+1],x=n[3*a+2];return Math.abs(v-l)<Math.abs(i-c)?[new ir(i,1-s),new ir(c,1-u),new ir(f,1-m),new ir(d,1-x)]:[new ir(v,1-s),new ir(l,1-u),new ir(p,1-m),new ir(h,1-x)]}};var vu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var a=(1+Math.sqrt(5))/2,i=[-1,a,0,1,a,0,-1,-a,0,1,-a,0,0,-1,a,0,1,a,0,-1,-a,0,1,-a,a,0,-1,a,0,1,-a,0,-1,-a,0,1],v=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];return(e=n.call(this,i,v,r,o)).type="IcosahedronGeometry",e.parameters={radius:r,detail:o},e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(Ul),su=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var a=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];return(e=n.call(this,a,i,r,o)).type="OctahedronGeometry",e.parameters={radius:r,detail:o},e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(Ul),cu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.5,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI;y(this,t),(e=n.call(this)).type="RingGeometry",e.parameters={innerRadius:r,outerRadius:o,thetaSegments:a,phiSegments:i,thetaStart:v,thetaLength:s},a=Math.max(3,a);for(var c=[],l=[],u=[],f=[],p=r,m=(o-r)/(i=Math.max(1,i)),d=new Lr,h=new ir,x=0;x<=i;x++){for(var g=0;g<=a;g++){var _=v+g/a*s;d.x=p*Math.cos(_),d.y=p*Math.sin(_),l.push(d.x,d.y,d.z),u.push(0,0,1),h.x=(d.x/o+1)/2,h.y=(d.y/o+1)/2,f.push(h.x,h.y)}p+=m}for(var b=0;b<i;b++)for(var U=b*(a+1),w=0;w<a;w++){var S=w+U,M=S,j=S+a+1,k=S+a+2,C=S+1;c.push(M,j,C),c.push(j,k,C)}return e.setIndex(c),e.setAttribute("position",new ua(l,3)),e.setAttribute("normal",new ua(u,3)),e.setAttribute("uv",new ua(f,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}]),t}(_a),lu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Tl([new ir(0,.5),new ir(-.5,-.5),new ir(.5,-.5)]),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12;y(this,t),(e=n.call(this)).type="ShapeGeometry",e.parameters={shapes:r,curveSegments:o};var a=[],i=[],v=[],s=[],c=0,l=0;if(!1===Array.isArray(r))f(r);else for(var u=0;u<r.length;u++)f(r[u]),e.addGroup(c,l,u),c+=l,l=0;function f(e){var n=i.length/3,t=e.extractPoints(o),r=t.shape,c=t.holes;!1===tu.isClockWise(r)&&(r=r.reverse());for(var u=0,f=c.length;u<f;u++){var p=c[u];!0===tu.isClockWise(p)&&(c[u]=p.reverse())}for(var m=tu.triangulateShape(r,c),d=0,h=c.length;d<h;d++){var x=c[d];r=r.concat(x)}for(var g=0,y=r.length;g<y;g++){var _=r[g];i.push(_.x,_.y,0),v.push(0,0,1),s.push(_.x,_.y)}for(var b=0,U=m.length;b<U;b++){var w=m[b],S=w[0]+n,M=w[1]+n,j=w[2]+n;a.push(S,M,j),l+=3}}return e.setIndex(a),e.setAttribute("position",new ua(i,3)),e.setAttribute("normal",new ua(v,3)),e.setAttribute("uv",new ua(s,2)),e}return b(t,[{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return function(e,n){if(n.shapes=[],Array.isArray(e))for(var t=0,r=e.length;t<r;t++){var o=e[t];n.shapes.push(o.uuid)}else n.shapes.push(e.uuid);return n}(this.parameters.shapes,e)}}],[{key:"fromJSON",value:function(e,n){for(var r=[],o=0,a=e.shapes.length;o<a;o++){var i=n[e.shapes[o]];r.push(i)}return new t(r,e.curveSegments)}}]),t}(_a);var uu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Math.PI;y(this,t),(e=n.call(this)).type="SphereGeometry",e.parameters={radius:r,widthSegments:o,heightSegments:a,phiStart:i,phiLength:v,thetaStart:s,thetaLength:c},o=Math.max(3,Math.floor(o)),a=Math.max(2,Math.floor(a));for(var l=Math.min(s+c,Math.PI),u=0,f=[],p=new Lr,m=new Lr,d=[],h=[],x=[],g=[],_=0;_<=a;_++){var b=[],U=_/a,w=0;0==_&&0==s?w=.5/o:_==a&&l==Math.PI&&(w=-.5/o);for(var S=0;S<=o;S++){var M=S/o;p.x=-r*Math.cos(i+M*v)*Math.sin(s+U*c),p.y=r*Math.cos(s+U*c),p.z=r*Math.sin(i+M*v)*Math.sin(s+U*c),h.push(p.x,p.y,p.z),m.copy(p).normalize(),x.push(m.x,m.y,m.z),g.push(M+w,1-U),b.push(u++)}f.push(b)}for(var j=0;j<a;j++)for(var k=0;k<o;k++){var C=f[j][k+1],T=f[j][k],R=f[j+1][k],z=f[j+1][k+1];(0!==j||s>0)&&d.push(C,T,z),(j!==a-1||l<Math.PI)&&d.push(T,R,z)}return e.setIndex(d),e.setAttribute("position",new ua(h,3)),e.setAttribute("normal",new ua(x,3)),e.setAttribute("uv",new ua(g,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}]),t}(_a),fu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var a=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];return(e=n.call(this,a,i,r,o)).type="TetrahedronGeometry",e.parameters={radius:r,detail:o},e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(Ul),pu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:6,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI;y(this,t),(e=n.call(this)).type="TorusGeometry",e.parameters={radius:r,tube:o,radialSegments:a,tubularSegments:i,arc:v},a=Math.floor(a),i=Math.floor(i);for(var s=[],c=[],l=[],u=[],f=new Lr,p=new Lr,m=new Lr,d=0;d<=a;d++)for(var h=0;h<=i;h++){var x=h/i*v,g=d/a*Math.PI*2;p.x=(r+o*Math.cos(g))*Math.cos(x),p.y=(r+o*Math.cos(g))*Math.sin(x),p.z=o*Math.sin(g),c.push(p.x,p.y,p.z),f.x=r*Math.cos(x),f.y=r*Math.sin(x),m.subVectors(p,f).normalize(),l.push(m.x,m.y,m.z),u.push(h/i),u.push(d/a)}for(var _=1;_<=a;_++)for(var b=1;b<=i;b++){var U=(i+1)*_+b-1,w=(i+1)*(_-1)+b-1,S=(i+1)*(_-1)+b,M=(i+1)*_+b;s.push(U,w,M),s.push(w,S,M)}return e.setIndex(s),e.setAttribute("position",new ua(c,3)),e.setAttribute("normal",new ua(l,3)),e.setAttribute("uv",new ua(u,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}]),t}(_a),mu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:64,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:3;y(this,t),(e=n.call(this)).type="TorusKnotGeometry",e.parameters={radius:r,tube:o,tubularSegments:a,radialSegments:i,p:v,q:s},a=Math.floor(a),i=Math.floor(i);for(var c=[],l=[],u=[],f=[],p=new Lr,m=new Lr,d=new Lr,h=new Lr,x=new Lr,g=new Lr,_=new Lr,b=0;b<=a;++b){var U=b/a*v*Math.PI*2;F(U,v,s,r,d),F(U+.01,v,s,r,h),g.subVectors(h,d),_.addVectors(h,d),x.crossVectors(g,_),_.crossVectors(x,g),x.normalize(),_.normalize();for(var w=0;w<=i;++w){var S=w/i*Math.PI*2,M=-o*Math.cos(S),j=o*Math.sin(S);p.x=d.x+(M*_.x+j*x.x),p.y=d.y+(M*_.y+j*x.y),p.z=d.z+(M*_.z+j*x.z),l.push(p.x,p.y,p.z),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),f.push(b/a),f.push(w/i)}}for(var k=1;k<=a;k++)for(var C=1;C<=i;C++){var T=(i+1)*(k-1)+(C-1),R=(i+1)*k+(C-1),z=(i+1)*k+C,P=(i+1)*(k-1)+C;c.push(T,R,P),c.push(R,z,P)}function F(e,n,t,r,o){var a=Math.cos(e),i=Math.sin(e),v=t/n*e,s=Math.cos(v);o.x=r*(2+s)*.5*a,o.y=r*(2+s)*i*.5,o.z=r*Math.sin(v)*.5}return e.setIndex(c),e.setAttribute("position",new ua(l,3)),e.setAttribute("normal",new ua(u,3)),e.setAttribute("uv",new ua(f,2)),e}return b(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}]),t}(_a),du=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new fl(new Lr(-1,-1,0),new Lr(-1,1,0),new Lr(1,1,0)),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,v=arguments.length>4&&void 0!==arguments[4]&&arguments[4];y(this,t),(e=n.call(this)).type="TubeGeometry",e.parameters={path:r,tubularSegments:o,radius:a,radialSegments:i,closed:v};var s=r.computeFrenetFrames(o,v);e.tangents=s.tangents,e.normals=s.normals,e.binormals=s.binormals;var c=new Lr,l=new Lr,u=new ir,f=new Lr,p=[],m=[],d=[],h=[];function x(){for(var e=0;e<o;e++)g(e);g(!1===v?o:0),b(),_()}function g(e){f=r.getPointAt(e/o,f);for(var n=s.normals[e],t=s.binormals[e],v=0;v<=i;v++){var u=v/i*Math.PI*2,d=Math.sin(u),h=-Math.cos(u);l.x=h*n.x+d*t.x,l.y=h*n.y+d*t.y,l.z=h*n.z+d*t.z,l.normalize(),m.push(l.x,l.y,l.z),c.x=f.x+a*l.x,c.y=f.y+a*l.y,c.z=f.z+a*l.z,p.push(c.x,c.y,c.z)}}function _(){for(var e=1;e<=o;e++)for(var n=1;n<=i;n++){var t=(i+1)*(e-1)+(n-1),r=(i+1)*e+(n-1),a=(i+1)*e+n,v=(i+1)*(e-1)+n;h.push(t,r,v),h.push(r,a,v)}}function b(){for(var e=0;e<=o;e++)for(var n=0;n<=i;n++)u.x=e/o,u.y=n/i,d.push(u.x,u.y)}return x(),e.setIndex(h),e.setAttribute("position",new ua(p,3)),e.setAttribute("normal",new ua(m,3)),e.setAttribute("uv",new ua(d,2)),e}return b(t,[{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this);return e.path=this.parameters.path.toJSON(),e}}],[{key:"fromJSON",value:function(e){return new t((new ml[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}]),t}(_a),hu=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(y(this,t),(e=n.call(this)).type="WireframeGeometry",e.parameters={geometry:r},null!==r){var o=[],a=new Set,i=new Lr,v=new Lr;if(null!==r.index){var s=r.attributes.position,c=r.index,l=r.groups;0===l.length&&(l=[{start:0,count:c.count,materialIndex:0}]);for(var u=0,f=l.length;u<f;++u)for(var p=l[u],m=p.start,d=p.count,h=m,x=m+d;h<x;h+=3)for(var g=0;g<3;g++){var _=c.getX(h+g),b=c.getX(h+(g+1)%3);i.fromBufferAttribute(s,_),v.fromBufferAttribute(s,b),!0===xu(i,v,a)&&(o.push(i.x,i.y,i.z),o.push(v.x,v.y,v.z))}}else for(var U=r.attributes.position,w=0,S=U.count/3;w<S;w++)for(var M=0;M<3;M++){var j=3*w+M,k=3*w+(M+1)%3;i.fromBufferAttribute(U,j),v.fromBufferAttribute(U,k),!0===xu(i,v,a)&&(o.push(i.x,i.y,i.z),o.push(v.x,v.y,v.z))}e.setAttribute("position",new ua(o,3))}return e}return b(t)}(_a);function xu(e,n,t){var r="".concat(e.x,",").concat(e.y,",").concat(e.z,"-").concat(n.x,",").concat(n.y,",").concat(n.z),o="".concat(n.x,",").concat(n.y,",").concat(n.z,"-").concat(e.x,",").concat(e.y,",").concat(e.z);return!0!==t.has(r)&&!0!==t.has(o)&&(t.add(r),t.add(o),!0)}var gu=Object.freeze({__proto__:null,BoxGeometry:Ba,CapsuleGeometry:gl,CircleGeometry:yl,ConeGeometry:bl,CylinderGeometry:_l,DodecahedronGeometry:wl,EdgesGeometry:Cl,ExtrudeGeometry:au,IcosahedronGeometry:vu,LatheGeometry:xl,OctahedronGeometry:su,PlaneGeometry:ii,PolyhedronGeometry:Ul,RingGeometry:cu,ShapeGeometry:lu,SphereGeometry:uu,TetrahedronGeometry:fu,TorusGeometry:pu,TorusKnotGeometry:mu,TubeGeometry:du,WireframeGeometry:hu}),yu=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isShadowMaterial=!0,r.type="ShadowMaterial",r.color=new wr(0),r.transparent=!0,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.fog=e.fog,this}}]),t}($o),_u=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).isRawShaderMaterial=!0,r.type="RawShaderMaterial",r}return b(t)}(qa),bu=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshStandardMaterial=!0,r.defines={STANDARD:""},r.type="MeshStandardMaterial",r.color=new wr(16777215),r.roughness=1,r.metalness=0,r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new wr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new ir(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.roughnessMap=null,r.metalnessMap=null,r.alphaMap=null,r.envMap=null,r.envMapIntensity=1,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.flatShading=!1,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}($o),Uu=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshPhysicalMaterial=!0,r.defines={STANDARD:"",PHYSICAL:""},r.type="MeshPhysicalMaterial",r.clearcoatMap=null,r.clearcoatRoughness=0,r.clearcoatRoughnessMap=null,r.clearcoatNormalScale=new ir(1,1),r.clearcoatNormalMap=null,r.ior=1.5,Object.defineProperty(M(r),"reflectivity",{get:function(){return Jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),r.iridescenceMap=null,r.iridescenceIOR=1.3,r.iridescenceThicknessRange=[100,400],r.iridescenceThicknessMap=null,r.sheenColor=new wr(0),r.sheenColorMap=null,r.sheenRoughness=1,r.sheenRoughnessMap=null,r.transmissionMap=null,r.thickness=0,r.thicknessMap=null,r.attenuationDistance=1/0,r.attenuationColor=new wr(1,1,1),r.specularIntensity=1,r.specularIntensityMap=null,r.specularColor=new wr(1,1,1),r.specularColorMap=null,r._sheen=0,r._clearcoat=0,r._iridescence=0,r._transmission=0,r.setValues(e),r}return b(t,[{key:"sheen",get:function(){return this._sheen},set:function(e){this._sheen>0!==e>0&&this.version++,this._sheen=e}},{key:"clearcoat",get:function(){return this._clearcoat},set:function(e){this._clearcoat>0!==e>0&&this.version++,this._clearcoat=e}},{key:"iridescence",get:function(){return this._iridescence},set:function(e){this._iridescence>0!==e>0&&this.version++,this._iridescence=e}},{key:"transmission",get:function(){return this._transmission},set:function(e){this._transmission>0!==e>0&&this.version++,this._transmission=e}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=x(e.iridescenceThicknessRange),this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}]),t}(bu),wu=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshPhongMaterial=!0,r.type="MeshPhongMaterial",r.color=new wr(16777215),r.specular=new wr(1118481),r.shininess=30,r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new wr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new ir(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=Se,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.flatShading=!1,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}($o),Su=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshToonMaterial=!0,r.defines={TOON:""},r.type="MeshToonMaterial",r.color=new wr(16777215),r.map=null,r.gradientMap=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new wr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new ir(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.alphaMap=null,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}]),t}($o),Mu=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshNormalMaterial=!0,r.type="MeshNormalMaterial",r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new ir(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.wireframe=!1,r.wireframeLinewidth=1,r.flatShading=!1,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}]),t}($o),ju=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshLambertMaterial=!0,r.type="MeshLambertMaterial",r.color=new wr(16777215),r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new wr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new ir(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=Se,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.flatShading=!1,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}($o),ku=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshMatcapMaterial=!0,r.defines={MATCAP:""},r.type="MeshMatcapMaterial",r.color=new wr(16777215),r.matcap=null,r.map=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new ir(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.alphaMap=null,r.flatShading=!1,r.fog=!0,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}($o),Cu=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isLineDashedMaterial=!0,r.type="LineDashedMaterial",r.scale=1,r.dashSize=3,r.gapSize=1,r.setValues(e),r}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}]),t}(jc);function Tu(e,n,t){return zu(e)?new e.constructor(e.subarray(n,void 0!==t?t:e.length)):e.slice(n,t)}function Ru(e,n,t){return!e||!t&&e.constructor===n?e:"number"===typeof n.BYTES_PER_ELEMENT?new n(e):Array.prototype.slice.call(e)}function zu(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function Pu(e){for(var n=e.length,t=new Array(n),r=0;r!==n;++r)t[r]=r;return t.sort((function(n,t){return e[n]-e[t]})),t}function Fu(e,n,t){for(var r=e.length,o=new e.constructor(r),a=0,i=0;i!==r;++a)for(var v=t[a]*n,s=0;s!==n;++s)o[i++]=e[v+s];return o}function Du(e,n,t,r){for(var o=1,a=e[0];void 0!==a&&void 0===a[r];)a=e[o++];if(void 0!==a){var i=a[r];if(void 0!==i)if(Array.isArray(i))do{void 0!==(i=a[r])&&(n.push(a.time),t.push.apply(t,i)),a=e[o++]}while(void 0!==a);else if(void 0!==i.toArray)do{void 0!==(i=a[r])&&(n.push(a.time),i.toArray(t,t.length)),a=e[o++]}while(void 0!==a);else do{void 0!==(i=a[r])&&(n.push(a.time),t.push(i)),a=e[o++]}while(void 0!==a)}}var Eu=Object.freeze({__proto__:null,arraySlice:Tu,convertArray:Ru,isTypedArray:zu,getKeyframeOrder:Pu,sortedArray:Fu,flattenJSON:Du,subclip:function(e,n,t,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:30,a=e.clone();a.name=n;for(var i=[],v=0;v<a.tracks.length;++v){for(var s=a.tracks[v],c=s.getValueSize(),l=[],u=[],f=0;f<s.times.length;++f){var p=s.times[f]*o;if(!(p<t||p>=r)){l.push(s.times[f]);for(var m=0;m<c;++m)u.push(s.values[f*c+m])}}0!==l.length&&(s.times=Ru(l,s.times.constructor),s.values=Ru(u,s.values.constructor),i.push(s))}a.tracks=i;for(var d=1/0,h=0;h<a.tracks.length;++h)d>a.tracks[h].times[0]&&(d=a.tracks[h].times[0]);for(var x=0;x<a.tracks.length;++x)a.tracks[x].shift(-1*d);return a.resetDuration(),a},makeClipAdditive:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:30;r<=0&&(r=30);for(var o=t.tracks.length,a=n/r,i=function(n){var r=t.tracks[n],o=r.ValueTypeName;if("bool"===o||"string"===o)return"continue";var i=e.tracks.find((function(e){return e.name===r.name&&e.ValueTypeName===o}));if(void 0===i)return"continue";var v=0,s=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(v=s/3);var c=0,l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=l/3);var u=r.times.length-1,f=void 0;if(a<=r.times[0]){var p=v,m=s-v;f=Tu(r.values,p,m)}else if(a>=r.times[u]){var d=u*s+v,h=d+s-v;f=Tu(r.values,d,h)}else{var x=r.createInterpolant(),g=v,y=s-v;x.evaluate(a),f=Tu(x.resultBuffer,g,y)}"quaternion"===o&&(new Ir).fromArray(f).normalize().conjugate().toArray(f);for(var _=i.times.length,b=0;b<_;++b){var U=b*l+c;if("quaternion"===o)Ir.multiplyQuaternionsFlat(i.values,U,f,0,i.values,U);else for(var w=l-2*c,S=0;S<w;++S)i.values[U+S]-=f[S]}},v=0;v<o;++v)i(v);return e.blendMode=ot,e}}),Iu=function(){function e(n,t,r,o){y(this,e),this.parameterPositions=n,this._cachedIndex=0,this.resultBuffer=void 0!==o?o:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}return b(e,[{key:"evaluate",value:function(e){var n=this.parameterPositions,t=this._cachedIndex,r=n[t],o=n[t-1];e:{n:{var a;t:{r:if(!(e<r)){for(var i=t+2;;){if(void 0===r){if(e<o)break r;return t=n.length,this._cachedIndex=t,this.copySampleValue_(t-1)}if(t===i)break;if(o=r,e<(r=n[++t]))break n}a=n.length;break t}if(e>=o)break e;var v=n[1];e<v&&(t=2,o=v);for(var s=t-2;;){if(void 0===o)return this._cachedIndex=0,this.copySampleValue_(0);if(t===s)break;if(r=o,e>=(o=n[--t-1]))break n}a=t,t=0}for(;t<a;){var c=t+a>>>1;e<n[c]?a=c:t=c+1}if(r=n[t],void 0===(o=n[t-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return t=n.length,this._cachedIndex=t,this.copySampleValue_(t-1)}this._cachedIndex=t,this.intervalChanged_(t,o,r)}return this.interpolate_(t,o,e,r)}},{key:"getSettings_",value:function(){return this.settings||this.DefaultSettings_}},{key:"copySampleValue_",value:function(e){for(var n=this.resultBuffer,t=this.sampleValues,r=this.valueSize,o=e*r,a=0;a!==r;++a)n[a]=t[o+a];return n}},{key:"interpolate_",value:function(){throw new Error("call to abstract method")}},{key:"intervalChanged_",value:function(){}}]),e}(),Lu=function(e){U(t,e);var n=k(t);function t(e,r,o,a){var i;return y(this,t),(i=n.call(this,e,r,o,a))._weightPrev=-0,i._offsetPrev=-0,i._weightNext=-0,i._offsetNext=-0,i.DefaultSettings_={endingStart:et,endingEnd:et},i}return b(t,[{key:"intervalChanged_",value:function(e,n,t){var r=this.parameterPositions,o=e-2,a=e+1,i=r[o],v=r[a];if(void 0===i)switch(this.getSettings_().endingStart){case nt:o=e,i=2*n-t;break;case tt:i=n+r[o=r.length-2]-r[o+1];break;default:o=e,i=t}if(void 0===v)switch(this.getSettings_().endingEnd){case nt:a=e,v=2*t-n;break;case tt:a=1,v=t+r[1]-r[0];break;default:a=e-1,v=n}var s=.5*(t-n),c=this.valueSize;this._weightPrev=s/(n-i),this._weightNext=s/(v-t),this._offsetPrev=o*c,this._offsetNext=a*c}},{key:"interpolate_",value:function(e,n,t,r){for(var o=this.resultBuffer,a=this.sampleValues,i=this.valueSize,v=e*i,s=v-i,c=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,f=this._weightNext,p=(t-n)/(r-n),m=p*p,d=m*p,h=-u*d+2*u*m-u*p,x=(1+u)*d+(-1.5-2*u)*m+(-.5+u)*p+1,g=(-1-f)*d+(1.5+f)*m+.5*p,y=f*d-f*m,_=0;_!==i;++_)o[_]=h*a[c+_]+x*a[s+_]+g*a[v+_]+y*a[l+_];return o}}]),t}(Iu),Au=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),n.call(this,e,r,o,a)}return b(t,[{key:"interpolate_",value:function(e,n,t,r){for(var o=this.resultBuffer,a=this.sampleValues,i=this.valueSize,v=e*i,s=v-i,c=(t-n)/(r-n),l=1-c,u=0;u!==i;++u)o[u]=a[s+u]*l+a[v+u]*c;return o}}]),t}(Iu),Ou=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),n.call(this,e,r,o,a)}return b(t,[{key:"interpolate_",value:function(e){return this.copySampleValue_(e-1)}}]),t}(Iu),Bu=function(){function e(n,t,r,o){if(y(this,e),void 0===n)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n,this.times=Ru(t,this.TimeBufferType),this.values=Ru(r,this.ValueBufferType),this.setInterpolation(o||this.DefaultInterpolation)}return b(e,[{key:"InterpolantFactoryMethodDiscrete",value:function(e){return new Ou(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodLinear",value:function(e){return new Au(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodSmooth",value:function(e){return new Lu(this.times,this.values,this.getValueSize(),e)}},{key:"setInterpolation",value:function(e){var n;switch(e){case Jn:n=this.InterpolantFactoryMethodDiscrete;break;case $n:n=this.InterpolantFactoryMethodLinear;break;case Kn:n=this.InterpolantFactoryMethodSmooth}if(void 0===n){var t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=n,this}},{key:"getInterpolation",value:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Jn;case this.InterpolantFactoryMethodLinear:return $n;case this.InterpolantFactoryMethodSmooth:return Kn}}},{key:"getValueSize",value:function(){return this.values.length/this.times.length}},{key:"shift",value:function(e){if(0!==e)for(var n=this.times,t=0,r=n.length;t!==r;++t)n[t]+=e;return this}},{key:"scale",value:function(e){if(1!==e)for(var n=this.times,t=0,r=n.length;t!==r;++t)n[t]*=e;return this}},{key:"trim",value:function(e,n){for(var t=this.times,r=t.length,o=0,a=r-1;o!==r&&t[o]<e;)++o;for(;-1!==a&&t[a]>n;)--a;if(++a,0!==o||a!==r){o>=a&&(o=(a=Math.max(a,1))-1);var i=this.getValueSize();this.times=Tu(t,o,a),this.values=Tu(this.values,o*i,a*i)}return this}},{key:"validate",value:function(){var e=!0,n=this.getValueSize();n-Math.floor(n)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var t=this.times,r=this.values,o=t.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,i=0;i!==o;i++){var v=t[i];if("number"===typeof v&&isNaN(v)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,v),e=!1;break}if(null!==a&&a>v){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,v,a),e=!1;break}a=v}if(void 0!==r&&zu(r))for(var s=0,c=r.length;s!==c;++s){var l=r[s];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,l),e=!1;break}}return e}},{key:"optimize",value:function(){for(var e=Tu(this.times),n=Tu(this.values),t=this.getValueSize(),r=this.getInterpolation()===Kn,o=e.length-1,a=1,i=1;i<o;++i){var v=!1,s=e[i];if(s!==e[i+1]&&(1!==i||s!==e[0]))if(r)v=!0;else for(var c=i*t,l=c-t,u=c+t,f=0;f!==t;++f){var p=n[c+f];if(p!==n[l+f]||p!==n[u+f]){v=!0;break}}if(v){if(i!==a){e[a]=e[i];for(var m=i*t,d=a*t,h=0;h!==t;++h)n[d+h]=n[m+h]}++a}}if(o>0){e[a]=e[o];for(var x=o*t,g=a*t,y=0;y!==t;++y)n[g+y]=n[x+y];++a}return a!==e.length?(this.times=Tu(e,0,a),this.values=Tu(n,0,a*t)):(this.times=e,this.values=n),this}},{key:"clone",value:function(){var e=Tu(this.times,0),n=Tu(this.values,0),t=new(0,this.constructor)(this.name,e,n);return t.createInterpolant=this.createInterpolant,t}}],[{key:"toJSON",value:function(e){var n,t=e.constructor;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ru(e.times,Array),values:Ru(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}}]),e}();Bu.prototype.TimeBufferType=Float32Array,Bu.prototype.ValueBufferType=Float32Array,Bu.prototype.DefaultInterpolation=$n;var Nu=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(Bu);Nu.prototype.ValueTypeName="bool",Nu.prototype.ValueBufferType=Array,Nu.prototype.DefaultInterpolation=Jn,Nu.prototype.InterpolantFactoryMethodLinear=void 0,Nu.prototype.InterpolantFactoryMethodSmooth=void 0;var Gu=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(Bu);Gu.prototype.ValueTypeName="color";var Vu=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(Bu);Vu.prototype.ValueTypeName="number";var qu=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),n.call(this,e,r,o,a)}return b(t,[{key:"interpolate_",value:function(e,n,t,r){for(var o=this.resultBuffer,a=this.sampleValues,i=this.valueSize,v=(t-n)/(r-n),s=e*i,c=s+i;s!==c;s+=4)Ir.slerpFlat(o,0,a,s-i,a,s,v);return o}}]),t}(Iu),Wu=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t,[{key:"InterpolantFactoryMethodLinear",value:function(e){return new qu(this.times,this.values,this.getValueSize(),e)}}]),t}(Bu);Wu.prototype.ValueTypeName="quaternion",Wu.prototype.DefaultInterpolation=$n,Wu.prototype.InterpolantFactoryMethodSmooth=void 0;var Hu=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(Bu);Hu.prototype.ValueTypeName="string",Hu.prototype.ValueBufferType=Array,Hu.prototype.DefaultInterpolation=Jn,Hu.prototype.InterpolantFactoryMethodLinear=void 0,Hu.prototype.InterpolantFactoryMethodSmooth=void 0;var Xu=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(Bu);Xu.prototype.ValueTypeName="vector";var Yu=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=arguments.length>2?arguments[2]:void 0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:rt;y(this,e),this.name=n,this.tracks=r,this.duration=t,this.blendMode=o,this.uuid=Qt(),this.duration<0&&this.resetDuration()}return b(e,[{key:"resetDuration",value:function(){for(var e=0,n=0,t=this.tracks.length;n!==t;++n){var r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}},{key:"trim",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}},{key:"validate",value:function(){for(var e=!0,n=0;n<this.tracks.length;n++)e=e&&this.tracks[n].validate();return e}},{key:"optimize",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},{key:"clone",value:function(){for(var e=[],n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}},{key:"toJSON",value:function(){return this.constructor.toJSON(this)}}],[{key:"parse",value:function(e){for(var n=[],t=e.tracks,r=1/(e.fps||1),o=0,a=t.length;o!==a;++o)n.push(Zu(t[o]).scale(r));var i=new this(e.name,e.duration,n,e.blendMode);return i.uuid=e.uuid,i}},{key:"toJSON",value:function(e){for(var n=[],t=e.tracks,r={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode},o=0,a=t.length;o!==a;++o)n.push(Bu.toJSON(t[o]));return r}},{key:"CreateFromMorphTargetSequence",value:function(e,n,t,r){for(var o=n.length,a=[],i=0;i<o;i++){var v=[],s=[];v.push((i+o-1)%o,i,(i+1)%o),s.push(0,1,0);var c=Pu(v);v=Fu(v,1,c),s=Fu(s,1,c),r||0!==v[0]||(v.push(o),s.push(s[0])),a.push(new Vu(".morphTargetInfluences["+n[i].name+"]",v,s).scale(1/t))}return new this(e,-1,a)}},{key:"findByName",value:function(e,n){var t=e;if(!Array.isArray(e)){var r=e;t=r.geometry&&r.geometry.animations||r.animations}for(var o=0;o<t.length;o++)if(t[o].name===n)return t[o];return null}},{key:"CreateClipsFromMorphTargetSequences",value:function(e,n,t){for(var r={},o=/^([\w-]*?)([\d]+)$/,a=0,i=e.length;a<i;a++){var v=e[a],s=v.name.match(o);if(s&&s.length>1){var c=s[1],l=r[c];l||(r[c]=l=[]),l.push(v)}}var u=[];for(var f in r)u.push(this.CreateFromMorphTargetSequence(f,r[f],n,t));return u}},{key:"parseAnimation",value:function(e,n){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var t=function(e,n,t,r,o){if(0!==t.length){var a=[],i=[];Du(t,a,i,r),0!==a.length&&o.push(new e(n,a,i))}},r=[],o=e.name||"default",a=e.fps||30,i=e.blendMode,v=e.length||-1,s=e.hierarchy||[],c=0;c<s.length;c++){var l=s[c].keys;if(l&&0!==l.length)if(l[0].morphTargets){var u={},f=void 0;for(f=0;f<l.length;f++)if(l[f].morphTargets)for(var p=0;p<l[f].morphTargets.length;p++)u[l[f].morphTargets[p]]=-1;for(var m in u){for(var d=[],h=[],x=0;x!==l[f].morphTargets.length;++x){var g=l[f];d.push(g.time),h.push(g.morphTarget===m?1:0)}r.push(new Vu(".morphTargetInfluence["+m+"]",d,h))}v=u.length*a}else{var y=".bones["+n[c].name+"]";t(Xu,y+".position",l,"pos",r),t(Wu,y+".quaternion",l,"rot",r),t(Xu,y+".scale",l,"scl",r)}}return 0===r.length?null:new this(o,v,r,i)}}]),e}();function Zu(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var n=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Vu;case"vector":case"vector2":case"vector3":case"vector4":return Xu;case"color":return Gu;case"quaternion":return Wu;case"bool":case"boolean":return Nu;case"string":return Hu}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){var t=[],r=[];Du(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0!==n.parse?n.parse(e):new n(e.name,e.times,e.values,e.interpolation)}var Qu,Ju={enabled:!1,files:{},add:function(e,n){!1!==this.enabled&&(this.files[e]=n)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},$u=b((function e(n,t,r){y(this,e);var o=this,a=!1,i=0,v=0,s=void 0,c=[];this.onStart=void 0,this.onLoad=n,this.onProgress=t,this.onError=r,this.itemStart=function(e){v++,!1===a&&void 0!==o.onStart&&o.onStart(e,i,v),a=!0},this.itemEnd=function(e){i++,void 0!==o.onProgress&&o.onProgress(e,i,v),i===v&&(a=!1,void 0!==o.onLoad&&o.onLoad())},this.itemError=function(e){void 0!==o.onError&&o.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,n){return c.push(e,n),this},this.removeHandler=function(e){var n=c.indexOf(e);return-1!==n&&c.splice(n,2),this},this.getHandler=function(e){for(var n=0,t=c.length;n<t;n+=2){var r=c[n],o=c[n+1];if(r.global&&(r.lastIndex=0),r.test(e))return o}return null}})),Ku=new $u,ef=function(){function e(n){y(this,e),this.manager=void 0!==n?n:Ku,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}return b(e,[{key:"load",value:function(){}},{key:"loadAsync",value:function(e,n){var t=this;return new Promise((function(r,o){t.load(e,r,n,o)}))}},{key:"parse",value:function(){}},{key:"setCrossOrigin",value:function(e){return this.crossOrigin=e,this}},{key:"setWithCredentials",value:function(e){return this.withCredentials=e,this}},{key:"setPath",value:function(e){return this.path=e,this}},{key:"setResourcePath",value:function(e){return this.resourcePath=e,this}},{key:"setRequestHeader",value:function(e){return this.requestHeader=e,this}}]),e}(),nf={},tf=function(e){U(t,e);var n=k(t);function t(e,r){var o;return y(this,t),(o=n.call(this,e)).response=r,o}return b(t)}(C(Error)),rf=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this;void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var a=Ju.get(e);if(void 0!==a)return this.manager.itemStart(e),setTimeout((function(){n&&n(a),o.manager.itemEnd(e)}),0),a;if(void 0===nf[e]){nf[e]=[],nf[e].push({onLoad:n,onProgress:t,onError:r});var i=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),v=this.mimeType,s=this.responseType;fetch(i).then((function(n){if(200===n.status||0===n.status){if(0===n.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"===typeof ReadableStream||void 0===n.body||void 0===n.body.getReader)return n;var t=nf[e],r=n.body.getReader(),o=n.headers.get("Content-Length"),a=o?parseInt(o):0,i=0!==a,v=0,s=new ReadableStream({start:function(e){!function n(){r.read().then((function(r){var o=r.done,s=r.value;if(o)e.close();else{v+=s.byteLength;for(var c=new ProgressEvent("progress",{lengthComputable:i,loaded:v,total:a}),l=0,u=t.length;l<u;l++){var f=t[l];f.onProgress&&f.onProgress(c)}e.enqueue(s),n()}}))}()}});return new Response(s)}throw new tf('fetch for "'.concat(n.url,'" responded with ').concat(n.status,": ").concat(n.statusText),n)})).then((function(e){switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((function(e){return(new DOMParser).parseFromString(e,v)}));case"json":return e.json();default:if(void 0===v)return e.text();var n=/charset="?([^;"\s]*)"?/i.exec(v),t=n&&n[1]?n[1].toLowerCase():void 0,r=new TextDecoder(t);return e.arrayBuffer().then((function(e){return r.decode(e)}))}})).then((function(n){Ju.add(e,n);var t=nf[e];delete nf[e];for(var r=0,o=t.length;r<o;r++){var a=t[r];a.onLoad&&a.onLoad(n)}})).catch((function(n){var t=nf[e];if(void 0===t)throw o.manager.itemError(e),n;delete nf[e];for(var r=0,a=t.length;r<a;r++){var i=t[r];i.onError&&i.onError(n)}o.manager.itemError(e)})).finally((function(){o.manager.itemEnd(e)})),this.manager.itemStart(e)}else nf[e].push({onLoad:n,onProgress:t,onError:r})}},{key:"setResponseType",value:function(e){return this.responseType=e,this}},{key:"setMimeType",value:function(e){return this.mimeType=e,this}}]),t}(ef),of=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=new rf(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(t){try{n(o.parse(JSON.parse(t)))}catch(a){r?r(a):console.error(a),o.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e){for(var n=[],t=0;t<e.length;t++){var r=Yu.parse(e[t]);n.push(r)}return n}}]),t}(ef),af=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=[],i=new Hc,v=new rf(this.manager);v.setPath(this.path),v.setResponseType("arraybuffer"),v.setRequestHeader(this.requestHeader),v.setWithCredentials(o.withCredentials);var s=0;function c(c){v.load(e[c],(function(e){var t=o.parse(e,!0);a[c]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps},6===(s+=1)&&(1===t.mipmapCount&&(i.minFilter=Xe),i.image=a,i.format=t.format,i.needsUpdate=!0,n&&n(i))}),t,r)}if(Array.isArray(e))for(var l=0,u=e.length;l<u;++l)c(l);else v.load(e,(function(e){var t=o.parse(e,!0);if(t.isCubemap){for(var r=t.mipmaps.length/t.mipmapCount,v=0;v<r;v++){a[v]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)a[v].mipmaps.push(t.mipmaps[v*t.mipmapCount+s]),a[v].format=t.format,a[v].width=t.width,a[v].height=t.height}i.image=a}else i.image.width=t.width,i.image.height=t.height,i.mipmaps=t.mipmaps;1===t.mipmapCount&&(i.minFilter=Xe),i.format=t.format,i.needsUpdate=!0,n&&n(i)}),t,r);return i}}]),t}(ef),vf=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,a=Ju.get(e);if(void 0!==a)return o.manager.itemStart(e),setTimeout((function(){n&&n(a),o.manager.itemEnd(e)}),0),a;var i=ur("img");function v(){c(),Ju.add(e,this),n&&n(this),o.manager.itemEnd(e)}function s(n){c(),r&&r(n),o.manager.itemError(e),o.manager.itemEnd(e)}function c(){i.removeEventListener("load",v,!1),i.removeEventListener("error",s,!1)}return i.addEventListener("load",v,!1),i.addEventListener("error",s,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),o.manager.itemStart(e),i.src=e,i}}]),t}(ef),sf=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=new Za,a=new vf(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var i=0;function v(t){a.load(e[t],(function(e){o.images[t]=e,6===++i&&(o.needsUpdate=!0,n&&n(o))}),void 0,r)}for(var s=0;s<e.length;++s)v(s);return o}}]),t}(ef),cf=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=new dc,i=new rf(this.manager);return i.setResponseType("arraybuffer"),i.setRequestHeader(this.requestHeader),i.setPath(this.path),i.setWithCredentials(o.withCredentials),i.load(e,(function(e){var t=o.parse(e);t&&(void 0!==t.image?a.image=t.image:void 0!==t.data&&(a.image.width=t.width,a.image.height=t.height,a.image.data=t.data),a.wrapS=void 0!==t.wrapS?t.wrapS:Be,a.wrapT=void 0!==t.wrapT?t.wrapT:Be,a.magFilter=void 0!==t.magFilter?t.magFilter:Xe,a.minFilter=void 0!==t.minFilter?t.minFilter:Xe,a.anisotropy=void 0!==t.anisotropy?t.anisotropy:1,void 0!==t.encoding&&(a.encoding=t.encoding),void 0!==t.flipY&&(a.flipY=t.flipY),void 0!==t.format&&(a.format=t.format),void 0!==t.type&&(a.type=t.type),void 0!==t.mipmaps&&(a.mipmaps=t.mipmaps,a.minFilter=Qe),1===t.mipmapCount&&(a.minFilter=Xe),void 0!==t.generateMipmaps&&(a.generateMipmaps=t.generateMipmaps),a.needsUpdate=!0,n&&n(a,t))}),t,r),a}}]),t}(ef),lf=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=new Cr,a=new vf(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(e){o.image=e,o.needsUpdate=!0,void 0!==n&&n(o)}),t,r),o}}]),t}(ef),uf=function(e){U(t,e);var n=k(t);function t(e){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return y(this,t),(r=n.call(this)).isLight=!0,r.type="Light",r.color=new wr(e),r.intensity=o,r}return b(t,[{key:"dispose",value:function(){}},{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.color.copy(e.color),this.intensity=e.intensity,this}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,void 0!==this.groundColor&&(n.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(n.object.distance=this.distance),void 0!==this.angle&&(n.object.angle=this.angle),void 0!==this.decay&&(n.object.decay=this.decay),void 0!==this.penumbra&&(n.object.penumbra=this.penumbra),void 0!==this.shadow&&(n.object.shadow=this.shadow.toJSON()),n}}]),t}(Oo),ff=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;return y(this,t),(a=n.call(this,e,o)).isHemisphereLight=!0,a.type="HemisphereLight",a.position.copy(Oo.DefaultUp),a.updateMatrix(),a.groundColor=new wr(r),a}return b(t,[{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.groundColor.copy(e.groundColor),this}}]),t}(uf),pf=new po,mf=new Lr,df=new Lr,hf=function(){function e(n){y(this,e),this.camera=n,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ir(512,512),this.map=null,this.mapPass=null,this.matrix=new po,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ri,this._frameExtents=new ir(1,1),this._viewportCount=1,this._viewports=[new Tr(0,0,1,1)]}return b(e,[{key:"getViewportCount",value:function(){return this._viewportCount}},{key:"getFrustum",value:function(){return this._frustum}},{key:"updateMatrices",value:function(e){var n=this.camera,t=this.matrix;mf.setFromMatrixPosition(e.matrixWorld),n.position.copy(mf),df.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(df),n.updateMatrixWorld(),pf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pf),t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(pf)}},{key:"getViewport",value:function(e){return this._viewports[e]}},{key:"getFrameExtents",value:function(){return this._frameExtents}},{key:"dispose",value:function(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}},{key:"copy",value:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}]),e}(),xf=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this,new Ha(50,1,.5,500))).isSpotLightShadow=!0,e.focus=1,e}return b(t,[{key:"updateMatrices",value:function(e){var n=this.camera,r=2*Zt*e.angle*this.focus,o=this.mapSize.width/this.mapSize.height,a=e.distance||n.far;r===n.fov&&o===n.aspect&&a===n.far||(n.fov=r,n.aspect=o,n.far=a,n.updateProjectionMatrix()),P(w(t.prototype),"updateMatrices",this).call(this,e)}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.focus=e.focus,this}}]),t}(hf),gf=function(e){U(t,e);var n=k(t);function t(e,r){var o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Math.PI/3,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;return y(this,t),(o=n.call(this,e,r)).isSpotLight=!0,o.type="SpotLight",o.position.copy(Oo.DefaultUp),o.updateMatrix(),o.target=new Oo,o.distance=a,o.angle=i,o.penumbra=v,o.decay=s,o.map=null,o.shadow=new xf,o}return b(t,[{key:"power",get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),t}(uf),yf=new po,_f=new Lr,bf=new Lr,Uf=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this,new Ha(90,1,.5,500))).isPointLightShadow=!0,e._frameExtents=new ir(4,2),e._viewportCount=6,e._viewports=[new Tr(2,1,1,1),new Tr(0,1,1,1),new Tr(3,1,1,1),new Tr(1,1,1,1),new Tr(3,0,1,1),new Tr(1,0,1,1)],e._cubeDirections=[new Lr(1,0,0),new Lr(-1,0,0),new Lr(0,0,1),new Lr(0,0,-1),new Lr(0,1,0),new Lr(0,-1,0)],e._cubeUps=[new Lr(0,1,0),new Lr(0,1,0),new Lr(0,1,0),new Lr(0,1,0),new Lr(0,0,1),new Lr(0,0,-1)],e}return b(t,[{key:"updateMatrices",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.camera,r=this.matrix,o=e.distance||t.far;o!==t.far&&(t.far=o,t.updateProjectionMatrix()),_f.setFromMatrixPosition(e.matrixWorld),t.position.copy(_f),bf.copy(t.position),bf.add(this._cubeDirections[n]),t.up.copy(this._cubeUps[n]),t.lookAt(bf),t.updateMatrixWorld(),r.makeTranslation(-_f.x,-_f.y,-_f.z),yf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yf)}}]),t}(hf),wf=function(e){U(t,e);var n=k(t);function t(e,r){var o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(o=n.call(this,e,r)).isPointLight=!0,o.type="PointLight",o.distance=a,o.decay=i,o.shadow=new Uf,o}return b(t,[{key:"power",get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}]),t}(uf),Sf=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this,new hi(-5,5,5,-5,.5,500))).isDirectionalLightShadow=!0,e}return b(t)}(hf),Mf=function(e){U(t,e);var n=k(t);function t(e,r){var o;return y(this,t),(o=n.call(this,e,r)).isDirectionalLight=!0,o.type="DirectionalLight",o.position.copy(Oo.DefaultUp),o.updateMatrix(),o.target=new Oo,o.shadow=new Sf,o}return b(t,[{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),t}(uf),jf=function(e){U(t,e);var n=k(t);function t(e,r){var o;return y(this,t),(o=n.call(this,e,r)).isAmbientLight=!0,o.type="AmbientLight",o}return b(t)}(uf),kf=function(e){U(t,e);var n=k(t);function t(e,r){var o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;return y(this,t),(o=n.call(this,e,r)).isRectAreaLight=!0,o.type="RectAreaLight",o.width=a,o.height=i,o}return b(t,[{key:"power",get:function(){return this.intensity*this.width*this.height*Math.PI},set:function(e){this.intensity=e/(this.width*this.height*Math.PI)}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.width=e.width,this.height=e.height,this}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return n.object.width=this.width,n.object.height=this.height,n}}]),t}(uf),Cf=function(){function e(){y(this,e),this.isSphericalHarmonics3=!0,this.coefficients=[];for(var n=0;n<9;n++)this.coefficients.push(new Lr)}return b(e,[{key:"set",value:function(e){for(var n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}},{key:"zero",value:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}},{key:"getAt",value:function(e,n){var t=e.x,r=e.y,o=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*r),n.addScaledVector(a[2],.488603*o),n.addScaledVector(a[3],.488603*t),n.addScaledVector(a[4],t*r*1.092548),n.addScaledVector(a[5],r*o*1.092548),n.addScaledVector(a[6],.315392*(3*o*o-1)),n.addScaledVector(a[7],t*o*1.092548),n.addScaledVector(a[8],.546274*(t*t-r*r)),n}},{key:"getIrradianceAt",value:function(e,n){var t=e.x,r=e.y,o=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],1.023328*r),n.addScaledVector(a[2],1.023328*o),n.addScaledVector(a[3],1.023328*t),n.addScaledVector(a[4],.858086*t*r),n.addScaledVector(a[5],.858086*r*o),n.addScaledVector(a[6],.743125*o*o-.247708),n.addScaledVector(a[7],.858086*t*o),n.addScaledVector(a[8],.429043*(t*t-r*r)),n}},{key:"add",value:function(e){for(var n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}},{key:"addScaledSH",value:function(e,n){for(var t=0;t<9;t++)this.coefficients[t].addScaledVector(e.coefficients[t],n);return this}},{key:"scale",value:function(e){for(var n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}},{key:"lerp",value:function(e,n){for(var t=0;t<9;t++)this.coefficients[t].lerp(e.coefficients[t],n);return this}},{key:"equals",value:function(e){for(var n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}},{key:"copy",value:function(e){return this.set(e.coefficients)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"fromArray",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.coefficients,r=0;r<9;r++)t[r].fromArray(e,n+3*r);return this}},{key:"toArray",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.coefficients,r=0;r<9;r++)t[r].toArray(e,n+3*r);return e}}],[{key:"getBasisAt",value:function(e,n){var t=e.x,r=e.y,o=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*o,n[3]=.488603*t,n[4]=1.092548*t*r,n[5]=1.092548*r*o,n[6]=.315392*(3*o*o-1),n[7]=1.092548*t*o,n[8]=.546274*(t*t-r*r)}}]),e}(),Tf=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Cf,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return y(this,t),(e=n.call(this,void 0,o)).isLightProbe=!0,e.sh=r,e}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.sh.copy(e.sh),this}},{key:"fromJSON",value:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return n.object.sh=this.sh.toArray(),n}}]),t}(uf),Rf=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).textures={},r}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=new rf(o.manager);a.setPath(o.path),a.setRequestHeader(o.requestHeader),a.setWithCredentials(o.withCredentials),a.load(e,(function(t){try{n(o.parse(JSON.parse(t)))}catch(a){r?r(a):console.error(a),o.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e){var n=this.textures;function r(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}var o=t.createMaterialFromType(e.type);if(void 0!==e.uuid&&(o.uuid=e.uuid),void 0!==e.name&&(o.name=e.name),void 0!==e.color&&void 0!==o.color&&o.color.setHex(e.color),void 0!==e.roughness&&(o.roughness=e.roughness),void 0!==e.metalness&&(o.metalness=e.metalness),void 0!==e.sheen&&(o.sheen=e.sheen),void 0!==e.sheenColor&&(o.sheenColor=(new wr).setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(o.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==o.emissive&&o.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==o.specular&&o.specular.setHex(e.specular),void 0!==e.specularIntensity&&(o.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==o.specularColor&&o.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(o.shininess=e.shininess),void 0!==e.clearcoat&&(o.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(o.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.iridescence&&(o.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(o.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(o.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(o.transmission=e.transmission),void 0!==e.thickness&&(o.thickness=e.thickness),void 0!==e.attenuationDistance&&(o.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==o.attenuationColor&&o.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(o.fog=e.fog),void 0!==e.flatShading&&(o.flatShading=e.flatShading),void 0!==e.blending&&(o.blending=e.blending),void 0!==e.combine&&(o.combine=e.combine),void 0!==e.side&&(o.side=e.side),void 0!==e.shadowSide&&(o.shadowSide=e.shadowSide),void 0!==e.opacity&&(o.opacity=e.opacity),void 0!==e.transparent&&(o.transparent=e.transparent),void 0!==e.alphaTest&&(o.alphaTest=e.alphaTest),void 0!==e.depthTest&&(o.depthTest=e.depthTest),void 0!==e.depthWrite&&(o.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(o.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(o.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(o.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(o.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(o.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(o.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(o.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(o.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(o.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(o.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(o.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(o.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(o.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(o.rotation=e.rotation),1!==e.linewidth&&(o.linewidth=e.linewidth),void 0!==e.dashSize&&(o.dashSize=e.dashSize),void 0!==e.gapSize&&(o.gapSize=e.gapSize),void 0!==e.scale&&(o.scale=e.scale),void 0!==e.polygonOffset&&(o.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(o.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(o.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(o.dithering=e.dithering),void 0!==e.alphaToCoverage&&(o.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(o.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.toneMapped&&(o.toneMapped=e.toneMapped),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.vertexColors&&("number"===typeof e.vertexColors?o.vertexColors=e.vertexColors>0:o.vertexColors=e.vertexColors),void 0!==e.uniforms)for(var a in e.uniforms){var i=e.uniforms[a];switch(o.uniforms[a]={},i.type){case"t":o.uniforms[a].value=r(i.value);break;case"c":o.uniforms[a].value=(new wr).setHex(i.value);break;case"v2":o.uniforms[a].value=(new ir).fromArray(i.value);break;case"v3":o.uniforms[a].value=(new Lr).fromArray(i.value);break;case"v4":o.uniforms[a].value=(new Tr).fromArray(i.value);break;case"m3":o.uniforms[a].value=(new vr).fromArray(i.value);break;case"m4":o.uniforms[a].value=(new po).fromArray(i.value);break;default:o.uniforms[a].value=i.value}}if(void 0!==e.defines&&(o.defines=e.defines),void 0!==e.vertexShader&&(o.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(o.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(o.glslVersion=e.glslVersion),void 0!==e.extensions)for(var v in e.extensions)o.extensions[v]=e.extensions[v];if(void 0!==e.size&&(o.size=e.size),void 0!==e.sizeAttenuation&&(o.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(o.map=r(e.map)),void 0!==e.matcap&&(o.matcap=r(e.matcap)),void 0!==e.alphaMap&&(o.alphaMap=r(e.alphaMap)),void 0!==e.bumpMap&&(o.bumpMap=r(e.bumpMap)),void 0!==e.bumpScale&&(o.bumpScale=e.bumpScale),void 0!==e.normalMap&&(o.normalMap=r(e.normalMap)),void 0!==e.normalMapType&&(o.normalMapType=e.normalMapType),void 0!==e.normalScale){var s=e.normalScale;!1===Array.isArray(s)&&(s=[s,s]),o.normalScale=(new ir).fromArray(s)}return void 0!==e.displacementMap&&(o.displacementMap=r(e.displacementMap)),void 0!==e.displacementScale&&(o.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(o.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(o.roughnessMap=r(e.roughnessMap)),void 0!==e.metalnessMap&&(o.metalnessMap=r(e.metalnessMap)),void 0!==e.emissiveMap&&(o.emissiveMap=r(e.emissiveMap)),void 0!==e.emissiveIntensity&&(o.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(o.specularMap=r(e.specularMap)),void 0!==e.specularIntensityMap&&(o.specularIntensityMap=r(e.specularIntensityMap)),void 0!==e.specularColorMap&&(o.specularColorMap=r(e.specularColorMap)),void 0!==e.envMap&&(o.envMap=r(e.envMap)),void 0!==e.envMapIntensity&&(o.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(o.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(o.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(o.lightMap=r(e.lightMap)),void 0!==e.lightMapIntensity&&(o.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(o.aoMap=r(e.aoMap)),void 0!==e.aoMapIntensity&&(o.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(o.gradientMap=r(e.gradientMap)),void 0!==e.clearcoatMap&&(o.clearcoatMap=r(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(o.clearcoatRoughnessMap=r(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(o.clearcoatNormalMap=r(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(o.clearcoatNormalScale=(new ir).fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(o.iridescenceMap=r(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(o.iridescenceThicknessMap=r(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(o.transmissionMap=r(e.transmissionMap)),void 0!==e.thicknessMap&&(o.thicknessMap=r(e.thicknessMap)),void 0!==e.sheenColorMap&&(o.sheenColorMap=r(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(o.sheenRoughnessMap=r(e.sheenRoughnessMap)),o}},{key:"setTextures",value:function(e){return this.textures=e,this}}],[{key:"createMaterialFromType",value:function(e){return new{ShadowMaterial:yu,SpriteMaterial:qs,RawShaderMaterial:_u,ShaderMaterial:qa,PointsMaterial:Lc,MeshPhysicalMaterial:Uu,MeshStandardMaterial:bu,MeshPhongMaterial:wu,MeshToonMaterial:Su,MeshNormalMaterial:Mu,MeshLambertMaterial:ju,MeshDepthMaterial:_s,MeshDistanceMaterial:bs,MeshBasicMaterial:Ko,MeshMatcapMaterial:ku,LineDashedMaterial:Cu,LineBasicMaterial:jc,Material:$o}[e]}}]),t}(ef),zf=function(){function e(){y(this,e)}return b(e,null,[{key:"decodeText",value:function(e){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(e);for(var n="",t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);try{return decodeURIComponent(escape(n))}catch(o){return n}}},{key:"extractUrlBase",value:function(e){var n=e.lastIndexOf("/");return-1===n?"./":e.slice(0,n+1)}},{key:"resolveURL",value:function(e,n){return"string"!==typeof e||""===e?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}}]),e}(),Pf=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isInstancedBufferGeometry=!0,e.type="InstancedBufferGeometry",e.instanceCount=1/0,e}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.instanceCount=e.instanceCount,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e=P(w(t.prototype),"toJSON",this).call(this,this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}]),t}(_a),Ff=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=new rf(o.manager);a.setPath(o.path),a.setRequestHeader(o.requestHeader),a.setWithCredentials(o.withCredentials),a.load(e,(function(t){try{n(o.parse(JSON.parse(t)))}catch(a){r?r(a):console.error(a),o.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e){var n={},t={};function r(e,r){if(void 0!==n[r])return n[r];var o=e.interleavedBuffers[r],a=function(e,n){if(void 0!==t[n])return t[n];var r=e.arrayBuffers[n],o=new Uint32Array(r).buffer;return t[n]=o,o}(e,o.buffer),i=lr(o.type,a),v=new Ns(i,o.stride);return v.uuid=o.uuid,n[r]=v,v}var o=e.isInstancedBufferGeometry?new Pf:new _a,a=e.data.index;if(void 0!==a){var i=lr(a.type,a.array);o.setIndex(new ta(i,1))}var v=e.data.attributes;for(var s in v){var c=v[s],l=void 0;if(c.isInterleavedBufferAttribute){var u=r(e.data,c.data);l=new Vs(u,c.itemSize,c.offset,c.normalized)}else{var f=lr(c.type,c.array);l=new(c.isInstancedBufferAttribute?yc:ta)(f,c.itemSize,c.normalized)}void 0!==c.name&&(l.name=c.name),void 0!==c.usage&&l.setUsage(c.usage),void 0!==c.updateRange&&(l.updateRange.offset=c.updateRange.offset,l.updateRange.count=c.updateRange.count),o.setAttribute(s,l)}var p=e.data.morphAttributes;if(p)for(var m in p){for(var d=p[m],h=[],x=0,g=d.length;x<g;x++){var y=d[x],_=void 0;if(y.isInterleavedBufferAttribute){var b=r(e.data,y.data);_=new Vs(b,y.itemSize,y.offset,y.normalized)}else{var U=lr(y.type,y.array);_=new ta(U,y.itemSize,y.normalized)}void 0!==y.name&&(_.name=y.name),h.push(_)}o.morphAttributes[m]=h}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);var w=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==w)for(var S=0,M=w.length;S!==M;++S){var j=w[S];o.addGroup(j.start,j.count,j.materialIndex)}var k=e.data.boundingSphere;if(void 0!==k){var C=new Lr;void 0!==k.center&&C.fromArray(k.center),o.boundingSphere=new oo(C,k.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}]),t}(ef),Df=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=""===this.path?zf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;var i=new rf(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(function(t){var a=null;try{a=JSON.parse(t)}catch(v){return void 0!==r&&r(v),void console.error("THREE:ObjectLoader: Can't parse "+e+".",v.message)}var i=a.metadata;void 0!==i&&void 0!==i.type&&"geometry"!==i.type.toLowerCase()?o.parse(a,n):console.error("THREE.ObjectLoader: Can't load "+e)}),t,r)}},{key:"loadAsync",value:function(){var e=R(F().mark((function e(n,t){var r,o,a,i,v,s;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this,o=""===this.path?zf.extractUrlBase(n):this.path,this.resourcePath=this.resourcePath||o,(a=new rf(this.manager)).setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),e.next=9,a.loadAsync(n,t);case 9:if(i=e.sent,v=JSON.parse(i),void 0!==(s=v.metadata)&&void 0!==s.type&&"geometry"!==s.type.toLowerCase()){e.next=14;break}throw new Error("THREE.ObjectLoader: Can't load "+n);case 14:return e.next=16,r.parseAsync(v);case 16:return e.abrupt("return",e.sent);case 17:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}()},{key:"parse",value:function(e,n){var t=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),o=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,(function(){void 0!==n&&n(s)})),i=this.parseTextures(e.textures,a),v=this.parseMaterials(e.materials,i),s=this.parseObject(e.object,o,v,i,t),c=this.parseSkeletons(e.skeletons,s);if(this.bindSkeletons(s,c),void 0!==n){var l=!1;for(var u in a)if(a[u].data instanceof HTMLImageElement){l=!0;break}!1===l&&n(s)}return s}},{key:"parseAsync",value:function(){var e=R(F().mark((function e(n){var t,r,o,a,i,v,s,c;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.parseAnimations(n.animations),r=this.parseShapes(n.shapes),o=this.parseGeometries(n.geometries,r),e.next=5,this.parseImagesAsync(n.images);case 5:return a=e.sent,i=this.parseTextures(n.textures,a),v=this.parseMaterials(n.materials,i),s=this.parseObject(n.object,o,v,i,t),c=this.parseSkeletons(n.skeletons,s),this.bindSkeletons(s,c),e.abrupt("return",s);case 12:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}()},{key:"parseShapes",value:function(e){var n={};if(void 0!==e)for(var t=0,r=e.length;t<r;t++){var o=(new Tl).fromJSON(e[t]);n[o.uuid]=o}return n}},{key:"parseSkeletons",value:function(e,n){var t={},r={};if(n.traverse((function(e){e.isBone&&(r[e.uuid]=e)})),void 0!==e)for(var o=0,a=e.length;o<a;o++){var i=(new gc).fromJSON(e[o],r);t[i.uuid]=i}return t}},{key:"parseGeometries",value:function(e,n){var t={};if(void 0!==e)for(var r=new Ff,o=0,a=e.length;o<a;o++){var i=void 0,v=e[o];switch(v.type){case"BufferGeometry":case"InstancedBufferGeometry":i=r.parse(v);break;default:v.type in gu?i=gu[v.type].fromJSON(v,n):console.warn('THREE.ObjectLoader: Unsupported geometry type "'.concat(v.type,'"'))}i.uuid=v.uuid,void 0!==v.name&&(i.name=v.name),!0===i.isBufferGeometry&&void 0!==v.userData&&(i.userData=v.userData),t[v.uuid]=i}return t}},{key:"parseMaterials",value:function(e,n){var t={},r={};if(void 0!==e){var o=new Rf;o.setTextures(n);for(var a=0,i=e.length;a<i;a++){var v=e[a];void 0===t[v.uuid]&&(t[v.uuid]=o.parse(v)),r[v.uuid]=t[v.uuid]}}return r}},{key:"parseAnimations",value:function(e){var n={};if(void 0!==e)for(var t=0;t<e.length;t++){var r=e[t],o=Yu.parse(r);n[o.uuid]=o}return n}},{key:"parseImages",value:function(e,n){var t,r=this,o={};function a(e){if("string"===typeof e){var n=e;return function(e){return r.manager.itemStart(e),t.load(e,(function(){r.manager.itemEnd(e)}),void 0,(function(){r.manager.itemError(e),r.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:r.resourcePath+n)}return e.data?{data:lr(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){var i=new $u(n);(t=new vf(i)).setCrossOrigin(this.crossOrigin);for(var v=0,s=e.length;v<s;v++){var c=e[v],l=c.url;if(Array.isArray(l)){for(var u=[],f=0,p=l.length;f<p;f++){var m=a(l[f]);null!==m&&(m instanceof HTMLImageElement?u.push(m):u.push(new dc(m.data,m.width,m.height)))}o[c.uuid]=new Mr(u)}else{var d=a(c.url);o[c.uuid]=new Mr(d)}}}return o}},{key:"parseImagesAsync",value:function(){var e=R(F().mark((function e(n){var t,r,o,a,i,v,s,c,l,u,f,p,m,d,h;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=function(){return i=R(F().mark((function e(n){var r,a;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("string"!==typeof n){e.next=8;break}return a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r=n)?r:t.resourcePath+r,e.next=5,o.loadAsync(a);case 5:return e.abrupt("return",e.sent);case 8:if(!n.data){e.next=12;break}return e.abrupt("return",{data:lr(n.type,n.data),width:n.width,height:n.height});case 12:return e.abrupt("return",null);case 13:case"end":return e.stop()}}),e)}))),i.apply(this,arguments)},a=function(e){return i.apply(this,arguments)},t=this,r={},!(void 0!==n&&n.length>0)){e.next=33;break}(o=new vf(this.manager)).setCrossOrigin(this.crossOrigin),v=0,s=n.length;case 8:if(!(v<s)){e.next=33;break}if(c=n[v],l=c.url,!Array.isArray(l)){e.next=26;break}u=[],f=0,p=l.length;case 14:if(!(f<p)){e.next=23;break}return m=l[f],e.next=18,a(m);case 18:null!==(d=e.sent)&&(d instanceof HTMLImageElement?u.push(d):u.push(new dc(d.data,d.width,d.height)));case 20:f++,e.next=14;break;case 23:r[c.uuid]=new Mr(u),e.next=30;break;case 26:return e.next=28,a(c.url);case 28:h=e.sent,r[c.uuid]=new Mr(h);case 30:v++,e.next=8;break;case 33:return e.abrupt("return",r);case 34:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}()},{key:"parseTextures",value:function(e,n){function t(e,n){return"number"===typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),n[e])}var r={};if(void 0!==e)for(var o=0,a=e.length;o<a;o++){var i=e[o];void 0===i.image&&console.warn('THREE.ObjectLoader: No "image" specified for',i.uuid),void 0===n[i.image]&&console.warn("THREE.ObjectLoader: Undefined image",i.image);var v=n[i.image],s=v.data,c=void 0;Array.isArray(s)?(c=new Za,6===s.length&&(c.needsUpdate=!0)):(c=s&&s.data?new dc:new Cr,s&&(c.needsUpdate=!0)),c.source=v,c.uuid=i.uuid,void 0!==i.name&&(c.name=i.name),void 0!==i.mapping&&(c.mapping=t(i.mapping,Ef)),void 0!==i.offset&&c.offset.fromArray(i.offset),void 0!==i.repeat&&c.repeat.fromArray(i.repeat),void 0!==i.center&&c.center.fromArray(i.center),void 0!==i.rotation&&(c.rotation=i.rotation),void 0!==i.wrap&&(c.wrapS=t(i.wrap[0],If),c.wrapT=t(i.wrap[1],If)),void 0!==i.format&&(c.format=i.format),void 0!==i.type&&(c.type=i.type),void 0!==i.encoding&&(c.encoding=i.encoding),void 0!==i.minFilter&&(c.minFilter=t(i.minFilter,Lf)),void 0!==i.magFilter&&(c.magFilter=t(i.magFilter,Lf)),void 0!==i.anisotropy&&(c.anisotropy=i.anisotropy),void 0!==i.flipY&&(c.flipY=i.flipY),void 0!==i.premultiplyAlpha&&(c.premultiplyAlpha=i.premultiplyAlpha),void 0!==i.unpackAlignment&&(c.unpackAlignment=i.unpackAlignment),void 0!==i.userData&&(c.userData=i.userData),r[i.uuid]=c}return r}},{key:"parseObject",value:function(e,n,t,r,o){var a,i,v;function s(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),n[e]}function c(e){if(void 0!==e){if(Array.isArray(e)){for(var n=[],r=0,o=e.length;r<o;r++){var a=e[r];void 0===t[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),n.push(t[a])}return n}return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),t[e]}}function l(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}switch(e.type){case"Scene":a=new Bs,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new wr(e.background):a.background=l(e.background)),void 0!==e.environment&&(a.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new Os(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new As(e.fog.color,e.fog.density))),void 0!==e.backgroundBlurriness&&(a.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":a=new Ha(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new hi(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new jf(e.color,e.intensity);break;case"DirectionalLight":a=new Mf(e.color,e.intensity);break;case"PointLight":a=new wf(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new kf(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new gf(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new ff(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=(new Tf).fromJSON(e);break;case"SkinnedMesh":i=s(e.geometry),v=c(e.material),a=new pc(i,v),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":i=s(e.geometry),v=c(e.material),a=new Aa(i,v);break;case"InstancedMesh":i=s(e.geometry),v=c(e.material);var u=e.count,f=e.instanceMatrix,p=e.instanceColor;(a=new Mc(i,v,u)).instanceMatrix=new yc(new Float32Array(f.array),16),void 0!==p&&(a.instanceColor=new yc(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new vc;break;case"Line":a=new Pc(s(e.geometry),c(e.material));break;case"LineLoop":a=new Ic(s(e.geometry),c(e.material));break;case"LineSegments":a=new Ec(s(e.geometry),c(e.material));break;case"PointCloud":case"Points":a=new Gc(s(e.geometry),c(e.material));break;case"Sprite":a=new rc(c(e.material));break;case"Group":a=new ks;break;case"Bone":a=new mc;break;default:a=new Oo}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children)for(var m=e.children,d=0;d<m.length;d++)a.add(this.parseObject(m[d],n,t,r,o));if(void 0!==e.animations)for(var h=e.animations,x=0;x<h.length;x++){var g=h[x];a.animations.push(o[g])}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);for(var y=e.levels,_=0;_<y.length;_++){var b=y[_],U=a.getObjectByProperty("uuid",b.object);void 0!==U&&a.addLevel(U,b.distance)}}return a}},{key:"bindSkeletons",value:function(e,n){0!==Object.keys(n).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){var t=n[e.skeleton];void 0===t?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix)}}))}}]),t}(ef),Ef={UVMapping:Fe,CubeReflectionMapping:De,CubeRefractionMapping:Ee,EquirectangularReflectionMapping:Ie,EquirectangularRefractionMapping:Le,CubeUVReflectionMapping:Ae},If={RepeatWrapping:Oe,ClampToEdgeWrapping:Be,MirroredRepeatWrapping:Ne},Lf={NearestFilter:Ge,NearestMipmapNearestFilter:Ve,NearestMipmapLinearFilter:We,LinearFilter:Xe,LinearMipmapNearestFilter:Ye,LinearMipmapLinearFilter:Qe},Af=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).isImageBitmapLoader=!0,"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),r.options={premultiplyAlpha:"none"},r}return b(t,[{key:"setOptions",value:function(e){return this.options=e,this}},{key:"load",value:function(e,n,t,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,a=Ju.get(e);if(void 0!==a)return o.manager.itemStart(e),setTimeout((function(){n&&n(a),o.manager.itemEnd(e)}),0),a;var i={};i.credentials="anonymous"===this.crossOrigin?"same-origin":"include",i.headers=this.requestHeader,fetch(e,i).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(o.options,{colorSpaceConversion:"none"}))})).then((function(t){Ju.add(e,t),n&&n(t),o.manager.itemEnd(e)})).catch((function(n){r&&r(n),o.manager.itemError(e),o.manager.itemEnd(e)})),o.manager.itemStart(e)}}]),t}(ef),Of=function(){function e(){y(this,e)}return b(e,null,[{key:"getContext",value:function(){return void 0===Qu&&(Qu=new(window.AudioContext||window.webkitAudioContext)),Qu}},{key:"setContext",value:function(e){Qu=e}}]),e}(),Bf=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=new rf(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(t){try{var a=t.slice(0);Of.getContext().decodeAudioData(a,(function(e){n(e)}))}catch(i){r?r(i):console.error(i),o.manager.itemError(e)}}),t,r)}}]),t}(ef),Nf=function(e){U(t,e);var n=k(t);function t(e,r){var o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;y(this,t),(o=n.call(this,void 0,a)).isHemisphereLightProbe=!0;var i=(new wr).set(e),v=(new wr).set(r),s=new Lr(i.r,i.g,i.b),c=new Lr(v.r,v.g,v.b),l=Math.sqrt(Math.PI),u=l*Math.sqrt(.75);return o.sh.coefficients[0].copy(s).add(c).multiplyScalar(l),o.sh.coefficients[1].copy(s).sub(c).multiplyScalar(u),o}return b(t)}(Tf),Gf=function(e){U(t,e);var n=k(t);function t(e){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;y(this,t),(r=n.call(this,void 0,o)).isAmbientLightProbe=!0;var a=(new wr).set(e);return r.sh.coefficients[0].set(a.r,a.g,a.b).multiplyScalar(2*Math.sqrt(Math.PI)),r}return b(t)}(Tf),Vf=new po,qf=new po,Wf=new po,Hf=function(){function e(){y(this,e),this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ha,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ha,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}return b(e,[{key:"update",value:function(e){var n=this._cache;if(n.focus!==e.focus||n.fov!==e.fov||n.aspect!==e.aspect*this.aspect||n.near!==e.near||n.far!==e.far||n.zoom!==e.zoom||n.eyeSep!==this.eyeSep){n.focus=e.focus,n.fov=e.fov,n.aspect=e.aspect*this.aspect,n.near=e.near,n.far=e.far,n.zoom=e.zoom,n.eyeSep=this.eyeSep,Wf.copy(e.projectionMatrix);var t,r,o=n.eyeSep/2,a=o*n.near/n.focus,i=n.near*Math.tan(Yt*n.fov*.5)/n.zoom;qf.elements[12]=-o,Vf.elements[12]=o,t=-i*n.aspect+a,r=i*n.aspect+a,Wf.elements[0]=2*n.near/(r-t),Wf.elements[8]=(r+t)/(r-t),this.cameraL.projectionMatrix.copy(Wf),t=-i*n.aspect-a,r=i*n.aspect-a,Wf.elements[0]=2*n.near/(r-t),Wf.elements[8]=(r+t)/(r-t),this.cameraR.projectionMatrix.copy(Wf)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(qf),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Vf)}}]),e}(),Xf=function(){function e(){var n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];y(this,e),this.autoStart=n,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}return b(e,[{key:"start",value:function(){this.startTime=Yf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}},{key:"stop",value:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}},{key:"getElapsedTime",value:function(){return this.getDelta(),this.elapsedTime}},{key:"getDelta",value:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var n=Yf();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}}]),e}();function Yf(){return("undefined"===typeof performance?Date:performance).now()}var Zf=new Lr,Qf=new Ir,Jf=new Lr,$f=new Lr,Kf=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).type="AudioListener",e.context=Of.getContext(),e.gain=e.context.createGain(),e.gain.connect(e.context.destination),e.filter=null,e.timeDelta=0,e._clock=new Xf,e}return b(t,[{key:"getInput",value:function(){return this.gain}},{key:"removeFilter",value:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}},{key:"getFilter",value:function(){return this.filter}},{key:"setFilter",value:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}},{key:"getMasterVolume",value:function(){return this.gain.gain.value}},{key:"setMasterVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}},{key:"updateMatrixWorld",value:function(e){P(w(t.prototype),"updateMatrixWorld",this).call(this,e);var n=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Zf,Qf,Jf),$f.set(0,0,-1).applyQuaternion(Qf),n.positionX){var o=this.context.currentTime+this.timeDelta;n.positionX.linearRampToValueAtTime(Zf.x,o),n.positionY.linearRampToValueAtTime(Zf.y,o),n.positionZ.linearRampToValueAtTime(Zf.z,o),n.forwardX.linearRampToValueAtTime($f.x,o),n.forwardY.linearRampToValueAtTime($f.y,o),n.forwardZ.linearRampToValueAtTime($f.z,o),n.upX.linearRampToValueAtTime(r.x,o),n.upY.linearRampToValueAtTime(r.y,o),n.upZ.linearRampToValueAtTime(r.z,o)}else n.setPosition(Zf.x,Zf.y,Zf.z),n.setOrientation($f.x,$f.y,$f.z,r.x,r.y,r.z)}}]),t}(Oo),ep=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).type="Audio",r.listener=e,r.context=e.context,r.gain=r.context.createGain(),r.gain.connect(e.getInput()),r.autoplay=!1,r.buffer=null,r.detune=0,r.loop=!1,r.loopStart=0,r.loopEnd=0,r.offset=0,r.duration=void 0,r.playbackRate=1,r.isPlaying=!1,r.hasPlaybackControl=!0,r.source=null,r.sourceType="empty",r._startedAt=0,r._progress=0,r._connected=!1,r.filters=[],r}return b(t,[{key:"getOutput",value:function(){return this.gain}},{key:"setNodeSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}},{key:"setMediaElementSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}},{key:"setMediaStreamSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}},{key:"setBuffer",value:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;var n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}},{key:"pause",value:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"stop",value:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"connect",value:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}},{key:"disconnect",value:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}},{key:"getFilters",value:function(){return this.filters}},{key:"setFilters",value:function(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}},{key:"setDetune",value:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}},{key:"getDetune",value:function(){return this.detune}},{key:"getFilter",value:function(){return this.getFilters()[0]}},{key:"setFilter",value:function(e){return this.setFilters(e?[e]:[])}},{key:"setPlaybackRate",value:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"getPlaybackRate",value:function(){return this.playbackRate}},{key:"onEnded",value:function(){this.isPlaying=!1}},{key:"getLoop",value:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}},{key:"setLoop",value:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"setLoopStart",value:function(e){return this.loopStart=e,this}},{key:"setLoopEnd",value:function(e){return this.loopEnd=e,this}},{key:"getVolume",value:function(){return this.gain.gain.value}},{key:"setVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}]),t}(Oo),np=new Lr,tp=new Ir,rp=new Lr,op=new Lr,ap=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).panner=r.context.createPanner(),r.panner.panningModel="HRTF",r.panner.connect(r.gain),r}return b(t,[{key:"disconnect",value:function(){P(w(t.prototype),"disconnect",this).call(this),this.panner.disconnect(this.gain)}},{key:"getOutput",value:function(){return this.panner}},{key:"getRefDistance",value:function(){return this.panner.refDistance}},{key:"setRefDistance",value:function(e){return this.panner.refDistance=e,this}},{key:"getRolloffFactor",value:function(){return this.panner.rolloffFactor}},{key:"setRolloffFactor",value:function(e){return this.panner.rolloffFactor=e,this}},{key:"getDistanceModel",value:function(){return this.panner.distanceModel}},{key:"setDistanceModel",value:function(e){return this.panner.distanceModel=e,this}},{key:"getMaxDistance",value:function(){return this.panner.maxDistance}},{key:"setMaxDistance",value:function(e){return this.panner.maxDistance=e,this}},{key:"setDirectionalCone",value:function(e,n,t){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=n,this.panner.coneOuterGain=t,this}},{key:"updateMatrixWorld",value:function(e){if(P(w(t.prototype),"updateMatrixWorld",this).call(this,e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(np,tp,rp),op.set(0,0,1).applyQuaternion(tp);var n=this.panner;if(n.positionX){var r=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(np.x,r),n.positionY.linearRampToValueAtTime(np.y,r),n.positionZ.linearRampToValueAtTime(np.z,r),n.orientationX.linearRampToValueAtTime(op.x,r),n.orientationY.linearRampToValueAtTime(op.y,r),n.orientationZ.linearRampToValueAtTime(op.z,r)}else n.setPosition(np.x,np.y,np.z),n.setOrientation(op.x,op.y,op.z)}}}]),t}(ep),ip=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2048;y(this,e),this.analyser=n.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),n.getOutput().connect(this.analyser)}return b(e,[{key:"getFrequencyData",value:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},{key:"getAverageFrequency",value:function(){for(var e=0,n=this.getFrequencyData(),t=0;t<n.length;t++)e+=n[t];return e/n.length}}]),e}(),vp=function(){function e(n,t,r){var o,a,i;switch(y(this,e),this.binding=n,this.valueSize=r,t){case"quaternion":o=this._slerp,a=this._slerpAdditive,i=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":o=this._select,a=this._select,i=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:o=this._lerp,a=this._lerpAdditive,i=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=o,this._mixBufferRegionAdditive=a,this._setIdentity=i,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}return b(e,[{key:"accumulate",value:function(e,n){var t=this.buffer,r=this.valueSize,o=e*r+r,a=this.cumulativeWeight;if(0===a){for(var i=0;i!==r;++i)t[o+i]=t[i];a=n}else{var v=n/(a+=n);this._mixBufferRegion(t,o,0,v,r)}this.cumulativeWeight=a}},{key:"accumulateAdditive",value:function(e){var n=this.buffer,t=this.valueSize,r=t*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(n,r,0,e,t),this.cumulativeWeightAdditive+=e}},{key:"apply",value:function(e){var n=this.valueSize,t=this.buffer,r=e*n+n,o=this.cumulativeWeight,a=this.cumulativeWeightAdditive,i=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){var v=n*this._origIndex;this._mixBufferRegion(t,r,v,1-o,n)}a>0&&this._mixBufferRegionAdditive(t,r,this._addIndex*n,1,n);for(var s=n,c=n+n;s!==c;++s)if(t[s]!==t[s+n]){i.setValue(t,r);break}}},{key:"saveOriginalState",value:function(){var e=this.binding,n=this.buffer,t=this.valueSize,r=t*this._origIndex;e.getValue(n,r);for(var o=t,a=r;o!==a;++o)n[o]=n[r+o%t];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}},{key:"restoreOriginalState",value:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}},{key:"_setAdditiveIdentityNumeric",value:function(){for(var e=this._addIndex*this.valueSize,n=e+this.valueSize,t=e;t<n;t++)this.buffer[t]=0}},{key:"_setAdditiveIdentityQuaternion",value:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}},{key:"_setAdditiveIdentityOther",value:function(){for(var e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize,t=0;t<this.valueSize;t++)this.buffer[n+t]=this.buffer[e+t]}},{key:"_select",value:function(e,n,t,r,o){if(r>=.5)for(var a=0;a!==o;++a)e[n+a]=e[t+a]}},{key:"_slerp",value:function(e,n,t,r){Ir.slerpFlat(e,n,e,n,e,t,r)}},{key:"_slerpAdditive",value:function(e,n,t,r,o){var a=this._workIndex*o;Ir.multiplyQuaternionsFlat(e,a,e,n,e,t),Ir.slerpFlat(e,n,e,n,e,a,r)}},{key:"_lerp",value:function(e,n,t,r,o){for(var a=1-r,i=0;i!==o;++i){var v=n+i;e[v]=e[v]*a+e[t+i]*r}}},{key:"_lerpAdditive",value:function(e,n,t,r,o){for(var a=0;a!==o;++a){var i=n+a;e[i]=e[i]+e[t+a]*r}}}]),e}(),sp="\\[\\]\\.:\\/",cp=new RegExp("[\\[\\]\\.:\\/]","g"),lp="[^\\[\\]\\.:\\/]",up="[^"+sp.replace("\\.","")+"]",fp=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",lp)+/(WCOD+)?/.source.replace("WCOD",up)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",lp)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",lp)+"$"),pp=["material","materials","bones","map"],mp=function(){function e(n,t,r){y(this,e);var o=r||dp.parseTrackName(t);this._targetGroup=n,this._bindings=n.subscribe_(t,o)}return b(e,[{key:"getValue",value:function(e,n){this.bind();var t=this._targetGroup.nCachedObjects_,r=this._bindings[t];void 0!==r&&r.getValue(e,n)}},{key:"setValue",value:function(e,n){for(var t=this._bindings,r=this._targetGroup.nCachedObjects_,o=t.length;r!==o;++r)t[r].setValue(e,n)}},{key:"bind",value:function(){for(var e=this._bindings,n=this._targetGroup.nCachedObjects_,t=e.length;n!==t;++n)e[n].bind()}},{key:"unbind",value:function(){for(var e=this._bindings,n=this._targetGroup.nCachedObjects_,t=e.length;n!==t;++n)e[n].unbind()}}]),e}(),dp=function(){function e(n,t,r){y(this,e),this.path=t,this.parsedPath=r||e.parseTrackName(t),this.node=e.findNode(n,this.parsedPath.nodeName)||n,this.rootNode=n,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}return b(e,[{key:"_getValue_unavailable",value:function(){}},{key:"_setValue_unavailable",value:function(){}},{key:"_getValue_direct",value:function(e,n){e[n]=this.targetObject[this.propertyName]}},{key:"_getValue_array",value:function(e,n){for(var t=this.resolvedProperty,r=0,o=t.length;r!==o;++r)e[n++]=t[r]}},{key:"_getValue_arrayElement",value:function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]}},{key:"_getValue_toArray",value:function(e,n){this.resolvedProperty.toArray(e,n)}},{key:"_setValue_direct",value:function(e,n){this.targetObject[this.propertyName]=e[n]}},{key:"_setValue_direct_setNeedsUpdate",value:function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0}},{key:"_setValue_direct_setMatrixWorldNeedsUpdate",value:function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_array",value:function(e,n){for(var t=this.resolvedProperty,r=0,o=t.length;r!==o;++r)t[r]=e[n++]}},{key:"_setValue_array_setNeedsUpdate",value:function(e,n){for(var t=this.resolvedProperty,r=0,o=t.length;r!==o;++r)t[r]=e[n++];this.targetObject.needsUpdate=!0}},{key:"_setValue_array_setMatrixWorldNeedsUpdate",value:function(e,n){for(var t=this.resolvedProperty,r=0,o=t.length;r!==o;++r)t[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_arrayElement",value:function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]}},{key:"_setValue_arrayElement_setNeedsUpdate",value:function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0}},{key:"_setValue_arrayElement_setMatrixWorldNeedsUpdate",value:function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_fromArray",value:function(e,n){this.resolvedProperty.fromArray(e,n)}},{key:"_setValue_fromArray_setNeedsUpdate",value:function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0}},{key:"_setValue_fromArray_setMatrixWorldNeedsUpdate",value:function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_getValue_unbound",value:function(e,n){this.bind(),this.getValue(e,n)}},{key:"_setValue_unbound",value:function(e,n){this.bind(),this.setValue(e,n)}},{key:"bind",value:function(){var n=this.node,t=this.parsedPath,r=t.objectName,o=t.propertyName,a=t.propertyIndex;if(n||(n=e.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(r){var i=t.objectIndex;switch(r){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(var v=0;v<n.length;v++)if(n[v].name===i){i=v;break}break;case"map":if("map"in n){n=n.map;break}if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);n=n.material.map;break;default:if(void 0===n[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[r]}if(void 0!==i){if(void 0===n[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[i]}}var s=n[o];if(void 0!==s){var c=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);var l=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===o){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[a]&&(a=n.morphTargetDictionary[a])}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=o;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][c]}else{var u=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+u+"."+o+" but it wasn't found.",n)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}},{key:"unbind",value:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}],[{key:"create",value:function(n,t,r){return n&&n.isAnimationObjectGroup?new e.Composite(n,t,r):new e(n,t,r)}},{key:"sanitizeNodeName",value:function(e){return e.replace(/\s/g,"_").replace(cp,"")}},{key:"parseTrackName",value:function(e){var n=fp.exec(e);if(null===n)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var t={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},r=t.nodeName&&t.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var o=t.nodeName.substring(r+1);-1!==pp.indexOf(o)&&(t.nodeName=t.nodeName.substring(0,r),t.objectName=o)}if(null===t.propertyName||0===t.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return t}},{key:"findNode",value:function(e,n){if(void 0===n||""===n||"."===n||-1===n||n===e.name||n===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(n);if(void 0!==t)return t}if(e.children){var r=function e(t){for(var r=0;r<t.length;r++){var o=t[r];if(o.name===n||o.uuid===n)return o;var a=e(o.children);if(a)return a}return null}(e.children);if(r)return r}return null}}]),e}();dp.Composite=mp,dp.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},dp.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},dp.prototype.GetterByBindingType=[dp.prototype._getValue_direct,dp.prototype._getValue_array,dp.prototype._getValue_arrayElement,dp.prototype._getValue_toArray],dp.prototype.SetterByBindingTypeAndVersioning=[[dp.prototype._setValue_direct,dp.prototype._setValue_direct_setNeedsUpdate,dp.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[dp.prototype._setValue_array,dp.prototype._setValue_array_setNeedsUpdate,dp.prototype._setValue_array_setMatrixWorldNeedsUpdate],[dp.prototype._setValue_arrayElement,dp.prototype._setValue_arrayElement_setNeedsUpdate,dp.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[dp.prototype._setValue_fromArray,dp.prototype._setValue_fromArray_setNeedsUpdate,dp.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var hp=function(){function e(){y(this,e),this.isAnimationObjectGroup=!0,this.uuid=Qt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var n={};this._indicesByUUID=n;for(var t=0,r=arguments.length;t!==r;++t)n[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var o=this;this.stats={objects:{get total(){return o._objects.length},get inUse(){return this.total-o.nCachedObjects_}},get bindingsPerObject(){return o._bindings.length}}}return b(e,[{key:"add",value:function(){for(var e=this._objects,n=this._indicesByUUID,t=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length,i=void 0,v=e.length,s=this.nCachedObjects_,c=0,l=arguments.length;c!==l;++c){var u=arguments[c],f=u.uuid,p=n[f];if(void 0===p){p=v++,n[f]=p,e.push(u);for(var m=0,d=a;m!==d;++m)o[m].push(new dp(u,t[m],r[m]))}else if(p<s){i=e[p];var h=--s,x=e[h];n[x.uuid]=p,e[p]=x,n[f]=h,e[h]=u;for(var g=0,y=a;g!==y;++g){var _=o[g],b=_[h],U=_[p];_[p]=b,void 0===U&&(U=new dp(u,t[g],r[g])),_[h]=U}}else e[p]!==i&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=s}},{key:"remove",value:function(){for(var e=this._objects,n=this._indicesByUUID,t=this._bindings,r=t.length,o=this.nCachedObjects_,a=0,i=arguments.length;a!==i;++a){var v=arguments[a],s=v.uuid,c=n[s];if(void 0!==c&&c>=o){var l=o++,u=e[l];n[u.uuid]=c,e[c]=u,n[s]=l,e[l]=v;for(var f=0,p=r;f!==p;++f){var m=t[f],d=m[l],h=m[c];m[c]=d,m[l]=h}}}this.nCachedObjects_=o}},{key:"uncache",value:function(){for(var e=this._objects,n=this._indicesByUUID,t=this._bindings,r=t.length,o=this.nCachedObjects_,a=e.length,i=0,v=arguments.length;i!==v;++i){var s=arguments[i],c=s.uuid,l=n[c];if(void 0!==l)if(delete n[c],l<o){var u=--o,f=e[u],p=--a,m=e[p];n[f.uuid]=l,e[l]=f,n[m.uuid]=u,e[u]=m,e.pop();for(var d=0,h=r;d!==h;++d){var x=t[d],g=x[u],y=x[p];x[l]=g,x[u]=y,x.pop()}}else{var _=--a,b=e[_];_>0&&(n[b.uuid]=l),e[l]=b,e.pop();for(var U=0,w=r;U!==w;++U){var S=t[U];S[l]=S[_],S.pop()}}}this.nCachedObjects_=o}},{key:"subscribe_",value:function(e,n){var t=this._bindingsIndicesByPath,r=t[e],o=this._bindings;if(void 0!==r)return o[r];var a=this._paths,i=this._parsedPaths,v=this._objects,s=v.length,c=this.nCachedObjects_,l=new Array(s);r=o.length,t[e]=r,a.push(e),i.push(n),o.push(l);for(var u=c,f=v.length;u!==f;++u){var p=v[u];l[u]=new dp(p,e,n)}return l}},{key:"unsubscribe_",value:function(e){var n=this._bindingsIndicesByPath,t=n[e];if(void 0!==t){var r=this._paths,o=this._parsedPaths,a=this._bindings,i=a.length-1,v=a[i];n[e[i]]=t,a[t]=v,a.pop(),o[t]=o[i],o.pop(),r[t]=r[i],r.pop()}}}]),e}(),xp=function(){function e(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.blendMode;y(this,e),this._mixer=n,this._clip=t,this._localRoot=r,this.blendMode=o;for(var a=t.tracks,i=a.length,v=new Array(i),s={endingStart:et,endingEnd:et},c=0;c!==i;++c){var l=a[c].createInterpolant(null);v[c]=l,l.settings=s}this._interpolantSettings=s,this._interpolants=v,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Zn,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}return b(e,[{key:"play",value:function(){return this._mixer._activateAction(this),this}},{key:"stop",value:function(){return this._mixer._deactivateAction(this),this.reset()}},{key:"reset",value:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}},{key:"isRunning",value:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}},{key:"isScheduled",value:function(){return this._mixer._isActiveAction(this)}},{key:"startAt",value:function(e){return this._startTime=e,this}},{key:"setLoop",value:function(e,n){return this.loop=e,this.repetitions=n,this}},{key:"setEffectiveWeight",value:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}},{key:"getEffectiveWeight",value:function(){return this._effectiveWeight}},{key:"fadeIn",value:function(e){return this._scheduleFading(e,0,1)}},{key:"fadeOut",value:function(e){return this._scheduleFading(e,1,0)}},{key:"crossFadeFrom",value:function(e,n,t){if(e.fadeOut(n),this.fadeIn(n),t){var r=this._clip.duration,o=e._clip.duration,a=o/r,i=r/o;e.warp(1,a,n),this.warp(i,1,n)}return this}},{key:"crossFadeTo",value:function(e,n,t){return e.crossFadeFrom(this,n,t)}},{key:"stopFading",value:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"setEffectiveTimeScale",value:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}},{key:"getEffectiveTimeScale",value:function(){return this._effectiveTimeScale}},{key:"setDuration",value:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}},{key:"syncWith",value:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}},{key:"halt",value:function(e){return this.warp(this._effectiveTimeScale,0,e)}},{key:"warp",value:function(e,n,t){var r=this._mixer,o=r.time,a=this.timeScale,i=this._timeScaleInterpolant;null===i&&(i=r._lendControlInterpolant(),this._timeScaleInterpolant=i);var v=i.parameterPositions,s=i.sampleValues;return v[0]=o,v[1]=o+t,s[0]=e/a,s[1]=n/a,this}},{key:"stopWarping",value:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"getMixer",value:function(){return this._mixer}},{key:"getClip",value:function(){return this._clip}},{key:"getRoot",value:function(){return this._localRoot||this._mixer._root}},{key:"_update",value:function(e,n,t,r){if(this.enabled){var o=this._startTime;if(null!==o){var a=(e-o)*t;a<0||0===t?n=0:(this._startTime=null,n=t*a)}n*=this._updateTimeScale(e);var i=this._updateTime(n),v=this._updateWeight(e);if(v>0){var s=this._interpolants,c=this._propertyBindings;if(this.blendMode===ot)for(var l=0,u=s.length;l!==u;++l)s[l].evaluate(i),c[l].accumulateAdditive(v);else for(var f=0,p=s.length;f!==p;++f)s[f].evaluate(i),c[f].accumulate(r,v)}}else this._updateWeight(e)}},{key:"_updateWeight",value:function(e){var n=0;if(this.enabled){n=this.weight;var t=this._weightInterpolant;if(null!==t){var r=t.evaluate(e)[0];n*=r,e>t.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=n,n}},{key:"_updateTimeScale",value:function(e){var n=0;if(!this.paused){n=this.timeScale;var t=this._timeScaleInterpolant;if(null!==t)n*=t.evaluate(e)[0],e>t.parameterPositions[1]&&(this.stopWarping(),0===n?this.paused=!0:this.timeScale=n)}return this._effectiveTimeScale=n,n}},{key:"_updateTime",value:function(e){var n=this._clip.duration,t=this.loop,r=this.time+e,o=this._loopCount,a=t===Qn;if(0===e)return-1===o?r:a&&1===(1&o)?n-r:r;if(t===Yn){-1===o&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===o&&(e>=0?(o=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=n||r<0){var i=Math.floor(r/n);r-=n*i,o+=Math.abs(i);var v=this.repetitions-o;if(v<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===v){var s=e<0;this._setEndings(s,!s,a)}else this._setEndings(!1,!1,a);this._loopCount=o,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=r;if(a&&1===(1&o))return n-r}return r}},{key:"_setEndings",value:function(e,n,t){var r=this._interpolantSettings;t?(r.endingStart=nt,r.endingEnd=nt):(r.endingStart=e?this.zeroSlopeAtStart?nt:et:tt,r.endingEnd=n?this.zeroSlopeAtEnd?nt:et:tt)}},{key:"_scheduleFading",value:function(e,n,t){var r=this._mixer,o=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var i=a.parameterPositions,v=a.sampleValues;return i[0]=o,v[0]=n,i[1]=o+e,v[1]=t,this}}]),e}(),gp=new Float32Array(1),yp=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this))._root=e,r._initMemoryManager(),r._accuIndex=0,r.time=0,r.timeScale=1,r}return b(t,[{key:"_bindAction",value:function(e,n){var t=e._localRoot||this._root,r=e._clip.tracks,o=r.length,a=e._propertyBindings,i=e._interpolants,v=t.uuid,s=this._bindingsByRootAndName,c=s[v];void 0===c&&(c={},s[v]=c);for(var l=0;l!==o;++l){var u=r[l],f=u.name,p=c[f];if(void 0!==p)++p.referenceCount,a[l]=p;else{if(void 0!==(p=a[l])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,v,f));continue}var m=n&&n._propertyBindings[l].binding.parsedPath;++(p=new vp(dp.create(t,f,m),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(p,v,f),a[l]=p}i[l].resultBuffer=p.buffer}}},{key:"_activateAction",value:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var n=(e._localRoot||this._root).uuid,t=e._clip.uuid,r=this._actionsByClip[t];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,t,n)}for(var o=e._propertyBindings,a=0,i=o.length;a!==i;++a){var v=o[a];0===v.useCount++&&(this._lendBinding(v),v.saveOriginalState())}this._lendAction(e)}}},{key:"_deactivateAction",value:function(e){if(this._isActiveAction(e)){for(var n=e._propertyBindings,t=0,r=n.length;t!==r;++t){var o=n[t];0===--o.useCount&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(e)}}},{key:"_initMemoryManager",value:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}},{key:"_isActiveAction",value:function(e){var n=e._cacheIndex;return null!==n&&n<this._nActiveActions}},{key:"_addInactiveAction",value:function(e,n,t){var r=this._actions,o=this._actionsByClip,a=o[n];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,o[n]=a;else{var i=a.knownActions;e._byClipCacheIndex=i.length,i.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[t]=e}},{key:"_removeInactiveAction",value:function(e){var n=this._actions,t=n[n.length-1],r=e._cacheIndex;t._cacheIndex=r,n[r]=t,n.pop(),e._cacheIndex=null;var o=e._clip.uuid,a=this._actionsByClip,i=a[o],v=i.knownActions,s=v[v.length-1],c=e._byClipCacheIndex;s._byClipCacheIndex=c,v[c]=s,v.pop(),e._byClipCacheIndex=null,delete i.actionByRoot[(e._localRoot||this._root).uuid],0===v.length&&delete a[o],this._removeInactiveBindingsForAction(e)}},{key:"_removeInactiveBindingsForAction",value:function(e){for(var n=e._propertyBindings,t=0,r=n.length;t!==r;++t){var o=n[t];0===--o.referenceCount&&this._removeInactiveBinding(o)}}},{key:"_lendAction",value:function(e){var n=this._actions,t=e._cacheIndex,r=this._nActiveActions++,o=n[r];e._cacheIndex=r,n[r]=e,o._cacheIndex=t,n[t]=o}},{key:"_takeBackAction",value:function(e){var n=this._actions,t=e._cacheIndex,r=--this._nActiveActions,o=n[r];e._cacheIndex=r,n[r]=e,o._cacheIndex=t,n[t]=o}},{key:"_addInactiveBinding",value:function(e,n,t){var r=this._bindingsByRootAndName,o=this._bindings,a=r[n];void 0===a&&(a={},r[n]=a),a[t]=e,e._cacheIndex=o.length,o.push(e)}},{key:"_removeInactiveBinding",value:function(e){var n=this._bindings,t=e.binding,r=t.rootNode.uuid,o=t.path,a=this._bindingsByRootAndName,i=a[r],v=n[n.length-1],s=e._cacheIndex;v._cacheIndex=s,n[s]=v,n.pop(),delete i[o],0===Object.keys(i).length&&delete a[r]}},{key:"_lendBinding",value:function(e){var n=this._bindings,t=e._cacheIndex,r=this._nActiveBindings++,o=n[r];e._cacheIndex=r,n[r]=e,o._cacheIndex=t,n[t]=o}},{key:"_takeBackBinding",value:function(e){var n=this._bindings,t=e._cacheIndex,r=--this._nActiveBindings,o=n[r];e._cacheIndex=r,n[r]=e,o._cacheIndex=t,n[t]=o}},{key:"_lendControlInterpolant",value:function(){var e=this._controlInterpolants,n=this._nActiveControlInterpolants++,t=e[n];return void 0===t&&((t=new Au(new Float32Array(2),new Float32Array(2),1,gp)).__cacheIndex=n,e[n]=t),t}},{key:"_takeBackControlInterpolant",value:function(e){var n=this._controlInterpolants,t=e.__cacheIndex,r=--this._nActiveControlInterpolants,o=n[r];e.__cacheIndex=r,n[r]=e,o.__cacheIndex=t,n[t]=o}},{key:"clipAction",value:function(e,n,t){var r=n||this._root,o=r.uuid,a="string"===typeof e?Yu.findByName(r,e):e,i=null!==a?a.uuid:e,v=this._actionsByClip[i],s=null;if(void 0===t&&(t=null!==a?a.blendMode:rt),void 0!==v){var c=v.actionByRoot[o];if(void 0!==c&&c.blendMode===t)return c;s=v.knownActions[0],null===a&&(a=s._clip)}if(null===a)return null;var l=new xp(this,a,n,t);return this._bindAction(l,s),this._addInactiveAction(l,i,o),l}},{key:"existingAction",value:function(e,n){var t=n||this._root,r=t.uuid,o="string"===typeof e?Yu.findByName(t,e):e,a=o?o.uuid:e,i=this._actionsByClip[a];return void 0!==i&&i.actionByRoot[r]||null}},{key:"stopAllAction",value:function(){for(var e=this._actions,n=this._nActiveActions-1;n>=0;--n)e[n].stop();return this}},{key:"update",value:function(e){e*=this.timeScale;for(var n=this._actions,t=this._nActiveActions,r=this.time+=e,o=Math.sign(e),a=this._accuIndex^=1,i=0;i!==t;++i){n[i]._update(r,e,o,a)}for(var v=this._bindings,s=this._nActiveBindings,c=0;c!==s;++c)v[c].apply(a);return this}},{key:"setTime",value:function(e){this.time=0;for(var n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(e)}},{key:"getRoot",value:function(){return this._root}},{key:"uncacheClip",value:function(e){var n=this._actions,t=e.uuid,r=this._actionsByClip,o=r[t];if(void 0!==o){for(var a=o.knownActions,i=0,v=a.length;i!==v;++i){var s=a[i];this._deactivateAction(s);var c=s._cacheIndex,l=n[n.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,l._cacheIndex=c,n[c]=l,n.pop(),this._removeInactiveBindingsForAction(s)}delete r[t]}}},{key:"uncacheRoot",value:function(e){var n=e.uuid,t=this._actionsByClip;for(var r in t){var o=t[r].actionByRoot[n];void 0!==o&&(this._deactivateAction(o),this._removeInactiveAction(o))}var a=this._bindingsByRootAndName[n];if(void 0!==a)for(var i in a){var v=a[i];v.restoreOriginalState(),this._removeInactiveBinding(v)}}},{key:"uncacheAction",value:function(e,n){var t=this.existingAction(e,n);null!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}}]),t}(Wt),_p=function(){function e(n){y(this,e),this.value=n}return b(e,[{key:"clone",value:function(){return new e(void 0===this.value.clone?this.value:this.value.clone())}}]),e}(),bp=0,Up=function(e){U(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isUniformsGroup=!0,Object.defineProperty(M(e),"id",{value:bp++}),e.name="",e.usage=Ft,e.uniforms=[],e}return b(t,[{key:"add",value:function(e){return this.uniforms.push(e),this}},{key:"remove",value:function(e){var n=this.uniforms.indexOf(e);return-1!==n&&this.uniforms.splice(n,1),this}},{key:"setName",value:function(e){return this.name=e,this}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"dispose",value:function(){return this.dispatchEvent({type:"dispose"}),this}},{key:"copy",value:function(e){this.name=e.name,this.usage=e.usage;var n=e.uniforms;this.uniforms.length=0;for(var t=0,r=n.length;t<r;t++)this.uniforms.push(n[t].clone());return this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),t}(Wt),wp=function(e){U(t,e);var n=k(t);function t(e,r){var o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return y(this,t),(o=n.call(this,e,r)).isInstancedInterleavedBuffer=!0,o.meshPerAttribute=a,o}return b(t,[{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"clone",value:function(e){var n=P(w(t.prototype),"clone",this).call(this,e);return n.meshPerAttribute=this.meshPerAttribute,n}},{key:"toJSON",value:function(e){var n=P(w(t.prototype),"toJSON",this).call(this,e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}]),t}(Ns),Sp=function(){function e(n,t,r,o,a){y(this,e),this.isGLBufferAttribute=!0,this.buffer=n,this.type=t,this.itemSize=r,this.elementSize=o,this.count=a,this.version=0}return b(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setBuffer",value:function(e){return this.buffer=e,this}},{key:"setType",value:function(e,n){return this.type=e,this.elementSize=n,this}},{key:"setItemSize",value:function(e){return this.itemSize=e,this}},{key:"setCount",value:function(e){return this.count=e,this}}]),e}(),Mp=function(){function e(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;y(this,e),this.ray=new fo(n,t),this.near=r,this.far=o,this.camera=null,this.layers=new Mo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}return b(e,[{key:"set",value:function(e,n){this.ray.set(e,n)}},{key:"setFromCamera",value:function(e,n){n.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(n).sub(this.ray.origin).normalize(),this.camera=n):n.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld),this.camera=n):console.error("THREE.Raycaster: Unsupported camera type: "+n.type)}},{key:"intersectObject",value:function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return kp(e,this,t,n),t.sort(jp),t}},{key:"intersectObjects",value:function(e){for(var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=0,o=e.length;r<o;r++)kp(e[r],this,t,n);return t.sort(jp),t}}]),e}();function jp(e,n){return e.distance-n.distance}function kp(e,n,t,r){if(e.layers.test(n.layers)&&e.raycast(n,t),!0===r)for(var o=e.children,a=0,i=o.length;a<i;a++)kp(o[a],n,t,!0)}var Cp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return y(this,e),this.radius=n,this.phi=t,this.theta=r,this}return b(e,[{key:"set",value:function(e,n,t){return this.radius=e,this.phi=n,this.theta=t,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:"makeSafe",value:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,n,t){return this.radius=Math.sqrt(e*e+n*n+t*t),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,t),this.phi=Math.acos(Jt(n/this.radius,-1,1))),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Tp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return y(this,e),this.radius=n,this.theta=t,this.y=r,this}return b(e,[{key:"set",value:function(e,n,t){return this.radius=e,this.theta=n,this.y=t,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,n,t){return this.radius=Math.sqrt(e*e+t*t),this.theta=Math.atan2(e,t),this.y=n,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Rp=new ir,zp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ir(1/0,1/0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ir(-1/0,-1/0);y(this,e),this.isBox2=!0,this.min=n,this.max=t}return b(e,[{key:"set",value:function(e,n){return this.min.copy(e),this.max.copy(n),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var n=0,t=e.length;n<t;n++)this.expandByPoint(e[n]);return this}},{key:"setFromCenterAndSize",value:function(e,n){var t=Rp.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}},{key:"getParameter",value:function(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}},{key:"clampPoint",value:function(e,n){return n.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return Rp.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),Pp=new Lr,Fp=new Lr,Dp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr;y(this,e),this.start=n,this.end=t}return b(e,[{key:"set",value:function(e,n){return this.start.copy(e),this.end.copy(n),this}},{key:"copy",value:function(e){return this.start.copy(e.start),this.end.copy(e.end),this}},{key:"getCenter",value:function(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(e){return e.subVectors(this.end,this.start)}},{key:"distanceSq",value:function(){return this.start.distanceToSquared(this.end)}},{key:"distance",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(e,n){return this.delta(n).multiplyScalar(e).add(this.start)}},{key:"closestPointToPointParameter",value:function(e,n){Pp.subVectors(e,this.start),Fp.subVectors(this.end,this.start);var t=Fp.dot(Fp),r=Fp.dot(Pp)/t;return n&&(r=Jt(r,0,1)),r}},{key:"closestPointToPoint",value:function(e,n,t){var r=this.closestPointToPointParameter(e,n);return this.delta(t).multiplyScalar(r).add(this.start)}},{key:"applyMatrix4",value:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}},{key:"equals",value:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Ep=new Lr,Ip=function(e){U(t,e);var n=k(t);function t(e,r){var o;y(this,t),(o=n.call(this)).light=e,o.light.updateMatrixWorld(),o.matrix=e.matrixWorld,o.matrixAutoUpdate=!1,o.color=r;for(var a=new _a,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],v=0,s=1;v<32;v++,s++){var c=v/32*Math.PI*2,l=s/32*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(l),Math.sin(l),1)}a.setAttribute("position",new ua(i,3));var u=new jc({fog:!1,toneMapped:!1});return o.cone=new Ec(a,u),o.add(o.cone),o.update(),o}return b(t,[{key:"dispose",value:function(){this.cone.geometry.dispose(),this.cone.material.dispose()}},{key:"update",value:function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),Ep.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ep),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}]),t}(Oo),Lp=new Lr,Ap=new po,Op=new po,Bp=function(e){U(t,e);var n=k(t);function t(e){var r;y(this,t);for(var o=Np(e),a=new _a,i=[],v=[],s=new wr(0,0,1),c=new wr(0,1,0),l=0;l<o.length;l++){var u=o[l];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),v.push(s.r,s.g,s.b),v.push(c.r,c.g,c.b))}a.setAttribute("position",new ua(i,3)),a.setAttribute("color",new ua(v,3));var f=new jc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});return(r=n.call(this,a,f)).isSkeletonHelper=!0,r.type="SkeletonHelper",r.root=e,r.bones=o,r.matrix=e.matrixWorld,r.matrixAutoUpdate=!1,r}return b(t,[{key:"updateMatrixWorld",value:function(e){var n=this.bones,r=this.geometry,o=r.getAttribute("position");Op.copy(this.root.matrixWorld).invert();for(var a=0,i=0;a<n.length;a++){var v=n[a];v.parent&&v.parent.isBone&&(Ap.multiplyMatrices(Op,v.matrixWorld),Lp.setFromMatrixPosition(Ap),o.setXYZ(i,Lp.x,Lp.y,Lp.z),Ap.multiplyMatrices(Op,v.parent.matrixWorld),Lp.setFromMatrixPosition(Ap),o.setXYZ(i+1,Lp.x,Lp.y,Lp.z),i+=2)}r.getAttribute("position").needsUpdate=!0,P(w(t.prototype),"updateMatrixWorld",this).call(this,e)}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec);function Np(e){var n=[];!0===e.isBone&&n.push(e);for(var t=0;t<e.children.length;t++)n.push.apply(n,Np(e.children[t]));return n}var Gp=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;y(this,t);var i=new uu(r,4,2),v=new Ko({wireframe:!0,fog:!1,toneMapped:!1});return(a=n.call(this,i,v)).light=e,a.light.updateMatrixWorld(),a.color=o,a.type="PointLightHelper",a.matrix=a.light.matrixWorld,a.matrixAutoUpdate=!1,a.update(),a}return b(t,[{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}},{key:"update",value:function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}]),t}(Aa),Vp=new Lr,qp=new wr,Wp=new wr,Hp=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;y(this,t),(a=n.call(this)).light=e,a.light.updateMatrixWorld(),a.matrix=e.matrixWorld,a.matrixAutoUpdate=!1,a.color=o;var i=new su(r);i.rotateY(.5*Math.PI),a.material=new Ko({wireframe:!0,fog:!1,toneMapped:!1}),void 0===a.color&&(a.material.vertexColors=!0);var v=i.getAttribute("position"),s=new Float32Array(3*v.count);return i.setAttribute("color",new ta(s,3)),a.add(new Aa(i,a.material)),a.update(),a}return b(t,[{key:"dispose",value:function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}},{key:"update",value:function(){var e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var n=e.geometry.getAttribute("color");qp.copy(this.light.color),Wp.copy(this.light.groundColor);for(var t=0,r=n.count;t<r;t++){var o=t<r/2?qp:Wp;n.setXYZ(t,o.r,o.g,o.b)}n.needsUpdate=!0}e.lookAt(Vp.setFromMatrixPosition(this.light.matrixWorld).negate())}}]),t}(Oo),Xp=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4473924,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8947848;y(this,t),a=new wr(a),i=new wr(i);for(var v=o/2,s=r/o,c=r/2,l=[],u=[],f=0,p=0,m=-c;f<=o;f++,m+=s){l.push(-c,0,m,c,0,m),l.push(m,0,-c,m,0,c);var d=f===v?a:i;d.toArray(u,p),p+=3,d.toArray(u,p),p+=3,d.toArray(u,p),p+=3,d.toArray(u,p),p+=3}var h=new _a;h.setAttribute("position",new ua(l,3)),h.setAttribute("color",new ua(u,3));var x=new jc({vertexColors:!0,toneMapped:!1});return(e=n.call(this,h,x)).type="GridHelper",e}return b(t,[{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec),Yp=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:64,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4473924,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:8947848;y(this,t),v=new wr(v),s=new wr(s);var c=[],l=[];if(o>1)for(var u=0;u<o;u++){var f=u/o*(2*Math.PI),p=Math.sin(f)*r,m=Math.cos(f)*r;c.push(0,0,0),c.push(p,0,m);var d=1&u?v:s;l.push(d.r,d.g,d.b),l.push(d.r,d.g,d.b)}for(var h=0;h<a;h++)for(var x=1&h?v:s,g=r-r/a*h,_=0;_<i;_++){var b=_/i*(2*Math.PI),U=Math.sin(b)*g,w=Math.cos(b)*g;c.push(U,0,w),l.push(x.r,x.g,x.b),b=(_+1)/i*(2*Math.PI),U=Math.sin(b)*g,w=Math.cos(b)*g,c.push(U,0,w),l.push(x.r,x.g,x.b)}var S=new _a;S.setAttribute("position",new ua(c,3)),S.setAttribute("color",new ua(l,3));var M=new jc({vertexColors:!0,toneMapped:!1});return(e=n.call(this,S,M)).type="PolarGridHelper",e}return b(t,[{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec),Zp=new Lr,Qp=new Lr,Jp=new Lr,$p=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;y(this,t),(a=n.call(this)).light=e,a.light.updateMatrixWorld(),a.matrix=e.matrixWorld,a.matrixAutoUpdate=!1,a.color=o,void 0===r&&(r=1);var i=new _a;i.setAttribute("position",new ua([-r,r,0,r,r,0,r,-r,0,-r,-r,0,-r,r,0],3));var v=new jc({fog:!1,toneMapped:!1});return a.lightPlane=new Pc(i,v),a.add(a.lightPlane),(i=new _a).setAttribute("position",new ua([0,0,0,0,0,1],3)),a.targetLine=new Pc(i,v),a.add(a.targetLine),a.update(),a}return b(t,[{key:"dispose",value:function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}},{key:"update",value:function(){Zp.setFromMatrixPosition(this.light.matrixWorld),Qp.setFromMatrixPosition(this.light.target.matrixWorld),Jp.subVectors(Qp,Zp),this.lightPlane.lookAt(Qp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Qp),this.targetLine.scale.z=Jp.length()}}]),t}(Oo),Kp=new Lr,em=new Wa,nm=function(e){U(t,e);var n=k(t);function t(e){var r;y(this,t);var o=new _a,a=new jc({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],v=[],s={};function c(e,n){l(e),l(n)}function l(e){i.push(0,0,0),v.push(0,0,0),void 0===s[e]&&(s[e]=[]),s[e].push(i.length/3-1)}c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4"),o.setAttribute("position",new ua(i,3)),o.setAttribute("color",new ua(v,3)),(r=n.call(this,o,a)).type="CameraHelper",r.camera=e,r.camera.updateProjectionMatrix&&r.camera.updateProjectionMatrix(),r.matrix=e.matrixWorld,r.matrixAutoUpdate=!1,r.pointMap=s,r.update();var u=new wr(16755200),f=new wr(16711680),p=new wr(43775),m=new wr(16777215),d=new wr(3355443);return r.setColors(u,f,p,m,d),r}return b(t,[{key:"setColors",value:function(e,n,t,r,o){var a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,n.r,n.g,n.b),a.setXYZ(25,n.r,n.g,n.b),a.setXYZ(26,n.r,n.g,n.b),a.setXYZ(27,n.r,n.g,n.b),a.setXYZ(28,n.r,n.g,n.b),a.setXYZ(29,n.r,n.g,n.b),a.setXYZ(30,n.r,n.g,n.b),a.setXYZ(31,n.r,n.g,n.b),a.setXYZ(32,t.r,t.g,t.b),a.setXYZ(33,t.r,t.g,t.b),a.setXYZ(34,t.r,t.g,t.b),a.setXYZ(35,t.r,t.g,t.b),a.setXYZ(36,t.r,t.g,t.b),a.setXYZ(37,t.r,t.g,t.b),a.setXYZ(38,r.r,r.g,r.b),a.setXYZ(39,r.r,r.g,r.b),a.setXYZ(40,o.r,o.g,o.b),a.setXYZ(41,o.r,o.g,o.b),a.setXYZ(42,o.r,o.g,o.b),a.setXYZ(43,o.r,o.g,o.b),a.setXYZ(44,o.r,o.g,o.b),a.setXYZ(45,o.r,o.g,o.b),a.setXYZ(46,o.r,o.g,o.b),a.setXYZ(47,o.r,o.g,o.b),a.setXYZ(48,o.r,o.g,o.b),a.setXYZ(49,o.r,o.g,o.b),a.needsUpdate=!0}},{key:"update",value:function(){var e=this.geometry,n=this.pointMap;em.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),tm("c",n,e,em,0,0,-1),tm("t",n,e,em,0,0,1),tm("n1",n,e,em,-1,-1,-1),tm("n2",n,e,em,1,-1,-1),tm("n3",n,e,em,-1,1,-1),tm("n4",n,e,em,1,1,-1),tm("f1",n,e,em,-1,-1,1),tm("f2",n,e,em,1,-1,1),tm("f3",n,e,em,-1,1,1),tm("f4",n,e,em,1,1,1),tm("u1",n,e,em,.7,1.1,-1),tm("u2",n,e,em,-.7,1.1,-1),tm("u3",n,e,em,0,2,-1),tm("cf1",n,e,em,-1,0,1),tm("cf2",n,e,em,1,0,1),tm("cf3",n,e,em,0,-1,1),tm("cf4",n,e,em,0,1,1),tm("cn1",n,e,em,-1,0,-1),tm("cn2",n,e,em,1,0,-1),tm("cn3",n,e,em,0,-1,-1),tm("cn4",n,e,em,0,1,-1),e.getAttribute("position").needsUpdate=!0}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec);function tm(e,n,t,r,o,a,i){Kp.set(o,a,i).unproject(r);var v=n[e];if(void 0!==v)for(var s=t.getAttribute("position"),c=0,l=v.length;c<l;c++)s.setXYZ(v[c],Kp.x,Kp.y,Kp.z)}var rm,om,am=new Br,im=function(e){U(t,e);var n=k(t);function t(e){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16776960;y(this,t);var a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),v=new _a;return v.setIndex(new ta(a,1)),v.setAttribute("position",new ta(i,3)),(r=n.call(this,v,new jc({color:o,toneMapped:!1}))).object=e,r.type="BoxHelper",r.matrixAutoUpdate=!1,r.update(),r}return b(t,[{key:"update",value:function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&am.setFromObject(this.object),!am.isEmpty()){var n=am.min,t=am.max,r=this.geometry.attributes.position,o=r.array;o[0]=t.x,o[1]=t.y,o[2]=t.z,o[3]=n.x,o[4]=t.y,o[5]=t.z,o[6]=n.x,o[7]=n.y,o[8]=t.z,o[9]=t.x,o[10]=n.y,o[11]=t.z,o[12]=t.x,o[13]=t.y,o[14]=n.z,o[15]=n.x,o[16]=t.y,o[17]=n.z,o[18]=n.x,o[19]=n.y,o[20]=n.z,o[21]=t.x,o[22]=n.y,o[23]=n.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}},{key:"setFromObject",value:function(e){return this.object=e,this.update(),this}},{key:"copy",value:function(e,n){return P(w(t.prototype),"copy",this).call(this,e,n),this.object=e.object,this}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec),vm=function(e){U(t,e);var n=k(t);function t(e){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16776960;y(this,t);var a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],v=new _a;return v.setIndex(new ta(a,1)),v.setAttribute("position",new ua(i,3)),(r=n.call(this,v,new jc({color:o,toneMapped:!1}))).box=e,r.type="Box3Helper",r.geometry.computeBoundingSphere(),r}return b(t,[{key:"updateMatrixWorld",value:function(e){var n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),P(w(t.prototype),"updateMatrixWorld",this).call(this,e))}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec),sm=function(e){U(t,e);var n=k(t);function t(e){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16776960;y(this,t);var i=a,v=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],s=new _a;s.setAttribute("position",new ua(v,3)),s.computeBoundingSphere(),(r=n.call(this,s,new jc({color:i,toneMapped:!1}))).type="PlaneHelper",r.plane=e,r.size=o;var c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new _a;return l.setAttribute("position",new ua(c,3)),l.computeBoundingSphere(),r.add(new Aa(l,new Ko({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1}))),r}return b(t,[{key:"updateMatrixWorld",value:function(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),P(w(t.prototype),"updateMatrixWorld",this).call(this,e)}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}]),t}(Pc),cm=new Lr,lm=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Lr(0,0,1),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Lr(0,0,0),a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:16776960,v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.2*a,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.2*v;return y(this,t),(e=n.call(this)).type="ArrowHelper",void 0===rm&&((rm=new _a).setAttribute("position",new ua([0,0,0,0,1,0],3)),(om=new _l(0,.5,1,5,1)).translate(0,-.5,0)),e.position.copy(o),e.line=new Pc(rm,new jc({color:i,toneMapped:!1})),e.line.matrixAutoUpdate=!1,e.add(e.line),e.cone=new Aa(om,new Ko({color:i,toneMapped:!1})),e.cone.matrixAutoUpdate=!1,e.add(e.cone),e.setDirection(r),e.setLength(a,v,s),e}return b(t,[{key:"setDirection",value:function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{cm.set(e.z,0,-e.x).normalize();var n=Math.acos(e.y);this.quaternion.setFromAxisAngle(cm,n)}}},{key:"setLength",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2*e,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.2*n;this.line.scale.set(1,Math.max(1e-4,e-n),1),this.line.updateMatrix(),this.cone.scale.set(t,n,t),this.cone.position.y=e,this.cone.updateMatrix()}},{key:"setColor",value:function(e){this.line.material.color.set(e),this.cone.material.color.set(e)}},{key:"copy",value:function(e){return P(w(t.prototype),"copy",this).call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}},{key:"dispose",value:function(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}]),t}(Oo),um=function(e){U(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;y(this,t);var o=[0,0,0,r,0,0,0,0,0,0,r,0,0,0,0,0,0,r],a=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _a;i.setAttribute("position",new ua(o,3)),i.setAttribute("color",new ua(a,3));var v=new jc({vertexColors:!0,toneMapped:!1});return(e=n.call(this,i,v)).type="AxesHelper",e}return b(t,[{key:"setColors",value:function(e,n,t){var r=new wr,o=this.geometry.attributes.color.array;return r.set(e),r.toArray(o,0),r.toArray(o,3),r.set(n),r.toArray(o,6),r.toArray(o,9),r.set(t),r.toArray(o,12),r.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(Ec),fm=function(){function e(){y(this,e),this.type="ShapePath",this.color=new wr,this.subPaths=[],this.currentPath=null}return b(e,[{key:"moveTo",value:function(e,n){return this.currentPath=new hl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,n),this}},{key:"lineTo",value:function(e,n){return this.currentPath.lineTo(e,n),this}},{key:"quadraticCurveTo",value:function(e,n,t,r){return this.currentPath.quadraticCurveTo(e,n,t,r),this}},{key:"bezierCurveTo",value:function(e,n,t,r,o,a){return this.currentPath.bezierCurveTo(e,n,t,r,o,a),this}},{key:"splineThru",value:function(e){return this.currentPath.splineThru(e),this}},{key:"toShapes",value:function(e){function n(e,n){for(var t=n.length,r=!1,o=t-1,a=0;a<t;o=a++){var i=n[o],v=n[a],s=v.x-i.x,c=v.y-i.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(i=n[a],s=-s,v=n[o],c=-c),e.y<i.y||e.y>v.y)continue;if(e.y===i.y){if(e.x===i.x)return!0}else{var l=c*(e.x-i.x)-s*(e.y-i.y);if(0===l)return!0;if(l<0)continue;r=!r}}else{if(e.y!==i.y)continue;if(v.x<=e.x&&e.x<=i.x||i.x<=e.x&&e.x<=v.x)return!0}}return r}var t,r,o,a=tu.isClockWise,i=this.subPaths;if(0===i.length)return[];var v=[];if(1===i.length)return r=i[0],(o=new Tl).curves=r.curves,v.push(o),v;var s=!a(i[0].getPoints());s=e?!s:s;var c,l,u=[],f=[],p=[],m=0;f[m]=void 0,p[m]=[];for(var d=0,h=i.length;d<h;d++)t=a(c=(r=i[d]).getPoints()),(t=e?!t:t)?(!s&&f[m]&&m++,f[m]={s:new Tl,p:c},f[m].s.curves=r.curves,s&&m++,p[m]=[]):p[m].push({h:r,p:c[0]});if(!f[0])return function(e){for(var n=[],t=0,r=e.length;t<r;t++){var o=e[t],a=new Tl;a.curves=o.curves,n.push(a)}return n}(i);if(f.length>1){for(var x=!1,g=0,y=0,_=f.length;y<_;y++)u[y]=[];for(var b=0,U=f.length;b<U;b++)for(var w=p[b],S=0;S<w.length;S++){for(var M=w[S],j=!0,k=0;k<f.length;k++)n(M.p,f[k].p)&&(b!==k&&g++,j?(j=!1,u[k].push(M)):x=!0);j&&u[b].push(M)}g>0&&!1===x&&(p=u)}for(var C=0,T=f.length;C<T;C++){o=f[C].s,v.push(o);for(var R=0,z=(l=p[C]).length;R<z;R++)o.holes.push(l[R].h)}return v}}]),e}(),pm=mm();function mm(){for(var e=new ArrayBuffer(4),n=new Float32Array(e),t=new Uint32Array(e),r=new Uint32Array(512),o=new Uint32Array(512),a=0;a<256;++a){var i=a-127;i<-27?(r[a]=0,r[256|a]=32768,o[a]=24,o[256|a]=24):i<-14?(r[a]=1024>>-i-14,r[256|a]=1024>>-i-14|32768,o[a]=-i-1,o[256|a]=-i-1):i<=15?(r[a]=i+15<<10,r[256|a]=i+15<<10|32768,o[a]=13,o[256|a]=13):i<128?(r[a]=31744,r[256|a]=64512,o[a]=24,o[256|a]=24):(r[a]=31744,r[256|a]=64512,o[a]=13,o[256|a]=13)}for(var v=new Uint32Array(2048),s=new Uint32Array(64),c=new Uint32Array(64),l=1;l<1024;++l){for(var u=l<<13,f=0;0===(8388608&u);)u<<=1,f-=8388608;u&=-8388609,f+=947912704,v[l]=u|f}for(var p=1024;p<2048;++p)v[p]=939524096+(p-1024<<13);for(var m=1;m<31;++m)s[m]=m<<23;s[31]=1199570944,s[32]=2147483648;for(var d=33;d<63;++d)s[d]=2147483648+(d-32<<23);s[63]=3347054592;for(var h=1;h<64;++h)32!==h&&(c[h]=1024);return{floatView:n,uint32View:t,baseTable:r,shiftTable:o,mantissaTable:v,exponentTable:s,offsetTable:c}}var dm=Object.freeze({__proto__:null,toHalfFloat:function(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=Jt(e,-65504,65504),pm.floatView[0]=e;var n=pm.uint32View[0],t=n>>23&511;return pm.baseTable[t]+((8388607&n)>>pm.shiftTable[t])},fromHalfFloat:function(e){var n=e>>10;return pm.uint32View[0]=pm.mantissaTable[pm.offsetTable[n]+(1023&e)]+pm.exponentTable[n],pm.floatView[0]}});function hm(){console.error("THREE.ImmediateRenderObject has been removed.")}var xm=function(e){U(t,e);var n=k(t);function t(e,r,o){var a;return y(this,t),console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),(a=n.call(this,e,r,o)).samples=4,a}return b(t)}(Rr),gm=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),n.call(this,e,r,o,a)}return b(t)}(zr),ym=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),n.call(this,e,r,o,a)}return b(t)}(Fr),_m=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v){return y(this,t),console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),n.call(this,e,r,o,a,i,v)}return b(t)}(Ba),bm=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),n.call(this,e,r,o,a)}return b(t)}(gl),Um=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),n.call(this,e,r,o,a)}return b(t)}(yl),wm=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s){return y(this,t),console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),n.call(this,e,r,o,a,i,v,s)}return b(t)}(bl),Sm=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s,c){return y(this,t),console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),n.call(this,e,r,o,a,i,v,s,c)}return b(t)}(_l),Mm=function(e){U(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),n.call(this,e,r)}return b(t)}(wl),jm=function(e){U(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),n.call(this,e,r)}return b(t)}(au),km=function(e){U(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),n.call(this,e,r)}return b(t)}(vu),Cm=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),n.call(this,e,r,o,a)}return b(t)}(xl),Tm=function(e){U(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),n.call(this,e,r)}return b(t)}(su),Rm=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),n.call(this,e,r,o,a)}return b(t)}(ii),zm=function(e){U(t,e);var n=k(t);function t(e,r,o,a){return y(this,t),console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),n.call(this,e,r,o,a)}return b(t)}(Ul),Pm=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v){return y(this,t),console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),n.call(this,e,r,o,a,i,v)}return b(t)}(cu),Fm=function(e){U(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),n.call(this,e,r)}return b(t)}(lu),Dm=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v,s){return y(this,t),console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),n.call(this,e,r,o,a,i,v,s)}return b(t)}(uu),Em=function(e){U(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),n.call(this,e,r)}return b(t)}(fu),Im=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i){return y(this,t),console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),n.call(this,e,r,o,a,i)}return b(t)}(pu),Lm=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i,v){return y(this,t),console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),n.call(this,e,r,o,a,i,v)}return b(t)}(mu),Am=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i){return y(this,t),console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),n.call(this,e,r,o,a,i)}return b(t)}(du);"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:D}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=D);var Om=t(791),Bm=t.t(Om,2),Nm=t(585);function Gm(e){var n,t=new Set,r=function(e,r){var o="function"===typeof e?e(n):e;if(o!==n){var a=n;n=r?o:Object.assign({},n,o),t.forEach((function(e){return e(n,a)}))}},o=function(){return n},a={setState:r,getState:o,subscribe:function(e,r,a){return r||a?function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Object.is;console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");var i=r(n);function v(){var t=r(n);if(!a(i,t)){var o=i;e(i=t,o)}}return t.add(v),function(){return t.delete(v)}}(e,r,a):(t.add(e),function(){return t.delete(e)})},destroy:function(){return t.clear()}};return n=e(r,o,a),a}var Vm="undefined"===typeof window||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent)?Om.useEffect:Om.useLayoutEffect;var qm=t(258),Wm=t.n(qm),Hm=t(545);function Xm(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(e,n){return e===n};if(e===n)return!0;if(!e||!n)return!1;var r=e.length;if(n.length!==r)return!1;for(var o=0;o<r;o++)if(!t(e[o],n[o]))return!1;return!0}var Ym=[];function Zm(e,n){var t,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=f(Ym);try{for(a.s();!(t=a.n()).done;){var i=t.value;if(Xm(n,i.keys,i.equal)){if(r)return;if(Object.prototype.hasOwnProperty.call(i,"error"))throw i.error;if(Object.prototype.hasOwnProperty.call(i,"response"))return i.response;if(!r)throw i.promise}}}catch(s){a.e(s)}finally{a.f()}var v={keys:n,equal:o.equal,promise:e.apply(void 0,x(n)).then((function(e){return v.response=e})).then((function(){o.lifespan&&o.lifespan>0&&setTimeout((function(){var e=Ym.indexOf(v);-1!==e&&Ym.splice(e,1)}),o.lifespan)})).catch((function(e){return v.error=e}))};if(Ym.push(v),!r)throw v.promise}var Qm,Jm,$m=["children","key","ref"],Km=["children","key","ref"],ed=["args","attach"],nd=["args","children"],td=["args","children"],rd=["params"],od=function(e){return e&&e.isOrthographicCamera},ad="undefined"!==typeof window&&(null!=(Qm=window.document)&&Qm.createElement||"ReactNative"===(null==(Jm=window.navigator)?void 0:Jm.product))?Om.useLayoutEffect:Om.useEffect;function id(e){var n=Om.useRef(e);return ad((function(){n.current=e}),[e]),n}function vd(e){var n=e.set;return ad((function(){return n(new Promise((function(){return null}))),function(){return n(!1)}}),[n]),null}var sd=function(e){U(t,e);var n=k(t);function t(){var e;y(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return(e=n.call.apply(n,[this].concat(o))).state={error:!1},e}return b(t,[{key:"componentDidCatch",value:function(e){this.props.set(e)}},{key:"render",value:function(){return this.state.error?null:this.props.children}}]),t}(Om.Component);sd.getDerivedStateFromError=function(){return{error:!0}};var cd="__default";function ld(e){var n="undefined"!==typeof window?window.devicePixelRatio:1;return Array.isArray(e)?Math.min(Math.max(e[0],n),e[1]):e}var ud=function(e){var n;return null==(n=e.__r3f)?void 0:n.root.getState()},fd={obj:function(e){return e===Object(e)&&!fd.arr(e)&&"function"!==typeof e},fun:function(e){return"function"===typeof e},str:function(e){return"string"===typeof e},num:function(e){return"number"===typeof e},boo:function(e){return"boolean"===typeof e},und:function(e){return void 0===e},arr:function(e){return Array.isArray(e)},equ:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=t.arrays,o=void 0===r?"shallow":r,a=t.objects,i=void 0===a?"reference":a,v=t.strict,s=void 0===v||v;if(typeof e!==typeof n||!!e!==!!n)return!1;if(fd.str(e)||fd.num(e))return e===n;var c=fd.obj(e);if(c&&"reference"===i)return e===n;var l,u=fd.arr(e);if(u&&"reference"===o)return e===n;if((u||c)&&e===n)return!0;for(l in e)if(!(l in n))return!1;for(l in s?n:e)if(e[l]!==n[l])return!1;if(fd.und(l)){if(u&&0===e.length&&0===n.length)return!0;if(c&&0===Object.keys(e).length&&0===Object.keys(n).length)return!0;if(e!==n)return!1}return!0}};function pd(e){var n={nodes:{},materials:{}};return e&&e.traverse((function(e){e.name&&(n.nodes[e.name]=e),e.material&&!n.materials[e.material.name]&&(n.materials[e.material.name]=e.material)})),n}function md(e,n){var t=e;return(null!=n&&n.primitive||!t.__r3f)&&(t.__r3f=u({type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null},n)),e}function dd(e,n){var t=e;if(n.includes("-")){var r=n.split("-"),o=r.pop();return t=r.reduce((function(e,n){return e[n]}),e),{target:t,key:o}}return{target:t,key:n}}var hd=/-\d+$/;function xd(e,n,t){if(fd.str(t)){if(hd.test(t)){var r=dd(e,t.replace(hd,"")),o=r.target,a=r.key;Array.isArray(o[a])||(o[a]=[])}var i=dd(e,t),v=i.target,s=i.key;n.__r3f.previousAttach=v[s],v[s]=n}else n.__r3f.previousAttach=t(e,n)}function gd(e,n,t){var r,o;if(fd.str(t)){var a=dd(e,t),i=a.target,v=a.key,s=n.__r3f.previousAttach;void 0===s?delete i[v]:i[v]=s}else null==(r=n.__r3f)||null==r.previousAttach||r.previousAttach(e,n);null==(o=n.__r3f)||delete o.previousAttach}function yd(e,n){n.children,n.key,n.ref;var t,o=r(n,$m),a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=(a.children,a.key,a.ref,r(a,Km)),v=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=null!=(t=null==e?void 0:e.__r3f)?t:{},l=Object.entries(o),f=[];if(v)for(var p=Object.keys(i),m=0;m<p.length;m++)o.hasOwnProperty(p[m])||l.unshift([p[m],cd+"remove"]);l.forEach((function(n){var t,r=s(n,2),a=r[0],v=r[1];if((null==(t=e.__r3f)||!t.primitive||"object"!==a)&&!fd.equ(v,i[a])){if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(a))return f.push([a,v,!0,[]]);var c=[];for(var l in a.includes("-")&&(c=a.split("-")),f.push([a,v,!1,c]),o){var u=o[l];l.startsWith("".concat(a,"-"))&&f.push([l,u,!1,l.split("-")])}}}));var d=u({},o);return c.memoizedProps&&c.memoizedProps.args&&(d.args=c.memoizedProps.args),c.memoizedProps&&c.memoizedProps.attach&&(d.attach=c.memoizedProps.attach),{memoized:d,changes:f}}function _d(e,n){var t,r,o,a,i=null!=(t=e.__r3f)?t:{},v=i.root,c=null!=(r=null==v||null==v.getState?void 0:v.getState())?r:{},l=(a=n)&&a.memoized&&a.changes?n:yd(e,n),u=l.memoized,f=l.changes,p=i.eventCount;e.__r3f&&(e.__r3f.memoizedProps=u);for(var m=0;m<f.length;m++){var h,y=s(f[m],4),_=y[0],b=y[1],U=y[2],w=y[3],S=e,M=S[_];if(w.length&&(M=w.reduce((function(e,n){return e[n]}),e),!M||!M.set)){var j=g(w.reverse()),k=j[0];S=j.slice(1).reverse().reduce((function(e,n){return e[n]}),e),_=k}if(b===cd+"remove")if(M&&M.constructor)b=d(M.constructor,x(null!=(h=u.args)?h:[]));else if(S.constructor){var C,T=d(S.constructor,x(null!=(C=S.__r3f.memoizedProps.args)?C:[]));b=T[M],T.dispose&&T.dispose()}else b=0;if(U)b?i.handlers[_]=b:delete i.handlers[_],i.eventCount=Object.keys(i.handlers).length;else if(M&&M.set&&(M.copy||M instanceof Mo)){var R;if(Array.isArray(b))M.fromArray?M.fromArray(b):(R=M).set.apply(R,x(b));else if(M.copy&&b&&b.constructor&&M.constructor.name===b.constructor.name)M.copy(b);else if(void 0!==b){var z=M instanceof wr;!z&&M.setScalar?M.setScalar(b):M instanceof Mo&&b instanceof Mo?M.mask=b.mask:M.set(b);0}}else S[_]=b,!c.linear&&S[_]instanceof Cr&&(S[_].encoding=ct);bd(e)}if(i.parent&&c.internal&&e.raycast&&p!==i.eventCount){var P=c.internal.interaction.indexOf(e);P>-1&&c.internal.interaction.splice(P,1),i.eventCount&&c.internal.interaction.push(e)}return f.length&&null!=(o=e.__r3f)&&o.parent&&Ud(e),e}function bd(e){var n,t,r=null==(n=e.__r3f)||null==(t=n.root)||null==t.getState?void 0:t.getState();r&&0===r.internal.frames&&r.invalidate()}function Ud(e){null==e.onUpdate||e.onUpdate(e)}function wd(e,n){e.manual||(od(e)?(e.left=n.width/-2,e.right=n.width/2,e.top=n.height/2,e.bottom=n.height/-2):e.aspect=n.width/n.height,e.updateProjectionMatrix(),e.updateMatrixWorld())}function Sd(e,n,t){var r=t.pop(),o=t.reduce((function(e,n){return e[n]}),e);return o[r]=n}function Md(e){return(e.eventObject||e.object).uuid+"/"+e.index+e.instanceId}function jd(e,n,t,r){var o=t.get(n);o&&(t.delete(n),0===t.size&&(e.delete(r),o.target.releasePointerCapture(r)))}function kd(e){function n(e){return e.filter((function(e){return["Move","Over","Enter","Out","Leave"].some((function(n){var t;return null==(t=e.__r3f)?void 0:t.handlers["onPointer"+n]}))}))}function t(n){var t,r=e.getState().internal,o=f(r.hovered.values());try{var a=function(){var e=t.value;if(!n.length||!n.find((function(n){return n.object===e.object&&n.index===e.index&&n.instanceId===e.instanceId}))){var o=e.eventObject.__r3f,a=null==o?void 0:o.handlers;if(r.hovered.delete(Md(e)),null!=o&&o.eventCount){var i=u(u({},e),{},{intersections:n});null==a.onPointerOut||a.onPointerOut(i),null==a.onPointerLeave||a.onPointerLeave(i)}}};for(o.s();!(t=o.n()).done;)a()}catch(i){o.e(i)}finally{o.f()}}function r(e,n){for(var t=0;t<n.length;t++){var r=n[t].__r3f;null==r||null==r.handlers.onPointerMissed||r.handlers.onPointerMissed(e)}}return{handlePointer:function(o){switch(o){case"onPointerLeave":case"onPointerCancel":return function(){return t([])};case"onLostPointerCapture":return function(n){var r=e.getState().internal;"pointerId"in n&&r.capturedMap.has(n.pointerId)&&(r.capturedMap.delete(n.pointerId),t([]))}}return function(a){var i=e.getState(),v=i.onPointerMissed,s=i.internal;s.lastEvent.current=a;var c="onPointerMove"===o,l="onClick"===o||"onContextMenu"===o||"onDoubleClick"===o,p=function(n,t){for(var r=e.getState(),o=new Set,a=[],i=t?t(r.internal.interaction):r.internal.interaction,v=0;v<i.length;v++){var s=ud(i[v]);s&&(s.raycaster.camera=void 0)}r.previousRoot||null==r.events.compute||r.events.compute(n,r);var c=i.flatMap((function(e){var t,r=ud(e);return r&&r.events.enabled&&null!==r.raycaster.camera?(void 0===r.raycaster.camera&&(null==r.events.compute||r.events.compute(n,r,null==(t=r.previousRoot)?void 0:t.getState()),void 0===r.raycaster.camera&&(r.raycaster.camera=null)),r.raycaster.camera?r.raycaster.intersectObject(e,!0):[]):[]})).sort((function(e,n){var t=ud(e.object),r=ud(n.object);return t&&r&&r.events.priority-t.events.priority||e.distance-n.distance})).filter((function(e){var n=Md(e);return!o.has(n)&&(o.add(n),!0)}));r.events.filter&&(c=r.events.filter(c,r));var l,p=f(c);try{for(p.s();!(l=p.n()).done;)for(var m=l.value,d=m.object;d;){var h;null!=(h=d.__r3f)&&h.eventCount&&a.push(u(u({},m),{},{eventObject:d})),d=d.parent}}catch(_){p.e(_)}finally{p.f()}if("pointerId"in n&&r.internal.capturedMap.has(n.pointerId)){var x,g=f(r.internal.capturedMap.get(n.pointerId).values());try{for(g.s();!(x=g.n()).done;){var y=x.value;o.has(Md(y.intersection))||a.push(y.intersection)}}catch(_){g.e(_)}finally{g.f()}}return a}(a,c?n:void 0),m=l?function(n){var t=e.getState().internal,r=n.offsetX-t.initialClick[0],o=n.offsetY-t.initialClick[1];return Math.round(Math.sqrt(r*r+o*o))}(a):0;"onPointerDown"===o&&(s.initialClick=[a.offsetX,a.offsetY],s.initialHits=p.map((function(e){return e.eventObject}))),l&&!p.length&&m<=2&&(r(a,s.interaction),v&&v(a)),c&&t(p),function(n,r,o,a){var i=e.getState();n.length&&function(){var e,v={stopped:!1},s=f(n);try{var c=function(){var s=e.value,c=ud(s.object)||i,l=c.raycaster,f=c.pointer,p=c.camera,m=c.internal,d=new Lr(f.x,f.y,0).unproject(p),h=function(e){var n,t;return null!=(n=null==(t=m.capturedMap.get(e))?void 0:t.has(s.eventObject))&&n},g=function(e){var n={intersection:s,target:r.target};m.capturedMap.has(e)?m.capturedMap.get(e).set(s.eventObject,n):m.capturedMap.set(e,new Map([[s.eventObject,n]])),r.target.setPointerCapture(e)},y=function(e){var n=m.capturedMap.get(e);n&&jd(m.capturedMap,s.eventObject,n,e)},_={};for(var b in r){var U=r[b];"function"!==typeof U&&(_[b]=U)}var w=u(u(u({},s),_),{},{pointer:f,intersections:n,stopped:v.stopped,delta:o,unprojectedPoint:d,ray:l.ray,camera:p,stopPropagation:function(){var e="pointerId"in r&&m.capturedMap.get(r.pointerId);if((!e||e.has(s.eventObject))&&(w.stopped=v.stopped=!0,m.hovered.size&&Array.from(m.hovered.values()).find((function(e){return e.eventObject===s.eventObject})))){var o=n.slice(0,n.indexOf(s));t([].concat(x(o),[s]))}},target:{hasPointerCapture:h,setPointerCapture:g,releasePointerCapture:y},currentTarget:{hasPointerCapture:h,setPointerCapture:g,releasePointerCapture:y},nativeEvent:r});if(a(w),!0===v.stopped)return"break"};for(s.s();!(e=s.n()).done&&"break"!==c(););}catch(l){s.e(l)}finally{s.f()}}()}(p,a,m,(function(e){var n=e.eventObject,t=n.__r3f,i=null==t?void 0:t.handlers;if(null!=t&&t.eventCount)if(c){if(i.onPointerOver||i.onPointerEnter||i.onPointerOut||i.onPointerLeave){var v=Md(e),u=s.hovered.get(v);u?u.stopped&&e.stopPropagation():(s.hovered.set(v,e),null==i.onPointerOver||i.onPointerOver(e),null==i.onPointerEnter||i.onPointerEnter(e))}null==i.onPointerMove||i.onPointerMove(e)}else{var f=i[o];f?l&&!s.initialHits.includes(n)||(r(a,s.interaction.filter((function(e){return!s.initialHits.includes(e)}))),f(e)):l&&s.initialHits.includes(n)&&r(a,s.interaction.filter((function(e){return!s.initialHits.includes(e)})))}}))}}}}var Cd={};var Td,Rd=function(e){return!(null==e||!e.render)},zd=Om.createContext(null);var Pd,Fd,Dd=new Set,Ed=new Set,Id=new Set;function Ld(e,n){if(e.size){var t,r=f(e.values());try{for(r.s();!(t=r.n()).done;){(0,t.value.callback)(n)}}catch(o){r.e(o)}finally{r.f()}}}function Ad(e,n){switch(e){case"before":return Ld(Dd,n);case"after":return Ld(Ed,n);case"tail":return Ld(Id,n)}}function Od(e,n,t){var r=n.clock.getDelta();for("never"===n.frameloop&&"number"===typeof e&&(r=e-n.clock.elapsedTime,n.clock.oldTime=n.clock.elapsedTime,n.clock.elapsedTime=e),Pd=n.internal.subscribers,Td=0;Td<Pd.length;Td++)(Fd=Pd[Td]).ref.current(Fd.store.getState(),r,t);return!n.internal.priority&&n.gl.render&&n.gl.render(n.scene,n.camera),n.internal.frames=Math.max(0,n.internal.frames-1),"always"===n.frameloop?1:n.internal.frames}function Bd(){var e=Om.useContext(zd);if(!e)throw new Error("R3F: Hooks can only be used within the Canvas component!");return e}function Nd(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=Bd(),r=t.getState().internal.subscribe,o=id(e);return ad((function(){return r(o,n,t)}),[n,r,t]),null}function Gd(e,n){return function(t){var r=new t;e&&e(r);for(var o=arguments.length,a=new Array(o>1?o-1:0),i=1;i<o;i++)a[i-1]=arguments[i];return Promise.all(a.map((function(e){return new Promise((function(t,o){return r.load(e,(function(e){e.scene&&Object.assign(e,pd(e.scene)),t(e)}),n,(function(n){return o(new Error("Could not load ".concat(e,": ").concat(n.message,")")))}))}))})))}}function Vd(e,n,t,r){var o=Array.isArray(n)?n:[n],a=function(e,n,t){return Zm(e,n,!1,t)}(Gd(t,r),[e].concat(x(o)),{equal:fd.equ});return Array.isArray(n)?a:a[0]}Vd.preload=function(e,n,t){var r=Array.isArray(n)?n:[n];return function(e,n,t){Zm(e,n,!0,t)}(Gd(t),[e].concat(x(r)))},Vd.clear=function(e,n){var t=Array.isArray(n)?n:[n];return function(e){if(void 0===e||0===e.length)Ym.splice(0,Ym.length);else{var n=Ym.find((function(n){return Xm(e,n.keys,n.equal)}));if(n){var t=Ym.indexOf(n);-1!==t&&Ym.splice(t,1)}}}([e].concat(x(t)))};var qd=new Map,Wd=function(e){var n,t,r,o=!1;function a(i){t=requestAnimationFrame(a),o=!0,n=0,Ad("before",i);var v,s=f(e.values());try{for(s.s();!(v=s.n()).done;){var c,l=v.value;!(r=l.store.getState()).internal.active||!("always"===r.frameloop||r.internal.frames>0)||null!=(c=r.gl.xr)&&c.isPresenting||(n+=Od(i,r))}}catch(u){s.e(u)}finally{s.f()}if(Ad("after",i),0===n)return Ad("tail",i),o=!1,cancelAnimationFrame(t)}return{loop:a,invalidate:function n(t){var r,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!t)return e.forEach((function(e){return n(e.store.getState())}),i);null!=(r=t.gl.xr)&&r.isPresenting||!t.internal.active||"never"===t.frameloop||(t.internal.frames=Math.min(60,t.internal.frames+i),o||(o=!0,requestAnimationFrame(a)))},advance:function(n){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0,o=arguments.length>3?arguments[3]:void 0;if(t&&Ad("before",n),r)Od(n,r,o);else{var a,i=f(e.values());try{for(i.s();!(a=i.n()).done;){var v=a.value;Od(n,v.store.getState())}}catch(s){i.e(s)}finally{i.f()}}t&&Ad("after",n)}}}(qd),Hd=Wd.invalidate,Xd=Wd.advance,Yd=function(e,n){function t(e,n,t){var o,a=n.args,i=void 0===a?[]:a,v=n.attach,s=r(n,ed),c="".concat(e[0].toUpperCase()).concat(e.slice(1));if("primitive"===e){if(void 0===s.object)throw new Error("R3F: Primitives without 'object' are invalid!");o=md(s.object,{type:e,root:t,attach:v,primitive:!0})}else{var l=Cd[c];if(!l)throw new Error("R3F: ".concat(c," is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively"));if(!Array.isArray(i))throw new Error("R3F: The args prop must be an array!");o=md(d(l,x(i)),{type:e,root:t,attach:v,memoizedProps:{args:i}})}return void 0===o.__r3f.attach&&(o instanceof _a?o.__r3f.attach="geometry":o instanceof $o&&(o.__r3f.attach="material")),"inject"!==c&&_d(o,s),o}function o(e,n){var t,r,o=!1;n&&(null!=(t=n.__r3f)&&t.attach?xd(e,n,n.__r3f.attach):n.isObject3D&&e.isObject3D&&(e.add(n),o=!0),o||null==(r=e.__r3f)||r.objects.push(n),n.__r3f||md(n,{}),n.__r3f.parent=e,Ud(n),bd(n))}function a(e,n,t){var r=!1;if(n){var o,a;if(null!=(o=n.__r3f)&&o.attach)xd(e,n,n.__r3f.attach);else if(n.isObject3D&&e.isObject3D){n.parent=e,n.dispatchEvent({type:"added"});var i=e.children.filter((function(e){return e!==n})),v=i.indexOf(t);e.children=[].concat(x(i.slice(0,v)),[n],x(i.slice(v))),r=!0}r||null==(a=e.__r3f)||a.objects.push(n),n.__r3f||md(n,{}),n.__r3f.parent=e,Ud(n),bd(n)}}function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e&&x(e).forEach((function(e){return v(n,e,t)}))}function v(e,n,t){if(n){var r,o,a;if(n.__r3f&&(n.__r3f.parent=null),null!=(r=e.__r3f)&&r.objects&&(e.__r3f.objects=e.__r3f.objects.filter((function(e){return e!==n}))),null!=(o=n.__r3f)&&o.attach)gd(e,n,n.__r3f.attach);else if(n.isObject3D&&e.isObject3D){var v;e.remove(n),null!=(v=n.__r3f)&&v.root&&function(e,n){var t=e.getState().internal;t.interaction=t.interaction.filter((function(e){return e!==n})),t.initialHits=t.initialHits.filter((function(e){return e!==n})),t.hovered.forEach((function(e,r){e.eventObject!==n&&e.object!==n||t.hovered.delete(r)})),t.capturedMap.forEach((function(e,r){jd(t.capturedMap,n,e,r)}))}(n.__r3f.root,n)}var s,c=null==(a=n.__r3f)?void 0:a.primitive,l=void 0===t?null!==n.dispose&&!c:t;if(!c)i(null==(s=n.__r3f)?void 0:s.objects,n,l),i(n.children,n,l);n.__r3f&&(delete n.__r3f.root,delete n.__r3f.objects,delete n.__r3f.handlers,delete n.__r3f.memoizedProps,c||delete n.__r3f),l&&n.dispose&&"Scene"!==n.type&&(0,Hm.unstable_scheduleCallback)(Hm.unstable_IdlePriority,(function(){try{n.dispose()}catch(e){}})),bd(e)}}var c=function(){return console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.")};return{reconciler:Wm()({createInstance:t,removeChild:v,appendChild:o,appendInitialChild:o,insertBefore:a,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:function(e,n){if(n){var t=e.getState().scene;t.__r3f&&(t.__r3f.root=e,o(t,n))}},removeChildFromContainer:function(e,n){n&&v(e.getState().scene,n)},insertInContainerBefore:function(e,n,t){if(n&&t){var r=e.getState().scene;r.__r3f&&a(r,n,t)}},getRootHostContext:function(){return null},getChildHostContext:function(e){return e},finalizeInitialChildren:function(e){var n,t=null!=(n=null==e?void 0:e.__r3f)?n:{};return Boolean(t.handlers)},prepareUpdate:function(e,n,t,o){if(e.__r3f.primitive&&o.object&&o.object!==e)return[!0];var a=o.args,i=void 0===a?[]:a,v=(o.children,r(o,nd)),s=t.args,c=void 0===s?[]:s,l=(t.children,r(t,td));if(!Array.isArray(i))throw new Error("R3F: the args prop must be an array!");if(i.some((function(e,n){return e!==c[n]})))return[!0];var u=yd(e,v,l,!0);return u.changes.length?[!1,u]:null},commitUpdate:function(e,n,r,a,i,c){var l=s(n,2),u=l[0],p=l[1];u?function(e,n,r,a){var i,s=null==(i=e.__r3f)?void 0:i.parent;if(s){var c=t(n,r,e.__r3f.root);if(e.children){var l,u=f(e.children);try{for(u.s();!(l=u.n()).done;){var p=l.value;p.__r3f&&o(c,p)}}catch(m){u.e(m)}finally{u.f()}e.children=e.children.filter((function(e){return!e.__r3f}))}e.__r3f.objects.forEach((function(e){return o(c,e)})),e.__r3f.objects=[],v(s,e),o(s,c),c.raycast&&c.__r3f.eventCount&&c.__r3f.root.getState().internal.interaction.push(c),[a,a.alternate].forEach((function(e){null!==e&&(e.stateNode=c,e.ref&&("function"===typeof e.ref?e.ref(c):e.ref.current=c))}))}}(e,r,i,c):_d(e,p)},commitMount:function(e,n,t,r){var o,a=null!=(o=e.__r3f)?o:{};e.raycast&&a.handlers&&a.eventCount&&e.__r3f.root.getState().internal.interaction.push(e)},getPublicInstance:function(e){return e},prepareForCommit:function(){return null},preparePortalMount:function(e){return md(e.getState().scene)},resetAfterCommit:function(){},shouldSetTextContent:function(){return!1},clearContainer:function(){return!1},hideInstance:function(e){var n,t=null!=(n=e.__r3f)?n:{},r=t.attach,o=t.parent;r&&o&&gd(o,e,r),e.isObject3D&&(e.visible=!1),bd(e)},unhideInstance:function(e,n){var t,r=null!=(t=e.__r3f)?t:{},o=r.attach,a=r.parent;o&&a&&xd(a,e,o),(e.isObject3D&&null==n.visible||n.visible)&&(e.visible=!0),bd(e)},createTextInstance:c,hideTextInstance:c,unhideTextInstance:c,getCurrentEventPriority:function(){return n?n():Nm.DefaultEventPriority},beforeActiveInstanceBlur:function(){},afterActiveInstanceBlur:function(){},detachDeletedInstance:function(){},now:"undefined"!==typeof performance&&fd.fun(performance.now)?performance.now:fd.fun(Date.now)?Date.now:function(){return 0},scheduleTimeout:fd.fun(setTimeout)?setTimeout:void 0,cancelTimeout:fd.fun(clearTimeout)?clearTimeout:void 0}),applyProps:_d}}(0,(function(){var e,n="undefined"!==typeof self&&self||"undefined"!==typeof window&&window;if(!n)return Nm.DefaultEventPriority;switch(null==(e=n.event)?void 0:e.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Nm.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Nm.ContinuousEventPriority;default:return Nm.DefaultEventPriority}})),Zd=Yd.reconciler,Qd=Yd.applyProps,Jd={objects:"shallow",strict:!1},$d=function(e,n){var t="function"===typeof e?e(n):e;return Rd(t)?t:new Es(u({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0},e))};function Kd(e,n){if(n)return n;if(e instanceof HTMLCanvasElement&&e.parentElement){var t=e.parentElement.getBoundingClientRect();return{width:t.width,height:t.height,top:t.top,left:t.left}}return{width:0,height:0,top:0,left:0}}function eh(e){var t=qd.get(e),o=null==t?void 0:t.fiber,a=null==t?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");var i,v="function"===typeof reportError?reportError:console.error,c=a||function(e,n){var t=function(e){var n="function"===typeof e?Gm(e):e,t=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.getState,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object.is,o=s((0,Om.useReducer)((function(e){return e+1}),0),2)[1],a=n.getState(),i=(0,Om.useRef)(a),v=(0,Om.useRef)(t),c=(0,Om.useRef)(r),l=(0,Om.useRef)(!1),u=(0,Om.useRef)();void 0===u.current&&(u.current=t(a));var f=!1;(i.current!==a||v.current!==t||c.current!==r||l.current)&&(e=t(a),f=!r(u.current,e)),Vm((function(){f&&(u.current=e),i.current=a,v.current=t,c.current=r,l.current=!1}));var p=(0,Om.useRef)(a);Vm((function(){var e=function(){try{var e=n.getState(),t=v.current(e);c.current(u.current,t)||(i.current=e,u.current=t,o())}catch(r){l.current=!0,o()}},t=n.subscribe(e);return n.getState()!==p.current&&e(),t}),[]);var m=f?e:u.current;return(0,Om.useDebugValue)(m),m};return Object.assign(t,n),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");var e=[t,n];return{next:function(){var n=e.length<=0;return{value:e.shift(),done:n}}}},t}((function(t,r){var o=new Lr,a=new Lr,i=new Lr;function v(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r().camera,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r().size,v=t.width,s=t.height,c=t.top,l=t.left,u=v/s;n instanceof Lr?i.copy(n):i.set.apply(i,x(n));var f=e.getWorldPosition(o).distanceTo(i);if(od(e))return{width:v/e.zoom,height:s/e.zoom,top:c,left:l,factor:1,distance:f,aspect:u};var p=e.fov*Math.PI/180,m=2*Math.tan(p/2)*f,d=m*(v/s);return{width:d,height:m,top:c,left:l,factor:v/d,distance:f,aspect:u}}var s=void 0,c=function(e){return t((function(n){return{performance:u(u({},n.performance),{},{current:e})}}))},l=new ir,f={set:t,get:r,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,invalidate:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return e(r(),n)},advance:function(e,t){return n(e,t,r())},legacy:!1,linear:!1,flat:!1,scene:md(new Bs),controls:null,clock:new Xf,pointer:l,mouse:l,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:function(){var e=r();s&&clearTimeout(s),e.performance.current!==e.performance.min&&c(e.performance.min),s=setTimeout((function(){return c(r().performance.max)}),e.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:v},setEvents:function(e){return t((function(n){return u(u({},n),{},{events:u(u({},n.events),e)})}))},setSize:function(e,n,o,i,s){var c=r().camera,l={width:e,height:n,top:i||0,left:s||0,updateStyle:o};t((function(e){return{size:l,viewport:u(u({},e.viewport),v(c,a,l))}}))},setDpr:function(e){return t((function(n){var t=ld(e);return{viewport:u(u({},n.viewport),{},{dpr:t,initialDpr:n.viewport.initialDpr||t})}}))},setFrameloop:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"always",n=r().clock;n.stop(),n.elapsedTime=0,"never"!==e&&(n.start(),n.elapsedTime=0),t((function(){return{frameloop:e}}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Om.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:function(e,n,t){var o=r().internal;return o.priority=o.priority+(n>0?1:0),o.subscribers.push({ref:e,priority:n,store:t}),o.subscribers=o.subscribers.sort((function(e,n){return e.priority-n.priority})),function(){var t=r().internal;null!=t&&t.subscribers&&(t.priority=t.priority-(n>0?1:0),t.subscribers=t.subscribers.filter((function(n){return n.ref!==e})))}}}};return f})),r=t.getState(),o=r.size,a=r.viewport.dpr,i=r.camera;return t.subscribe((function(){var e=t.getState(),n=e.camera,r=e.size,v=e.viewport,s=e.gl,c=e.set;r===o&&v.dpr===a||(o=r,a=v.dpr,wd(n,r),s.setPixelRatio(v.dpr),s.setSize(r.width,r.height,r.updateStyle)),n!==i&&(i=n,c((function(e){return{viewport:u(u({},e.viewport),e.viewport.getCurrentViewport(n))}})))})),t.subscribe((function(n){return e(n)})),t}(Hd,Xd),l=o||Zd.createContainer(c,Nm.ConcurrentRoot,null,!1,null,"",v,null);t||qd.set(e,{fiber:l,store:c});var f=!1;return{configure:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=t.gl,a=t.size,v=t.events,s=t.onCreated,l=t.shadows,p=void 0!==l&&l,m=t.linear,d=void 0!==m&&m,h=t.flat,x=void 0!==h&&h,g=t.legacy,y=void 0!==g&&g,_=t.orthographic,b=void 0!==_&&_,U=t.frameloop,w=void 0===U?"always":U,S=t.dpr,M=void 0===S?[1,2]:S,j=t.performance,k=t.raycaster,C=t.camera,T=t.onPointerMissed,R=c.getState(),z=R.gl;R.gl||R.set({gl:z=$d(o,e)});var P=R.raycaster;P||R.set({raycaster:P=new Mp});var F=k||{},D=F.params,E=r(F,rd);if(fd.equ(E,P,Jd)||Qd(P,u({},E)),fd.equ(D,P.params,Jd)||Qd(P,{params:u(u({},P.params),D)}),!R.camera){var I=C instanceof Wa,L=I?C:b?new hi(0,0,0,0,.1,1e3):new Ha(75,0,.1,1e3);I||(L.position.z=5,C&&Qd(L,C),null!=C&&C.rotation||L.lookAt(0,0,0)),R.set({camera:L})}if(!R.xr){var A=function(e,n){var t=c.getState();"never"!==t.frameloop&&Xd(e,!0,t,n)},O=function(){var e=c.getState();e.gl.xr.enabled=e.gl.xr.isPresenting,e.gl.xr.setAnimationLoop(e.gl.xr.isPresenting?A:null),e.gl.xr.isPresenting||Hd(e)},B={connect:function(){var e=c.getState().gl;e.xr.addEventListener("sessionstart",O),e.xr.addEventListener("sessionend",O)},disconnect:function(){var e=c.getState().gl;e.xr.removeEventListener("sessionstart",O),e.xr.removeEventListener("sessionend",O)}};z.xr&&B.connect(),R.set({xr:B})}if(z.shadowMap){var N=fd.boo(p);if(N&&z.shadowMap.enabled!==p||!fd.equ(p,z.shadowMap,Jd)){var G=z.shadowMap.enabled;z.shadowMap.enabled=!!p,N?z.shadowMap.type=V:Object.assign(z.shadowMap,p),G!==z.shadowMap.enabled&&(z.shadowMap.needsUpdate=!0)}}Sd(n,y,["ColorManagement","legacyMode"]);var q=d?st:ct,W=x?ke:ze;z.outputEncoding!==q&&(z.outputEncoding=q),z.toneMapping!==W&&(z.toneMapping=W),R.legacy!==y&&R.set((function(){return{legacy:y}})),R.linear!==d&&R.set((function(){return{linear:d}})),R.flat!==x&&R.set((function(){return{flat:x}})),!o||fd.fun(o)||Rd(o)||fd.equ(o,z,Jd)||Qd(z,o),v&&!R.events.handlers&&R.set({events:v(c)}),M&&R.viewport.dpr!==ld(M)&&R.setDpr(M);var H=Kd(e,a);return fd.equ(H,R.size,Jd)||R.setSize(H.width,H.height,H.updateStyle,H.top,H.left),R.frameloop!==w&&R.setFrameloop(w),R.onPointerMissed||R.set({onPointerMissed:T}),j&&!fd.equ(j,R.performance,Jd)&&R.set((function(e){return{performance:u(u({},e.performance),j)}})),i=s,f=!0,this},render:function(n){return f||this.configure(),Zd.updateContainer(Om.createElement(nh,{store:c,children:n,onCreated:i,rootElement:e}),l,null,(function(){})),c},unmount:function(){th(e)}}}function nh(e){var n=e.store,t=e.children,r=e.onCreated,o=e.rootElement;return ad((function(){var e=n.getState();e.set((function(e){return{internal:u(u({},e.internal),{},{active:!0})}})),r&&r(e),n.getState().events.connected||null==e.events.connect||e.events.connect(o)}),[]),Om.createElement(zd.Provider,{value:n},t)}function th(e,n){var t=qd.get(e),r=null==t?void 0:t.fiber;if(r){var o=null==t?void 0:t.store.getState();o&&(o.internal.active=!1),Zd.updateContainer(null,r,null,(function(){o&&setTimeout((function(){try{var t,r,a,i;null==o.events.disconnect||o.events.disconnect(),null==(t=o.gl)||null==(r=t.renderLists)||null==r.dispose||r.dispose(),null==(a=o.gl)||null==a.forceContextLoss||a.forceContextLoss(),null!=(i=o.gl)&&i.xr&&o.xr.disconnect(),function(e){for(var n in e.dispose&&"Scene"!==e.type&&e.dispose(),e)null==n.dispose||n.dispose(),delete e[n]}(o),qd.delete(e),n&&n(e)}catch(v){}}),500)}))}}Zd.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Om.version});Om.unstable_act;function rh(){return rh=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},rh.apply(this,arguments)}var oh=t(494),ah=t.n(oh);function ih(e){var n=void 0===e?{debounce:0,scroll:!1,offsetSize:!1}:e,t=n.debounce,r=n.scroll,o=n.polyfill,a=n.offsetSize,i=o||("undefined"===typeof window?b((function e(){y(this,e)})):window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");var v=s((0,Om.useState)({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),2),c=v[0],l=v[1],u=(0,Om.useRef)({element:null,scrollContainers:null,resizeObserver:null,lastBounds:c}),f=t?"number"===typeof t?t:t.scroll:null,p=t?"number"===typeof t?t:t.resize:null,m=(0,Om.useRef)(!1);(0,Om.useEffect)((function(){return m.current=!0,function(){m.current=!1}}));var d=s((0,Om.useMemo)((function(){var e=function(){if(u.current.element){var e=u.current.element.getBoundingClientRect(),n={left:e.left,top:e.top,width:e.width,height:e.height,bottom:e.bottom,right:e.right,x:e.x,y:e.y};u.current.element instanceof HTMLElement&&a&&(n.height=u.current.element.offsetHeight,n.width=u.current.element.offsetWidth),Object.freeze(n),m.current&&!ch(u.current.lastBounds,n)&&l(u.current.lastBounds=n)}};return[e,p?ah()(e,p):e,f?ah()(e,f):e]}),[l,a,f,p]),3),h=d[0],x=d[1],g=d[2];function _(){u.current.scrollContainers&&(u.current.scrollContainers.forEach((function(e){return e.removeEventListener("scroll",g,!0)})),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function U(){u.current.element&&(u.current.resizeObserver=new i(g),u.current.resizeObserver.observe(u.current.element),r&&u.current.scrollContainers&&u.current.scrollContainers.forEach((function(e){return e.addEventListener("scroll",g,{capture:!0,passive:!0})})))}var w,S,M;return w=g,S=Boolean(r),(0,Om.useEffect)((function(){if(S){var e=w;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),function(){window.removeEventListener("scroll",e,!0)}}}),[w,S]),M=x,(0,Om.useEffect)((function(){var e=M;return window.addEventListener("resize",e),function(){window.removeEventListener("resize",e)}}),[M]),(0,Om.useEffect)((function(){_(),U()}),[r,g,x]),(0,Om.useEffect)((function(){return _}),[]),[function(e){e&&e!==u.current.element&&(_(),u.current.element=e,u.current.scrollContainers=vh(e),U())},c,h]}function vh(e){var n=[];if(!e||e===document.body)return n;var t=window.getComputedStyle(e);return[t.overflow,t.overflowX,t.overflowY].some((function(e){return"auto"===e||"scroll"===e}))&&n.push(e),[].concat(n,x(vh(e.parentElement)))}var sh=["x","y","top","bottom","left","right","width","height"],ch=function(e,n){return sh.every((function(t){return e[t]===n[t]}))},lh=Object.defineProperty,uh=Object.defineProperties,fh=Object.getOwnPropertyDescriptors,ph=Object.getOwnPropertySymbols,mh=Object.prototype.hasOwnProperty,dh=Object.prototype.propertyIsEnumerable,hh=function(e,n,t){return n in e?lh(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t},xh=function(e,n){for(var t in n||(n={}))mh.call(n,t)&&hh(e,t,n[t]);if(ph){var r,o=f(ph(n));try{for(o.s();!(r=o.n()).done;){t=r.value;dh.call(n,t)&&hh(e,t,n[t])}}catch(a){o.e(a)}finally{o.f()}}return e};function gh(e,n,t){if(e){if(!0===t(e))return e;for(var r=n?e.return:e.child;r;){var o=gh(r,n,t);if(o)return o;r=n?null:r.sibling}}}function yh(e){try{return Object.defineProperties(e,{_currentRenderer:{get:function(){return null},set:function(){}},_currentRenderer2:{get:function(){return null},set:function(){}}})}catch(n){return e}}var _h=yh(Om.createContext(null)),bh=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t,[{key:"render",value:function(){return Om.createElement(_h.Provider,{value:this._reactInternals},this.props.children)}}]),t}(Om.Component),Uh=Om.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,wh=Uh.ReactCurrentOwner,Sh=Uh.ReactCurrentDispatcher;function Mh(){var e=Om.useContext(_h);if(!e)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");var n=Om.useId(),t=Om.useMemo((function(){var t;return null!=(t=wh.current)?t:gh(e,!1,(function(e){for(var t=e.memoizedState;t;){if(t.memoizedState===n)return!0;t=t.next}}))}),[e,n]);return t}var jh=[],kh=new WeakMap;function Ch(){var e,n=Mh();jh.splice(0,jh.length),gh(n,!0,(function(e){var n,t=null==(n=e.type)?void 0:n._context;t&&t!==_h&&jh.push(yh(t))}));var t,r=f(jh);try{for(r.s();!(t=r.n()).done;){var o=t.value,a=null==(e=Sh.current)?void 0:e.readContext(o);kh.set(o,a)}}catch(i){r.e(i)}finally{r.f()}return Om.useMemo((function(){return jh.reduce((function(e,n){return function(t){return Om.createElement(e,null,Om.createElement(n.Provider,(r=xh({},t),o={value:kh.get(n)},uh(r,fh(o)))));var r,o}}),(function(e){return Om.createElement(bh,xh({},e))}))}),[])}var Th=["children","fallback","resize","style","gl","events","eventSource","eventPrefix","shadows","linear","flat","legacy","orthographic","frameloop","dpr","performance","raycaster","camera","onPointerMissed","onCreated"],Rh={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function zh(e){var n=kd(e).handlePointer;return{priority:1,enabled:!0,compute:function(e,n,t){n.pointer.set(e.offsetX/n.size.width*2-1,-e.offsetY/n.size.height*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Rh).reduce((function(e,t){return u(u({},e),{},c({},t,n(t)))}),{}),connect:function(n){var t,r=e.getState(),o=r.set,a=r.events;null==a.disconnect||a.disconnect(),o((function(e){return{events:u(u({},e.events),{},{connected:n})}})),Object.entries(null!=(t=a.handlers)?t:[]).forEach((function(e){var t=s(e,2),r=t[0],o=t[1],a=s(Rh[r],2),i=a[0],v=a[1];n.addEventListener(i,o,{passive:v})}))},disconnect:function(){var n,t=e.getState(),r=t.set,o=t.events;o.connected&&(Object.entries(null!=(n=o.handlers)?n:[]).forEach((function(e){var n=s(e,2),t=n[0],r=n[1];if(o&&o.connected instanceof HTMLElement){var a=s(Rh[t],1)[0];o.connected.removeEventListener(a,r)}})),r((function(e){return{events:u(u({},e.events),{},{connected:void 0})}})))}}}var Ph,Fh=Om.forwardRef((function(e,t){var o=e.children,a=e.fallback,i=e.resize,v=e.style,c=e.gl,l=e.events,f=void 0===l?zh:l,p=e.eventSource,m=e.eventPrefix,d=e.shadows,h=e.linear,x=e.flat,g=e.legacy,y=e.orthographic,_=e.frameloop,b=e.dpr,U=e.performance,w=e.raycaster,S=e.camera,M=e.onPointerMissed,j=e.onCreated,k=r(e,Th);Om.useMemo((function(){return e=n,void(Cd=u(u({},Cd),e));var e}),[]);var C=Ch(),T=s(ih(u({scroll:!0,debounce:{scroll:50,resize:0}},i)),2),R=T[0],z=T[1],P=Om.useRef(null),F=Om.useRef(null),D=s(Om.useState(null),2),E=D[0],I=D[1];Om.useImperativeHandle(t,(function(){return P.current}));var L=id(M),A=s(Om.useState(!1),2),O=A[0],B=A[1],N=s(Om.useState(!1),2),G=N[0],V=N[1];if(O)throw O;if(G)throw G;var q=Om.useRef(null);z.width>0&&z.height>0&&E&&(q.current||(q.current=eh(E)),q.current.configure({gl:c,events:f,shadows:d,linear:h,flat:x,legacy:g,orthographic:y,frameloop:_,dpr:b,performance:U,raycaster:w,camera:S,size:z,onPointerMissed:function(){return null==L.current?void 0:L.current.apply(L,arguments)},onCreated:function(e){var n;null==e.events.connect||e.events.connect(p?(n=p)&&n.hasOwnProperty("current")?p.current:p:F.current),m&&e.setEvents({compute:function(e,n){var t=e[m+"X"],r=e[m+"Y"];n.pointer.set(t/n.size.width*2-1,-r/n.size.height*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)}}),null==j||j(e)}}),q.current.render(Om.createElement(C,null,Om.createElement(sd,{set:V},Om.createElement(Om.Suspense,{fallback:Om.createElement(vd,{set:B})},o))))),ad((function(){I(P.current)}),[]),Om.useEffect((function(){if(E)return function(){return th(E)}}),[E]);var W=p?"none":"auto";return Om.createElement("div",rh({ref:F,style:u({position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:W},v)},k),Om.createElement("div",{ref:R,style:{width:"100%",height:"100%"}},Om.createElement("canvas",{ref:P,style:{display:"block"}},a)))})),Dh=Om.forwardRef((function(e,n){return Om.createElement(bh,null,Om.createElement(Fh,rh({},e,{ref:n})))})),Eh=t(250);function Ih(){return Ih=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},Ih.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(Ph||(Ph={}));var Lh,Ah="popstate";function Oh(e,n){if(!1===e||null===e||"undefined"===typeof e)throw new Error(n)}function Bh(e,n){if(!e){"undefined"!==typeof console&&console.warn(n);try{throw new Error(n)}catch(t){}}}function Nh(e,n){return{usr:e.state,key:e.key,idx:n}}function Gh(e,n,t,r){return void 0===t&&(t=null),Ih({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof n?qh(n):n,{state:t,key:n&&n.key||r||Math.random().toString(36).substr(2,8)})}function Vh(e){var n=e.pathname,t=void 0===n?"/":n,r=e.search,o=void 0===r?"":r,a=e.hash,i=void 0===a?"":a;return o&&"?"!==o&&(t+="?"===o.charAt(0)?o:"?"+o),i&&"#"!==i&&(t+="#"===i.charAt(0)?i:"#"+i),t}function qh(e){var n={};if(e){var t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));var r=e.indexOf("?");r>=0&&(n.search=e.substr(r),e=e.substr(0,r)),e&&(n.pathname=e)}return n}function Wh(e,n,t,r){void 0===r&&(r={});var o=r,a=o.window,i=void 0===a?document.defaultView:a,v=o.v5Compat,s=void 0!==v&&v,c=i.history,l=Ph.Pop,u=null,f=p();function p(){return(c.state||{idx:null}).idx}function m(){l=Ph.Pop;var e=p(),n=null==e?null:e-f;f=e,u&&u({action:l,location:h.location,delta:n})}function d(e){var n="null"!==i.location.origin?i.location.origin:i.location.href,t="string"===typeof e?e:Vh(e);return Oh(n,"No window.location.(origin|href) available to create URL for href: "+t),new URL(t,n)}null==f&&(f=0,c.replaceState(Ih({},c.state,{idx:f}),""));var h={get action(){return l},get location(){return e(i,c)},listen:function(e){if(u)throw new Error("A history only accepts one active listener");return i.addEventListener(Ah,m),u=e,function(){i.removeEventListener(Ah,m),u=null}},createHref:function(e){return n(i,e)},createURL:d,encodeLocation:function(e){var n=d(e);return{pathname:n.pathname,search:n.search,hash:n.hash}},push:function(e,n){l=Ph.Push;var r=Gh(h.location,e,n);t&&t(r,e);var o=Nh(r,f=p()+1),a=h.createHref(r);try{c.pushState(o,"",a)}catch(v){if(v instanceof DOMException&&"DataCloneError"===v.name)throw v;i.location.assign(a)}s&&u&&u({action:l,location:h.location,delta:1})},replace:function(e,n){l=Ph.Replace;var r=Gh(h.location,e,n);t&&t(r,e);var o=Nh(r,f=p()),a=h.createHref(r);c.replaceState(o,"",a),s&&u&&u({action:l,location:h.location,delta:0})},go:function(e){return c.go(e)}};return h}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(Lh||(Lh={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function Hh(e,n,t){void 0===t&&(t="/");var r=nx(("string"===typeof n?qh(n):n).pathname||"/",t);if(null==r)return null;var o=Xh(e);!function(e){e.sort((function(e,n){return e.score!==n.score?n.score-e.score:function(e,n){var t=e.length===n.length&&e.slice(0,-1).every((function(e,t){return e===n[t]}));return t?e[e.length-1]-n[n.length-1]:0}(e.routesMeta.map((function(e){return e.childrenIndex})),n.routesMeta.map((function(e){return e.childrenIndex})))}))}(o);for(var a=null,i=0;null==a&&i<o.length;++i)a=$h(o[i],ex(r));return a}function Xh(e,n,t,r){void 0===n&&(n=[]),void 0===t&&(t=[]),void 0===r&&(r="");var o=function(e,o,a){var i={relativePath:void 0===a?e.path||"":a,caseSensitive:!0===e.caseSensitive,childrenIndex:o,route:e};i.relativePath.startsWith("/")&&(Oh(i.relativePath.startsWith(r),'Absolute route path "'+i.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),i.relativePath=i.relativePath.slice(r.length));var v=tx([r,i.relativePath]),s=t.concat(i);e.children&&e.children.length>0&&(Oh(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+v+'".'),Xh(e.children,n,s,v)),(null!=e.path||e.index)&&n.push({path:v,score:Jh(v,e.index),routesMeta:s})};return e.forEach((function(e,n){var t;if(""!==e.path&&null!=(t=e.path)&&t.includes("?")){var r,a=f(Yh(e.path));try{for(a.s();!(r=a.n()).done;){var i=r.value;o(e,n,i)}}catch(v){a.e(v)}finally{a.f()}}else o(e,n)})),n}function Yh(e){var n=e.split("/");if(0===n.length)return[];var t=g(n),r=t[0],o=t.slice(1),a=r.endsWith("?"),i=r.replace(/\?$/,"");if(0===o.length)return a?[i,""]:[i];var v=Yh(o.join("/")),s=[];return s.push.apply(s,x(v.map((function(e){return""===e?i:[i,e].join("/")})))),a&&s.push.apply(s,x(v)),s.map((function(n){return e.startsWith("/")&&""===n?"/":n}))}var Zh=/^:\w+$/,Qh=function(e){return"*"===e};function Jh(e,n){var t=e.split("/"),r=t.length;return t.some(Qh)&&(r+=-2),n&&(r+=2),t.filter((function(e){return!Qh(e)})).reduce((function(e,n){return e+(Zh.test(n)?3:""===n?1:10)}),r)}function $h(e,n){for(var t=e.routesMeta,r={},o="/",a=[],i=0;i<t.length;++i){var v=t[i],s=i===t.length-1,c="/"===o?n:n.slice(o.length)||"/",l=Kh({path:v.relativePath,caseSensitive:v.caseSensitive,end:s},c);if(!l)return null;Object.assign(r,l.params);var u=v.route;a.push({params:r,pathname:tx([o,l.pathname]),pathnameBase:rx(tx([o,l.pathnameBase])),route:u}),"/"!==l.pathnameBase&&(o=tx([o,l.pathnameBase]))}return a}function Kh(e,n){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});var t=function(e,n,t){void 0===n&&(n=!1);void 0===t&&(t=!0);Bh("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');var r=[],o="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,(function(e,n){return r.push(n),"/([^\\/]+)"}));e.endsWith("*")?(r.push("*"),o+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):t?o+="\\/*$":""!==e&&"/"!==e&&(o+="(?:(?=\\/|$))");return[new RegExp(o,n?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),r=s(t,2),o=r[0],a=r[1],i=n.match(o);if(!i)return null;var v=i[0],c=v.replace(/(.)\/+$/,"$1"),l=i.slice(1);return{params:a.reduce((function(e,n,t){if("*"===n){var r=l[t]||"";c=v.slice(0,v.length-r.length).replace(/(.)\/+$/,"$1")}return e[n]=function(e,n){try{return decodeURIComponent(e)}catch(t){return Bh(!1,'The value for the URL param "'+n+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}(l[t]||"",n),e}),{}),pathname:v,pathnameBase:c,pattern:e}}function ex(e){try{return decodeURI(e)}catch(n){return Bh(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}function nx(e,n){if("/"===n)return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;var t=n.endsWith("/")?n.length-1:n.length,r=e.charAt(t);return r&&"/"!==r?null:e.slice(t)||"/"}var tx=function(e){return e.join("/").replace(/\/\/+/g,"/")},rx=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},ox=function(e){U(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return b(t)}(C(Error));function ax(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}var ix=["post","put","patch","delete"],vx=(new Set(ix),["get"].concat(ix));new Set(vx),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function sx(){return sx=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},sx.apply(this,arguments)}var cx=Om.createContext(null);var lx=Om.createContext(null);var ux=Om.createContext(null);var fx=Om.createContext(null);var px=Om.createContext(null);var mx=Om.createContext({outlet:null,matches:[],isDataRoute:!1});var dx=Om.createContext(null);function hx(){return null!=Om.useContext(px)}function xx(){return hx()||Oh(!1),Om.useContext(px).location}function gx(e,n,t){hx()||Oh(!1);var r,o=Om.useContext(fx).navigator,a=Om.useContext(mx).matches,i=a[a.length-1],v=i?i.params:{},s=(i&&i.pathname,i?i.pathnameBase:"/"),c=(i&&i.route,xx());if(n){var l,u="string"===typeof n?qh(n):n;"/"===s||(null==(l=u.pathname)?void 0:l.startsWith(s))||Oh(!1),r=u}else r=c;var f=r.pathname||"/",p=Hh(e,{pathname:"/"===s?f:f.slice(s.length)||"/"});var m=Mx(p&&p.map((function(e){return Object.assign({},e,{params:Object.assign({},v,e.params),pathname:tx([s,o.encodeLocation?o.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?s:tx([s,o.encodeLocation?o.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])})})),a,t);return n&&m?Om.createElement(px.Provider,{value:{location:sx({pathname:"/",search:"",hash:"",state:null,key:"default"},r),navigationType:Ph.Pop}},m):m}function yx(){var e=function(){var e,n=Om.useContext(dx),t=jx(bx.UseRouteError),r=kx(bx.UseRouteError);if(n)return n;return null==(e=t.errors)?void 0:e[r]}(),n=ax(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),t=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",o={padding:"0.5rem",backgroundColor:r};return Om.createElement(Om.Fragment,null,Om.createElement("h2",null,"Unexpected Application Error!"),Om.createElement("h3",{style:{fontStyle:"italic"}},n),t?Om.createElement("pre",{style:o},t):null,null)}var _x,bx,Ux=Om.createElement(yx,null),wx=function(e){U(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).state={location:e.location,revalidation:e.revalidation,error:e.error},r}return b(t,[{key:"componentDidCatch",value:function(e,n){console.error("React Router caught the following error during render",e,n)}},{key:"render",value:function(){return this.state.error?Om.createElement(mx.Provider,{value:this.props.routeContext},Om.createElement(dx.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}],[{key:"getDerivedStateFromError",value:function(e){return{error:e}}},{key:"getDerivedStateFromProps",value:function(e,n){return n.location!==e.location||"idle"!==n.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||n.error,location:n.location,revalidation:e.revalidation||n.revalidation}}}]),t}(Om.Component);function Sx(e){var n=e.routeContext,t=e.match,r=e.children,o=Om.useContext(cx);return o&&o.static&&o.staticContext&&(t.route.errorElement||t.route.ErrorBoundary)&&(o.staticContext._deepestRenderedBoundaryId=t.route.id),Om.createElement(mx.Provider,{value:n},r)}function Mx(e,n,t){var r;if(void 0===n&&(n=[]),void 0===t&&(t=null),null==e){var o;if(null==(o=t)||!o.errors)return null;e=t.matches}var a=e,i=null==(r=t)?void 0:r.errors;if(null!=i){var v=a.findIndex((function(e){return e.route.id&&(null==i?void 0:i[e.route.id])}));v>=0||Oh(!1),a=a.slice(0,Math.min(a.length,v+1))}return a.reduceRight((function(e,r,o){var v=r.route.id?null==i?void 0:i[r.route.id]:null,s=null;t&&(s=r.route.errorElement||Ux);var c=n.concat(a.slice(0,o+1)),l=function(){var n;return n=v?s:r.route.Component?Om.createElement(r.route.Component,null):r.route.element?r.route.element:e,Om.createElement(Sx,{match:r,routeContext:{outlet:e,matches:c,isDataRoute:null!=t},children:n})};return t&&(r.route.ErrorBoundary||r.route.errorElement||0===o)?Om.createElement(wx,{location:t.location,revalidation:t.revalidation,component:s,error:v,children:l(),routeContext:{outlet:null,matches:c,isDataRoute:!0}}):l()}),null)}function jx(e){var n=Om.useContext(lx);return n||Oh(!1),n}function kx(e){var n=function(e){var n=Om.useContext(mx);return n||Oh(!1),n}(),t=n.matches[n.matches.length-1];return t.route.id||Oh(!1),t.route.id}!function(e){e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate"}(_x||(_x={})),function(e){e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId"}(bx||(bx={}));var Cx;Bm.startTransition;function Tx(e){Oh(!1)}function Rx(e){var n=e.basename,t=void 0===n?"/":n,r=e.children,o=void 0===r?null:r,a=e.location,i=e.navigationType,v=void 0===i?Ph.Pop:i,s=e.navigator,c=e.static,l=void 0!==c&&c;hx()&&Oh(!1);var u=t.replace(/^\/*/,"/"),f=Om.useMemo((function(){return{basename:u,navigator:s,static:l}}),[u,s,l]);"string"===typeof a&&(a=qh(a));var p=a,m=p.pathname,d=void 0===m?"/":m,h=p.search,x=void 0===h?"":h,g=p.hash,y=void 0===g?"":g,_=p.state,b=void 0===_?null:_,U=p.key,w=void 0===U?"default":U,S=Om.useMemo((function(){var e=nx(d,u);return null==e?null:{location:{pathname:e,search:x,hash:y,state:b,key:w},navigationType:v}}),[u,d,x,y,b,w,v]);return null==S?null:Om.createElement(fx.Provider,{value:f},Om.createElement(px.Provider,{children:o,value:S}))}function zx(e){var n=e.children,t=e.location;return gx(Fx(n),t)}!function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(Cx||(Cx={}));var Px=new Promise((function(){}));Om.Component;function Fx(e,n){void 0===n&&(n=[]);var t=[];return Om.Children.forEach(e,(function(e,r){if(Om.isValidElement(e)){var o=[].concat(x(n),[r]);if(e.type!==Om.Fragment){e.type!==Tx&&Oh(!1),e.props.index&&e.props.children&&Oh(!1);var a={id:e.props.id||o.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(a.children=Fx(e.props.children,o)),t.push(a)}else t.push.apply(t,Fx(e.props.children,o))}})),t}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);var Dx=Bm.startTransition;function Ex(e){var n,t=e.basename,r=e.children,o=e.future,a=e.window,i=Om.useRef();null==i.current&&(i.current=(void 0===(n={window:a,v5Compat:!0})&&(n={}),Wh((function(e,n){var t=e.location;return Gh("",{pathname:t.pathname,search:t.search,hash:t.hash},n.state&&n.state.usr||null,n.state&&n.state.key||"default")}),(function(e,n){return"string"===typeof n?n:Vh(n)}),null,n)));var v=i.current,c=s(Om.useState({action:v.action,location:v.location}),2),l=c[0],u=c[1],f=(o||{}).v7_startTransition,p=Om.useCallback((function(e){f&&Dx?Dx((function(){return u(e)})):u(e)}),[u,f]);return Om.useLayoutEffect((function(){return v.listen(p)}),[v,p]),Om.createElement(Rx,{basename:t,children:r,location:l.location,navigationType:l.action,navigator:v})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var Ix,Lx;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher"})(Ix||(Ix={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Lx||(Lx={}));var Ax="\n\n    float sdNumHorizontal(vec2 p)\n    {\n        vec2 newUv = p;\n        newUv.x += 0.125;\n        newUv.y -= 0.25;\n        vec2 uv1 = newUv;\n        vec2 uv2 = newUv;\n        uv1 = Rot(uv1, PI * 0.5);\n        uv1 /= .5;\n        uv1 -= 1.;\n\n        uv2 = Rot(uv2, -PI* .5);\n        uv2 /= .5;\n        uv2 -= 1.;\n        float shape1 = sdEqTriangle(uv1, 0.15);\n        shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n        float shape2 = sdBox(vec2(uv1.x + 0.5, uv1.y+0.75), vec2(0.33, 0.2815));\n        shape2 = 1. - smoothstep(0.1, 0.11, shape2);\n\n        float shape3 = sdEqTriangle(vec2(uv2.x, uv2.y-0.5), 0.15);\n        shape3 = 1. - smoothstep(0.1, 0.11, shape3);\n\n        return shape1 + shape2 + shape3;\n    }\n\n    float sdNumVertical(vec2 p){\n        vec2 newUv = p;\n        newUv.x += 0.125;\n        newUv.y -= 0.25;\n        vec2 uv1 = newUv;\n        vec2 uv3 = newUv;\n        vec2 uv4 = newUv;\n        uv1 = Rot(uv1, PI * 0.5);\n        uv1 /= .5;\n        uv1 -= 1.;\n\n        uv3 = Rot(uv3, PI * 1.5);\n        uv3 /= .5;\n        uv3 -= 1.;\n        uv3.x -= 0.2;\n        uv3.y += 0.1;\n\n        uv4 = Rot(uv4, PI * 1.5);\n        uv4 /= .5;\n        uv4 -= 1.;\n        uv4.y += 0.1;\n        uv4.x -= 0.52;\n\n        float shape1 = sdEqTriangle(vec2(uv1.x + 0.36125, uv1.y-0.01), 0.125);\n        shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n        float shape4 = sdEqTriangle(vec2(uv3.x, uv3.y), 0.14);\n        shape4 = 1. - smoothstep(0.1, 0.11, shape4);\n\n        float shape5 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.35, 0.325));\n        shape5 = 1. - smoothstep(0.1, 0.11, shape5);\n\n        float shape6 = sdEqTriangle(vec2(uv4), 0.14);\n        shape6 = 1. - smoothstep(0.1, 0.11, shape6);\n\n        float tri = ((shape4 + shape6 + shape1 ) );\n        float sq = sdBox(vec2(uv1.x + 0.859, uv1.y +0.442), vec2(0.3));\n        sq = 1. - smoothstep(0.1, 0.11, sq);\n        float shape7 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.3));\n        shape7 = 1. - smoothstep(0.1, 0.11, shape7);\n\n        return tri ;\n    }\n\n    float numNine(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeNine = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triRB;\n\n        return shapeNine;\n    }\n\n    float numEight(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeEight = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeEight;\n    }\n\n    float numSeven(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeSeven = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triR + triRB;\n\n        return shapeSeven;\n    }\n\n    float numSix(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeSix = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeSix;\n    }\n\n    float numFive(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeFive = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeFive;\n    }\n\n    float numFour(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRT = sdEqTriangle(vec2(p3.x + 0.79, p3.y-0.265), 0.14);\n        triRT = 1. - smoothstep(0.1, 0.11, triRT);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float triLT = sdEqTriangle(vec2(p4.x - 0.79, p4.y-0.265), 0.14);\n        triLT = 1. - smoothstep(0.1, 0.11, triLT);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeFour = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triRT + triRB + triLT;\n\n        return shapeFour;\n    }\n\n    float numThree(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeThree = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeThree;\n    }\n\n    float numTwo(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        shapevertical4 *= 0.1;\n        \n        float shapeTwo = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeTwo;\n    }\n\n    float numOne(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRT = sdEqTriangle(vec2(p3.x + 0.79, p3.y-0.265), 0.14);\n        triRT = 1. - smoothstep(0.1, 0.11, triRT);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        \n        float shapeOne = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triR + triRT + triRB;\n\n        return shapeOne;\n    }\n\n    float numZero(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        \n        float shapeZero = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triR + triL;\n\n        return shapeZero;\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.4), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.61), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.02, z1);\n        z2 = 1. - smoothstep(0.01, 0.02, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.01, 0.02, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.01, 0.02, x1);\n        x2 = 1. - smoothstep(0.01, 0.02, x2);\n        x3 = 1. - smoothstep(0.01, 0.02, x3);\n        x4 = 1. - smoothstep(0.01, 0.02, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        p = p * 1.05;\n        p.x -= 0.05;\n        p.y -= 0.02;\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.02, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float sdSix(vec2 p)\n    {\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float s1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        s1 = 1. - smoothstep(0.01, 0.02, s1);\n        s2 = 1. - smoothstep(0.01, 0.02, s2);\n        s3 = 1. - smoothstep(0.01, 0.02, s3);\n        float s4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return s1 + s2 + s3 + s4;\n    }\n\n    float sdSeven(vec2 p)\n    {\n        vec2 p2 = p;\n        float s1 = sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        p2 = Rot(p2, PI * -0.127);\n        float s2 = sdRoundedBox((vec2(p2.x-0.016, p2.y+0.001)), vec2(0.08, 0.44), vec4(0.075));\n        return s1 + s2;\n    }\n\n    float sdEight(vec2 p)\n    {\n        p *= 4.;\n        vec2 p2 = p;\n        p2 = Rot(p2, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float e1 = sdArc(vec2(p.x - 2., p.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e2 = sdArc(vec2(p2.x+1., p2.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e3 = sdArc(vec2(p.x - 2., p.y - 2.45), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e4 = sdArc(vec2(p2.x+1., p2.y+1.5 * 0.95), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        e1 = 1. - smoothstep(0.01, 0.02, e1);\n        e2 = 1. - smoothstep(0.01, 0.02, e2);\n        e3 = 1. - smoothstep(0.01, 0.02, e3);\n        e4 = 1. - smoothstep(0.01, 0.02, e4);\n        return e1 + e2 + e3 + e4;\n    }\n\n    float sdNine(vec2 p)\n    {\n        p = Rot(p, PI);\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float n1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        n1 = 1. - smoothstep(0.01, 0.02, n1);\n        n2 = 1. - smoothstep(0.01, 0.02, n2);\n        n3 = 1. - smoothstep(0.01, 0.02, n3);\n        float n4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return n1 + n2 + n3 + n4;\n    }\n",Ox="\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    // precision highp float;\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n",Bx="\n//iquilezles.org/articls/distfunctions2d\nfloat sdRoundedBox(vec2 p, vec2 b, vec4 r)\n{\n    //p - point\n    //b - size of box\n    //r - round box - top right, bottom right, top left, bottom left\n    p = p * 2.0 - 1.;\n    r.xy = (p.x > 0.0) ? r.xy : r.zw;\n    r.x = (p.y > 0.0) ? r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n    return 1. - smoothstep(0.01, 0.015, v);\n}\n\nfloat sdSpiral(vec2 p, float w, float k)\n{\n    float r = length(p);\n    float a = atan(p.y, p.x);\n    float n = floor(0.5/w + (log2(r/w)*k-a)/TWO_PI);\n    float ra = w * exp2((a+TWO_PI * (min(n+0., 0.) - 0.5))/k);\n    float rb = w * exp2((a+TWO_PI * (min(n+1., 0.) - 0.5))/k);\n    float d = min(abs(r-ra), abs(r-rb));\n    float spiral = min(d, length(p + vec2(w, 0.0)));\n    return 1. - smoothstep(0.01, 0.011, spiral);\n}\n\nfloat sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n{\n    //x - thickness\n    float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n    float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n    return (c - a);\n    \n}\n\nfloat sdBoxOutline(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float y = length(max(d, 0.0)) + min(max(d.x + 0.05, d.y + 0.05), 0.0);\n    // x = 1. - smoothstep(0.01, 0.02, x);\n    // y = 1. - smoothstep(0.01, 0.02, y);\n    return 1.  - smoothstep(0.01, 0.2, y / x);\n}\n\nfloat rect( vec2 vUv, float height, float width)\n{\n    float left = smoothstep(((1.0 - width)/ 2.0), ((1.0 - width)/ 2.0) + 0.001, vUv.x);\n    float right = smoothstep(((1.0 - width)/2.0), ((1.0 - width)/ 2.0) + 0.001, 1. - vUv.x);\n    float top = smoothstep(((1.0 - height)/2.0), ((1.0 - height)/2.0) + 0.001, 1. - vUv.y);\n    float bottom = smoothstep(((1.0 - height)/2.0), ((1.0 - height)/2.0) + 0.001, vUv.y);\n    // return left * right * top * bottom;\n    float x = left * right * top * bottom;\n    // float y = x ;\n    return x;\n}\n\nfloat rectOutline(vec2 vUv, float height, float width)\n{\n    float y = rect(vUv, height, width);\n    float x = rect(vUv, height + 0.01, width + 0.01);\n    return x - y;\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    return smoothstep(0.01, 0.012, x);\n}\n\nfloat quadraticBezier (float x, vec2 a){\n    // adapted from BEZMATH.PS (1993)\n    // by Don Lancaster, SYNERGETICS Inc. \n    // http://www.tinaja.com/text/bezmath.html\n  \n    float epsilon = 0.00001;\n    a.x = clamp(a.x,0.0,1.0); \n    a.y = clamp(a.y,0.0,1.0); \n    if (a.x == 0.5){\n      a += epsilon;\n    }\n    \n    // solve t from x (an inverse operation)\n    float om2a = 1.0 - 2.0 * a.x;\n    float t = (sqrt(a.x*a.x + om2a*x) - a.x)/om2a;\n    float y = (1.0-2.0*a.y)*(t*t) + (2.0*a.y)*t;\n    return y;\n}\n\n// float random (vec2 st) {\n//     return fract(sin(dot(st.xy,\n//                          vec2(12.9898,78.233)))*\n//         43758.5453123);\n// }\n\nfloat IterateMandelbrot( in vec2 c )\n{\n    const float B = 256.0;\n\n    float n = 0.0;\n    vec2 z  = vec2(0.);\n    for( int i=0; i<120; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c; // z = z\xb2 + c\n        if( dot(z,z)>(B*B) ) break;\n        n += 1.0 * u_time;\n    }\n\n    // float sn = n - log(log(length(z))/log(B))/log(2.0); // smooth iteration count\n    float sn = n - log2(log2(dot(z,z))) + 4.0;  // equivalent optimized smooth iteration count\n    \n    return sn;\n}\n\nfloat plot(vec2 p, float line, float thickness)\n{\n    return smoothstep(line - thickness, line, p.y) -\n           smoothstep(line, line + thickness, p.y);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    return 1. - smoothstep(0.01, 0.03, x);\n}\n\nfloat sdCircleOutline(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    float y = length(p) - r + 0.05;\n    float x1 = 1. - smoothstep(0.01, 0.03, x);\n    float y1 = 1. - smoothstep(0.01, 0.03, y);\n    return x1 - y1;\n}\n\nfloat circle(vec2 vUv, float radius)\n{\n    vec2 dist = vUv - vec2(0.5);\n    return 1. - smoothstep(radius - (radius * 0.05), radius + (radius * 0.05), dot(dist, dist) * 4.);\n}\n\nfloat cirOutline(vec2 vUv, float r)\n{\n    vec2 dist = vUv - vec2(0.5);\n    float a = 1. - smoothstep(r - (r * 0.05), r + (r * 0.05), dot(dist, dist) * 4.);\n    // float b = 1. - smoothstep(r + 0.01 - ((r + 0.01)), r + 0.01 + ((r + 0.02)), dot(dist, dist) * 4.);\n    float b = 1. - smoothstep(r + 0.01 - ((r + 0.01) * 0.01), r + 0.01 + ((r + 0.011) * 0.012), dot(dist, dist) * 4.);\n    return b - a;\n}\n\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n    float v = length(pa - ba * h);\n    return 1. - smoothstep(0.01, 0.015, v);\n}\n\nvec2 Rot(vec2 vUv, float a){\n    vUv -= 0.5;\n    vUv = mat2(cos(a), -sin(a),\n            sin(a), cos(a)) * vUv;\n    vUv += 0.5;\n    return vUv;\n}\n\nfloat ndot(vec2 a, vec2 b)\n{\n    return a.x * b.x - a.y * b.y;\n}\n\nfloat sdRhombus(vec2 p, vec2 b)\n{\n    p = abs(p);\n    float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n    float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n    return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n}\n\nfloat dot2(vec2 a)\n{\n    return dot(a.x, a.y);\n}\n\nfloat trapezoid(vec2 p, float r1, float r2, float he)\n{\n    vec2 k1 = vec2(r2, he);\n    vec2 k2 = vec2(r2-r1, 2.0 * he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n    float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n    return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n}\n\nfloat sdEqTriangle(vec2 p, float size)\n{\n    p = p / size;\n    float k = sqrt(3.);\n    p.x = abs(p.x) - 1.;\n    p.y = p.y + 1.0/k;\n    if(p.x+k*p.y > 0.)\n    {\n        p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n    }\n    p.x -= clamp(p.x, -2., 0.);\n    return -length(p) * sign(p.y);\n}\n\nfloat sdEqTriangleOutline(vec2 p, float size)\n{\n    float x = 1. - sdEqTriangle(p, size);\n    float y = 1. - sdEqTriangle(p, size + 0.025);\n    x = smoothstep(0.01, 0.021, x);\n    y = smoothstep(0.01, 0.021, y);\n    return y - x;\n}\n\nfloat sdArc(vec2 p, vec2 sc, float ra, float rb){\n    //sc is arc's aperture\n    p.x = abs(p.x);\n    sc = vec2(sin(sc.x), cos(sc.y));\n    if (sc.y * p.x > sc.x * p.y){\n        return length(p - sc*ra) - rb;\n    }\n    else {\n        return abs(length(p) - ra) - rb;\n    }\n}\n\nfloat sdTriIsosceles(vec2 p, vec2 q)\n{\n    p = Rot(p, PI);\n    p.x = abs(p.x);\n    vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n    vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n    float s = -sign(q.y);\n    vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                vec2(dot(b,b), s*(p.y-q.y)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdHexagram(vec2 p, float r)\n{\n    vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0 * min(dot(k.xy, p), 0.0) * k.xy;\n    p -= 2.0 * min(dot(k.yx, p), 0.0) * k.yx;\n    p -= vec2(clamp(p.x, r*k.z, r*k.w), r);\n    return length(p) * sign(p.y);\n}\n\nfloat sdEgg(vec2 p, float ra, float rb)\n{\n    float k = sqrt(3.);\n    p.x = abs(p.x);\n    float r = ra - rb;\n    return ((p.y < 0.0) ? length(vec2(p.x, p.y)) - r :\n            (k * (p.x + r) < p.y) ? length(vec2(p.x, p.y - k * r)) :\n            length(vec2(p.x + r, p.y)) -2.0 * r) - rb;\n}\n\nfloat sdPolygon(vec2 p, int sides, float scale)\n{\n    p = p * 2. - 1.;\n    float angle = atan(p.x, p.y) + PI;\n    float radius = TWO_PI/float(sides);\n    float d = cos(floor(.5 + angle/ radius) * radius - angle) * length(p);\n    return 1. - smoothstep(scale, scale + 0.01, d); \n}\n\nfloat sdPolygonOutline(vec2 p, int sides, float scale)\n{\n    float x = sdPolygon(p, sides, scale);\n    float y = sdPolygon(p, sides, scale + 0.05);\n    return y - x;\n}\n\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n    vec3 Pi0 = floor(P); // Integer part for indexing\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n    Pi0 = mod(Pi0, 289.0);\n    Pi1 = mod(Pi1, 289.0);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 / 7.0;\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 / 7.0;\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n    return 2.2 * n_xyz;\n}\n\n",Nx=t(184),Gx=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gx,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qx=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qx,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hx=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hx,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yx=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yx,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qx=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qx,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $x=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$x,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ng(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var og=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ag(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:og,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ig=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ig,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ug(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _g=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float circleSDF(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF2(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF3(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF4(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF5(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF6(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float stroke(float x, float s, float w){\n        float d = step(s, x+w*.5) -\n                  step(s, x-w*.5);\n        return clamp(d, 0., 1.);\n    }\n    \n    \n    \n    void main(){\n        vec3 color = vec3(0.);\n    \n        color.rg += stroke(circleSDF(vec2(vUv.x + .125, vUv.y - 0.08)), 0.2, 0.03);\n        color.b += stroke(circleSDF2(vec2(vUv.x + .3 - .05, vUv.y - .2)), 0.2, 0.03);\n        color += stroke(circleSDF(vec2(vUv.x , vUv.y - .2)), 0.2, 0.03);\n        color.g += stroke(circleSDF(vec2(vUv.x - .124, vUv.y - .08)), 0.2, 0.03);\n        color.r += stroke(circleSDF(vec2(vUv.x  - .4 + .15, vUv.y - .2)), 0.2, 0.03);;\n        //color += stroke(circleSDF6(vec2(vUv)), 0.5, 0.02);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_g,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ug=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ug,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n\n// 2D Random\nfloat random(in vec2 st){\n    return fract(sin(dot(st.xy,\n                vec2(12.9898,78.233)))\n            *43758.5453123);\n        }\n\nfloat noise(in vec2 st){\n    vec2 i=floor(st);\n    vec2 f=fract(st);\n    \n    // Four corners in 2D of a tile\n    float a=random(i);\n    float b=random(i+vec2(1.,0.));\n    float c=random(i+vec2(0.,1.));\n    float d=random(i+vec2(1.,1.));\n    \n    // Smooth Interpolation\n    \n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u=f*f*(3.-2.*f);\n    // u = smoothstep(0.,1.,f);\n    \n    // Mix 4 coorners percentages\n    return mix(a,b,u.x)+\n    (c-a)*u.y*(1.-u.x)+\n    (d-b)*u.x*u.y;\n}\n\nvoid main(){\n    vec3 color = vec3(0.);\n    vec2 pos = vec2(vUv * 5.);\n    float n = step(noise(pos + u_time), vUv.x);\n    float x = cnoise(vec3(n * vUv.y * u_time));\n    color += x * n - abs(sin(u_time));\n    color *= x + n + abs(sin(u_time));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Mg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot(vec2 vUv){\n        return smoothstep(0.02, 0.0, abs(vUv.y - vUv.x));\n    }\n    \n    float plot2(vec2 vUv){\n        return smoothstep(.02,0.,abs(1. - vUv.y-vUv.x));\n    }\n    \n    \n    void main(){\n        float y = (sin(vUv.x) + abs(cos(u_time)) - 0.5);\n        vec3 color = vec3(y);\n        float pct = plot(vUv);\n        float pct2=plot2(vUv);\n        color = (0.5 - pct) * color + pct* vec3(1., 0., 0.);\n        color+=(0.5 - pct2)*color+pct2*vec3(1.,0.,0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // float plot(vec2 st){\n//     return smoothstep(0.02, 0.0, abs(st.y - st.x));\n// }\n\nfloat plot2(vec2 st, float pct){\n    return smoothstep(pct - 0.02, pct, st.y) - \n            smoothstep(pct, pct + 0.02, st.y);\n}\n\n// float plot(vec2 vUv, float pct){\n//     return smoothstep(pct-0.02, pct, vUv.y) - \n//            smoothstep(pct, pct+0.02, vUv.y);\n// }\n\nvoid main(){\n    //float y = vUv.x;\n    //float y2 = pow(vUv.x, 20.0);\n    //float y2 = sqrt(vUv.x * PI);\n    //float y = smoothstep(vUv, y);\n    float y2 = smoothstep(0.01, 0.9, abs(vUv.x * sin(u_time)));\n\n    vec3 color = vec3(y2);\n\n    float pct2 = plot2(vUv, y2);\n    color = (1.0 - pct2) * color + pct2 * vec3(1., 0., 0.);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Tg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Cg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot( vec2 st, float pct){\n        return smoothstep(pct - 0.02, pct, st.y) - \n               smoothstep(pct, pct + 0.02, st.y);\n    }\n    \n    void main(){\n        float y = abs(sin((vUv.x * PI) + u_time) * 0.5) ;\n        y /= abs(cos((vUv.y * PI) + u_time) * 0.5);\n        vec3 color = vec3(tan(y + u_time));\n        gl_FragColor = vec4(color, 0.2);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Rg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        float y = smoothstep(0.2, 0.5, vUv.x) - smoothstep(0.5, 0.8, vUv.x);\n        y+= smoothstep(0.2, 0.5, vUv.y) - smoothstep(0.5, 0.8, vUv.y);\n        y -= abs(cos(u_time * 0.5));\n        vec3 color = vec3(abs(sin(y + u_time)));\n        color.x = sin(u_time);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Pg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        float y = step(distance(abs(sin(u_time)), abs(sin(PI))), vUv.x);\n        float x = step(distance(abs(sin(u_time)), abs(cos(PI))), vUv.y);\n        vec3 color = vec3(y * x);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Eg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Dg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ig=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        //float y=step(.5,vUv.x);\n        float y = step(abs(sin(u_time * 0.2)),vUv.y);\n        float x =step(abs(cos(u_time * 0.8)),vUv.x);\n        float z =step(abs(sin(u_time * 0.5)),vUv.y);\n    \n    \n        vec3 color=vec3(y, x, z);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Lg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ig,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ag=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot(vec2 st,float pct){\n        return abs(smoothstep(pct-.1,pct,st.y)-\n        smoothstep(pct,pct+.1,st.y));\n    }\n    \n    void main(){\n        float y = smoothstep(0.01, 0.99, vUv.x);\n        float x=smoothstep(.01,.99,vUv.y);\n        vec3 color = vec3(0.);\n    \n        float pct = plot(sin(vUv * u_time * PI),sin(y * u_time * 0.5 * PI));\n        float pct2 =plot(cos(vUv * u_time),cos(x * u_time * 0.5));\n    \n        color = (1. - pct) * color + pct * vec3(0., 1., 0.);\n        color *=(1.-pct2)*color+pct2*vec3(0.,1.,0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Og(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ag,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot(vec2 vUv, float pct){\n        return smoothstep(pct-0.01, pct, vUv.y) - \n                smoothstep(pct, pct + 0.1, vUv.y);\n    }\n    \n    \n    void main(){\n        float y = smoothstep(0.1 + abs(atan(u_time)), 0.9 - abs(atan(u_time)) , 0.5 + abs(tan(vUv.x * 20. * abs(cos(u_time * 0.25)))));\n        float x = smoothstep(0.9 - abs(atan(u_time)), 0.1 + abs(atan(u_time)),0.5 +  abs(tan(vUv.y * 20. *abs(cos(u_time * 0.25)))));\n        vec3 color = vec3(y * x);\n    \n        float pct = plot(vUv, (y * x) );\n        color = (1.0 - pct) * color + pct * vec3(0., 1., 0.);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ng(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Bg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        float y = step(vUv.x, abs(cos((vUv.y + u_time))) * abs(cos((vUv.y + u_time) * 1.)) * abs(sin(vUv.y + u_time)) * abs(sin((vUv.y + u_time) * 2.)));\n        vec3  color = vec3(y);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        float y = mod(cos(vUv.y * u_time) + 1., cos(PI +PI +sin(u_time)));\n        float x = mod(cos(vUv.x * u_time) + 1., cos(PI + PI +sin(u_time)));\n        vec3 color = vec3(y-x, x/y, x*y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 getRadialUv(vec2 vUv){\n        float angle = atan(vUv.x, vUv.y);\n        vec2 radialUv = vec2(0.);\n        radialUv.x = angle/(PI * 2. ) + .9 *abs(cos(u_time));\n        radialUv.y = 1. - pow(1. - length(vUv), 4.);\n        return radialUv;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        vec2 radialUv = getRadialUv(vUv);\n        vec2 color = vec2(radialUv);\n        gl_FragColor = vec4(color, 1., 0.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //Exponential impulse iquilezles.org\nfloat expImpulse(float x, float k){\n    float h = k*x;\n    return h* exp(1.-h);\n}\n\n//sinc curve original iquilezles.org\n// float sinc(float x,float k)\n// {\n//     float a=PI*((k*x-1.);\n//     return sin(a)/a;\n// }\n\n//Sinc curve  - modified\nfloat sinc(float x, float k){\n    float a = PI * ((k*x - 0.5));\n    return abs(sin(a))/ abs(cos(a));\n}\n\nvoid main(){\n    // float y = expImpulse(vUv.x, vUv.y / sin(u_time * 0.02) * 10.0);\n    float y=sinc(sin(vUv.y * 20.), sin(u_time * 0.25));\n    float x=sinc(sin(vUv.x * 20.), sin(u_time * 0.25));\n    vec3 color = vec3(cos(y) + sin(x));\n    gl_FragColor = vec4(y * x + vUv.x, vUv.y, 0.5, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qg=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n      }\n      \n      void main(){\n          float y = 0.1 * cos((10.0 * vUv.x) + (5. *  u_time));\n          float line = smoothstep(1. - clamp(distance(y + (sin(vUv.y)), 0.5) * 1., 0., 1.), 1., 0.99);\n          float line2 = smoothstep(1. - clamp(distance(y + (cos(vUv.y)), 0.5) * 1., 0., 1.), 1., 0.99);\n          vec3 color = vec3(line + line2);\n      \n          float pct = plot(vUv, sin(line));\n          color = (1. - line) * color + sin(pct) * vec3(0., 0., 0.);\n      \n          gl_FragColor = vec4(color, 1.);\n      }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qg,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $g=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float sinc(float x, float k){\n        float a = PI * ((k * x) - 1.);\n        return sin(a)/a;\n    }\n    \n    //plot function from bookofshaders.com\n    float plot(vec2 vUv, float pct){\n        return smoothstep(pct - 0.01, pct, vUv.y) -\n               smoothstep(pct, pct + 0.1, vUv.y);\n    }\n    \n    \n    void main(){\n        float y = sinc(u_time, vUv.x);\n        vec3 color = vec3(y);\n        float pct = plot(vUv * 1.75 -0.5, y);\n        color = vec3(1. - pct);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$g,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ey=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float sinc(float x,float k){\n        float a=PI*((k*x)-1.);\n        return sin(a)/a;\n    }\n    \n    //exponential impulse iquilezles.org\n    float expImpulse(float x,float k)\n    {\n        float h=k*x;\n        return h*exp(1.-h);\n    }\n    float expImpulse2(float x,float k)\n    {\n        float h=(k + 0.25)*x;\n        return h*exp(1.-h);\n    }\n    float expImpulse3(float x,float k)\n    {\n        float h=(k + 0.5)*x;\n        return h*exp(1.-h);\n    }\n    \n    //plot function from bookofshaders.com\n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-.01,pct,vUv.y)-\n        smoothstep(pct,pct+.1,vUv.y);\n    }\n    \n    void main(){\n        float y=expImpulse(u_time,clamp(vUv.x, 0.0, 1.0));\n        float x=expImpulse2(u_time,clamp(vUv.x, 0.0, 1.0));\n        float z=expImpulse3(u_time,clamp(vUv.x,0.,1.));\n    \n        vec3 color=vec3(y);\n        float pct=plot(vUv*1.75-.5,y);\n        float pct2=plot(vUv*1.75-.5,x);\n        float pct3=plot(vUv*1.75-.5,z);\n        color=vec3(1.-pct);\n        color*=vec3(1.-pct2);\n        color*=vec3(1.-pct3);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ny(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ey,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ty=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n      }\n      \n      void main(){\n          float a = sin(vUv.x * u_time) * 0.25 + 0.5;//sin\n          float b = cos(vUv.x * u_time) * 0.25 + 0.5;//cos\n      \n          vec3 color = vec3(1.0);\n      \n          float pct = plot(vUv, a);\n          float pct2 = plot(vUv, b);\n      \n          color *= (1.0 - pct) * color + pct * vec3(1.0, 0.0, 0.0);\n          color *= (1.0 - pct2) * color + pct2 * vec3(0.0, 0.0, 1.0);\n          \n          gl_FragColor = vec4(color, 1.);\n      }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ry(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ty,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n      }\n      \n      //parabola iquilezles.org\n      float parabola( float x, float k ){\n          return pow(4.0 * x * (1.0 - x), k);\n      }\n      \n      \n      void main(){\n          float y = parabola(vUv.x, 2. + (sin(u_time)));\n          float x = parabola(vUv.x, 4. + (sin(u_time)));\n          float z = parabola(vUv.x, 8. + (sin(u_time)));\n          vec3 color = vec3(0.);\n      \n          float pct = plot(vUv, y);\n          float pct2 = plot(vUv, x);\n          float pct3 = plot(vUv, z);\n      \n          color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n          color += (1.0-pct2)*color+pct2*vec3(1.0,0.0,0.0);\n          color += (1.0-pct3)*color+pct3*vec3(0.0,0.0,1.0);\n      \n          gl_FragColor = vec4(color, 1.);\n      }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ay(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //plot function bookofshaders\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n    }\n    \n    //easing functions easings.net/#easeInElastic\n    float easeInElastic(float x){\n        float y = (2.0 * PI) / 3.;\n        return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * u_time * (0.25)))) ;\n    }\n    \n    void main(){\n        float y = easeInElastic(vUv.x) - 0.5;\n    \n        vec3 color = vec3(y);\n    \n        float pct = plot(vUv, y);\n        color = pct * vec3(0., 1., 0.);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-0.2, pct, st.y + 0.5) -\n            smoothstep( pct, pct+0.2, st.y + 0.5);\n  }\n  \n  float plotX(vec2 st, float pct){\n    return  smoothstep( pct-0.2, pct, st.x + 0.5) -\n            smoothstep( pct, pct+0.2, st.x + 0.5);\n  }\n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * 2.0 ))) ;\n  }\n  \n  void main(){\n      float y =  easeInElastic(vUv.x) - 0.25;\n      float x =  easeInElastic(vUv.y) - 0.25;\n      float z = easeInElastic(1. - vUv.x) - 0.5;\n      float a = easeInElastic(1. - vUv.y) - 0.5;\n  \n      vec3 color = vec3(y);\n  \n      float pct = plotY(vUv, y + 0.25);\n      float pct2 = plotX(vUv, x + 0.25);\n      float pct3 = plotY(vUv, z);\n      float pct4 = plotX(vUv, a);\n  \n      color = pct * vec3(1., 0., 0.);\n      color *= pct2 * vec3(1., 1., 0.);\n      //color *= pct3 * vec3(0., 1., 0.);\n      //color += pct4 * vec3(1., 0., 0.);\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ly=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders plot function\nfloat plot(vec2 st,float pct){\n    return smoothstep(pct-.8,pct,st.y)-\n    smoothstep(pct,pct+.8,st.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(atan(vUv.x - 0.5, vUv.y - 0.5) * u_time * sin(u_time * 0.5));\n    float x = sin(vUv.x);\n    float y = sin(vUv.y);\n    vec3 color = vec3(x);\n    color += vec3(y);\n\n    //float pct = plot(vUv, y);\n    //color += pct * vec3(0.0, 1.0, 1.0);\n\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ly,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //sinc curve iquilezles.org\nfloat sinc(float x,float k){\n    float a=PI*((k*x)-1.);\n    return sin(a)/a ;\n}\n\n//plot function bookofshaders\nfloat plot(vec2 st, float pct){\n  \n  return  smoothstep( pct-0.02, pct, st.x + 0.5) -\n          smoothstep( pct, pct+0.2, st.x + 0.5);\n}\n\nfloat plot2(vec2 st, float pct){\n  \n  return  smoothstep( pct-0.02, pct, st.y + 0.5) -\n          smoothstep( pct, pct+0.2, st.y + 0.5);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vUv -= 0.5; \n    float y = sinc((vUv.y - 0.5 * PI), u_time  * 0.5);\n    float x = sinc((vUv.x - 0.5 * PI), u_time  * 0.5);\n    \n    vec3 color = vec3(0.);\n\n    float pct = plot(vUv - 0.5, y);\n    float pct2 = plot2(vUv - 0.5, x);\n\n    color += pct * vec3(1., 0., 0.);\n    color *= pct2 * vec3(1., 0., 0.);\n\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function py(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var my=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-0.02, pct, st.y +2.5) -\n            smoothstep( pct, pct+0.25, st.y + 2.5);\n  }\n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * 1.5 ))) ;\n  }\n  \n  void main(){\n      vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.7);\n      vUv *= 2.75;\n      float y = easeInElastic(abs(sin(vUv.x)) * 1.25);\n      float x = easeInElastic(abs(cos(vUv.y)) * 1.25);\n  \n      vec3 color = vec3(0.);\n  \n      float pct = plotY(vUv, y * x);\n      color += pct  * vec3(0., 1., 1.);\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:my,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-.02, pct, st.y + 0.5) -\n            smoothstep( pct, pct+.25, st.y + 0.5);\n  }\n  \n  float plotX(vec2 st, float pct){\n    return  smoothstep( pct-.02, pct, st.x + 0.5) -\n            smoothstep( pct, pct+.25, st.x + 0.5);\n  }\n  \n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * cos((x * 10. - 10.75) * y - (u_time * 2.0 ))) ;\n  }\n  \n  float easeInElastic2(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * 2.0 ))) ;\n  }\n  \n  void main(){\n      vec2 vUv = vec2(vUv.x, vUv.y);\n      vUv *= 0.5;\n      vUv += 0.3;\n  \n      float y =  easeInElastic(vUv.x);\n      float x =  easeInElastic2(vUv.y);\n  \n      vec3 color = vec3(y);\n  \n      float pct = 1. -plotY(vUv, y);\n      float pct2 = 1. - plotX(vUv, x);\n    \n      color = pct * vec3(1., 0., 0.);\n      color += pct2 * vec3(1., 0., 0.);\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec3 colorA = vec3(0.788, 0.262, 0.250);\nvec3 colorB = vec3(0.250, 0.474, 0.788);\n\nfloat easeInQuad(float x){\n    return x * x;\n}\n\nvoid main(){\n    vec3 color = vec3(0.);\n    float pct = easeInQuad(vUv.x);\n    pct += sin(u_time);\n    color = mix(colorA, colorB, pct);\n    color -= mix(colorB, colorA, pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _y=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec3 colorA = vec3(0.149,0.141,0.912);\nvec3 colorB = vec3(1.000,0.833,0.224);\n\nfloat plot (vec2 st, float pct){\n  return  smoothstep( pct-0.01, pct, st.y) -\n          smoothstep( pct, pct+0.01, st.y);\n}\n\n//bookofshaders\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 3.0;\n    vec3 color = vec3(0.0);\n    color = rgb2hsb(vec3(vUv.x, vUv.y, abs(sin(u_time * 0.5))));\n    color -= rgb2hsb(vec3(vUv.x, vUv.y, abs(cos(u_time * 0.5))));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function by(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_y,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Uy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 centeredUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    centeredUv *= 10.0;\n    float t = u_time * .05;\n    //vUv += M;\n    centeredUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(sin(centeredUv.y), sin(centeredUv.x));\n    float radius = length(centeredUv) * 200.0;\n    color = 1. - hsb2rgb(vec3((angle * abs(tan(sin(u_time * 0.25)))) - 0.25, radius, 1.));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Uy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb(in vec3 c){\n    vec3 rgb=clamp(abs(mod(c.x*6.+vec3(3.8,1.,7.),\n6.)-3.)-1.,\n0.,\n1.);\nrgb=rgb*rgb*(3.-2.*rgb);\nreturn c.z*mix(vec3(1.),rgb,c.y);\n}\n\nmat2 Rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid main(){\n    vec2 centeredUv=vec2(vUv.x-.5,vUv.y-.5);\n    centeredUv*=10.;\n    float t=u_time*.05;\n    centeredUv*=Rot(t*10.);\n    vec3 color=vec3(0.);\n    float angle=abs(tan(dot(abs(cos(centeredUv.x)), abs(sin(centeredUv.y)))) * abs(cos(u_time * 0.5)));\n    float radius=length(centeredUv)*2000.;\n    color=1. - hsb2rgb(vec3((angle/(TWO_PI /3.))+.5,radius, 1.));\n    gl_FragColor=vec4(color.x , color.y, color.z ,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function My(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s=sin(a);\n        float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n    void main(){\n        vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n        vUv *= 25.0;\n        float t = u_time * 0.25;\n        vUv*=Rot(t*1.);\n        vec3 color=vec3(0.);\n        float angle=abs(tan(dot(abs(cos(vUv.x)),abs(sin(vUv.y))))*abs(cos(u_time*.25)));\n        float radius=length(vUv) * 0.5;\n        color = vec3(((angle * radius)/ PI) + (cos(u_time)), tan(radius * angle) , tan(radius * angle));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ky(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 10.0;\n    float t = u_time * .05;\n    vUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(sin(vUv.y), sin(vUv.x));\n    float radius = length(vUv) * 2.0;\n    color = 1. - hsb2rgb(vec3((angle * abs(tan(sin(u_time * 0.5)))), abs(tan(angle + u_time)) , u_time * 0.5));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ty(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Cy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ry=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        vUv *= 10.0;\n        float t = u_time * .05;\n        vUv *= Rot(t * 5.0);\n        vec3 color = vec3(0.);\n        float radius = length(tan(vUv + (sin(vUv.y))) * 0.08);\n        color = vec3(tan(vUv.x + cos(vUv.y + u_time)), tan(1. - vUv.x + cos(vUv.y + u_time)), tan(vUv.x + cos(vUv.y + u_time)));\n        vec3 newColor = vec3(color.x * radius, color.y * radius, color.z * radius);\n        gl_FragColor = vec4(newColor, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ry,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Py=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 10.0;\n    float t = u_time * .05;\n    vUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(cos(vUv.y), cos(vUv.x));\n    float radius = length(vUv) * 200.0;\n    color = vec3(vUv.x * angle, vUv.y * angle, 1.);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Py,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-.5, pct, st.y + 0.5) -\n            smoothstep( pct, pct+.5, st.y + 0.5);\n  }\n  \n  //  Function from I\xf1igo Quiles\n  //  https://www.shadertoy.com/view/MsS3Wc\n  vec3 hsb2rgb( in vec3 c ){\n      vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                               6.0)-3.0)-1.0,\n                       0.0,\n                       1.0 );\n      rgb = rgb*rgb*(3.0-2.0*rgb);\n      return c.z * mix(vec3(1.0), rgb, c.y);\n  }\n  \n  \n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (sin( - u_time * 0.25)) / 3.;\n      return pow(2., 10. * x - 10.) * cos((x * 10. - 10.75) * y - (u_time * 0.5)) ;\n  }\n  \n  \n  void main(){\n      vec2 vUv = vec2(vUv.x - 1.5 , vUv.y - 1.5 );\n      vUv *= 1.0;\n      //vec3 color = vec3(0.);\n      float angle = dot(sin(vUv.y), cos(vUv.x));\n      float radius = length(vUv) * 2.0;\n  \n      float y =  easeInElastic(vUv.x * angle * radius);\n  \n      vec3 color = vec3(y);\n  \n      float pct =plotY(vUv, y * radius * angle);\n    \n      color = hsb2rgb(vec3(y + cos(u_time), y + cos(u_time), y * pct));\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ey(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Dy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Iy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        vUv *= 5.0;\n        float t = u_time * .05;\n        vUv *= Rot(t * 5.0);\n        vUv *= length(vUv * sin(t));\n        vec3 color = vec3(0.);\n        float radius = length(cos((vUv * sin(u_time)) + (cos(vUv.y))) * 0.08);\n        color = vec3(tan(vUv.x + cos(vUv.y + u_time)), tan(1. - vUv.x + cos(vUv.y + u_time)), tan(vUv.x + cos(vUv.y + u_time)));\n        vec3 newColor = vec3(color.x * radius * abs(cos(u_time)), color.y * radius * abs(sin(u_time)), color.z * radius );\n        gl_FragColor = vec4(newColor, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ly(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Iy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ay=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //plot function from book of shaders\nfloat plot(vec2 st, float pct){\n    return  smoothstep( pct-1.5, pct, st.y) -\n            smoothstep( pct, pct+1.5, st.y);\n  }\n  \n  float plot2(vec2 st, float pct){\n    return  smoothstep( pct-1., pct, st.x) -\n            smoothstep( pct, pct+1., st.x);\n  }\n  \n  mat2 Rot(float a){\n      float s = sin(a);\n      float c = cos(a);\n      return mat2(c, -s, s, c);\n  }\n  \n  void main(){\n      vec2 vUv = vec2(vUv.x -0.5, vUv.y - 0.5);\n      vUv *= 10.0;\n      float t = u_time * .05;\n      vUv *= Rot(t * 5.0);\n      float a = sin(vUv.x + u_time * (atan(sin(u_time + vUv.x), vUv.y)));//sin\n      //float b = cos(vUv.y * (dot(cos(u_time * vUv.y), vUv.y)));//cos\n  \n      vec3 color = vec3(0.);\n  \n      float pct = plot(vUv, a);\n      //float pct2 = plot2(vUv, b);\n      float radius = length(cos((vUv * sin(u_time)) + (cos(vUv.y))) * 0.08);\n      color = (1.0 - pct) * color + pct * vec3(vUv.x, vUv.y, 1.);\n      \n      // vec3 newColor = vec3(color.x * radius * abs(cos(u_time)), color.y * radius * abs(sin(u_time)), color.z * radius );\n      //gl_FragColor = vec4(newColor, 1.);\n  \n      //color = (1.0 - pct) * color + pct * vec3(1.0, 0.0, 0.0);\n      //color *= (1.0 - pct2) * color + pct2 * vec3(0.0, 0.0, 1.0);\n      \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Oy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ay,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var By=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s=sin(a);\n        float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n    \n    //  Function from I\xf1igo Quiles\n    //  https://www.shadertoy.com/view/MsS3Wc\n    vec3 hsb2rgb(in vec3 c){\n        vec3 rgb=clamp(abs(mod(c.x*6.+vec3(3.8,1.,7.),\n    6.)-3.)-1.,\n    0.,\n    1.);\n    rgb=rgb*rgb*(3.-2.*rgb);\n    return c.z*mix(vec3(1.),rgb,c.y);\n    }\n    \n    //pixel deck\n    vec2 rotate(vec2 vUv, float a){\n        vUv = mat2(cos(a), - sin(a), sin(a), cos(a)) * vUv * 0.5;\n        return vUv;\n    }\n    float stroke(float x, float s, float w){\n        float d = step(s, x + w * 0.5) - \n                    step(s, x -w * 0.5);\n        return clamp(d, 0., 1.);\n    }\n    float fill(float x, float size){\n        return 1. - step(size, x);\n    }\n    float rectSDF(vec2 vUv, vec2 s){\n        vUv = vUv * 2. - 1.;\n        return max(abs(vUv.x/s.x), abs(vUv.y/s.y));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x , vUv.y );\n        vUv -= 0.5;\n        vUv *= 6.25;\n        vUv = rotate(vUv, radians(180. * (u_time * u_time) ));\n        float y = 0.;\n        vec3 color = vec3(y);\n        y = fill(rectSDF(vUv, vec2(1.5)), 1.5);\n        y -= 1. - stroke(vUv.x, 0.9, 0.1);\n        y -= 1. - stroke(vUv.y,0.9, 0.1);\n        color = vec3(y);\n        gl_FragColor = vec4(color.x + (sin(u_time * 0.1)), color.y + (sin(u_time * 0.2)), color.z + (cos(u_time * 0.1)), 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ny(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:By,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 5.0;\n    float t = u_time * .05;\n    vUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(cos(vUv.y * sin(u_time * 0.25)), cos(vUv.x * sin(u_time * 0.25)));\n    float radius = length(vUv);\n    color = 1. - hsb2rgb(vec3((angle * abs(tan(sin(u_time * 0.5)))) * radius, abs(tan(angle + u_time)) , radius * angle * u_time - 0.5));\n    gl_FragColor = vec4(1. - color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //pixeldeck\nfloat starSDF(vec2 vUv, int V, float s){\n    //vUv = vUv * 5. - 2.5;\n    float a  = atan(vUv.y, vUv.x)/TWO_PI;\n    float seg = a * float(V);\n    a = ((floor(seg) + 0.5)/ float(V) + mix(s, -s, step(.5, fract(seg)))) * TWO_PI;\n    return abs(dot(vec2(cos(a), sin(a)), vUv));\n}\n\n//  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y-0.5);\n    vUv *= 5.;\n    vec3 color = vec3(0.);\n    float t = u_time * .1;\n    vUv *= Rot(t * 10.0);\n    float s = starSDF(vUv.yx, 5, .1);\n    color += 1. - step(.7, s);\n    //color *= 1. - step(.7, s);\n    float angle = dot(cos(vUv.y * sin(u_time * 0.25)), cos(vUv.x * sin(u_time * 0.25)));\n    float radius = length(vUv);\n    color *= 1. - hsb2rgb(vec3((angle * abs(tan(sin(u_time * 0.25)))), abs(tan(angle + u_time)) , (u_time) * 0.25));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n// //Rectangle function\nfloat createRect(in vec2 vUv, in vec2 start, in vec2 dim){\n    vec2 bottomLeft = step(start, vUv);\n    vec2 topRight = step(1. - start -dim, 1.0 - vUv);\n    float pct = bottomLeft.x * bottomLeft.y * topRight.x * topRight.y;\n    return pct;\n}\n\nfloat circleSDF(vec2 vUv){\n    return length(vUv - 0.5) * 2.;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x + 0.48, vUv.y + 0.48);\n    vUv *= 10.;\n    float angle = dot(sin(vUv.y - 0.5), sin(vUv.x - 0.5));\n    // float radius = length((vUv * 2.0 - 0.5) );\n    float barX = step(0.4, mod(vUv.x * 10.0 - 0.2, 1.0)) * step(0.8, mod(vUv.y * 10.0, 1.0));\n    float barY = step(0.8, mod(vUv.x * 10.0, 1.0)) * step(0.4, mod(vUv.y * 10.0 - 0.2, 1.0));\n    float strength = barX + barY;\n    float circle = step(circleSDF(vUv), 1.0);\n    vec3 color = vec3(strength);\n    float radius = length(cos((vUv * sin(u_time)) + (cos(vUv.y))) * 0.08);\n    color *= vec3(tan(vUv.x + cos(vUv.y + u_time)), tan(1. - vUv.x + cos(vUv.y + u_time)), tan(vUv.x + cos(vUv.y + u_time)));\n    vec3 newColor = vec3(color.x + atan(0.5 * u_time) * radius * (sin(u_time )), color.y + atan(0.5 * u_time) * radius * (cos(u_time)), color.z * radius );\n    newColor -= strength;\n    gl_FragColor = vec4(newColor, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //Rectangle function\nfloat createRect(in vec2 vUv, in vec2 start, in vec2 dim){\n    vec2 bottomLeft = step(start, vUv);\n    vec2 topRight = step(1. - start -dim, 1.0 - vUv);\n    float pct = bottomLeft.x * bottomLeft.y * topRight.x * topRight.y;\n    return pct;\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 3.0;\n    float t = u_time * .75;\n    vUv *= Rot(t);\n    float y = createRect(vUv, vec2(-0.62, 0.0), vec2(1.5, 0.25));\n    float x = createRect(vUv, vec2(0.0, -0.62), vec2(0.25, 1.5));\n    float shape = x - y;\n    vec3 color = vec3(shape);\n    float angle = dot(atan(vUv.y * sin(u_time * 0.25)), atan(vUv.x * sin(u_time * 0.25)));\n    float radius = length(vUv - 0.5) * 20.;\n    color *= vec3(sin(color.x * (sin(u_time * sin(radius)))), sin(color.y * (cos(u_time * sin(radius)))), sin(color.z * (sin(u_time * sin(radius)))));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qy=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n//pixel deck\nfloat circleSDF(vec2 vUv){\n    return length(vUv - 0.5) * 2.;\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 2.0;\n    float t = u_time * .75;\n    vUv *= Rot(t);\n    float circle = circleSDF(vUv + 0.5);\n    float angle = dot(vUv.y, vUv.x);\n    float radius = length(vUv) * 100.0;\n    vec3 color = vec3(0.);\n    color = hsb2rgb(vec3((angle/TWO_PI * (u_time)) , sin(radius * sin(u_time * 0.25)), 1.0));\n    color -=  tan(circle);\n    gl_FragColor = vec4(color.x, color.y, color.z, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qy,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $y=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n//pixel deck\nfloat circleSDF(vec2 vUv){\n    return length(vUv - 0.5) * 2.;\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 2.0;\n    float t = u_time * .75;\n    vUv *= Rot(t);\n    float circle = circleSDF(vUv + 0.5);\n    float angle = dot(vUv.y, vUv.x);\n    float radius = length(vUv) * 1000.0;\n    //vec3 color = vec3(0.);\n    \n    vec3 color =  vec3(tan(circle));\n    color += hsb2rgb(vec3(atan(circle,angle * radius/TWO_PI) *1. -  abs(cos(u_time * 0.25))));\n    gl_FragColor = vec4(color.x + sin(u_time), color.y - sin(u_time), color.z + cos(u_time), 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ky(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$y,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var e_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb(in vec3 c){\n    vec3 rgb=clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),\n            6.)-3.)-1.,\n            0.,\n            1.);\n    rgb=rgb*rgb*(3.-2.*rgb);\n    return c.z*mix(vec3(1.),rgb,c.y);\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\n//pixel deck\nfloat circleSDF(vec2 vUv){\n    return length(vUv-.5)*2.;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv - 0.5);\n    vUv *= 3.0;\n    float angle=atan(vUv.y,vUv.x);\n    float radius=length(vUv)*5.;\n    float circle=circleSDF(vUv+.5);\n    vec3 color=vec3(tan(circle + u_time));\n    color += 1. - hsb2rgb(vec3(atan(radius, angle)  + sin(u_time), atan(radius,angle)+cos(u_time), atan(radius,angle) +cos(u_time)));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function n_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:e_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var t_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //pixel deck\nfloat circleSDF(vec2 vUv){\n    return length(vUv - 0.5) * 2.;\n}\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv-0.25);\n    vUv *= 2.0;\n    float angle = dot(vUv.y , vUv.x);\n    float radius = length(vUv- 0.5) * 10.0;\n    vec3 color = vec3 (cos(vUv.x), sin(vUv.y + u_time* 0.2), 0.);\n    color *= vec3(step(circleSDF(vUv), 1.9));\n    color *= hsb2rgb(vec3(u_time + radius * sin(vUv.x + vUv.y), u_time + radius, u_time + radius));\n    gl_FragColor = vec4(color , 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function r_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:t_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var o_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n//book of shaders\nfloat plot (vec2 st, float pct){\n  return  smoothstep( pct-0.5, pct, st.y) -\n          smoothstep( pct, pct+0.5, st.y);\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv - 0.5);\n    vUv *= 4.0 + sin(u_time);\n    float t = u_time * .75;\n    vUv *= Rot(t);\n    vec3 color = vec3(0.);\n    color += 1. - hsb2rgb(vec3(cos(vUv.x * vUv.y), u_time * PI, 1.0));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function a_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:o_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var i_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        //vec2 vUv = vec2(vUv);\n        vec3 color = vec3(0.);\n        // float left = step(0.1, vUv.x);\n        // float bottom = step(0.1, vUv.y);\n        vec2 bordersBottomLeft = step(vec2(0.1 * abs(sin(u_time * 0.75))), vUv);\n        vec2 bordersTopRight = step(vec2(0.1 * abs(sin(u_time * 0.75))), 1.0 - vUv);\n        float pct = bordersBottomLeft.x * bordersBottomLeft.y * bordersTopRight.x * bordersTopRight.y;\n        color = vec3(pct);\n        gl_FragColor = vec4(vec3(vUv.x * color.x, vUv.y * color.y, color.z), 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function v_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:i_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var s_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rect(vec2 vUv, vec2 s){\n        vec2 bl = step(vec2(s), vUv);\n        vec2 tr = step(vec2(s), 1. - vUv);\n        return bl.x * bl.y * tr.x * tr.y;\n    }\n    \n    void main(){\n        //vec2 vUv = vec2(vUv - 0.5);\n        vec3 color = vec3(vUv.x * vUv.y);\n        // vec2 bl = step(vec2(0.5), vUv);\n        // vec2 tr = step(vec2(0.1), 1. - vUv);\n        // float pct = bl.x * bl.y * tr.x * tr.y;\n        // float pct2 = 1. - (bl.x  * bl.y * tr.x * tr.y);\n        // color *= vec3(pct2);\n        // color += vec3(pct);\n        float pct = rect(vec2(vUv.x + 0.25 * sin(u_time), vUv.y + 0.25 * cos(u_time)), vec2(0.25));\n        float pct2 = rect(vec2(vUv.x - 0.25 * cos(u_time), vUv.y - 0.25 * sin(u_time)), vec2(0.25));\n        vec3 finalColor = vec3(pct * abs(cos(u_time)), pct * 0.2,  pct * 0.8);\n        finalColor += vec3(pct2 * abs(sin(u_time)), pct2 * 0.8, 0.2);\n        color = finalColor;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function c_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:s_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var l_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rect(vec2 vUv, vec2 s){\n        vec2 bl = step(vec2(s), vUv);\n        vec2 tr = step(vec2(s), 1. - vUv);\n        return bl.x * bl.y * tr.x * tr.y;\n    }\n    \n    //pixel deck\n    float fill(float x, float size){\n        return 1. - step(size, x);\n    }\n    //pixel deck\n    //triangle SDF\n    float triSDF(vec2 vUv){\n        vUv = (vUv * 2. - 1.) * 2.;\n        return max(abs(vUv.x) * 0.866025 + vUv.y * 0.5, -vUv.y * 0.5);\n    } \n    \n    void main(){\n        //vec2 vUv = vec2(vUv - 0.5);\n        vec3 color = vec3(vUv.x * vUv.y);\n        float pct = fill(triSDF(vec2(vUv.x + 0.25 * sin(u_time * 0.5), vUv.y + 0.25 * cos(u_time* 0.5))), 0.35);\n        float pct2 = fill(triSDF(vec2(vUv.x + 0.25 * cos(u_time* 0.5), vUv.y - 0.25 * sin(u_time* 0.5))), 0.35);\n        float pct3 = fill(triSDF(vec2(vUv.x - 0.25 * cos(u_time* 0.5), vUv.y + 0.25 * sin(u_time* 0.5))), 0.35);\n        float pct4 = fill(triSDF(vec2(vUv.x + 0. * sin(u_time* 0.5), vUv.y + 0. * cos(u_time* 0.5))), 0.35);\n        vec3 finalColor = vec3(pct * abs(sin(u_time)), pct * 0.2,  pct * 0.8);\n        finalColor += vec3(pct2 * abs(sin(u_time)), pct2 * 0.8, pct2 * 0.1);\n        finalColor += vec3(pct3 * abs(sin(u_time)), pct3 * 0.4, pct3 * 0.3);\n        finalColor += vec3(pct4 * abs(cos(u_time)), pct4 * 0.2, pct4 * 0.5);\n        color = finalColor;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function u_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:l_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var f_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float triSDF(vec2 vUv){\n        vUv=(vUv*2.-1.)*2.;\n        return max(abs(vUv.x)*.866025+vUv.y*.5,-vUv.y*.5);\n    }\n    \n    //rotation function\n    mat2 Rot(float a){\n        float s=sin(a);\n        float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n    \n    void main(){\n        vec2 newvUv = vec2(vUv + 1.5 );\n    \n        newvUv *= 20.25;\n        float t=sin(u_time*.75);\n        \n        vec3 color=vec3(0.);\n        float pct = triSDF(vec2(vUv.x,vUv.y));\n        color = vec3(pct, pct, pct);\n        color.xy*=Rot(t);\n        color.yz*=Rot(t);\n        color.xz*=Rot(t);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function p_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:f_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var m_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //pixel deck\nfloat fill(float x, float size){\n    return 1. - step(size, x);\n}\n//pixel deck\n//triangle SDF\nfloat triSDF(vec2 vUv){\n    vUv = (vUv * 2. - 1.) * 2.;\n    return max(abs(vUv.x) * 0.866025 + vUv.y * 0.5, -vUv.y * 0.5);\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv - 0.5);\n    vUv *= 2.0;\n    float t = u_time * .75;\n    vUv *= Rot(t);\n    vec3 color = vec3(0.);\n    float tri = fill(triSDF(vUv + 0.5), 1.0);\n    float tri2 = fill(triSDF(vUv + 0.3), 1.25);\n    float tri3 = fill(triSDF(vec2(vUv.x + 0.15, vUv.y + 0.25)), 1.);\n    color = vec3(abs(sin(tri + u_time * vUv.x)), abs(cos(tri + u_time + vUv.y)), (sin(tri + 0.2 + u_time)));\n    vec3 finalColor = vec3(vUv, 1.);\n    vec3 color2 = vec3(tri2);\n    vec3 color3 = vec3(tri3);\n    finalColor += color;\n    finalColor *= color2;\n    finalColor -= color3;\n    gl_FragColor = vec4(finalColor, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function d_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:m_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var h_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //pixel deck\nfloat fill(float x, float size){\n    return 1. - step(size, x);\n}\n//pixel deck\n//triangle SDF\nfloat triSDF(vec2 vUv){\n    vUv = (vUv * 2. - 1.) * 2.;\n    return max(abs(vUv.x) * 0.866025 + vUv.y * 0.5, -vUv.y * 0.5);\n}\n\n//rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\n//  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vec3 color = vec3(0.);\n    float angle = dot(vUv.y , vUv.x);\n    float radius = length(vUv- 0.5) * 10.0;\n    float tri = 1. - fill(triSDF(vUv), 0.5);\n    float tri2 = fill(triSDF(vec2(vUv.x, vUv.y + 0.1)), 0.4);\n    float tri3 = 1. - fill(triSDF(vec2(vUv.x, vUv.y + 0.2)), 0.3);\n    float shape = float(tri + tri2 * tri3);\n    color = vec3(shape);\n    color += hsb2rgb(vec3(u_time + radius * sin(vUv.x - 0.25 + vUv.y), u_time + radius, u_time + radius));\n    gl_FragColor = vec4(vec3(shape, shape + color.y, shape), 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function x_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:h_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var g_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rect(vec2 size, vec2 vUv){\n        vec2 bl = step(size, vUv);\n        vec2 tr = step(size, 1. - vUv);\n        return bl.x * bl.y * tr.x * tr.y;\n    }\n    \n    //rotation function\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x - 0.75, vUv.y - 0.5);\n        vUv *= 5.0;\n        float t = u_time;\n        vUv *= Rot(t);\n        vec3 color = vec3(0.);\n        float pct = rect(vec2(0.3, 0.49), vUv + sin(u_time));\n        float pct2 = rect(vec2(0.3, 0.49), vec2(vUv.x, vUv.y + 0.5 )+ cos(u_time));\n        float pct3 = rect(vec2(0.49, 0.3), vec2(vUv.x, vUv.y + 0.5 )+ cos(u_time));\n        float pct4 = rect(vec2(0.49, 0.3), vUv + sin(u_time));\n        float pct5 = rect(vec2(0.3, 0.49), vec2(vUv.x, vUv.y + 1.) + sin(u_time));\n        float pct6 = rect(vec2(0.49, 0.3), vec2(vUv.x, vUv.y + 1.) + sin(u_time));\n        color = vec3(0.);\n        color.g += pct;\n        color.r += pct2;\n        color.r += pct3;\n        color.g += pct4;\n        color.b += pct5;\n        color.b += pct6;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function y_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:g_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var __=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main(){\n    vec3 color = vec3(0.);\n    //a\n    float pct = smoothstep(0.1, 0.15, distance(vUv, vec2(0.8 * cos(u_time), 1. * abs(sin(u_time)))));\n    float pct2 = smoothstep(0.1, 0.15, distance(vUv, vec2(0.5, 1. * abs(cos(u_time)))));\n    float pct3 = smoothstep(0.1, 0.15, distance(vUv, vec2(0.2, 1. * abs(sin(u_time)))));\n    color = vec3(pct);\n    color *= vec3(pct2);\n    color *= vec3(pct3);\n\n    color.x = sin(color.x * u_time * 0.25);\n    color.y = sin(color.y * u_time * 0.25);\n    color.z = sin(color.z * u_time * 0.25); \n    // //b\n    // vec2 vUv = vec2(vUv) - 0.5;\n    // float pct = length(vUv);\n    // color = vec3(pct);\n\n    // //c\n    // vec2 vUv = vec2(vUv) - 0.5;\n    // float pct = sqrt(vUv.x * vUv.x + vUv.y * vUv.y);\n    // color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function b_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:__,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var U_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        float y = step(distance(vUv, vec2(0.5, 0.5)), 0.5);\n        float x = 1. - step(distance(vUv, vec2(0.5, 0.5)), 0.49);\n        float cir1 = step(distance(vUv, vec2(0.74, 0.49)), 0.25);\n        float cir2 = step(distance(vUv, vec2(0.25, 0.52)), 0.24);\n        x+=step(vUv.y,.5);\n        vec3 color = vec3(y * x);\n        color += vec3(cir1);\n        color -= vec3(cir2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function w_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:U_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var S_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //circle sdf\nfloat circ(vec2 vUv, vec2 pos, float size){\n    return 1. - step(size, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    float y1 = circ(vUv, vec2(0.1, 1. * abs(sin(u_time * 0.9))), 0.05);\n    float y2 = circ(vUv, vec2(0.2, 1. * abs(sin(u_time * 0.85))), 0.05);\n    float y3 = circ(vUv, vec2(0.3, 1. * abs(sin(u_time * 0.80))), 0.05);\n    float y4 = circ(vUv, vec2(0.4, 1. * abs(sin(u_time * 0.75))), 0.05);\n    float y5 = circ(vUv, vec2(0.5, 1. * abs(sin(u_time * 0.70))), 0.05);\n    float y6 = circ(vUv, vec2(0.6, 1. * abs(sin(u_time * 0.65))), 0.05);\n    float y7 = circ(vUv, vec2(0.7, 1. * abs(sin(u_time * 0.60))), 0.05);\n    float y8 = circ(vUv, vec2(0.8, 1. * abs(sin(u_time * 0.55))), 0.05);\n    float y9 = circ(vUv, vec2(0.9, 1. * abs(sin(u_time * 0.50))), 0.05);\n\n    vec3 color = vec3(y1 + y2 + y3 + y4 + y5 + y6 + y7 + y8 + y9);\n    \n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function M_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:S_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var j_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //circle sdf\nfloat circ(vec2 vUv,vec2 pos,float size){\n    return 1.-step(size,distance(vUv,pos));\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y) - 0.5;\n    vUv *= 2.0;\n    float y1=circ(vUv,vec2(.5*(sin(u_time*.1 * 2.)),.5*(cos(u_time*.1))),.05);\n    float y2=circ(vUv,vec2(.5*(sin(u_time*.2* 2.)),.5*(cos(u_time*.2))),.05);\n    float y3=circ(vUv,vec2(.5*(sin(u_time*.3* 2.)),.5*(cos(u_time*.3))),.05);\n    float y4=circ(vUv,vec2(.5*(sin(u_time*.4* 2.)),.5*(cos(u_time*.4))),.05);\n    float y5=circ(vUv,vec2(.5*(sin(u_time*.5* 2.)),.5*(cos(u_time*.5))),.05);\n    float y6=circ(vUv,vec2(.5*(sin(u_time*.6* 2.)),.5*(cos(u_time*.6))),.05);\n    float y7=circ(vUv,vec2(.5*(sin(u_time*.7* 2.)),.5*(cos(u_time*.7))),.05);\n    float y8=circ(vUv,vec2(.5*(sin(u_time*.8* 2.)),.5*(cos(u_time*.8))),.05);\n    float y9=circ(vUv,vec2(.5*(sin(u_time*.9* 2.)),.5*(cos(u_time*.9))),.05);\n    float y10=circ(vUv,vec2(.5*(sin(u_time*1.0*2.)),.5*(cos(u_time*1.0))),.05);\n    float y11=circ(vUv,vec2(.5*(sin(u_time*1.1*2.)),.5*(cos(u_time*1.1))),.05);\n    float y12=circ(vUv,vec2(.5*(sin(u_time*1.2*2.)),.5*(cos(u_time*1.2))),.05);\n    float y13=circ(vUv,vec2(.5*(sin(u_time*1.3*2.)),.5*(cos(u_time*1.3))),.05);\n    float y14=circ(vUv,vec2(.5*(sin(u_time*1.4*2.)),.5*(cos(u_time*1.4))),.05);\n    float y15=circ(vUv,vec2(.5*(sin(u_time*1.5*2.)),.5*(cos(u_time*1.5))),.05);\n    float y16=circ(vUv,vec2(.5*(sin(u_time*1.6*2.)),.5*(cos(u_time*1.6))),.05);\n    float y17=circ(vUv,vec2(.5*(sin(u_time*1.7*2.)),.5*(cos(u_time*1.7))),.05);\n    float y18=circ(vUv,vec2(.5*(sin(u_time*1.8*2.)),.5*(cos(u_time*1.8))),.05);\n    float y19=circ(vUv,vec2(.5*(sin(u_time*1.9*2.)),.5*(cos(u_time*1.9))),.05);\n    float y20=circ(vUv,vec2(.5*(sin(u_time*2.0*2.)),.5*(cos(u_time*2.0))),.05);\n    \n    vec3 color=vec3(y1 + y2 + y3 + y4 + y5 + y6 + y7 + y8 + y9 + y10 + y11 + y12 + y13 + y14 + y15 + y16 + y17 + y18 + y19 + y20);\n    \n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function k_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:j_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var C_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //circle sdf\nfloat circ(vec2 vUv,vec2 pos,float size){\n    return 1.-step(size,distance(vUv,pos));\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y)-.5;\n    vUv*=2.;\n    float y1=circ(vUv,vec2(0.,0.),abs(cos(u_time * .1)));\n    float y2=circ(vUv,vec2(0.,0.),abs(cos(u_time * .2)));\n    float y3=circ(vUv,vec2(0.,0.),abs(cos(u_time * .3)));\n    float y4=circ(vUv,vec2(0.,0.),abs(cos(u_time * .4)));\n    float y5=circ(vUv,vec2(0.,0.),abs(cos(u_time * .5)));\n    float y6=circ(vUv,vec2(0.,0.),abs(cos(u_time * .6)));\n    float y7=circ(vUv,vec2(0.,0.),abs(cos(u_time * .7)));\n    float y8=circ(vUv,vec2(0.,0.),abs(cos(u_time * .8)));\n    float y9=circ(vUv,vec2(0.,0.),abs(cos(u_time * .9)));\n\n    vec3 color=vec3(0.);\n    color.b-=y1 * y9 / abs(sin(u_time));\n    color.r-=y2 * y8 / abs(sin(u_time));\n    color.g-=y3 * y7 / abs(sin(u_time));\n    color.r+=y4 * y6 / abs(sin(u_time));\n    color.b+=y5 * y1 / abs(sin(u_time));\n    color.g-=y6 * y4 / abs(sin(u_time));\n    color.b+=y7 * y3 / abs(sin(u_time));\n    color.r-=y8 * y2 / abs(sin(u_time));\n    color.g+=y9 * y1 / abs(sin(u_time));\n    \n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function T_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:C_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var R_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n\n//circle sdf\nfloat circ(vec2 vUv, vec2 pos, float size){\n    return 1. - step(size, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 1.5;\n    vec3 color = vec3(0.);\n    float c1 = circ(vUv, vec2(0.5 * sin(u_time * 1.10), 0.5 * cos(u_time -1.10)), 0.025);\n    float c2 = circ(vUv, vec2(0.5 * sin(u_time * 1.15), 0.5 * cos(u_time -1.15)), 0.025);\n    float c3 = circ(vUv, vec2(0.5 * sin(u_time * 1.20), 0.5 * cos(u_time -1.20)), 0.025);\n    float c4 = circ(vUv, vec2(0.5 * sin(u_time * 1.25), 0.5 * cos(u_time -1.25)), 0.025);\n    float c5 = circ(vUv, vec2(0.5 * sin(u_time * 1.30), 0.5 * cos(u_time -1.30)), 0.025);\n    float c6 = circ(vUv, vec2(0.5 * sin(u_time * 1.35), 0.5 * cos(u_time -1.35)), 0.025);\n    float c7 = circ(vUv, vec2(0.5 * sin(u_time * 1.40), 0.5 * cos(u_time -1.40)), 0.025);\n    float c8 = circ(vUv, vec2(0.5 * sin(u_time * 1.45), 0.5 * cos(u_time -1.45)), 0.025);\n    float c9 = circ(vUv, vec2(0.5 * sin(u_time * 1.50), 0.5 * cos(u_time -1.50)), 0.025);\n    float c10 = circ(vUv, vec2(0.5 * sin(u_time * 1.55), 0.5 * cos(u_time - 1.55)), 0.025);\n    float c11 = circ(vUv, vec2(0.5 * sin(u_time * 1.60), 0.5 * cos(u_time - 1.60)), 0.025);\n    float c12 = circ(vUv, vec2(0.5 * sin(u_time * 1.65), 0.5 * cos(u_time - 1.65)), 0.025);\n    float c13 = circ(vUv, vec2(0.5 * sin(u_time * 1.70), 0.5 * cos(u_time - 1.70)), 0.025);\n    float c14 = circ(vUv, vec2(0.5 * sin(u_time * 1.75), 0.5 * cos(u_time - 1.75)), 0.025);\n    float c15 = circ(vUv, vec2(0.5 * sin(u_time * 1.80), 0.5 * cos(u_time - 1.80)), 0.025);\n    float c16 = circ(vUv, vec2(0.5 * sin(u_time * 1.85), 0.5 * cos(u_time - 1.85)), 0.025);\n    float c17 = circ(vUv, vec2(0.5 * sin(u_time * 1.90), 0.5 * cos(u_time - 1.90)), 0.025);\n    float c18 = circ(vUv, vec2(0.5 * sin(u_time * 1.95), 0.5 * cos(u_time - 1.95)), 0.025);\n    float c19 = circ(vUv, vec2(0.5 * sin(u_time * 2.00), 0.5 * cos(u_time - 2.00)), 0.025);\n    float c20 = circ(vUv, vec2(0.5 * sin(u_time * 2.05), 0.5 * cos(u_time - 2.05)), 0.025);\n    float c21 = circ(vUv, vec2(0.5 * sin(u_time * 2.10), 0.5 * cos(u_time - 2.10)), 0.025);\n    float c22 = circ(vUv, vec2(0.5 * sin(u_time * 2.15), 0.5 * cos(u_time - 2.15)), 0.025);\n    float c23 = circ(vUv, vec2(0.5 * sin(u_time * 2.20), 0.5 * cos(u_time - 2.20)), 0.025);\n    float c24 = circ(vUv, vec2(0.5 * sin(u_time * 2.25), 0.5 * cos(u_time - 2.25)), 0.025);\n    float c25 = circ(vUv, vec2(0.5 * sin(u_time * 2.30), 0.5 * cos(u_time - 2.30)), 0.025);\n    float c26 = circ(vUv, vec2(0.5 * sin(u_time * 2.35), 0.5 * cos(u_time - 2.35)), 0.025);\n    float c27 = circ(vUv, vec2(0.5 * sin(u_time * 2.40), 0.5 * cos(u_time - 2.40)), 0.025);\n    float c28 = circ(vUv, vec2(0.5 * sin(u_time * 2.45), 0.5 * cos(u_time - 2.45)), 0.025);\n    float c29 = circ(vUv, vec2(0.5 * sin(u_time * 2.50), 0.5 * cos(u_time - 2.50)), 0.025);\n    float c30 = circ(vUv, vec2(0.5 * sin(u_time * 2.55), 0.5 * cos(u_time - 2.55)), 0.025);\n    float c31 = circ(vUv, vec2(0.5 * sin(u_time * 2.60), 0.5 * cos(u_time - 2.60)), 0.025);\n    float c32 = circ(vUv, vec2(0.5 * sin(u_time * 2.65), 0.5 * cos(u_time - 2.65)), 0.025);\n    float c33 = circ(vUv, vec2(0.5 * sin(u_time * 2.70), 0.5 * cos(u_time - 2.70)), 0.025);\n    float c34 = circ(vUv, vec2(0.5 * sin(u_time * 2.75), 0.5 * cos(u_time - 2.75)), 0.025);\n    float c35 = circ(vUv, vec2(0.5 * sin(u_time * 2.80), 0.5 * cos(u_time - 2.80)), 0.025);\n    float c36 = circ(vUv, vec2(0.5 * sin(u_time * 2.85), 0.5 * cos(u_time - 2.85)), 0.025);\n    float c37 = circ(vUv, vec2(0.5 * sin(u_time * 2.90), 0.5 * cos(u_time - 2.90)), 0.025);\n    float c38 = circ(vUv, vec2(0.5 * sin(u_time * 2.95), 0.5 * cos(u_time - 2.95)), 0.025);\n    float c39 = circ(vUv, vec2(0.5 * sin(u_time * 3.00), 0.5 * cos(u_time - 3.00)), 0.025);\n    float c40 = circ(vUv, vec2(0.5 * sin(u_time * 3.05), 0.5 * cos(u_time - 3.05)), 0.025);\n    float c41 = circ(vUv, vec2(0.5 * sin(u_time * 3.10), 0.5 * cos(u_time - 3.10)), 0.025);\n    float c42 = circ(vUv, vec2(0.5 * sin(u_time * 3.15), 0.5 * cos(u_time - 3.15)), 0.025);\n    float c43 = circ(vUv, vec2(0.5 * sin(u_time * 3.20), 0.5 * cos(u_time - 3.20)), 0.025);\n    float c44 = circ(vUv, vec2(0.5 * sin(u_time * 3.25), 0.5 * cos(u_time - 3.25)), 0.025);\n    float c45 = circ(vUv, vec2(0.5 * sin(u_time * 3.30), 0.5 * cos(u_time - 3.30)), 0.025);\n    float c46 = circ(vUv, vec2(0.5 * sin(u_time * 3.35), 0.5 * cos(u_time - 3.35)), 0.025);\n    float c47 = circ(vUv, vec2(0.5 * sin(u_time * 3.40), 0.5 * cos(u_time - 3.40)), 0.025);\n    float c48 = circ(vUv, vec2(0.5 * sin(u_time * 3.45), 0.5 * cos(u_time - 3.45)), 0.025);\n    float c49 = circ(vUv, vec2(0.5 * sin(u_time * 3.50), 0.5 * cos(u_time - 3.50)), 0.025);\n    float c50 = circ(vUv, vec2(0.5 * sin(u_time * 3.55), 0.5 * cos(u_time - 3.55)), 0.025);\n    color.rg += c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8 + c9 + c10 +\n             c11 + c12 + c13 + c14 + c15 + c16 + c17 + c18 + c19 + c20 +\n             c21 + c22 + c23 + c24 + c25 + c26 + c27 + c28 + c29 + c30 +\n             c31 + c32 + c33 + c34 + c35 + c36 + c37 + c38 + c39 + c40 +\n             c41 + c42 + c43 + c44 + c45 + c46 + c47 + c48 + c49 + c50;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function z_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:R_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var P_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rotation function\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 5. - 2.5;\n    float t = u_time;\n    vUv *= Rot(t);\n    float d1 = length( min(abs(vec2(vUv.x + sin(u_time), vUv.y * cos(u_time)) + 0.15 * 1.1)-.1,0.));\n    float d2 = length( min(abs(vec2(vUv.x * sin(u_time), vUv.y + cos(u_time)) - 0.25 * 2.1)-.1,0.));\n    float d3 = length( min(abs(vec2(vUv.x + sin(u_time), vUv.y * cos(u_time)) + 0.35 * 3.1)-.1,0.));\n    float d4 = length( min(abs(vec2(vUv.x * sin(u_time), vUv.y + cos(u_time)) - 0.45 * 4.1)-.1,0.));\n    float d5 = length( min(abs(vec2(vUv.x + sin(u_time), vUv.y * cos(u_time)) + 0.55 * 5.1)-.1,0.));\n    float d6 = length( min(abs(vec2(vUv.x * sin(u_time), vUv.y + cos(u_time)) - 0.65 * 6.1)-.1,0.));\n    float d7 = length( min(abs(vec2(vUv.x + sin(u_time), vUv.y * cos(u_time)) + 0.75 * 7.1)-.1,0.));\n    float d8 = length( min(abs(vec2(vUv.x * sin(u_time), vUv.y + cos(u_time)) - 0.85 * 8.1)-.1,0.));\n    //d = length( max(abs(vUv)-.3,0.) );\n    vec3 color = vec3(0.);\n    color = vec3(fract(d1 * 10.));\n    color += vec3(fract(d2 * 10.));\n    color += vec3(fract(d3 * 10.));\n    color += vec3(fract(d4 * 10.));\n    color += vec3(fract(d5 * 10.));\n    color += vec3(fract(d6 * 10.));\n    color += vec3(fract(d7 * 10.));\n    color += vec3(fract(d8 * 10.));\n    //color = vec3(step(0.3, d) * step(d, 0.4));\n    //color = vec3(smoothstep(0.3, 0.4, d) * smoothstep(0.6, 0.5, d));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function F_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:P_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var D_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        vec2 vUv = vec2(vUv);\n        vUv = vUv * 4. -2.;\n        float d1 = step(0.05, length(abs(vec2(vUv.x + sin(u_time * 1.0 * 1.2) - 0.0, vUv.y + cos(u_time *  1.0 * 1.2) - 0.0)) - 0.25));\n        float d2 = step(0.05, length(abs(vec2(vUv.x + cos(u_time * 1.1 * 1.2) - 0.0, vUv.y + sin(u_time *  1.1 * 1.2) - 0.0)) - 0.25));\n        float d3 = step(0.05, length(abs(vec2(vUv.x + cos(u_time * 1.2 * 1.2) - 0.1, vUv.y + sin(u_time *  1.2 * 1.2) - 0.1)) - 0.25));\n        float d4 = step(0.05, length(abs(vec2(vUv.x + sin(u_time * 1.3 * 1.2) - 0.1, vUv.y + cos(u_time *  1.3 * 1.2) - 0.1)) - 0.25));\n        float d5 = step(0.05, length(abs(vec2(vUv.x + cos(u_time * 1.4 * 1.2) + 0.1, vUv.y + sin(u_time *  1.4 * 1.2) + 0.1)) - 0.25));\n        float d6 = step(0.05, length(abs(vec2(vUv.x + sin(u_time * 1.5 * 1.2) + 0.1, vUv.y + cos(u_time *  1.5 * 1.2) + 0.1)) - 0.25));\n        float d7 = step(0.05, length(abs(vec2(vUv.x + cos(u_time * 1.6 * 1.2) + 0.1, vUv.y + sin(u_time *  1.6 * 1.2) - 0.1)) - 0.25));\n        float d8 = step(0.05, length(abs(vec2(vUv.x + sin(u_time * 1.7 * 1.2) + 0.1, vUv.y + cos(u_time *  1.7 * 1.2) - 0.1)) - 0.25));\n        float d9 = step(0.05, length(abs(vec2(vUv.x + cos(u_time * 1.8 * 1.2) - 0.1, vUv.y + sin(u_time *  1.8 * 1.2) + 0.1)) - 0.25));\n        float d10 = step(0.05, length(abs(vec2(vUv.x +sin(u_time * 1.9 * 1.2) - 0.1, vUv.y + cos(u_time *  1.9 * 1.2) + 0.1)) - 0.25));\n    \n        vec3 color = vec3(0.);\n        color = vec3(d1 * d2 * d3 * d4 * d5 * d6 * d7 * d8 * d9 * d10);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function E_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:D_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var I_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        vec2 vUv = vec2(vUv);\n        vUv = vUv * 4. -2.;\n        float d1 = step(0.1*  abs(sin(2.0 * u_time)), length(abs(vec2(vUv.x - 1.50, vUv.y + cos(u_time *  3.0 * 0.75))) - 0.25));\n        float d2 = step(0.1*  abs(sin(2.1 * u_time)), length(abs(vec2(vUv.x - 1.25, vUv.y + cos(u_time *  3.1 * 0.75))) - 0.25));\n        float d3 = step(0.1*  abs(sin(2.2 * u_time)), length(abs(vec2(vUv.x - 1.00, vUv.y + cos(u_time *  3.2 * 0.75))) - 0.25));\n        float d4 = step(0.1*  abs(sin(2.3 * u_time)), length(abs(vec2(vUv.x - 0.75, vUv.y + cos(u_time *  3.3 * 0.75))) - 0.25));\n        float d5 = step(0.1*  abs(sin(2.4 * u_time)), length(abs(vec2(vUv.x - 0.50, vUv.y + cos(u_time *  3.4 * 0.75))) - 0.25));\n        float d6 = step(0.1*  abs(sin(2.5 * u_time)), length(abs(vec2(vUv.x - 0.25, vUv.y + cos(u_time *  3.5 * 0.75))) - 0.25));\n        float d7 = step(0.1*  abs(sin(2.6 * u_time)), length(abs(vec2(vUv.x + 0.00, vUv.y + cos(u_time *  3.6 * 0.75))) - 0.25));\n        float d8 = step(0.1*  abs(sin(2.7 * u_time)), length(abs(vec2(vUv.x + 0.25, vUv.y + cos(u_time *  3.7 * 0.75))) - 0.25));\n        float d9 = step(0.1*  abs(sin(2.8 * u_time)), length(abs(vec2(vUv.x + 0.50, vUv.y + cos(u_time *  3.8 * 0.75))) - 0.25));\n        float d10 =step(0.1*  abs(sin(2.9 * u_time)), length(abs(vec2(vUv.x + 0.75, vUv.y + cos(u_time *  3.9 * 0.75))) - 0.25));\n        float d11 =step(0.1*  abs(sin(3.0 * u_time)), length(abs(vec2(vUv.x + 1.00, vUv.y + cos(u_time *  4.0 * 0.75))) - 0.25));\n        float d12 =step(0.1*  abs(sin(3.1 * u_time)), length(abs(vec2(vUv.x + 1.25, vUv.y + cos(u_time *  4.1 * 0.75))) - 0.25));\n        float d13 =step(0.1*  abs(sin(3.2 * u_time)), length(abs(vec2(vUv.x + 1.50, vUv.y + cos(u_time *  4.2 * 0.75))) - 0.25));\n    \n        vec3 color = vec3(0.);\n        color = 1. - vec3(d1 * d2 * d3 * d4 * d5 * d6 * d7 * d8 * d9 * d10 * d11 * d12 * d13);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function L_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:I_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var A_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rotation function\nmat2 RotClock(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nmat2 RotCounter(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    float t=u_time*.25 - 0.5;\n    \n    vec3 color = vec3(0.);\n    \n    vec2 pos = vec2(0.5 - vUv.x, 0.5 - vUv.y);\n    pos*=RotClock(t*1.)*2.;\n    float r=length(pos)*2.;\n    float a=atan(pos.y,pos.x);\n    \n    vec2 pos2=vec2(.28-vUv.x,.72-vUv.y);\n    pos2*= RotCounter(t*1.)*2.;\n    float r2=length(pos2)*2.;\n    float a2=atan(pos2.y,pos2.x);\n\n    vec2 pos3=vec2(.78-vUv.x,.64-vUv.y);\n    pos3*=RotCounter(t*1.)*2.;\n    float r3=length(pos3)*2.;\n    float a3=atan(pos3.y,pos3.x);\n\n    vec2 pos4=vec2(.55-vUv.x,.19-vUv.y);\n    pos4*=RotCounter(t*1.)*2.;\n    float r4=length(pos4)*2.;\n    float a4=atan(pos4.y,pos4.x);\n    \n    \n    float f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;\n    float f2=smoothstep(-.5,1.,cos(a2*10.))*.2+.5;\n    float f3=smoothstep(-.5,1.,cos(a3*10.))*.2+.5;\n    float f4=smoothstep(-.5,1.,cos(a4*10.))*.2+.5;\n\n    vec3 d1=vec3(1.-smoothstep(f, f + 0.02, r));\n    vec3 d2=vec3(1.-smoothstep(f2,f2+.02,r2));\n    vec3 d3=vec3(1.-smoothstep(f3,f3+.02,r3));\n    vec3 d4=vec3(1.-smoothstep(f4,f4+.02,r4));\n\n    color = d1;\n    color += d2;\n    color += d3;\n    color+=d4;\n\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function O_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:A_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var B_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rotation function\nmat2 RotClock(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid main(){\n    vec3 color = vec3(0.);\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. -1.;\n\n    vec2 pos=vec2(vUv.x,vUv.y * abs(cos(u_time * 0.5)));\n    vec2 pos2=vec2(vUv.x * abs(sin(u_time)),vUv.y);\n    vec2 pos3=vec2(vUv.x * abs(cos(u_time)),vUv.y);\n    float t=u_time*.25-.5;\n    pos*=RotClock(t*1.);\n    pos2*=RotClock(t*1.);\n    pos3*=RotClock(t*1.);\n    \n    int tri = 3;\n    int quad= 4;\n    int pent =5;\n    int hex = 6;\n    float a = atan(pos.x, pos.y) + PI ;\n    float a2=atan(pos2.x,pos2.y)+PI;\n    float a3=atan(pos3.x,pos3.y)+PI;\n    float r3=TWO_PI/float(tri) ;\n    float r4=TWO_PI/float(quad);\n    float r6=TWO_PI/float(hex) ;\n    float d3=cos(floor(.5+a/r3)*r3 - a)*(length(vUv)) * 3.0;\n    float d4=cos(floor(.5+a2/r4)*r4 - a2)*(length(vUv)) * 1.0;\n    float d6=cos(floor(.5+a3/r6)*r6 - a3)*(length(vUv)) * 0.5;\n    float shape3= (1.-smoothstep(.4,.41,d3));\n    float shape4= (1.-smoothstep(.4,.41,d4));\n    float shape6= (1.-smoothstep(.4,.41,d6));\n    //shape = vec3(d);\n    color.xz += shape3 - 0.1;\n    color.y += shape4;\n    color.z += shape6;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function N_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:B_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var G_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        vec2 vUv = vec2(vUv);\n        vUv = vUv * 2. - 1.;\n        vec3 color = vec3(0.);\n        float d = length((vec2((vUv.x) - (sin(u_time/2.)), (vUv.y) - cos(u_time/2.))) );\n        d *= atan(d, d);\n        d *= step(0.05, d);\n        float d2=length((vec2((vUv.x) - (cos(u_time/2.)),(vUv.y) - sin(u_time/2.))) );\n        d2*=atan(d2, d2);\n        d2*=step(.05,d2);\n        color = vec3(d / vUv.x, d +  vUv.y, 0.5);\n        color += vec3(d2 / vUv.x, d2 + vUv.y, 0.5);\n        color *= vec3(d);\n        color *= vec3(d2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function V_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:G_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var q_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = vUv * 3.0 - 1.5;\n        float t = u_time * u_time;\n        vUv *= Rot(t);\n        float r = length(vec2(vUv.x, vUv.y));\n        float a = atan(vUv.x, vUv.y);\n        float f = cos(a * 3.);\n        float shape = 1. - smoothstep(f, f + 0.02, r);\n        color = vec3(shape * vUv.x, shape * vUv.y, shape * vUv.x * vUv.y);  \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function W_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:q_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var H_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 1.;\n        float t = u_time * 0.75;\n        vUv *= Rot(t);\n        vec3 color = vec3(0.);\n        int N = 3;\n        float a  = dot(vUv.x, vUv.y) * TWO_PI * 1. - sin(u_time + TWO_PI);\n        float r = PI/(float(N) * 1.  - (sin(u_time)));\n        float d = cos(floor(.5 + a / r) * r - a) * length(vUv);\n        float shape = 1.0 - smoothstep(.05, 0.9, d);\n        color = vec3(shape * vUv.x + shape, shape * vUv.y + shape, shape);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function X_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:H_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Y_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec3 color = vec3(0.);\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 4. -2.;\n        float t = u_time * 0.75;\n        vUv *= Rot(t);\n        int sides = 3;\n        float a = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/float(sides);\n        float shape = cos(floor(.5 + a/r) * r -a) * length(vUv + atan(sin(u_time * 0.5)));\n        float shape2 = cos(floor(.5 + a/r) * r -a) * length(vUv + atan(cos(u_time * 0.75)));\n        float shape3 = cos(floor(.5 + a/r) * r -a) * length(vUv + atan(sin(u_time * 0.6)));\n        float str = 1.0 - smoothstep(.2, .41, shape);\n        float str2 = 1.0 - smoothstep(.2, .41, shape2);\n        float str3 = 1.0 - smoothstep(.2, .41, shape3);\n        color = vec3(str, str, vUv.y * str * vUv.x);\n        color += vec3(str2, vUv.y * str2 * vUv.x, str2);\n        color += vec3(vUv.y * str3 * vUv.x, str3, str3);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Z_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Y_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Q_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 6. - 3.;\n        float a  = atan(vUv.x + cos(u_time) * 2.0, vUv.y + sin(u_time) * 2.0) + (sin(u_time * 0.5) * 3.0);\n        float r = TWO_PI/3.;\n        float d = sin(floor(.8 + a/r) * r -a ) * length(vUv);\n        float shape = 1.0 - smoothstep(.4, .41, d);\n        vec3 color = vec3(0.);\n        color = vec3(shape - 0.2, shape - 0.5, shape + 0.3);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function J_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Q_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $_=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rotation function\nmat2 Rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 3. - 1.5;\n    float t=u_time*.25;\n    vUv*=Rot(t*1.);\n    vec3 color = vec3(0.);\n    float r = sin(vUv.x * TWO_PI);\n    float s = cos(vUv.y * TWO_PI);\n    float q = cos(vUv.y * TWO_PI * sin(u_time * 0.5));\n    float p = sin(vUv.x * TWO_PI * sin(u_time * 0.5));\n    float str = r * s + q  + p;\n    float shape = smoothstep(.8, .81, str);\n    color = vec3(shape);\n    color *= q;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function K_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$_,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rotation function\nmat2 Rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vUv = vUv * 2. - 1.;\n    vec2 r1=abs(vUv);\n    r1*=Rot(sin(u_time) );\n    vec2 r2=abs(vUv);\n    r2*=Rot(sin(u_time * .25) );\n    vec2 r3=abs(vUv);\n    r3*=Rot(sin(u_time * .50) );\n    vec2 r4=abs(vUv);\n    r4*=Rot(sin(u_time * .75) );\n    vec2 r5=abs(vUv);\n    r5*=Rot(sin(u_time * 1.25) );\n    float s1=max(r1.x,r1.y);\n    float s2=max(r2.x,r2.y);\n    float s3=max(r3.x,r3.y);\n    float s4=max(r4.x,r4.y);\n    float s5=max(r5.x,r5.y);\n    float shape1=step(.4,s1);\n    float shape2=step(s2,.5);\n    float shape3=step(.6,s3);\n    float shape4=step(s4,.3);\n    float shape5=step(.2,s5);\n    vec3 color = vec3(0.);\n    color = vec3(shape1 * shape2);\n    color += vec3(shape3);\n    color += vec3(shape4);\n    color *= vec3(shape5);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s=sin(a);\n        float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv);\n        vUv = vUv * (6. * sin(u_time * 0.5)) - (3. * sin(u_time * 0.5));\n        vec2 r1=vUv;\n        r1*=Rot(sin(-u_time * 0.5 * 3.));\n        vec2 r2=vUv;\n        r2*=Rot(sin(u_time * 0.4 * 3.));\n        vec2 r3=vUv;\n        r3*=Rot(sin(u_time * 0.6 * 3.));\n        vec2 r4=vUv;\n        r4*=Rot(sin(-u_time * 0.3 * 3.));\n        vec2 r5=vUv;\n        r5*=Rot(sin(u_time * 0.2 * 3.));\n        vec2 r6=vUv;\n        r6*=Rot(sin(-u_time * 0.1 * 3.));\n        vec3 color = vec3(0.);\n        int N = 6;\n        float a1=atan(r1.x,r1.y);\n        float a2=atan(r2.x,r2.y);\n        float a3=atan(r3.x,r3.y);\n        float a4=atan(r4.x,r4.y);\n        float a5=atan(r5.x,r5.y);\n        float a6=atan(r6.x,r6.y);\n        float b = 6.28319 / float(N);\n        vec3 shape1=vec3(smoothstep(.5, .51, cos(floor(.5 + a1/b) * b - a1) * length(vec2(vUv.x,vUv.y))));\n        vec3 shape2=vec3(smoothstep(1.1,1.11,cos(floor(.5+a2/b)*b-a2)*length(vec2(vUv.x,vUv.y))));\n        vec3 shape3=vec3(smoothstep(.1,.11,cos(floor(.5+a3/b)*b-a3)*length(vec2(vUv.x,vUv.y))));\n        vec3 shape4=vec3(smoothstep(1.5,1.51,cos(floor(.5+a4/b)*b-a4)*length(vec2(vUv.x,vUv.y))));\n        vec3 shape5=vec3(smoothstep(2.1,2.11,cos(floor(.5+a5/b)*b-a5)*length(vec2(vUv.x,vUv.y))));\n        vec3 shape6=vec3(smoothstep(2.51,2.51,cos(floor(.5+a6/b)*b-a6)*length(vec2(vUv.x,vUv.y))));\n        color = shape3;\n        color -= shape1;\n        color += shape2;\n        color -= shape4;\n        color += shape5;\n        color -= shape6;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ob=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 4. - 2.;\n        vec3 color = vec3(0.);\n        float cir1 = circle(vec2(vUv.x + sin(u_time * 1.0), vUv.y - 1.00), 0.0125);\n        float cir2 = circle(vec2(vUv.x + sin(u_time * 1.1), vUv.y - 0.75), 0.0125);\n        float cir3 = circle(vec2(vUv.x + sin(u_time * 1.2), vUv.y - 0.50), 0.0125);\n        float cir4 = circle(vec2(vUv.x + sin(u_time * 1.3), vUv.y - 0.25), 0.0125);\n        float cir5 = circle(vec2(vUv.x + sin(u_time * 1.4), vUv.y - 0.00), 0.0125);\n        float cir6 = circle(vec2(vUv.x + sin(u_time * 1.5), vUv.y + 0.25), 0.0125);\n        float cir7 = circle(vec2(vUv.x + sin(u_time * 1.6), vUv.y + 0.50), 0.0125);\n        float cir8 = circle(vec2(vUv.x + sin(u_time * 1.7), vUv.y + 0.75), 0.0125);\n        float cir9 = circle(vec2(vUv.x + sin(u_time * 1.8), vUv.y + 1.00), 0.0125);\n    \n        float cirv1 = circle(vec2(vUv.x  - 1.00, vUv.y  + sin(u_time * 1.0)), 0.0125);\n        float cirv2 = circle(vec2(vUv.x  - 0.75, vUv.y  + sin(u_time * 1.1)), 0.0125);\n        float cirv3 = circle(vec2(vUv.x  - 0.50, vUv.y  + sin(u_time * 1.2)), 0.0125);\n        float cirv4 = circle(vec2(vUv.x  - 0.25, vUv.y  + sin(u_time * 1.3)), 0.0125);\n        float cirv5 = circle(vec2(vUv.x  - 0.00, vUv.y  + sin(u_time * 1.4)), 0.0125);\n        float cirv6 = circle(vec2(vUv.x  + 0.25, vUv.y  + sin(u_time * 1.5)), 0.0125);\n        float cirv7 = circle(vec2(vUv.x  + 0.50, vUv.y  + sin(u_time * 1.6)), 0.0125);\n        float cirv8 = circle(vec2(vUv.x  + 0.75, vUv.y  + sin(u_time * 1.7)), 0.0125);\n        float cirv9 = circle(vec2(vUv.x  + 1.00, vUv.y  + sin(u_time * 1.8)), 0.0125);\n        color = vec3(cir1 + cir2 + cir3 + cir4 + cir5 + cir6 + cir7 + cir8 + cir9);\n        color += vec3(cirv1 + cirv2 + cirv3 + cirv4 + cirv5 + cirv6 + cirv7 + cirv8 + cirv9);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ab(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ob,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ib=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec2 pos = vec2(0.5) - vec2(vUv.x + 0.3, vUv.y);\n        vec2 pos2 = vec2(0.5) - vec2(vUv.x, vUv.y);\n        vec2 pos3 = vec2(0.5) - vec2(vUv.x - 0.3, vUv.y);\n        vec2 pos4 = vec2(0.5) - vec2(vUv.x + 0.3, vUv.y + 0.3);\n        vec2 pos5 = vec2(0.5) - vec2(vUv.x, vUv.y + 0.3);\n        vec2 pos6 = vec2(0.5) - vec2(vUv.x - 0.3, vUv.y + 0.3);\n        vec2 pos7 = vec2(0.5) - vec2(vUv.x + 0.3, vUv.y - 0.3);\n        vec2 pos8 = vec2(0.5) - vec2(vUv.x, vUv.y - 0.3);\n        vec2 pos9 = vec2(0.5) - vec2(vUv.x - 0.3, vUv.y - 0.3);\n        vec3 color = vec3(0.);\n        float t = u_time * 0.75;\n        pos *= Rot(t);\n        pos2 *= Rot(t * 1.5);\n        pos3 *= Rot(t * 2.0);\n        pos4 *= Rot(t * 2.5);\n        pos5 *= Rot(t * 3.0);\n        pos6 *= Rot(t * 3.5);\n        pos7 *= Rot(t * 2.0);\n        pos8 *= Rot(t * 3.5);\n        pos9 *= Rot(t * 3.0);\n        float r1 = length(pos) * 7.0;\n        float r2 = length(pos2) * 7.0;\n        float r3 = length(pos3) * 7.0;\n        float r4 = length(pos4) * 7.0;\n        float r5 = length(pos5) * 7.0;\n        float r6 = length(pos6) * 7.0;\n        float r7 = length(pos7) * 7.0;\n        float r8 = length(pos8) * 7.0;\n        float r9 = length(pos9) * 7.0;\n        float a = atan(pos.y, pos.x);\n        float a2 = atan(pos2.y, pos2.x);\n        float a3 = atan(pos3.y, pos3.x);\n        float a4 = atan(pos4.y, pos4.x);\n        float a5 = atan(pos5.y, pos5.x);\n        float a6 = atan(pos6.y, pos6.x);\n        float a7 = atan(pos7.y, pos7.x);\n        float a8 = atan(pos8.y, pos8.x);\n        float a9 = atan(pos9.y, pos9.x);\n        float f = cos(a * 3.);\n        float f2 = cos(a2 * 3.);\n        float f3 = cos(a3 * 3.);\n        float f4 = cos(a4 * 3.);\n        float f5 = cos(a5 * 3.);\n        float f6 = cos(a6 * 3.);\n        float f7 = cos(a7 * 3.);\n        float f8 = cos(a8 * 3.);\n        float f9 = cos(a9 * 3.);\n        float shape = 1. - smoothstep(f, f + 0.02, r1);\n        float shape2 = 1. - smoothstep(f2, f2 + 0.02, r2);\n        float shape3 = 1. - smoothstep(f3, f3 + 0.02, r3);\n        float shape4 = 1. - smoothstep(f4, f4 + 0.02, r4);\n        float shape5 = 1. - smoothstep(f5, f5 + 0.02, r5);\n        float shape6 = 1. - smoothstep(f6, f6 + 0.02, r6);\n        float shape7 = 1. - smoothstep(f7, f7 + 0.02, r7);\n        float shape8 = 1. - smoothstep(f8, f8 + 0.02, r8);\n        float shape9 = 1. - smoothstep(f9, f9 + 0.02, r9);\n        color = vec3(shape + shape2 + shape3 + shape4 + shape5 + shape6 + shape7 + shape8 + shape9);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ib,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //box sdf book of shaders\nfloat box(vec2 vUv, vec2 size){\n    size = vec2(0.5) - size * 0.5;\n    vec2 uv = smoothstep(size, size + vec2(0.001), vUv);\n    uv *= smoothstep(size, size + vec2(0.001), vec2(1.0) - vUv);\n    return uv.x * uv.y;\n}\n\n//cross sdf book of shaders\nfloat cross1(vec2 vUv, float size){\n    return box(vUv, vec2(size, size/4.)) + box(vUv, vec2(size/4., size));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vUv = vUv * 2. - 0.5;\n    vec3 color = vec3(0.);\n    vec2 translate = vec2((sin(u_time)), abs(cos(u_time)));\n    vUv += translate * 0.5;\n    float shape = cross1(vUv, 0.5);\n    color = vec3(shape);\n    color += vec3(vUv.x, vUv.y, 0.);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //box sdf book of shaders\nfloat box(vec2 vUv, vec2 size){\n    size = vec2(0.5) - size * 0.5;\n    vec2 uv = smoothstep(size, size + vec2(0.001), vUv);\n    uv *= smoothstep(size, size + vec2(0.001), vec2(1.0) - vUv);\n    return uv.x * uv.y;\n}\n\n//cross sdf book of shaders\nfloat cross1(vec2 vUv, float size){\n    return box(vUv, vec2(size, size/4.)) + box(vUv, vec2(size/4., size));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec2 newUv = vUv;\n    vUv = vUv * 3. - 1.;\n    newUv = newUv * 3. - 1.;\n    vec2 translate = vec2(cos(u_time), sin(u_time));\n    vUv += translate;\n    //newUv += translate;\n    vec3 color = vec3(0.);\n    float shape = cross1(newUv, 0.5);\n    color = vec3(vUv, 0.);\n    color += vec3(shape);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ub(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //box sdf book of shaders\nfloat box(vec2 vUv, vec2 size){\n    size = vec2(0.5) - size * 0.5;\n    vec2 uv = smoothstep(size, size + vec2(0.001), vUv);\n    uv *= smoothstep(size, size + vec2(0.001), vec2(1.0) - vUv);\n    return uv.x * uv.y;\n}\n\n//cross sdf book of shaders\nfloat cross1(vec2 vUv, float size){\n    return box(vUv, vec2(size, size/4.)) + box(vUv, vec2(size/4., size));\n}\n\n//rotation 2d book of shaders\nmat2 rotate2d(float angle){\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vec2 newUv = vUv;\n    vUv = vUv * 2. - 0.5;\n    newUv = newUv * 2. - 1.;\n    newUv = rotate2d(cos(u_time) * PI) * newUv;\n    newUv += vec2(0.5);\n    vec3 color = vec3(0.);\n    float shape = cross1(newUv, 0.5);\n    float shape2 = cross1(vec2(newUv.x, newUv.y - 0.65), 0.5);\n    float shape3 = cross1(vec2(newUv.x, newUv.y + 0.65), 0.5);\n    float shape4 = cross1(vec2(newUv.x - 0.65, newUv.y), 0.5);\n    float shape5 = cross1(vec2(newUv.x + 0.65, newUv.y), 0.5);\n    color = vec3(shape + shape2 + shape3 + shape4 + shape5);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //box sdf book of shaders\nfloat box(vec2 vUv,vec2 size){\n    size=vec2(.5)-size*.5;\n    vec2 uv=smoothstep(size,size+vec2(.001),vUv);\n    uv*=smoothstep(size,size+vec2(.001),vec2(1.)-vUv);\n    return uv.x*uv.y;\n}\n\n//cross sdf book of shaders\nfloat crossSDF(vec2 vUv,float size){\n    return box(vUv,vec2(size,size/4.))+box(vUv,vec2(size/4.,size));\n}\n\n//rotation 2d book of shaders\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\n//scale 2d book of shaders\nmat2 scale(vec2 s){\n    return mat2(s.x, 0.0,\n                0.0, s.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vec2 newUv = vUv;\n    newUv = newUv * 2. - 1.;\n    newUv = rotate2d(sin(u_time) * PI) * newUv;\n    newUv += vec2(0.5);\n    newUv -= vec2(0.5);\n    newUv = scale(vec2(sin(u_time) + 1.)) * newUv;\n    newUv += vec2(0.5);\n    //vUv = rotate2d(sin(u_time) * PI) * vUv;\n    vec3 color = vec3(0.);\n    float shape = crossSDF(newUv, 0.5);\n    color += vec3(shape);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function db(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // YUV to RGB matrix book of shaders\nmat3 yuv2rgb=mat3(1.,0.,1.13983,\n    1.,-.39465,-.58060,\n    1.,2.03211,0.);\n\n// RGB to YUV matrix book of shaders\nmat3 rgb2yuv=mat3(.2126,.7152,.0722,\n    -.09991,-.33609,.43600,\n    .615,-.5586,-.05639);\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv -= 0.5;\n    vUv *= 4.0;\n    float cir = 1. - smoothstep(1.0, 1.01, distance(vec2(vUv.x + 0.5, vUv.y + 0.5), vec2(0.5)));\n    vec3 color = rgb2yuv * vec3(sin(u_time), vUv.x + sin(u_time), vUv.y + cos(u_time));\n    color *= vec3(cir);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float cir(vec2 vUv,vec2 pos,float s){\n        return 1.-smoothstep(s,s+.01,distance(vUv,pos));\n    }\n    \n    mat2 scale(vec2 s){\n        return mat2(s.x, 0.0,\n                    0.0, s.y);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 0.5;\n        vec2 newUv = vUv;\n        newUv -= vec2(0.5);\n        newUv = scale(vec2(sin((u_time * 1.5) + 1.0/1.5) + 2.0)) * newUv;\n        newUv += vec2(0.5);\n    \n        vec2 newUv2=vUv;\n        newUv2-=vec2(.5);\n        newUv2=scale(vec2(sin((u_time * 1.5) + 2.0/1.5) +2.))*newUv2;\n        newUv2+=vec2(.5);\n    \n        vec2 newUv3=vUv;\n        newUv3-=vec2(.5);\n        newUv3=scale(vec2(sin((u_time * 1.5) + 3.0/1.5) +2.))*newUv3;\n        newUv3+=vec2(.5);\n    \n        vec2 newUv4=vUv;\n        newUv4-=vec2(.5);\n        newUv4=scale(vec2(sin((u_time * 1.5) + 4.0/1.5) +2.))*newUv4;\n        newUv4+=vec2(.5);\n    \n        vec2 newUv5=vUv;\n        newUv5-=vec2(.5);\n        newUv5=scale(vec2(sin((u_time * 1.5) + 5.0/1.5) +2.))*newUv5;\n        newUv5+=vec2(.5);\n    \n        vec3 color = vec3(0.);\n        float c1=cir(newUv ,vec2(-0.2,.5),.1);\n        float c2=cir(newUv2,vec2(.15,.5),.1);\n        float c3=cir(newUv3,vec2(.5,.5),.1);\n        float c4=cir(newUv4,vec2(0.85,.5),.1);\n        float c5=cir(newUv5,vec2(1.2,.5),.1);\n        color = vec3(c1 + c2 + c3 + c4 + c5);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _b=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float x){\n        return mat2(cos(x), -sin(x),\n                    sin(x), cos(x));\n    }\n    \n    mat2 Scale(vec2 s){\n        return mat2(s.x, 0.0,\n                    0.0, s.y);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv);\n        vUv = vUv * 2. - 0.5;\n        vec3 color = vec3(0.);\n    \n        vec2 newUv = vUv;\n        newUv -= vec2(0.5);\n        newUv = Scale(vec2(sin(u_time) )) * newUv;\n        newUv += vec2(0.5);\n        \n        vec2 newUv2 = vUv;\n        newUv2 -= vec2(0.5);\n        newUv2 = Scale(vec2((sin(u_time) + 1.25))) * newUv2;\n        newUv2 += vec2(0.5);\n        \n        vec2 newUv3 = vUv;\n        newUv3 -= vec2(0.5);\n        newUv3 = Scale(vec2((sin(u_time) + 1.5))) * newUv3;\n        newUv3 += vec2(0.5);\n    \n        vec2 newUv4 = vUv;\n        newUv4 -= vec2(0.5);\n        newUv4 = Scale(vec2((sin(u_time) + 1.85))) * newUv4;\n        newUv4 += vec2(0.5);\n    \n        vec2 newUv5 = vUv;\n        newUv5 -= vec2(0.5);\n        newUv5 = Scale(vec2((sin(u_time) + 1.95))) * newUv5;\n        newUv5 += vec2(0.5);\n    \n        vec2 newUv6 = vUv;\n        newUv6 -= vec2(0.5);\n        newUv6 = Scale(vec2((sin(u_time) + 1.0))) * newUv6;\n        newUv6 += vec2(0.5);\n    \n        float shape = Cir(newUv, vec2(0.5), 0.5) - Cir(newUv, vec2(0.5), 0.45);\n        float shape2 = Cir(newUv2, vec2(0.5), 0.4) - Cir(newUv2, vec2(0.5), 0.35);\n        float shape3 = Cir(newUv3, vec2(0.5), 0.3) - Cir(newUv3, vec2(0.5), 0.25);\n        float shape4 = Cir(newUv4, vec2(0.5), 0.2) - Cir(newUv4, vec2(0.5), 0.15);\n        float shape5 = Cir(newUv5, vec2(0.5), 0.6) - Cir(newUv5, vec2(0.5), 0.55);\n        float shape6 = Cir(newUv6, vec2(0.5), 0.7) - Cir(newUv6, vec2(0.5), 0.65);\n        \n    \n        color = vec3(shape + shape2 + shape3 + shape4 + shape5 + shape6);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_b,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ub=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 rotate2d(float angle){\n        return mat2(cos(angle), -sin(angle),\n                    sin(angle), cos(angle));\n    }\n    \n    float box(vec2 vUv, vec2 size){\n        vUv = vUv * 2. - 1.0;\n        size = vec2(0.5) - size * 0.5;\n        vUv = rotate2d(cos(u_time) * PI) * vUv;\n        vUv += vec2(0.5);\n        vec2 sdf = smoothstep(size, size+vec2(0.01), vUv);\n        sdf *= smoothstep(size, size+vec2(0.01), vec2(1.0) - vUv);\n        vec2 newUv = vUv; \n        newUv -= vec2(0.5);\n        newUv = rotate2d(sin(u_time) * PI) * newUv;\n        newUv += vec2(0.5);\n        vec2 sdf2 = smoothstep(size, size + vec2(0.01), newUv);\n        sdf2 *= smoothstep(size, size + vec2(0.01), vec2(1.0) - newUv);\n        return (sdf.x * sdf.y) + (sdf2.x * sdf2.y);\n    }\n    \n    float shape(vec2 vUv, float size){\n        return box(vUv, vec2(size, size/8.)) +\n               box(vUv, vec2(size/8., size));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float x = shape(vUv, 1.5);\n        color = vec3(x, x * sin(u_time), x*cos(u_time));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ub,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //box sdf\nfloat box(vec2 vUv, vec2 size){\n    size = vec2(0.5) - size * 0.5;\n    vec2 sdf = smoothstep(size, size+vec2(0.01), vUv);\n    sdf *= smoothstep(size, size+vec2(0.01), vec2(1.0) - vUv);\n    return sdf.x * sdf.y;\n}\n\nfloat Cir(vec2 vUv, vec2 pos, float size){\n    return (1. - smoothstep(size, size + 0.01, distance(vUv, pos))) * smoothstep(size/2., size/2. + 0.01, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.25, vUv.y - 0.5);\n    vUv = vUv * 2.0;\n    vec3 color = vec3(0.);\n    vec2 onevUv = vec2(vUv.x + 0.36, vUv.y);\n    onevUv.y += abs(sin(u_time * 0.75 + 0.1));\n    float oneShape = box(onevUv, vec2(0.09, 0.3));\n    color = vec3(oneShape);\n    vec2 twovUv = vec2(vUv.x, vUv.y);\n    twovUv.y += abs(sin(u_time * 0.75));\n    float twoShape = Cir(twovUv, vec2(0.4, 0.5), 0.15);\n    color += vec3(twoShape);\n    vec2 threevUv = vec2(vUv);\n    threevUv.y += abs(sin(u_time * 0.75 - 0.1));\n    float threeShape = Cir(threevUv, vec2(0.76, 0.5), 0.15);\n    color += vec3(threeShape + cos(u_time), threeShape, threeShape + sin(u_time));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Mb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 newUv = vec2(vUv);\n        newUv.x += abs(sin(u_time * 0.45))/ 5.5 - 0.1;\n        // newUv.y += abs(sin(u_time * 0.75))/ 50. - 0.1;\n        float shape1 = cir(vUv, vec2(0.35, 0.7), 0.1);\n        float shape2 = cir(newUv, vec2(0.35, 0.7), 0.05);\n        float shape3 = cir(vUv, vec2(0.65, 0.7), 0.1);\n        float shape4 = cir(newUv, vec2(0.65, 0.7), 0.05);\n        float shape5 = cir(vUv, vec2(0.5, 0.35), 0.2);\n        float shape6 = cir(vUv, vec2(0.5, 0.3), 0.2);\n        color = vec3(shape1);\n        color -= vec3(shape2);\n        color += vec3(shape3);\n        color -= vec3(shape4);\n        color += vec3(shape5);\n        color -= vec3(shape6);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    void main(){\n        vec2 vUv = vec2(vUv);\n        vec3 color=vec3(0.);\n    \n        vec2 uv1=vUv;\n        uv1=uv1*2.-.5;\n        vec2 t1=vec2(cos(u_time*PI*.100),sin(u_time*PI*.480));\n        uv1+=t1*.75;\n    \n        vec2 uv2=vUv;\n        uv2=uv2*2.-.5;\n        vec2 t2=vec2(cos(u_time*PI*.120),sin(u_time*PI*.460));\n        uv2+=t2*.75;\n    \n        vec2 uv3=vUv;\n        uv3=uv3*2.-.5;\n        vec2 t3=vec2(cos(u_time*PI*.140),sin(u_time*PI*.440));\n        uv3+=t3*.75;\n    \n        vec2 uv4=vUv;\n        uv4=uv4*2.-.5;\n        vec2 t4=vec2(cos(u_time*PI*.160),sin(u_time*PI*.420));\n        uv4+=t4*.75;\n    \n        vec2 uv5=vUv;\n        uv5=uv5*2.-.5;\n        vec2 t5=vec2(cos(u_time*PI*.180),sin(u_time*PI*.400));\n        uv5+=t5*.75;\n    \n        vec2 uv6=vUv;\n        uv6=uv6*2.-.5;\n        vec2 t6=vec2(cos(u_time*PI*.200),sin(u_time*PI*.380));\n        uv6+=t6*.75;\n    \n        vec2 uv7=vUv;\n        uv7=uv7*2.-.5;\n        vec2 t7=vec2(cos(u_time*PI*.220),sin(u_time*PI*.360));\n        uv7+=t7*.75;\n    \n        vec2 uv8=vUv;\n        uv8=uv8*2.-.5;\n        vec2 t8=vec2(cos(u_time*PI*.240),sin(u_time*PI*.340));\n        uv8+=t8*.75;\n    \n        vec2 uv9=vUv;\n        uv9=uv9*2.-.5;\n        vec2 t9=vec2(cos(u_time*PI*.260),sin(u_time*PI*.320));\n        uv9+=t9*.75;\n    \n        vec2 uv10=vUv;\n        uv10=uv10*2.-.5;\n        vec2 t10=vec2(cos(u_time*PI*.280),sin(u_time*PI*.300));\n        uv10+=t10*.75;\n    \n        vec2 uv11=vUv;\n        uv11=uv11*2.-.5;\n        vec2 t11=vec2(cos(u_time*PI*.300),sin(u_time*PI*.280));\n        uv11+=t11*.75;\n    \n        vec2 uv12=vUv;\n        uv12=uv12*2.-.5;\n        vec2 t12=vec2(cos(u_time*PI*.320),sin(u_time*PI*.260));\n        uv12+=t12*.75;\n    \n        vec2 uv13=vUv;\n        uv13=uv13*2.-.5;\n        vec2 t13=vec2(cos(u_time*PI*.340),sin(u_time*PI*.240));\n        uv13+=t13*.75;\n    \n        vec2 uv14=vUv;\n        uv14=uv14*2.-.5;\n        vec2 t14=vec2(cos(u_time*PI*.360),sin(u_time*PI*.220));\n        uv14+=t14*.75;\n    \n        vec2 uv15=vUv;\n        uv15=uv15*2.-.5;\n        vec2 t15=vec2(cos(u_time*PI*.380),sin(u_time*PI*.200));\n        uv15+=t15*.75;\n    \n        vec2 uv16=vUv;\n        uv16=uv16*2.-.5;\n        vec2 t16=vec2(cos(u_time*PI*.400),sin(u_time*PI*.180));\n        uv16+=t16*.75;\n    \n        vec2 uv17=vUv;\n        uv17=uv17*2.-.5;\n        vec2 t17=vec2(cos(u_time*PI*.420),sin(u_time*PI*.160));\n        uv17+=t17*.75;\n    \n        vec2 uv18=vUv;\n        uv18=uv18*2.-.5;\n        vec2 t18=vec2(cos(u_time*PI*.440),sin(u_time*PI*.140));\n        uv18+=t18*.75;\n    \n        vec2 uv19=vUv;\n        uv19=uv19*2.-.5;\n        vec2 t19=vec2(cos(u_time*PI*.460),sin(u_time*PI*.120));\n        uv19+=t19*.75;\n    \n        vec2 uv20=vUv;\n        uv20=uv20*2.-.5;\n        vec2 t20=vec2(cos(u_time*PI*.480),sin(u_time*PI*.100));\n        uv20+=t20*.75;\n        \n        float c1= Cir(uv1,vec2(.5,.5),.05);\n        float c2= Cir(uv2,vec2(.5,.5),.05);\n        float c3= Cir(uv3,vec2(.5,.5),.05);\n        float c4= Cir(uv4,vec2(.5,.5),.05);\n        float c5= Cir(uv5,vec2(.5,.5),.05);\n        float c6= Cir(uv6,vec2(.5,.5),.05);\n        float c7= Cir(uv7,vec2(.5,.5),.05);\n        float c8= Cir(uv8,vec2(.5,.5),.05);\n        float c9= Cir(uv9,vec2(.5,.5),.05);\n        float c10=Cir(uv10,vec2(.5,.5),.05);\n        float c11=Cir(uv11,vec2(.5,.5),.05);\n        float c12=Cir(uv12,vec2(.5,.5),.05);\n        float c13=Cir(uv13,vec2(.5,.5),.05);\n        float c14=Cir(uv14,vec2(.5,.5),.05);\n        float c15=Cir(uv15,vec2(.5,.5),.05);\n        float c16=Cir(uv16,vec2(.5,.5),.05);\n        float c17=Cir(uv17,vec2(.5,.5),.05);\n        float c18=Cir(uv18,vec2(.5,.5),.05);\n        float c19=Cir(uv19,vec2(.5,.5),.05);\n        float c20=Cir(uv20,vec2(.5,.5),.05);\n    \n    \n        color += vec3(c1+c2+c3+c4+c5 \n                      +c6+c7+c8+c9+c10+\n                      c11+c12+c13+c14+c15+\n                      +c16+c17+c18+c19+c20);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Tb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Cb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //triangle\nfloat Tri(vec2 vUv, float size){\n    float a = atan(vUv.x, vUv.y) + PI;\n    float r = TWO_PI / 3.;\n    float d = cos(floor(.5 + a/r) * r - a) * length(vUv);\n    return 1. - smoothstep(size, size + 0.01, d);\n}\n\n//rotate\nmat2 Rot(float a){\n    return mat2(cos(a), -sin(a),\n                sin(a), cos(a));\n}\n\n//Cir\nfloat Cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vec3 color = vec3(0.);\n\n    vec2 t1vUv = vUv;\n    t1vUv=Rot(sin(u_time * 0.25)*PI)*t1vUv;\n    float t1 = Tri(t1vUv, 0.1) - Tri(t1vUv, 0.075);\n    \n    vec2 t2vUv = vUv;\n    t2vUv = Rot(PI) * t2vUv;\n    t2vUv = Rot(sin(u_time * 0.25) * PI) * t2vUv;\n    float t2 = Tri(vec2(t2vUv.x, t2vUv.y), 0.1) - Tri(vec2(t2vUv.x, t2vUv.y), 0.075);\n\n    float c = Cir(vUv, vec2(0.0), 0.3) - Cir(vUv, vec2(0.0), 0.275);\n    color = vec3(t1 + t2);\n    color += vec3(c);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Rb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Shape(vec2 vUv, float x){\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * 2.5;\n        float a = atan(pos.y, pos.x);\n        float f = abs(cos(a * 4.) * sin(u_time * x));\n        return 1. - smoothstep(f, f + 0.02, r);\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 uv1 = vUv;\n        uv1 -= vec2(0.5);\n        uv1 = Rot(sin(u_time * PI * 0.5)) * uv1;\n        uv1 += vec2(0.5);\n    \n        vec2 uv2 = vUv;\n        uv2 -= vec2(0.5);\n        uv2 = Rot(sin(u_time * PI * 0.45)) * uv2;\n        uv2 += vec2(0.5);\n    \n        vec2 uv3 = vUv;\n        uv3 -= vec2(0.5);\n        uv3 = Rot(sin(u_time * PI * 0.4)) * uv3;\n        uv3 += vec2(0.5);\n        float s1 = Shape(uv1, 0.5);\n        float s2 = Shape(uv2, 0.61);\n        float s3 = Shape(uv3, 0.71);\n        color.r = s1 * abs(sin(u_time));\n        color.g = s2 * abs(cos(u_time));\n        color.b = s3;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Pb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Db=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    float Tri(vec2 vUv, float size){\n        float a = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/3.;\n        float d = cos(floor(.5 + a/r) * r -a) * length(vUv);\n        return 1. - smoothstep(size, size + 0.01, d);\n    }\n    \n    void main(){\n        vec3 color = vec3(0.);\n        vec2 vUv = vec2(vUv.x - 0.1, vUv.y + 0.1);\n        vUv = vUv * 9. - 4.5;\n    \n        //vUv -= vec2(1.5);\n        //vUv = Rot(PI * 0.75 + u_time) * vUv;\n        //vUv += vec2(1.5);\n    \n        vec2 rotUv1 = vUv;\n    \n        vec2 rotUv2 = Rot((PI)) * vUv;\n        rotUv2.y  = rotUv2.y + 0.22 ;\n        rotUv2.x = rotUv2.x + 0.45;\n    \n        vec2 rotUv3 = Rot((PI)) * vUv;\n        rotUv3.y  = rotUv3.y + 0.22;\n        rotUv3.x = rotUv3.x - 0.45;\n    \n        vec2 rotUv4 =  vUv;\n        rotUv4.x = rotUv4.x - 0.9 / abs(sin(u_time));\n    \n        vec2 rotUv5 =  vUv;\n        rotUv5.x = rotUv5.x + 0.9;\n    \n        vec2 rotUv6 = Rot(PI) * vUv;\n        rotUv6.y = rotUv6.y + 0.95;\n        \n        vec2 rotUv7 =  vUv;\n        rotUv7.x = rotUv7.x + 0.45;\n        rotUv7.y = rotUv7.y - 0.725;\n    \n        vec2 rotUv8 =  vUv;\n        rotUv8.x = rotUv8.x - 0.45;\n        rotUv8.y = rotUv8.y - 0.725;\n    \n        vec2 rotUv9 = Rot((PI)) * vUv;\n        rotUv9.y  = rotUv9.y + 0.22;\n        rotUv9.x = rotUv9.x - 1.35;\n    \n        vec2 rotUv10 = vUv;\n        rotUv10.x = rotUv10.x + 1.8;\n    \n        vec2 rotUv11 = Rot(PI) * vUv;\n        rotUv11.x = rotUv11.x - 0.9;\n        rotUv11.y = rotUv11.y + 0.95;\n    \n        vec2 rotUv12 = vUv;\n        rotUv12.x = rotUv12.x + 1.35 / abs(sin(u_time));\n        rotUv12.y = rotUv12.y - .725;\n    \n        vec2 rotUv13 = vUv;\n        rotUv13.y = rotUv13.y - 1.45 / abs(sin(u_time));\n    \n        vec2 rotUv14 = vUv;\n        rotUv14.y = rotUv14.y - 1.45;\n        rotUv14.x = rotUv14.x + 0.9;\n    \n        vec2 rotUv15 = Rot(PI) * vUv;\n        rotUv15.y = rotUv15.y + 1.675;\n        rotUv15.x = rotUv15.x - 0.45;\n    \n        vec2 rotUv16 = vUv;\n        rotUv16.y = rotUv16.y - 2.18;\n        rotUv16.x = rotUv16.x + 0.44;\n    \n        vec2 translate1 = vec2(cos(u_time), sin(u_time));\n        //rotUv16 += translate1 * 0.1;\n    \n        // rotUv1 =  vec2(rotUv1.x  + sin(u_time), rotUv1.y  + cos(u_time));\n        // rotUv2 =  vec2(rotUv2.x  + sin(u_time), rotUv2.y  + cos(u_time));\n        // rotUv3 =  vec2(rotUv3.x  + sin(u_time), rotUv3.y  + cos(u_time));\n        // rotUv4 =  vec2(rotUv4.x  + sin(u_time), rotUv4.y  + cos(u_time));\n        // rotUv5 =  vec2(rotUv5.x  + sin(u_time), rotUv5.y  + cos(u_time));\n        // rotUv6 =  vec2(rotUv6.x  + sin(u_time), rotUv6.y  + cos(u_time));\n        // rotUv7 =  vec2(rotUv7.x  + sin(u_time), rotUv7.y  + cos(u_time));\n        // rotUv8 =  vec2(rotUv8.x  + sin(u_time), rotUv8.y  + cos(u_time));\n        // rotUv9 =  vec2(rotUv9.x  + sin(u_time), rotUv9.y  + cos(u_time));\n        // rotUv10 = vec2(rotUv10.x + sin(u_time), rotUv10.y + cos(u_time));\n        // rotUv11 = vec2(rotUv11.x + sin(u_time), rotUv11.y + cos(u_time));\n        // rotUv12 = vec2(rotUv12.x + sin(u_time), rotUv12.y + cos(u_time));\n        // rotUv13 = vec2(rotUv13.x + sin(u_time), rotUv13.y + cos(u_time));\n        // rotUv14 = vec2(rotUv14.x + sin(u_time), rotUv14.y + cos(u_time));\n        // rotUv15 = vec2(rotUv15.x + sin(u_time), rotUv15.y + cos(u_time));\n        // rotUv16 = vec2(rotUv16.x + sin(u_time), rotUv16.y + cos(u_time));\n    \n        float tri1 = Tri(rotUv1, 0.2);\n        float tri2 = Tri(rotUv2, 0.2);\n        float tri3 = Tri(rotUv3, 0.2);\n        float tri4 = Tri(rotUv4, 0.2);\n        float tri5 = Tri(rotUv5, 0.2);\n        float tri6 = Tri(rotUv6, 0.2);\n        float tri7 = Tri(rotUv7, 0.2);\n        float tri8 = Tri(rotUv8, 0.2);\n        float tri9 = Tri(rotUv9, 0.2);\n        float tri10 = Tri(rotUv10, 0.2);\n        float tri11 = Tri(rotUv11, 0.2);\n        float tri12 = Tri(rotUv12, 0.2);\n        float tri13 = Tri(rotUv13, 0.2);\n        float tri14 = Tri(rotUv14, 0.2);\n        float tri15 = Tri(rotUv15, 0.2);\n        float tri16 = Tri(rotUv16, 0.2);\n    \n        color = vec3(tri1 + tri2 + tri3 + tri4 + tri5 + tri6 + tri7 + tri8 + tri9 + tri10 + tri11 + tri12 + tri13 + tri14 + tri15 + tri16);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Eb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Db,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ib=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    float SquareIn(vec2 vUv, float size){\n        float a  = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/4.;\n        float d = cos(floor(.5 + a/r) * r-a) * length(vUv);\n        return (1.0 - smoothstep(size, size + 0.01, d)) - (1. - smoothstep(size - (size * 0.1), size - (size * 0.1) + 0.01, d));\n    }\n    \n    void main(){\n        vec3 color = vec3(0.);\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 1.;\n    \n        vec2 uv1 = vUv;\n        uv1 = Rot(sin(u_time * 0.25) * PI) * uv1;\n    \n        vec2 uv2 = vUv;\n        uv2 = Rot(cos(u_time * 0.25) * PI) * uv2;\n    \n        vec2 uv3 = vUv;\n        uv3 = Rot(sin(u_time * 0.35) * PI) * uv3;\n    \n        vec2 uv4 = vUv;\n        uv4 = Rot(cos(u_time * 0.35) * PI) * uv4;\n    \n        vec2 uv5 = vUv;\n        uv5 = Rot(sin(u_time * 0.45) * PI) * uv5;\n    \n        vec2 uv6 = vUv;\n        uv6 = Rot(cos(u_time * 0.45) * PI) * uv6;\n    \n        vec2 uv7 = vUv;\n        uv7 = Rot(sin(u_time * 0.50) * PI) * uv7;\n    \n        vec2 uv8 = vUv;\n        uv8 = Rot(cos(u_time * 0.50) * PI) * uv8;\n    \n        float s1 = SquareIn(uv1, 0.5);\n        float s2 = SquareIn(uv2, 0.5);\n    \n        float s3 = SquareIn(uv3, 0.25);\n        float s4 = SquareIn(uv4, 0.25);\n    \n        float s5 = SquareIn(uv5, 0.75);\n        float s6 = SquareIn(uv6, 0.75);\n    \n        float s7 = SquareIn(uv7, 0.125);\n        float s8 = SquareIn(uv8, 0.125);\n    \n        color = vec3(s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Lb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ib,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ab=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float shape(vec2 vUv){\n        float r = length(vUv);\n        float a  = atan(vUv.x, vUv.y);\n        float f = cos(a * dot(vUv.x,vUv.y));\n        return 1. - smoothstep(f, f + 0.01, r);\n    }\n    \n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a), - sin(a),\n                    sin(a), cos(a));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 4. - 2.;\n        vec3 color = vec3(0.);\n        vec2 cirUv1 = vUv;\n        cirUv1 = Rot(sin(0.25) * PI) * cirUv1;\n        vec2 cirUv2 = vUv;\n        cirUv2 = Rot(-sin(0.25) * PI) * cirUv2;\n        vec2 cirUv3 = vUv;\n        float s1 = shape(vUv);\n        float c1 = cir(vec2(cirUv1.x * 1.25, cirUv1.y * 2.5), vec2(0.35, -0.95), 0.5);\n        float c1p = cir(vec2(cirUv1.x * 1.25, cirUv1.y * 2.5), vec2(0.35, -0.95), 0.025);\n        float c2 = cir(vec2(cirUv2.x * 1.25, cirUv2.y * 2.5), vec2(-0.35, -0.95), 0.5);\n        float c2p = cir(vec2(cirUv2.x * 1.25, cirUv2.y * 2.5), vec2(-0.35, -0.95), 0.025);\n        float c3 = cir(vUv, vec2(-0.05, -0.5), 0.01);\n        float c4 = cir(vUv, vec2(0.05, -0.5), 0.01);\n        float c5 = cir(vec2(cirUv3.x / 2.0, cirUv3.y * 2.0), vec2(0., -1.45), 0.1);\n        color.g = (s1 - c1 - c2 - c3 - c4 - c5 + c1p + c2p) * abs(sin(u_time));\n        color.b = (s1-c1-c2 - c3 - c4 -c5 + c1p + c2p) * abs(cos(u_time));\n        color.r = 0.;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ob(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ab,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    float Box(vec2 vUv, vec2 size){\n        size = vec2(0.5) - size * 0.5;\n        vec2 box = smoothstep(size, size + vec2(0.01), vUv);\n        box *= smoothstep(size, size + vec2(0.01), vec2(1.0)- vUv);\n        return box.x * box.y;\n    }\n    \n    float Cross(vec2 vUv, float size){\n        return Box(vUv, vec2(size, size/4.)) + \n               Box(vUv, vec2(size/4., size));\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 0.5;\n        vec3 color = vec3(0.);\n        vUv -= vec2(0.5);\n        vUv = Rot(sin(u_time) * PI) * vUv;\n        vUv += vec2(0.5);\n        float c1 = Cir(vUv, vec2(0.5), 0.45);\n        float c2 = 1. - Cir(vUv, vec2(0.5), 0.75);\n        float b1 = Cross(vUv, 1.);\n        color = vec3(c1 + c2 - b1);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Nb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Bb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    mat2 Scale(vec2 s){\n        return mat2(s.x, 0.0,\n                    0.0, s.y);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv);\n        vUv = vUv * 2. + 0.5;\n        vec3 color = vec3(0.);\n    \n        vec2 uv1 = vUv;\n        uv1 = uv1 - 0.5;\n        uv1 = Scale(vec2((sin(u_time * 0.25 * vUv *  vUv)) + 1.0 )) * uv1;\n        uv1 = uv1 + 0.5;\n    \n        vec2 uv2 = vUv;\n        uv2 = uv2 - 0.5;\n        uv2 = Scale(vec2((sin(u_time * 0.45 * vUv *  vUv)) + 1.0 )) * uv2;\n        uv2 = uv2 + 0.5;\n    \n        vec2 uv3 = vUv;\n        uv3 = uv3 - 0.5;\n        uv3 = Scale(vec2((sin(u_time * 0.65 * vUv * vUv)) + 1.0 )) * uv3;\n        uv3 = uv3 + 0.5;\n    \n        vec2 uv4 = vUv;\n        uv4 = uv4 - 0.5;\n        uv4 = Scale(vec2((sin(u_time * 0.85 * vUv * vUv)) + 1.0 )) * uv4;\n        uv4 = uv4 + 0.5;\n    \n        vec2 uv5 = vUv;\n        uv5 = uv5 - 0.5;\n        uv5 = Scale(vec2((sin(u_time * 1.05 * vUv * vUv)) + 1.0 )) * uv5;\n        uv5 = uv5 + 0.5;\n    \n        vec2 uv6 = vUv;\n        uv6 = uv6 - 0.5;\n        uv6 = Scale(vec2((sin(u_time * 1.25 * vUv * vUv)) + 1.0 )) * uv6;\n        uv6 = uv6 + 0.5;\n        \n        float c1 = Cir(uv1, vec2(0.5), 0.1);\n        float c2 = Cir(uv2, vec2(0.5), 0.1);\n        float c3 = Cir(uv3, vec2(0.5), 0.1);\n        float c4 = Cir(uv4, vec2(0.5), 0.1);\n        float c5 = Cir(uv5, vec2(0.5), 0.1);\n        float c6 = Cir(uv6, vec2(0.5), 0.1);\n    \n        color.g = c1 + c2 * cos(u_time);\n        color.b = c3 + c4 * sin(u_time);\n        color.r = c5 + c6 * cos(u_time);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Box(vec2 vUv,vec2 size){\n        size=vec2(.5)-size*.5;\n        vec2 box=smoothstep(size,size+vec2(.01),vUv);\n        box*=smoothstep(size,size+vec2(.01),vec2(1.)-vUv);\n        return box.x*box.y;\n    }\n    \n    float Cross(vec2 vUv,float size){\n        return Box(vUv,vec2(size,size/4.))+\n        Box(vUv,vec2(size/4.,size));\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a),-sin(a),\n        sin(a),cos(a));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 6. - 3.;\n        vec3 color = vec3(0.);\n    \n        vec2 uv1=vUv;\n        uv1=vec2(uv1.x+tan(u_time *1.0),uv1.y);\n        uv1-=vec2(.5);\n        uv1=Rot(sin(u_time)*PI)*uv1;\n        uv1+=vec2(.5);\n    \n        vec2 uv2=vUv;\n        uv2=vec2(uv2.x+tan(u_time *1.1),uv2.y + 0.25);\n        uv2-=vec2(.5);\n        uv2=Rot(sin(u_time)*PI)*uv2;\n        uv2+=vec2(.5);\n    \n        vec2 uv3=vUv;\n        uv3=vec2(uv3.x+tan(u_time *1.2),uv3.y - 0.25);\n        uv3-=vec2(.5);\n        uv3=Rot(sin(u_time)*PI)*uv3;\n        uv3+=vec2(.5);\n    \n        vec2 uv4=vUv;\n        uv4=vec2(uv4.x+tan(u_time *1.3),uv4.y + 0.50);\n        uv4-=vec2(.5);\n        uv4=Rot(sin(u_time)*PI)*uv4;\n        uv4+=vec2(.5);\n    \n        vec2 uv5=vUv;\n        uv5=vec2(uv5.x+tan(u_time *1.4),uv5.y - 0.50);\n        uv5-=vec2(.5);\n        uv5=Rot(sin(u_time)*PI)*uv5;\n        uv5+=vec2(.5);\n    \n        vec2 uv6=vUv;\n        uv6=vec2(uv6.x+tan(u_time*1.5),uv6.y + 0.75);\n        uv6-=vec2(.5);\n        uv6=Rot(sin(u_time)*PI)*uv6;\n        uv6+=vec2(.5);\n    \n        vec2 uv7=vUv;\n        uv7=vec2(uv7.x+tan(u_time*1.6),uv7.y - 0.75);\n        uv7-=vec2(.5);\n        uv7=Rot(sin(u_time)*PI)*uv7;\n        uv7+=vec2(.5);\n    \n        vec2 uv8=vUv;\n        uv8=vec2(uv8.x+tan(u_time*1.7),uv8.y + 1.00);\n        uv8-=vec2(.5);\n        uv8=Rot(sin(u_time)*PI)*uv8;\n        uv8+=vec2(.5);\n    \n        vec2 uv9=vUv;\n        uv9=vec2(uv9.x+tan(u_time*1.8),uv9.y-1.0);\n        uv9-=vec2(.5);\n        uv9=Rot(sin(u_time)*PI)*uv9;\n        uv9+=vec2(.5);\n    \n        vec2 uv11=vUv;\n        uv11=vec2(uv11.x+.00,uv11.y+tan(u_time*1.0));\n        uv11-=vec2(.5);\n        uv11=Rot(sin(u_time)*PI)*uv11;\n        uv11+=vec2(.5);\n    \n        vec2 uv12=vUv;\n        uv12=vec2(uv12.x+.25,uv12.y+tan(u_time*1.1));\n        uv12-=vec2(.5);\n        uv12=Rot(sin(u_time)*PI)*uv12;\n        uv12+=vec2(.5);\n    \n        vec2 uv13=vUv;\n        uv13=vec2(uv13.x-.25,uv13.y+tan(u_time*1.2));\n        uv13-=vec2(.5);\n        uv13=Rot(sin(u_time)*PI)*uv13;\n        uv13+=vec2(.5);\n    \n        vec2 uv14=vUv;\n        uv14=vec2(uv14.x+.50,uv14.y+tan(u_time*1.3));\n        uv14-=vec2(.5);\n        uv14=Rot(sin(u_time)*PI)*uv14;\n        uv14+=vec2(.5);\n    \n        vec2 uv15=vUv;\n        uv15=vec2(uv15.x-.50,uv15.y+tan(u_time*1.4));\n        uv15-=vec2(.5);\n        uv15=Rot(sin(u_time)*PI)*uv15;\n        uv15+=vec2(.5);\n    \n        vec2 uv16=vUv;\n        uv16=vec2(uv16.x+.75,uv16.y+tan(u_time*1.5));\n        uv16-=vec2(.5);\n        uv16=Rot(sin(u_time)*PI)*uv16;\n        uv16+=vec2(.5);\n    \n        vec2 uv17=vUv;\n        uv17=vec2(uv17.x-.75,uv17.y+tan(u_time*1.6));\n        uv17-=vec2(.5);\n        uv17=Rot(sin(u_time)*PI)*uv17;\n        uv17+=vec2(.5);\n    \n        vec2 uv18=vUv;\n        uv18=vec2(uv18.x+1.,uv18.y+tan(u_time*1.7));\n        uv18-=vec2(.5);\n        uv18=Rot(sin(u_time)*PI)*uv18;\n        uv18+=vec2(.5);\n    \n        vec2 uv19=vUv;\n        uv19=vec2(uv19.x-1.,uv19.y+tan(u_time*1.8));\n        uv19-=vec2(.5);\n        uv19=Rot(sin(u_time)*PI)*uv19;\n        uv19+=vec2(.5);\n    \n        float c1=Cross(uv1,.2);\n        float c2=Cross(uv2,.2);\n        float c3=Cross(uv3,.2);\n        float c4=Cross(uv4,.2);\n        float c5=Cross(uv5,.2);\n        float c6=Cross(uv6,.2);\n        float c7=Cross(uv7,.2);\n        float c8=Cross(uv8,.2);\n        float c9=Cross(uv9,.2);\n    \n        float c11=Cross(uv11,.2);\n        float c12=Cross(uv12,.2);\n        float c13=Cross(uv13,.2);\n        float c14=Cross(uv14,.2);\n        float c15=Cross(uv15,.2);\n        float c16=Cross(uv16,.2);\n        float c17=Cross(uv17,.2);\n        float c18=Cross(uv18,.2);\n        float c19=Cross(uv19,.2);\n        \n        color = vec3(c1+c2+c3+c4+c5+c6+c7+c8+c9+\n                     c11+c12+c13+c14+c15+c16+c17+c18+c19);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Cir(vec2 vUv, vec2 pos, float size){\n        float x = 1. - smoothstep(size, size+0.01, distance(vUv, pos));\n        float y = 1. - smoothstep(size * 0.95, (size * 0.95)+0.01, distance(vUv, pos));\n        return x - y;\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    float Box(vec2 vUv, vec2 size){\n        vec2 box = smoothstep(size, size+vec2(0.01), vUv);\n        box *= smoothstep(size, size+vec2(0.01), 1.0 - vUv);\n        return box.x * box.y;\n    }\n    \n    float Tri(vec2 vUv, float size){\n        float a = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/3.0;\n        float d = cos(floor(.5 + a/r) * r-a) * length(vUv);\n        return 1.0 - smoothstep(size, size+0.01, d);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y-0.1);\n        //vUv = vUv * 2. - 0.5;\n        vec3 color = vec3(0.);\n        vec2 cirUv = vUv;\n        cirUv = vec2(cirUv.x, cirUv.y+0.05);\n        float c1 = Cir(cirUv, vec2(0.5), 0.35);\n        vec2 starUv = vUv;\n        starUv = starUv * 2. - 1.;\n        starUv = vec2(starUv.x, starUv.y-0.15);\n        vec2 starUv2 = vUv;\n        starUv2 = starUv2 * 2. - 1.;\n        starUv2 = vec2(starUv2.x, starUv2.y+0.125);\n        vec2 starUv3 = vUv;\n        starUv3 = starUv3 * 2. - 1.;\n        vec2 boxUv = vUv;\n        boxUv = boxUv * 2. - 0.5;\n        boxUv = vec2(boxUv.x, boxUv.y+0.25);\n        float s1 = Tri(starUv, 0.1);\n        float s2 = Tri(starUv2, 0.14);\n        float s3 = Tri(starUv3, 0.12);\n        float s4 = Box(boxUv, vec2(0.45, 0.3) );\n        color = vec3(c1 + s1 + s2 + s3 + s4);\n        gl_FragColor =  vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Box(vec2 vUv, vec2 size){\n        vec2 b = smoothstep(size, size+0.01, vUv);\n        b *= smoothstep(size, size+0.01, 1. - vUv);\n        return b.x * b.y;\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size+0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 boxUv = vUv;\n        boxUv -= vec2(0.5);\n        boxUv = Rot((u_time) *0.5) * boxUv;\n        boxUv += vec2(0.5);\n        \n        vec2 cirUv2=vUv;\n        vec2 translate2=vec2(sin(u_time * 2.0),cos(u_time * 2.0));\n        cirUv2+=translate2*0.15;\n    \n        vec2 cirUv3=vUv;\n        vec2 translate3=vec2(0.,cos(u_time*2.));\n        cirUv3+=translate3*.3;\n    \n        vec2 cirUv4=vUv;\n        vec2 translate4=vec2(sin(u_time*2.),0.);\n        cirUv4+=translate4*.3;\n    \n        float box1 = Box(boxUv, vec2(0.15));\n        float box2 = Box(boxUv, vec2(0.14));\n        float cir2 = Cir(cirUv2, vec2(0.5, 0.5), 0.05);\n        float cir3=  Cir(cirUv3,vec2(.5,.5),.05);\n        float cir4=  Cir(cirUv4,vec2(.5,.5),.05);\n    \n        color = vec3(box2 - box1);\n        color += cir2;\n        color += cir3; \n        color += cir4;\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qb=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float BoxBorder(vec2 vUv, vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n        b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n        float box1 = b.x * b.y;\n        vec2 b2 = smoothstep(size - vec2(0.01), (size - vec2(0.01)) + vec2(0.01), vUv);\n        b2 *=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1. - vUv);\n        float box2 = b2.x * b2.y;\n        return box2 - box1;\n    }\n    \n    float CirBorder(vec2 vUv, vec2 pos, float size){\n        float a = 1.  - smoothstep(size, size + 0.01, distance(vUv, pos));\n        float b = 1. - smoothstep(size - 0.01, size, distance(vUv, pos));\n        return a - b;\n    }\n    \n    mat2 Rot(float a){\n        return mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n    \n        vec2 uv1 = vUv;\n        uv1-=vec2(0.5);\n        uv1=Rot(sin(u_time)*PI)*uv1;\n        uv1+=vec2(0.5);\n    \n        vec2 uv2=vUv;\n        uv2-=vec2(.5);\n        uv2=Rot(sin(u_time * 1.02)*PI)*uv2;\n        uv2+=vec2(.5);\n    \n        vec2 uv3=vUv;\n        uv3-=vec2(.5);\n        uv3=Rot(sin(u_time * 1.04)*PI)*uv3;\n        uv3+=vec2(.5);\n    \n        vec2 uv4=vUv;\n        uv4-=vec2(.5);\n        uv4=Rot(sin(u_time*1.06)*PI)*uv4;\n        uv4+=vec2(.5);\n    \n        vec2 uv5=vUv;\n        uv5-=vec2(.5);\n        uv5=Rot(sin(u_time*1.08)*PI)*uv5;\n        uv5+=vec2(.5);\n    \n        vec3 color = vec3(0.);\n        float b1 = BoxBorder(uv1, vec2(0.25));\n        float c1 = CirBorder(vUv, vec2(0.5), 0.25);\n        float b2=BoxBorder(uv2,vec2(.3));\n        float c2=CirBorder(vUv,vec2(.5),.2);\n        float b3=BoxBorder(uv3,vec2(.35));\n        float c3=CirBorder(vUv,vec2(.5),.15);\n        float b4=BoxBorder(uv4,vec2(.40));\n        float c4=CirBorder(vUv,vec2(.5),.1);\n        float b5=BoxBorder(uv5,vec2(.45));\n        float c5=CirBorder(vUv,vec2(.5),.05);\n        color = vec3(b1 + c1 + b2 + c2 + b3 + c3 + b4 + c4 + b5 + c5);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qb,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $b=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Box(vec2 vUv, vec2 size){\n        vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n        b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n        return b.x * b.y;\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size+0.01, distance(vUv, pos));\n    }\n    \n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        return fract(vUv);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                 sin(a), cos(a)) * vec2(vUv.x * cos(u_time * 0.25), vUv.y * sin(u_time * 0.25));\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile(vUv, 5.);\n        vUv = Rot(vUv, PI * 0.25 * u_time);\n        color = vec3(vUv, 0.0);\n        color = vec3(Cir(vUv, vec2(0.5), 0.2));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$b,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size+0.01, distance(vUv, pos));\n    }\n    \n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        return fract(vUv);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Rot(vUv, PI * u_time * 0.25);\n        vUv = Tile(vUv, 10.5);\n        float c = Cir(vUv, vec2(0.5), 0.25);\n        color += vec3(c * abs(sin(u_time)), c * abs(cos(u_time)), c * abs(sin(u_time)));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile(vec2 vUv, float z){\n        vUv *= z;\n        return fract(vUv);\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile(vUv, 5.);\n        vUv = Rot(vUv, PI * u_time * 0.25);\n        color = vec3(BoxBorder(vUv, vec2(0.05)));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        vUv = fract(vUv);\n        return vUv;\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        vUv = vUv * sin(u_time * 0.25);\n        //vUv = Rot(vUv, cos(u_time) + PI + 2.0) * vUv;\n        vec3 color = vec3(0.);\n    \n        vec2 boxUv = vUv;\n        boxUv = Tile(boxUv, 3.0);\n        boxUv=Rot(boxUv, sin(u_time * 0.5)*PI);\n        float box = BoxBorder(boxUv, vec2(0.25));\n    \n        vec2 boxUv2=vUv;\n        boxUv2=Tile(vec2(boxUv2.x - 1.5, boxUv2.y - 1.5),3.);\n        boxUv2=Rot(boxUv2,cos(u_time * 0.5)*PI);\n        float box2=BoxBorder(boxUv2,vec2(.25));\n    \n    \n        color = vec3(box + box2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile(vec2 vUv,float zoom){\n        vUv*=zoom;\n        vUv.x+=(step(1.,mod(vUv.y,2.))*.5) * sin(u_time);\n    \n        \n        //vUv.y-=step(1.,mod(vUv.x,2.));\n        // vUv.y += step(1., mod(vUv.x, 4.0)) * sin(u_time);\n        //vUv.y += cos(u_time);\n        return fract(vUv);\n    }\n    \n    vec2 Tile2(vec2 vUv,float zoom){\n        vUv*=zoom;\n        vUv.x+=(step(1.,mod(vUv.y,2.))*.5) * sin(u_time);\n        \n        //vUv.y-=step(1.,mod(vUv.x,2.));\n        // vUv.y += step(1., mod(vUv.x, 4.0)) * sin(u_time);\n        //vUv.y += cos(u_time);\n        return fract(vUv);\n    }\n    \n    \n    \n    float Tri(vec2 vUv,float size){\n        vUv-=.5;\n        float a=atan(vUv.x,vUv.y)+PI;\n        float r=TWO_PI/3.;\n        float d=cos(floor(.5+a/r)*r-a)*length(vUv);\n        return 1.-smoothstep(size,size+.01,d);\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2;\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vec3 color=vec3(0.);\n        \n        vec2 newUv=vUv;\n        newUv.y+=cos(u_time*.1);\n        newUv=Tile(newUv,6.);\n        float t1=Tri(newUv,.25);\n    \n        vec2 newUv2=vUv;\n        newUv2 = Rot(newUv2, (PI));\n        newUv2.y += cos(u_time * 0.1);\n        newUv2 =Tile2(newUv2,6.);\n        float t2=Tri(newUv2,.25);\n    \n        color=vec3(t1+t2);\n        \n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        //vUv.x-=step(1.,mod(vUv.y,2.))+u_time;\n        vUv.x += step(1., mod(vUv.y, 2.0)) * (0.5 + u_time);\n        \n        return fract(vUv);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile2(vec2 vUv, float zoom, float speed){\n        vUv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > .5){\n            if(fract(vUv.y * .5)>.5){\n                vUv.x+= fract(t) * 2.;\n    \n            }else{\n                vUv.x-= fract(t) * 2.;\n            }\n            //vUv = Rot(vUv, PI * 0.5);\n        } else {\n            if(fract(vUv.x*.5) > .5){\n                vUv.y += fract(t) * 2.;\n            } else {\n                vUv.y -= fract(t) * 2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float Tri(vec2 vUv, float size){\n        vUv -= 0.5;\n        float a = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/3.0;\n        float d = cos(floor(.5 + a/r) * r-a) * length(vUv);\n        return 1.0 - smoothstep(size, size+0.01, d);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile2(vUv, 10.0, 0.25);\n        float c1 = Cir(vUv, vec2(0.5), 0.25);\n    \n        vec2 newUv = vUv;\n        newUv = Rot(vUv, sin(u_time + 2.0) * PI);\n        float t1 = Tri(newUv, 0.1);\n        \n        color = vec3(c1 - t1);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Box(vec2 vUv, vec2 size){\n        vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n        b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n        return b.x * b.y;\n    }\n    \n    vec2 Tiles(vec2 vUv, float zoom, float speed){\n        vUv *= zoom;\n        //vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        float t=u_time*speed;\n        if(fract(t)>.5){\n            if(fract(vUv.y*8.)>.5){\n                vUv.x+=fract(t)*2.;\n                \n            }else{\n                vUv.x-=fract(t)*2.;\n            }\n            //vUv = Rot(vUv, PI * 0.5);\n        }else{\n            if(fract(vUv.x * 8.)>.5){\n                vUv.y+=fract(t)*2.;\n            }else{\n                vUv.y-=fract(t)*2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tiles(vUv, 2., 0.25);\n        float b1 = Box(vUv, vec2(0.25));\n        color = vec3(b1);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        //vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        vUv = fract(vUv);\n        return vUv;\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Truchet(vec2 vUv){\n        vUv *= 2.0;\n        float index = 0.0;\n        index += step(1., mod(vUv.x, 2.0));\n        index += step(1., mod(vUv.y, 2.0)) * 2.0;\n        vUv = fract(vUv);\n        if(index == 1.0){\n            vUv = Rot(vUv, PI * 0.5 * sin(u_time));\n        } else if (index == 2.0){\n            vUv = Rot(vUv, PI * -0.5 * sin(u_time));\n        } else if (index == 3.0){\n            vUv = Rot(vUv, PI);\n        }\n        return vUv;\n    }\n    \n    float Box(vec2 vUv, vec2 size){\n        vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n        b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n        return b.x * b.y;\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size+0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 c1 = vec3(Cir(vUv, vec2(0.5), 0.35));\n        vUv = Rot(vUv, (u_time * 0.25));\n        vec3 color = vec3(0.);\n        vUv = Tile(vUv, 3.);\n        vUv = Truchet(vUv);\n        vec3 pattern = vec3(step(vUv.x,vUv.y));\n        \n        color = c1 * pattern;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    vec2 Translate(vec2 vUv){\n        vUv.x = vUv.x + sin(u_time) * 0.25;\n        vUv.y = vUv.y + cos(u_time) * 0.25;\n        return vUv;\n    }\n    \n    vec2 Translate2(vec2 vUv){\n        vUv.x = vUv.x + cos(u_time) * 0.25;\n        vUv.y = vUv.y + sin(u_time) * 0.25;\n        return vUv;\n    }\n    \n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        float index = 0.0;\n        index += step(1., mod(vUv.x, 2.0));\n        index += step(1., mod(vUv.y, 2.0)) * 2.0;\n        vUv = fract(vUv);\n        if(index == 1.0){\n            vUv = Translate(vUv);\n        } else if (index == 2.0){\n            vUv = Translate2(vUv);\n        } else if (index == 3.0){\n            vUv = Translate(vUv);\n        } else{\n            vUv = Translate2(vUv);\n        }\n        vUv = fract(vUv);\n        return vUv;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile(vUv, 5.0);\n        float c = Cir(vUv, vec2(0.5), 0.15);\n        color = vec3(c);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        //vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        return fract(vUv);\n    }\n    \n    // vec2 Rot(vec2 vUv, float angle){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(angle), -sin(angle),\n    //                sin(angle), cos(angle)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        float x = 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n        float y = 1. - smoothstep(size * 0.25, (size * 0.25) + 0.01, distance(vUv, pos));\n        return x - y;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 uv1 = vUv;\n        uv1=Rot(vUv,(u_time*PI * 0.15));\n        uv1 = Tile(uv1, 3.0);\n        float pattern1 = Cir(uv1, vec2(0.5), (0.005 + abs(sin(u_time * 0.5)/1.)));\n        color = vec3(pattern1 * abs(sin(u_time * 0.25)), pattern1 * abs(cos(u_time * 0.25)), 1.0);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile(vec2 vUv, float zoom){\n        vUv -= 0.5;\n        vUv *= zoom + sin(u_time / 1.0);\n        vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        return fract(vUv);\n    }\n    \n    \n    float Tri(vec2 vUv,float size){\n        vUv-=.5;\n        \n        float a=atan(vUv.x,vUv.y)+PI;\n        float r=TWO_PI/3.;\n        float d=cos(floor(.5+a/r)*r-a)*length(vUv);\n        float s1 = 1. - smoothstep(size,size+.01,d);\n        return s1;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile(vUv, 5.0);\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, -sin(PI + u_time));\n        vUv=Rot(vUv,sin(PI+u_time));\n        float s1 = Tri(vUv, 0.25);\n        float s2 = Tri(newUv,.1);\n        color = vec3(s1 - s2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _U=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        vUv.x += step(1., mod(vUv.y, 2.0)) * (0.5 + u_time);\n        return fract(vUv);\n    }\n    \n    // vec2 Rot(vec2 vUv, float angle){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(angle), -sin(angle),\n    //                sin(angle), cos(angle)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile2(vec2 vUv, float zoom, float speed){\n        vUv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > .5){\n            if(fract(vUv.y * .5)>.5){\n                vUv.x+= fract(t) * 2.;\n                vUv.x-= sin(u_time);\n            }else{\n                vUv.x-= fract(t) * 2.;\n                vUv.x+= cos(u_time);\n            }\n        } else {\n            if(fract(vUv.x*.5) > .5){\n                vUv.y += fract(t) * 2.;\n                vUv.y -= sin(u_time);\n            } else {\n                vUv.y -= fract(t) * 2.;\n                vUv.y += cos(u_time);\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float Box(vec2 vUv, vec2 size){\n        vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n        b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n        float b1 = b.x * b.y;\n        vec2 bb = smoothstep(size-0.05, (size-0.05) + vec2(0.01), vUv);\n        bb *= smoothstep(size-0.05, (size-0.05) + vec2(0.01), 1. - vUv);\n        float b2 = bb.x * bb.y;\n        return b2 - b1;\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile2(vUv, 8.0, 0.1);\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, (sin(u_time + 2.0) * PI * 2.0) * 0.25);\n        float box = Box(newUv, vec2(0.025));\n        float cir = Cir(vUv, vec2(0.5), 0.25);\n        color = vec3(box + cir);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_U,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile1(vec2 vUv, float z){\n        vUv *= z;\n        return fract(vUv);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n       float x = 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n       float y = 1. - smoothstep((size + 0.02), (size + 0.02) + 0.01, distance(vUv, pos));\n       return y - x;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        vUv = Tile1(vUv, 4.0);\n        vec2 newUv = vUv;\n        vUv = Rot(vUv, -sin(u_time * 0.5) * PI);\n        float p1 = Cir(vUv, vec2(0.5), 0.25);\n        float p2 = Cir(vUv, vec2(0.275, 0.5), 0.25);\n        float p3 = Cir(vUv, vec2(0.725, 0.5), 0.25);\n        float p4 = Cir(vUv, vec2(0.5, 0.275), 0.25);\n        float p5 = Cir(vUv, vec2(0.5, 0.725), 0.25);\n        vec3 pattern1 = vec3(p1 + p2 + p3 + p4 + p5);\n        \n        \n        newUv = Rot(newUv, sin(u_time * 0.5) * PI);\n        float p6 = Cir(newUv, vec2(0.5), 0.1);\n        float p7 = Cir(newUv, vec2(0.29, 0.5), 0.1);\n        float p8 = Cir(newUv, vec2(0.71, 0.5), 0.1);\n        float p9 = Cir(newUv, vec2(0.5, 0.29), 0.1);\n        float p10 = Cir(newUv, vec2(0.5, 0.71), 0.1);\n        vec3 pattern2 = vec3(p6 + p7 + p8 + p9 + p10);\n    \n        color = pattern1;\n        color += pattern2;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float BoxBorder(vec2 vUv,vec2 size){\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2 - box1;\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile(vec2 vUv, float z){\n        vUv *= z;\n        vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        return fract(vUv);\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile(vUv, 4.0);\n    \n        vec2 uv1 = vUv;\n        uv1 = Rot(uv1, PI * (0.5 * sin(u_time)));\n        float b = BoxBorder(uv1, vec2(0.15));\n        color = vec3(b);\n    \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, PI * (0.25 * sin(u_time)));\n        float b2 = BoxBorder(uv2, vec2(0.15));\n        color += vec3(b2);\n    \n        vec2 uv3 = vUv;\n        uv3 = Rot(uv3, PI * (0.125 * sin(u_time)));\n        float b3 = BoxBorder(uv3, vec2(0.15));\n        color += vec3(b3);\n    \n        vec2 uv4 = vUv;\n        uv4 = Rot(uv4, PI * ((0.125/2.0) * sin(u_time)));\n        float b4 = BoxBorder(uv4, vec2(0.15));\n        color += vec3(b4);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        //vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        return fract(vUv);\n    }\n    \n    //PIXEL SPIRIT\n    float Stroke(float x, float s, float w){\n        float d = smoothstep(s, s+0.01, x + w * 0.5) - smoothstep (s, s + 0.01,x-w * 0.5);\n        return clamp(d, 0., 1.);\n    }\n    \n    float Flip(float v, float pct){\n        return mix(v, 1. - v, pct);\n    }\n    \n    float Cir(vec2 vUv){\n        return length(vUv - 0.5) * 2.;\n    }\n    \n    vec3 Bridge(vec3 c, float d, float s, float w){\n        c *= 1. - Stroke(d, s, w * 2.);\n        return c + Stroke(d, s, w);\n    }\n    //PIXEL SPIRIT\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    \n    void main(){\n        vec3 color = vec3(0.);\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        //vUv = vUv * 2.0 - 0.5;\n        vUv = Tile(vUv, 2.0);\n        vUv.x = Flip(vUv.x, step(0.5, vUv.y));\n        vec2 offset =  vec2(.15/2.0, .0);\n        vec2 offset2 =  vec2(.45/2.0, .0);\n        vUv = Rot(vUv, sin(u_time));\n        float l = Cir(vUv + offset);\n        float r = Cir(vUv - offset);\n        float b = Cir(vUv + offset2);\n        float t = Cir(vUv - offset2);\n        color += Stroke(l, .4/2.0, .075/2.0);\n        color = Bridge(color, r, .4/2.0, .075/2.0);\n        //color += Stroke(b, .4, .075);\n        color = Bridge(color, b, .4/2.0, .075/2.0);\n        color = Bridge(color, t, .4/2.0, .075/2.0);\n        //color = Bridge(color, t, .4, .075);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    vec2 Tile1(vec2 vUv, float zoom){\n        vUv *= zoom;\n        return fract(vUv);\n    }\n    \n    vec2 Tile2(vec2 vUv, float zoom, float speed){\n        vUv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > .5){\n            if(fract(vUv.y * .5)>.5){\n                vUv.x+= fract(t) * 2.;\n            }else{\n                vUv.x-= fract(t) * 2.; \n            }\n        } else {\n            if(fract(vUv.x*.5) > .5){\n                vUv.y += fract(t) * 2.;  \n            } else {\n                vUv.y -= fract(t) * 2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    float Square(vec2 vUv, vec2 size){\n        vec2 s = smoothstep(size, size + vec2(0.01), vUv);\n        s *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n        return s.x * s.y;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 uv1 = vUv;\n        uv1 = Tile2(uv1, 5.0, 0.1);\n        uv1 =  Rot(uv1, sin(u_time) * PI);\n        float c1 = Cir(uv1, vec2(0.5), 0.25);\n        float s1 = Square(uv1, vec2(0.25));\n        float c2 = Cir(uv1, vec2(0.5), 0.125);\n        vec3 shape1 = vec3(s1 -c1 + c2);\n        color = shape1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom, float speed){\n        vUv*=zoom;\n        float t=u_time*speed;\n        if(fract(t)>.5){\n            if(fract(vUv.y*.5)>.5){\n                vUv.x+=fract(t)*2.;\n            }else{\n                vUv.x-=fract(t)*2.;\n            }\n        }else{\n            if(fract(vUv.x*.5)>.5){\n                vUv.y+=fract(t)*2.;\n            }else{\n                vUv.y-=fract(t)*2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    mat2 Scale(vec2 s){\n        return mat2(s.x, 0.0,\n                    0.0, s.y);\n    }\n    \n    float CirOutline(vec2 vUv, vec2 pos, float size){\n        float outer = 1. - smoothstep((size + 0.025), (size + 0.025) + 0.01, distance(vUv, pos));\n        float inner = 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n        return outer - inner;\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 uv1 = vUv;\n        vec2 uv2 = vUv;\n        uv1 = Tile(uv1, 4.0, 0.25);\n        uv2 = Tile(uv2,4., 0.25);\n        uv2 -= vec2(0.5);\n        uv2 = Scale(vec2(sin(u_time * 1.5) + 1.65)) * uv2;\n        uv2+=vec2(.5);\n        float c1 = CirOutline(uv1, vec2(0.5), 0.475);\n        float c2 = Cir(uv2, vec2(0.5), 0.25);\n        color = vec3(c1 + c2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float BoxBorder(vec2 vUv,vec2 size){\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.05),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.05),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    vec2 Tile(vec2 vUv,float zoom,float speed){\n        vUv*=zoom;\n        float t=u_time*speed;\n        if(fract(t)>.5){\n            if(fract(vUv.y*.5)>.5){\n                vUv.x+=fract(t)*2.;\n            }else{\n                vUv.x-=fract(t)*2.;\n            }\n        }else{\n            if(fract(vUv.x*.5)>.5){\n                vUv.y+=fract(t)*2.;\n            }else{\n                vUv.y-=fract(t)*2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float CirOutline(vec2 vUv,vec2 pos,float size){\n        float outer=1.-smoothstep((size+.025),(size+.025)+.01,distance(vUv,pos));\n        float inner=1.-smoothstep(size,size+.01,distance(vUv,pos));\n        return outer-inner;\n    }\n    \n    float Cir(vec2 vUv,vec2 pos,float size){\n        return 1.-smoothstep(size,size+.01,distance(vUv,pos));\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Rot(vUv, PI * 0.25);\n        vUv = Tile(vUv, 4.0, 0.125);\n        vec2 uv1 = vUv;\n        uv1 = Rot(vUv, sin(u_time) * PI);\n        float b1 = BoxBorder(uv1, vec2(0.15));\n        float c1=CirOutline(vUv,vec2(.5),.475);\n        float c2=Cir(vUv,vec2(.5),.25);\n        float c3=Cir(vUv,vec2(.5),.25 /2.0);\n        vec3 shape = vec3(b1 + c1 + c2 - c3);\n        color = shape;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float BoxBorder(vec2 vUv,vec2 size){\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    vec2 Tile(vec2 vUv,float zoom,float speed){\n        vUv*=zoom;\n        float t=u_time*speed;\n        if(fract(t)>.5){\n            if(fract(vUv.y*.5)>.5){\n                vUv.x+=fract(t)*2.;\n            }else{\n                vUv.x-=fract(t)*2.;\n            }\n        }else{\n            if(fract(vUv.x*.5)>.5){\n                vUv.y+=fract(t)*2.;\n            }else{\n                vUv.y-=fract(t)*2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float CirOutline(vec2 vUv,vec2 pos,float size){\n        float outer=1.-smoothstep((size+.025),(size+.025)+.01,distance(vUv,pos));\n        float inner=1.-smoothstep(size,size+.01,distance(vUv,pos));\n        return outer-inner;\n    }\n    \n    float Cir(vec2 vUv,vec2 pos,float size){\n        return 1.-smoothstep(size,size+.01,distance(vUv,pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 translate = vec2(cos(u_time), sin(u_time));\n        vUv = Tile(vUv, 4.0, 0.25);\n        float c1 = CirOutline(vUv, vec2(0.5), 0.47);\n        float b1 = BoxBorder(vUv, vec2(0.));\n        vUv += vec2(translate.x * 0.25, translate.y * 0.25 + 0.25);\n        \n        float s1 = Cir(vUv, vec2(0.5, 0.75), 0.25);\n        float s2 = Cir(vUv, vec2(0.5, 0.25), 0.25);\n        \n        float shape = s1;\n        color = vec3(c1);\n        color += shape;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        return fract(vUv);\n    }\n    \n    float CirOutline(vec2 vUv,vec2 pos,float size){\n        float outer=1.-smoothstep((size+.025),(size+.025)+.01,distance(vUv,pos));\n        float inner=1.-smoothstep(size,size+.01,distance(vUv,pos));\n        return outer-inner;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv -= 0.5;\n        vUv = Tile(vUv, 5.0 * sin(u_time * 0.05 * 2.0));\n        float c1 = CirOutline(vUv, vec2(0.5,0.75), 0.25);\n        float c2 = CirOutline(vUv, vec2(0.75,0.75), 0.25);\n        float c3 = CirOutline(vUv, vec2(0.5,0.5), 0.25);\n        float c4 = CirOutline(vUv, vec2(0.75,0.5), 0.25);\n        float c5 = CirOutline(vUv, vec2(0.5,0.25), 0.25);\n        float c6 = CirOutline(vUv, vec2(0.25,0.75), 0.25);\n        float c7 = CirOutline(vUv, vec2(0.25,0.25), 0.25);\n        float c8 = CirOutline(vUv, vec2(0.25,0.75), 0.25);\n        float c9 = CirOutline(vUv, vec2(0.25,0.5), 0.25);\n        float c10 =CirOutline(vUv, vec2(0.75,0.25), 0.25);\n        color = vec3(c1+c2+c3+c4+c5+c6+c7+c8+c9+c10);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 Tile(vec2 vUv, float zoom){\n        vUv *= zoom;\n        vUv.x += step(1., mod(vUv.y, 2.0)) * 0.5;\n        return fract(vUv);\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        vec2 b=smoothstep(size,size+vec2(.02),vUv);\n        b*=smoothstep(size,size+vec2(.02),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.02),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.02),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = Rot(vUv, sin(u_time * 0.05) * PI);\n        vUv -= 0.5;\n        vUv = Tile(vUv, 3.0 + sin(u_time * 0.5));\n        vec3 color = vec3(0.);\n        vec2 uv1 = vUv;\n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, PI * 0.25);\n        vec2 uv3 = uv1;\n        vec2 uv4 = uv2;\n        vec2 uv5 = uv1;\n        vec2 uv6 = uv2;\n        uv3.x += 0.25;\n        uv4.x += 0.25;\n        uv4.y -= 0.25;\n        uv5.x -= 0.25;\n        uv6.x -= 0.25;\n        uv6.y += 0.25;\n        float b1 = BoxBorder(uv1, vec2(0.2));\n        float b2 = BoxBorder(uv2, vec2(0.2));\n        float b3 = BoxBorder(uv3, vec2(0.2));\n        float b4 = BoxBorder(uv4, vec2(0.2));\n        float b5 = BoxBorder(uv5, vec2(0.2));\n        float b6 = BoxBorder(uv6, vec2(0.2));\n        vec3 shape1 = vec3(b1 + b2);\n        vec3 shape2 = vec3(b3 + b4);\n        vec3 shape3 = vec3(b5 + b6);\n        color = shape1 + shape2 + shape3;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(89.409182734019732490 * u_time * 0.25, 59.793847102347 * u_time * 0.25))) * 43993.23984729384);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float random = rand(vUv);\n        color = vec3(random);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float random(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(14.29384023894, 89.28340928374))));\n    }\n    \n    vec2 truchetPattern(vec2 vUv, float index){\n        index = fract((index - 0.5) * 2.0);\n        if(index > 0.75 *sin(u_time * 0.1) ){\n            vUv = vec2(1.0) - vUv;\n        } else if (index > 0.5 *sin(u_time * 0.1)){\n            vUv = vec2(1.0- vUv.x , vUv.y);\n        } else if (index > 0.25 * sin(u_time * 0.1)){\n            vUv = 1.0 - vec2(1.0 - vUv.x, vUv.y);\n        }\n        return vUv;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv *= 8.0;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = truchetPattern(fpos , random(ipos));\n        float pattern = smoothstep(tile.x-0.3,tile.x,tile.y)-\n                smoothstep(tile.x,tile.x+0.3,tile.y);\n        float circles = (step(length(tile),0.6) -\n                  step(length(tile),0.4) ) +\n                 (step(length(tile-vec2(1.)),0.6) -\n                  step(length(tile-vec2(1.)),0.4) );\n        color = vec3(circles);\n        //color = vec3(fpos, 0.0);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders random function\nfloat random(vec2 vUv){\n    return fract(sin(dot(vUv.xy,\n                vec2(12.9898,78.233)))*\n            43758.5453123 - fract(u_time));\n        }\n\nvec2 Tile2(vec2 vUv,float zoom,float speed){\n    vUv*=zoom;\n    float t=u_time*speed;\n    if(fract(t)>.5){\n        if(fract(vUv.y*.5)>.5){\n            vUv.x+=fract(t)*2.;\n        }else{\n            vUv.x-=fract(t)*2.;\n        }\n    }else{\n        if(fract(vUv.x*.5)>.5){\n            vUv.y+=fract(t)*2.;\n        }else{\n            vUv.y-=fract(t)*2.;\n        }\n    }\n    return fract(vUv);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    //vUv=Tile2(vUv,5.,0.0001);\n    vec3 color=vec3(0.);\n    vUv *= 10.;\n    vec2 i = floor(vUv);\n    vec2 f = fract(vUv);\n    \n    float shape = random((i));\n    \n    color = vec3(shape+sin(u_time), shape-cos(u_time), 0.);\n    \n    gl_FragColor = vec4(color, random(i));\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float random(vec2 vUv){\n        return fract(sin(dot(vUv.xy,\n                vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n    \n    //book of shaders\n    vec2 truchet(vec2 vUv, float index){\n        index = fract((index - 0.5) * 2.0);\n        if(index > 0.75){\n            vUv = vec2(1.0) - vUv;\n        } else if (index > 0.5){\n            vUv = vec2(1.0 - vUv.x, vUv.y);\n        } else if (index > 0.25){\n            vUv = 1.0 - vec2(1.0 - vUv.x, vUv.y);\n        }\n        return vUv;\n    }\n    \n    float CirOutline(vec2 vUv,vec2 pos,float size){\n        float outer=1.-smoothstep((size+.125),(size+.125)+.01,distance(vUv,pos));\n        float inner=1.-smoothstep(size,size+.01,distance(vUv,pos));\n        return outer-inner;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0);\n        vUv *= 5.0;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = truchet(fpos, random(ipos));\n        float y = CirOutline(tile, vec2(0.5), 0.35);\n        y *= smoothstep(tile.x-.3,tile.x,abs(tile.y + sin(u_time)))-\n            smoothstep(tile.x,tile.x+.3,abs(tile.y + cos(u_time)));\n        color = vec3(y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    float rand (float x){\n        return fract(sin(x) * 1000000.0);\n    }\n    \n    float CirOutline(vec2 vUv,vec2 pos,float size){\n        float outer=1.-smoothstep((size+.025) * rand(15.5),(size+.085)+.01,distance(vUv,pos));\n        float inner=1.-smoothstep(size,size+.01 ,distance(vUv ,pos ));\n        return outer-inner;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = Rot(vUv, sin(u_time * 5000.) * PI );\n        vec3 color = vec3(0.);\n        float cir = CirOutline(vUv, vec2(0.5), 0.25);\n        color = vec3(cir);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QU=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand (float x){\n        return fract(sin(x) * 100000.0);\n    }\n    \n    float Plot(vec2 vUv, float x){\n        return smoothstep(x - (0.01), x, vUv.y) -\n               smoothstep(x, x + (0.02), vUv.y);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv;\n        float y = 1. - rand(vUv.x + (u_time * 0.000005) );\n        float pct = Plot(vUv, y);\n        vec3 color = vec3(0.);\n        color = vec3(pct);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QU,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $U=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(12.4859, 75.2389234))) * 45687.28934720);\n    }\n    \n    float rand(float x){\n        return fract(sin(x) * 10000.0);\n    }\n    \n    //book of shaders\n    float pattern(vec2 vUv, vec2 v, float t){\n        vec2 p = floor(vUv + v);\n        return step(t, rand(100. + p * 0.00001) + rand(p.x) * 0.5);\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 1.;\n        vec3 color = vec3(0.);\n    \n        vec2 grid = vec2(20.0, 15.0);\n        vUv *= grid;\n    \n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n    \n        vec2 vel = vec2(u_time * (rand(1.0)) * max(grid.x, grid.y));\n        vel *= vec2(0.0, 1.0) * rand(1.0 + ipos.x);\n    \n        vec2 offset = vec2(0., 0.);\n        color.g = pattern(vUv + offset, vel, rand(0.2) * 0.9);\n    \n        color *= step(0.5, fpos.x);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$U,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ew=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(12.4859, 75.2389234))) * 45687.28934720);\n    }\n    \n    float rand(float x){\n        return fract(sin(x) * 10000.0);\n    }\n    \n    //book of shaders\n    float pattern(vec2 vUv, vec2 v, float t){\n        vec2 p = floor(vUv + v);\n        return step(t, rand(100. + p * 0.00001) + rand(p.x) * 0.1);\n    }\n    \n    float pattern2(vec2 vUv, vec2 v, float t){\n        vec2 p = floor(vUv + v);\n        return step(t, rand(100. + p * 0.00001) + rand(p.y) * 0.1);\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 1.;\n        vec3 color = vec3(0.);\n    \n        vec2 grid = vec2(50.0, 50.0) ;\n        vUv *= grid;\n    \n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n    \n        vec2 vel = vec2(u_time * (rand(10.0)) * max(grid.y, grid.x));\n        vel *= vec2(-1., 0.0) * rand(1.0 + ipos.y);\n    \n        vec2 vel2 = vec2(u_time * (rand(10.0)) * max(grid.y, grid.x));\n        vel2 *= vec2(0.0, 1.0) * rand(1.0 + ipos.x);\n    \n        vec2 offset = vec2(0., 0.);\n        color.r = pattern(vUv + offset, vel, rand(0.1) * 0.5);\n        color.g = pattern2(vUv + offset, vel2, rand(0.1) * 0.15);\n    \n        color *= 1. - step(0.99999999, fpos.y);\n        color += step(0.99999, fpos.x);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ew,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float random(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(12.9898,78.233))) * 43758.5453123);\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        \n        vec2 b=smoothstep(size,size+vec2(.02),vUv);\n        b*=smoothstep(size,size+vec2(.02),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.02),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.02),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        float x = random(vec2(vUv));\n        vec3 color = vec3(0.);\n        vec2 ipos = floor(vUv); //integer\n        vec2 fpos = fract(vUv); //fraction\n        float b1 = BoxBorder(vUv, vec2(0.0) + x * abs(sin(u_time * 0.25)));\n        color = vec3(b1);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ow=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // vec2 Rot(vec2 vUv,float a){\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float random(in float x){\n        return fract(sin(x)*1e4);\n    }\n    \n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    float random(vec2 vUv){\n        return fract(sin(dot(vUv.xy,vec2(12.9898,78.233)))*43758.5453123);\n    }\n    \n    //book of shaders\n    float pattern(vec2 vUv,vec2 v,float t){\n        vec2 p=floor(vUv+v);\n        return step(t,random(100.+p*.00001)+random(p.x)*.1);\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        \n        vUv=vUv*2.-1.;\n        vec2 cUv=vUv;\n        vUv = Rot(vUv, u_time * 0.25);\n        \n        vec3 color=vec3(0.);\n    \n        vec2 grid=vec2(25.,5.);\n        vUv*=grid + sin(u_time);\n    \n        \n        \n        vec2 ipos=floor(vUv);\n        vec2 fpos=fract(vUv);\n    \n        vec2 vel=vec2(u_time*.2*max(grid.y +sin(u_time),grid.x ));\n        vel*=vec2(0.,1.)*random(1.+ipos.x);\n    \n        vec2 vel2=vec2(u_time*0.2* max(grid.x +sin(u_time) ,grid.y + sin(u_time)));\n        vel2*=vec2(-1.,0.)*random(1.+ipos.y);\n    \n        vec2 offset2=vec2(1.1,1.0);\n        vec2 offset=vec2(1.0,1.1);\n        \n        color= vec3(pattern(vUv+offset,vel2,1.0));\n        color+= vec3(pattern(vUv+offset2,vel,1.0));\n    \n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ow,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nfloat plot(vec2 vUv,float pct){\n    return smoothstep(pct-.04,pct,vUv.y)-\n    smoothstep(pct,pct+.04,vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv.x *= 0.5;\n    vUv.y *= 0.5;\n    vUv.y -= 0.0;\n    vec2 ipos=floor(vUv);// integer\n    vec2 fpos=fract(vUv);// fraction\n    vec3 color = vec3(0.);\n    float y = fract(sin(vUv.x + sin(u_time)) * 100000.0);\n    float pct = plot(vUv, y);\n    color = (1. - pct) * color + pct * vec3(0.0, 1., 0.);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    \nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(14.4385, 89.2384972))) * 56937.29837492);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv *= 20.0;\n    vec2 ipos = floor(vec2(vUv.x, vUv.y + (u_time)));\n    vec2 fpos = fract(vUv);\n    float pattern = rand(vec2(ipos.x + (0.0000025 * u_time), ipos.y));\n    color.b = (pattern);\n    color *= 1. - vec3(fpos, 0.0);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x) * 56937.29837492);\n    }\n    \n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(14.4385, 89.2384972))) * 56937.29837492);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv *= 2.0 - 1.0;\n        vec2 cUv = vUv;\n        vUv = vec2(rand(vUv.x) + (u_time * 0.0000002), rand(vUv.y));\n        vUv = vUv * 20.;\n        vec3 color = vec3(0.);\n        float x = rand(vec2(vUv.x, vUv.y));\n        float y = pow((x), 100.);\n        float cir = Cir(cUv, vec2((0.5 * x) + sin(u_time * 0.5), 0.5), 0.25);\n        float cir2 = Cir(cUv, vec2(0.5, (0.5 * x) + sin(u_time * 0.5)), 0.25);\n        color = vec3(cir + cir2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(12.9898, 78.233))) * 43758.649273);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv *= 10.0;\n        vec2 ipos = floor(vec2(vUv.x - u_time, vUv.y));\n        vec2 fpos = fract(vec2(vUv.x + u_time, vUv.y));\n        vec3 color = vec3(0.);\n        float y = rand(ipos);\n        float x = rand(fpos);\n    \n        color = vec3(y*x * y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n//random\n\nfloat rand(in float x){\n    return fract(sin(x)*1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(23.487503, 89.37610982))) * 45873.34028347);\n}\n\n//book of shaders\nvec2 truchetPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * 2.0);\n    if(i > 0.75){\n        vUv = vec2(1.) - vUv;\n    } else if (i > 0.5) {\n        vUv = vec2(1. - vUv.x, vUv.y);\n    } else if (i > 0.25) {\n        vUv = 1. - vec2(1. - vUv.x, vUv.y);\n    }\n    return vUv;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv -= 0.5;\n    vUv.x += u_time * 0.1;\n    vec3 color=vec3(0.);\n    vec2 grid=vec2(12.,12.);\n    vUv *= grid;\n    vec2 ipos = floor(vUv); //integer\n    vec2 fpos = fract(vUv); //fraction\n    vec2 tile = truchetPattern(fpos, rand(ipos * sin(u_time*.000000125)) );\n    float c = (step(length(tile ),.6)-\n         step(length(tile ),0.4) ) +\n        (step(length(tile-vec2(1.) ),0.6) -\n         step(length(tile-vec2(1.) ),0.4) );\n    color = 1. - vec3(c);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(12.4859, 75.2389234))) * 45687.28934720);\n    }\n    \n    float rand(float x){\n        return fract(sin(x) * 10000.0);\n    }\n    \n    //book of shaders\n    float pattern(vec2 vUv, vec2 v, float t){\n        vec2 p = floor(vUv + v);\n        return step(t, rand(100. + p * 0.00001) + rand(p.x) * 0.5);\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 1.;\n        vec3 color = vec3(0.);\n    \n        vec2 grid = vec2(10.0, 15.0);\n        vUv *= grid;\n    \n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n    \n        vec2 vel = vec2(u_time * (rand(1.0)) * max(grid.x, grid.y));\n        vel *= vec2(0.0, 1.0) * rand(1.0 + ipos.x);\n    \n        vec2 offset = vec2(0., 0.);\n        color.r = pattern(vUv + offset, vel, rand(0.2) * 0.9);\n    \n        color *= step(0.5, fpos.x);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float cirOutline(vec2 vUv,vec2 pos,float size){\n        float x=1.-smoothstep(size,size+.01,distance(vUv,pos));\n        float y=1.-smoothstep((size*.25)+size,(size*.25)+size+.01,distance(vUv,pos));\n        return y-x;\n    }\n    \n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy,vec2(12.9898,78.233)))*43724.3497231);\n    }\n    \n    float rand1(float x){\n        return fract(sin(x)*1e4);\n    }\n    float rand2(float x){\n        return fract(sin(x)*1e4);\n    }\n    float rand3(float x){\n        return fract(sin(x)*1e4);\n    }\n    float rand4(float x){\n        return fract(sin(x)*1e4);\n    }\n    float rand5(float x){\n        return fract(sin(x)*1e4);\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vUv=vUv*2.-1.;\n        vec3 color=vec3(0.);\n        vec2 translate1=vec2(rand(vec2(rand1(.5)))+sin(u_time));\n        vec2 translate2=vec2(rand(vec2(rand2(.5)))-cos(u_time));\n        vec2 translate3=vec2(rand(vec2(rand3(.5)))+sin(u_time));\n        vec2 translate4=vec2(rand(vec2(rand4(.5)))-cos(u_time));\n        vec2 translate5=vec2(rand(vec2(rand5(.5)))+sin(u_time));\n        float shape1=cirOutline(vUv,(vec2(rand1(.5),rand1(.1)))*translate1,rand1(.5));\n        float shape2=cirOutline(vUv,(vec2(rand2(.4),rand2(.2)))*translate2,rand2(.5));\n        float shape3=cirOutline(vUv,(vec2(rand3(.3),rand3(.3)))*translate3,rand3(.5));\n        float shape4=cirOutline(vUv,(vec2(rand4(.2),rand4(.4)))*translate4,rand4(.5));\n        float shape5=cirOutline(vUv,(vec2(rand5(.1),rand5(.5)))*translate5,rand5(.5));\n        color=vec3(shape1+shape2+shape3+shape4+shape5);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _w=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(cos(dot((vec2(vUv.x, vUv.y + (u_time * 0.001))),vec2(12.9898,78.233)))*43724.3497231 * abs(sin(u_time*.0000075))) ;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv.x *=0.15;\n        vUv.y*=0.15;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        float y = rand(vec2(ipos.x, fpos.y));\n        color.r = y;\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_w,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Uw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(748.3247298, 89.45870348))) * 2387402.3847293);\n    }\n    \n    vec2 Pattern(vec2 vUv, float i){\n        i = fract((i - 0.5) * 2.0);\n        if(i > 0.8 + (0.1 * cos(u_time))){\n            vUv = vec2(1.0) - vUv;\n        }else if (i > 0.6 + (0.1 * cos(u_time))){\n            vUv = vec2(1.0 - vUv.y, vUv.x);\n        }else if (i > 0.4 + (0.1 * cos(u_time))){\n            vUv = 1.0 - vec2(1.0 - vUv.y, vUv.x);\n        }\n        return vUv;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        \n        vec3 color = vec3(0.);\n        vUv *= 20. * sin(u_time * 0.1) + 20.0;\n        vUv.x += 0.25;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = Pattern(fpos, rand(ipos));\n        float y = smoothstep(tile.x - 0.1, tile.x, tile.y)-\n                  smoothstep(tile.x, tile.x + 0.1, tile.y);\n        color = vec3(y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ww(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Uw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(34.89327402, 347023874))) * 23469273.38497290347);\n    }\n    \n    vec2 Tile2(vec2 vUv, float zoom, float speed){\n        vUv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > .5){\n            if(fract(vUv.y * .5)>.5){\n                vUv.x+= fract(t) * 2.;\n    \n            }else{\n                vUv.x-= fract(t) * 2. ;\n            }\n            //vUv = Rot(vUv, PI * 0.5);\n        } else {\n            if(fract(vUv.x*.5) > .5){\n                vUv.y += fract(t) * 2. ;\n            } else {\n                vUv.y -= fract(t) * 2. ;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile2(vUv, 5.5, 0.5);\n        //vUv *= 20.;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        float shape = cir(vUv, vec2(rand(fpos)), 0.25);\n        \n        \n        color = vec3(shape);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Mw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x) {\n        return fract(sin(x)*1e4);\n    }\n    //random\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(12.483017652, 87.8729301234))) * 49763419.2834798234);\n    }\n    //book of shaders\n    vec2 tPattern(vec2 vUv, float i){\n        i = fract((i - 0.5) * 2.0);\n        if(i > 0.75){\n            vUv = vec2(1.0) - vUv;\n        } else if (i > 0.5){\n            vUv = vec2(1.0 - vUv.x, vUv.y);\n        }else if (i > 0.25){\n            vUv = 1.0 - vec2(1.0 - vUv.x, - vUv.y);\n        }\n        return vUv;\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv *= 8.0;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = tPattern(fpos, rand(ipos * u_time * 0.000000001));\n        float s = step(tile.y, tile.x) + rand(fpos);\n        color = vec3(s);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //random\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(12.483017652, 87.8729301234))) * 49763419.2834798234);\n}\n\nfloat rand(float x) {\n    return fract(sin(x)*1e4);\n}\n\n//book of shaders\nvec2 tPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * 2.0);\n    if(i > 0.75){\n        vUv = vec2(1.0) - vUv;\n    } else if (i > 0.5){\n        vUv = vec2(1.0 - vUv.x, vUv.y);\n    }else if (i > 0.25){\n        vUv = 1.0 - vec2(1.0 - vUv.x, - vUv.y);\n    }\n    return vUv;\n}\n\nfloat plot(vec2 vUv, float p){\n    return smoothstep(p - 0.075, p, vUv.y) -\n           smoothstep(p, p + 0.075, vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv *= 10.0;\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 tile = tPattern(fpos, rand(ipos * u_time * 0.000000001));\n    float y = abs(sin(tile.x));\n    float s = plot(tile, y);\n    color = vec3(s);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Tw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Cw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rand\nfloat rand(float x){\n    return fract(sin(x)* 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(12.34739482, 74.237492837))) * 2347081.3978489230);\n}\n\n//bookofshaders\nvec2 tPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * 2.0);\n    if(i > 0.75){\n        vUv = vec2(1.0) - vUv;\n    } else if (i > 0.5){\n        vUv = vec2(1.0 - vUv.x, vUv.y);\n    } else if (i > 0.25){\n        vUv = 1.0 - vec2(1.0 - vUv.x, vUv.y);\n    }\n    return vUv;\n}\n\nfloat plot(vec2 vUv, float p){\n    return smoothstep(p - 0.075, p, vUv.y) -\n           smoothstep(p, p + 0.075, vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv *= 15.;\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 tile = tPattern(fpos, rand(ipos * u_time * 0.000000001));\n    float y = 1. - smoothstep(0.25, 0.26, distance(tile, vec2(0.5)));\n    float s = plot(tile, y / abs(sin(u_time)));\n    color = vec3(s);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Rw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rand\nfloat rand(float x){\n    return fract(sin(x)* 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(12.34739482, 74.237492837))) * 2347081.3978489230);\n}\n\n//bookofshaders\nvec2 tPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * 2.0);\n    if(i > 0.75){\n        vUv = vec2(1.0) - vUv;\n    } else if (i > 0.5){\n        vUv = vec2(1.0 - vUv.x, vUv.y);\n    } else if (i > 0.25){\n        vUv = 1.0 - vec2(1.0 - vUv.x, vUv.y);\n    }\n    return vUv;\n}\n\n//plot function\nfloat plot(vec2 vUv, float p){\n    return smoothstep(p - 0.075, p, vUv.y) -\n           smoothstep(p, p + 0.075, vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv *= 10.;\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 tile = tPattern(ipos, rand(ipos) + abs(sin(u_time * 0.25)));\n    float y = sin(tile.x);\n    color = vec3(y);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Pw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rand\nfloat rand(float x){\n    return fract(sin(x) * 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(46.3469872, 98.3468))) * 67382.4684018202);\n}\n\n//pattern\nfloat pattern(vec2 vUv, vec2 pos, float size){\n    vec2 p = floor(vUv + pos);\n    float y = distance(vUv, pos);\n    return step(size, rand(100.+p * 0.000001) + rand(p.x) * 0.5);\n}\n\nfloat pattern2(vec2 vUv,vec2 pos,float size){\n    vec2 p=floor(vUv+pos);\n    float y=distance(vUv,pos);\n    return step(size,rand(100.+p*.000001)+rand(p.x)*.95);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vec2 grid = vec2(25., 25.);\n    vUv *= grid;\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 vel = vec2(u_time * 2. * max(grid.x, grid.y));\n    vel *= vec2(-1., 0.0) * rand(1.+ipos.y);\n    vec2 vel2=vec2(u_time*2.*max(grid.x,grid.y));\n    vel2*=vec2(0.,1.)*rand(1.+ipos.x);\n    vec2 offset = vec2(0.1, 0.);\n    float y = pattern(vUv, vel, 0.75);\n    float x=pattern(vUv,vel2,.95);\n    color = vec3(x + y);\n    color*=step(.2,fpos.x);\n    color*=step(.2,fpos.y);\n    gl_FragColor = vec4(1.-color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ew(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Dw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Iw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_rand;\n    //rand\nfloat rand(float x){\n    return fract(sin(x)* 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(25. * u_rand, 98. * u_rand))) * 2347081. * u_rand);\n}\n\n//bookofshaders\nvec2 tPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * 2.0);\n    if(i > 0.75){\n        vUv = vec2(1.0) - vUv;\n    } else if (i > 0.5){\n        vUv = vec2(1.0 - vUv.x, vUv.y);\n    } else if (i > 0.25){\n        vUv = 1.0 - vec2(1.0 - vUv.x, vUv.y);\n    }\n    return vUv;\n}\n\n//plot function\nfloat plot(vec2 vUv, float p){\n    return smoothstep(p - 0.075, p, vUv.y) -\n           smoothstep(p, p + 0.075, vUv.y);\n}\n\nfloat plot2(vec2 vUv, float p){\n    return smoothstep(p - 0.075, p, vUv.x) -\n           smoothstep(p, p + 0.075, vUv.x);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv *= 2.;\n    float y = sin(plot(vUv, u_time * u_rand)) * 500.;\n    y*= cir(vUv, vec2(1.), 1.);\n    float x = sin(plot2(vUv, u_time * u_rand)) * 500.;\n    x*= cir(vUv, vec2(1.), 1.);\n    color = (1.0 - y) * color + y * vec3(0.0, 1.0, 0.0);\n    color += (1.0 - x) * color + x * vec3(0.0, 1.0, 0.0);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Lw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Iw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Aw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_rand;\n    float Cir(vec2 vUv, float size){\n        return 1. - smoothstep( size, size + 0.01, distance(vUv, vec2(vUv.x * u_rand+ sin(u_time), vUv.y * u_rand+ cos(u_time))));\n    }\n    \n    float Cir2(vec2 vUv, float size){\n        return 1. - smoothstep( size, size + 0.01, distance(vUv, vec2(vUv.x * u_rand +cos(u_time), vUv.y * u_rand+ sin(u_time))));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 10. - 5.;\n        vec3 color = vec3(0.);\n        float c1 = Cir(vUv, 0.5);\n        float c2 = Cir2(vUv, 0.5);\n        color = vec3(c1 + c2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ow(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Aw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rand\nfloat rand(float x){\n    return fract(sin(x)* 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n//book of shaders\nvec2 tPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * 2.0);\n    if(i > 0.75){\n        vUv = vec2(1.0) - vUv;\n    } else if (i > 0.5){\n        vUv = vec2(1.0 - vUv.x, vUv.y);\n    }else if (i > 0.25){\n        vUv = 1.0 - vec2(1.0 - vUv.x, - vUv.y);\n    }\n    return vUv;\n}\n\n//sinc curve iquilezles.org\nfloat sinc(float x,float k){\n    float a=PI*((k*x)-1.);\n    return sin(a)/a ;\n}\n\n//plot function bookofshaders\nfloat plot(vec2 st, float pct){\n  \n  return  smoothstep( pct-0.2, pct, st.x ) -\n          smoothstep( pct, pct+0.2, st.x );\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv *= 5.0;\n    vec3 color = vec3(0.);\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 tile = tPattern(fpos, rand(ipos)); \n    float x = (sinc((vUv.y), sin(u_time) * 0.5)) * 0.45;\n    float pct = plot(tile - 0.5, x);\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Nw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Bw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rand\nfloat rand(float x){\n    return fract(sin(x)* 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n//bookofshaders\nfloat pattern(vec2 vUv, vec2 v, float t){\n    vec2 p = floor(vUv + v);\n    float y = smoothstep(t, t+0.01, rand(100.+p * 0.00001) + rand(p.x)*0.5);\n    return distance(vUv *y, v * y);\n}\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.001), vUv);\n    b *= smoothstep(size, size + vec2(0.001), 1. - vUv);\n    float b1 = b.x * b.y;\n    vec2 bb = smoothstep(size-0.05, (size-0.05) + vec2(0.01), vUv);\n    bb *= smoothstep(size-0.05, (size-0.05) + vec2(0.01), 1. - vUv);\n    float b2 = bb.x * bb.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float x = Box(vUv, vec2(.125));\n    vec2 grid = vec2(25., 50.);\n    vec2 grid2 = vec2(5., 5.);\n    vUv *= grid;\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 vel = vec2(u_time * 0.25 * max(grid.x, grid.y));\n    vel *= vec2(-1., 0.0) * rand(1.0 + ipos.y);\n    vec2 vel2 = vec2(u_time * 1. * max(grid2.x, grid2.y));\n    vel2 *= vec2(0.0, -1.0) * rand(1.0 + ipos.x);\n    float y = pattern(vUv, vel, 0.95);\n    float z = pattern(1. - vUv, vel2, 0.95);\n    color = vec3(y + z);\n    color += 1. - x;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //rand\nfloat rand(float x){\n    return fract(sin(x)* 1e4);\n}\n\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n//book of shaders\nvec2 tPattern(vec2 vUv, float i){\n    i = fract((i - 0.5) * (u_time * 0.25));\n    if(i > 0.75){\n        vUv = vec2(1.) - vUv;\n    } else if (i > 0.5){\n        vUv = vec2(1. - vUv.x, vUv.y) ;\n    } else if (i > 0.25){\n        vUv = 1. - vec2(1. - vUv.x, vUv.y);\n    }\n    return vUv;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color = vec3(0.);\n    vUv *= 10.;\n    vec2 ipos = floor(vUv);\n    vec2 fpos = fract(vUv);\n    vec2 tile = tPattern(fpos, rand(ipos));\n    float y = step(tile.x, tile.y);\n    float z = smoothstep(tile.x - 0.1, tile.x, tile.y) - \n              smoothstep(tile.x, tile.x + 0.1, tile.y);\n    color = vec3(z);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ww(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(38.67392, 98.376482))) * 46783.2347982);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    vec2 Tile(vec2 vUv,float zoom,float speed){\n        vUv*=zoom;\n        float t=u_time*speed;\n        if(fract(t)>.5){\n            if(fract(vUv.y*.5)>.5){\n                vUv.x+=fract(t)*2.;\n            }else{\n                vUv.x-=fract(t)*2.;\n            }\n        }else{\n            if(fract(vUv.x*.5)>.5){\n                vUv.y+=fract(t)*2.;\n            }else{\n                vUv.y-=fract(t)*2.;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec2 newUv = vUv;\n        vUv *= 10.0;\n        newUv = Tile(newUv, 10., 0.5);\n        float z=1. - Cir(newUv,vec2(.5),.25);\n        vec3 color = vec3(0.);\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        float y = 1. - rand(ipos * (u_time * sin(0.00000001)));\n        color = vec3(y * z);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //bookofshaders\nfloat plot(vec2 vUv, float x){\n    return smoothstep(x - 2000000.5, x, vUv.y) -\n           smoothstep(x, x + 0.05, vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 4. - 1.;\n    vec3 color = vec3(0.);\n    float y = fract(sin(vUv.x) * u_time * u_time);\n    float p = plot(vUv, y);\n    color = vec3(p);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qw=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(83.8237492, 12.3874298))) *  2349236.8732947);\n    }\n    \n    //book of shaders\n    vec2 tPattern(vec2 vUv, float i){\n        i = fract((i-0.5) * 2.0);\n        if(i > 0.75){\n            vUv = vec2(1.0) - vUv;\n        } else if (i > 0.5){\n            vUv = vec2(1.0 - vUv.x, vUv.y);\n        } else if (i > 0.25){\n            vUv = 1.0 - vec2(1.0-vUv.x, vUv.y);\n        }\n        return vUv;\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv *= 20.;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = tPattern(fpos, rand(ipos ));\n        float y = BoxBorder(tile, vec2(0.15 * abs(sin(u_time * 0.25))));\n        color = vec3(y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qw,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $w=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(83.8237492, 12.3874298))) *  2349236.8732947);\n    }\n    \n    //book of shaders\n    vec2 tPattern(vec2 vUv, float i){\n        i = fract((i-0.5) * 2.0);\n        if(i > 0.75){\n            vUv = vec2(1.0) - vUv;\n        } else if (i > 0.5){\n            vUv = vec2(1.0 - vUv.x, vUv.y);\n        } else if (i > 0.25){\n            vUv = 1.0 - vec2(1.0-vUv.x, vUv.y);\n        }\n        return vUv;\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    float CirOutline(vec2 vUv,vec2 pos,float size){\n        float outer=1.-smoothstep((size+.025),(size+.025)+.25,distance(vUv,pos));\n        float inner=1.-smoothstep(size,size+.05,distance(vUv,pos));\n        return outer-inner;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv *= 10.;\n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = tPattern(fpos, rand(ipos ));\n        float y = BoxBorder(tile, vec2(0.15 * (sin(u_time * 0.15))));\n        float x = CirOutline(tile, vec2(0.5 * abs(sin(u_time * 0.15)), 0.5 * abs(cos(u_time * 0.15))), 0.5);\n        color = vec3(x);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$w,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(83.8237492, 12.3874298))) *  2349236.8732947);\n    }\n    \n    // vec2 Rot(vec2 vUv, float angle){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(angle), -sin(angle),\n    //                sin(angle), cos(angle)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    //book of shaders\n    vec2 tPattern(vec2 vUv, float i){\n        i = fract((i-0.5) * 2.0);\n        if(i > 0.75){\n            vUv = vec2(1.0) - vUv;\n        } else if (i > 0.5){\n            vUv = vec2(1.0 - vUv.x, vUv.y);\n        } else if (i > 0.25){\n            vUv = 1.0 - vec2(1.0-vUv.x, vUv.y);\n        }\n        return vUv;\n    }\n    \n    float BoxBorder(vec2 vUv,vec2 size){\n        //vUv = vUv * 4. - .5;\n        vec2 b=smoothstep(size,size+vec2(.01),vUv);\n        b*=smoothstep(size,size+vec2(.01),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),vUv);\n        b2*=smoothstep(size-vec2(.01),(size-vec2(.01))+vec2(.01),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        vUv *= 5.;\n        \n        vec2 ipos = floor(vUv);\n        vec2 fpos = fract(vUv);\n        vec2 tile = tPattern(fpos, rand(ipos ));\n        tile = Rot(tile, u_time * 0.25);\n        float y = BoxBorder(tile, vec2(0.2 * abs(sin(u_time * 0.0525))));\n        color = vec3(y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x)* 1e4);\n    }\n    \n    float plot(vec2 vUv, float pct){\n        return smoothstep(pct - 0.02, pct, vUv.y) - \n               smoothstep(pct, pct + 0.02, vUv.y);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv *= 10. - 5.;\n        vUv.y -= 2.;\n        vUv.x += u_time;\n        vec3 color = vec3(0.);\n        float i = floor(vUv.x);\n        float f = fract(vUv.x);\n        float y = rand(i);\n        //y = mix(rand(i), rand(i + 1.0), f);\n        y = mix(rand(i), rand(i + 1.0), smoothstep(0., 1., f));\n        float x = sin(u_time);\n        float pct = plot(vUv, y);\n        color = vec3(pct);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x)* 1e4);\n    }\n    \n    float plot(vec2 vUv, float pct){\n        return smoothstep(pct - 0.02, pct, vUv.y) - \n               smoothstep(pct, pct + .75, vUv.y);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv *= 10. - 5.;\n        vUv.y -= 2.;\n        vUv.x += u_time;\n        vec3 color = vec3(0.);\n        float i = floor(vUv.x * 1.);\n        float f = fract(vUv.x * 1.);\n    \n        float i2 = floor(vUv.x * 1.5);\n        float f2 = fract(vUv.x * 1.5);\n    \n        float i3 = floor(vUv.x * 2.);\n        float f3 = fract(vUv.x * 2.);\n    \n        float i4 = floor(vUv.x * 2.5);\n        float f4 = fract(vUv.x * 2.5);\n    \n        float i5 = floor(vUv.x * 3.);\n        float f5 = fract(vUv.x * 3.);\n    \n    \n        float y = rand(i);\n        float y2 = rand(i2);\n        float y3 = rand(i3);\n        float y4 = rand(i2);\n        float y5 = rand(i3);\n        //y = mix(rand(i), rand(i + 1.0), f);\n        y = mix(rand(i), rand(i + 1.0), smoothstep(0., 1., f));\n        y2 = mix(rand(i2), rand(i2 + 1.0), smoothstep(0., 1., f2));\n        y3 = mix(rand(i3), rand(i3 + 1.0), smoothstep(0., 1., f3));\n        y4 = mix(rand(i4), rand(i4 + 1.0), smoothstep(0., 1., f4));\n        y5 = mix(rand(i5), rand(i5 + 1.0), smoothstep(0., 1., f5));\n    \n        float pct = plot(vUv, y);\n        float pct2 = plot(vUv, y2);\n        float pct3 = plot(vUv, y3);\n        float pct4 = plot(vUv, y4);\n        float pct5 = plot(vUv, y5);\n    \n        color.r = pct;\n        color.g = pct2;\n        color.b = pct3;\n        // color.r = pct4;\n        // color.g = pct5;\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x)*1e5);\n    }\n    \n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-.02,pct,vUv.y)-\n        smoothstep(pct,pct+.02,vUv.y);\n    }\n    \n    float noise(vec2 vUv){\n        float i=floor(vUv.x);\n        float f=fract(vUv.x);\n        float y=rand(i);\n        y=mix(rand(i),rand(i+1.),smoothstep(0.,1.,f));\n        return y;\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        float x = 1.-smoothstep(size,size+.01,distance(vUv,pos));\n        float y = 1.-smoothstep(size + 0.02, size + 0.02+0.01, distance(vUv, pos));\n        return y - x;\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vUv*=10.-5.;\n        //vUv.y-=2.; \n        //vUv.x+=u_time;\n        vec3 color=vec3(0.);\n        float y = noise(vUv);\n        float x1=cir(vUv,vec2(2.5),1.25+y*cos(u_time));\n        float x2=cir(vUv,vec2(2.5),1.5+y*sin(u_time));\n        float x3=cir(vUv,vec2(2.5),1.+y*cos(u_time));\n        float x4=cir(vUv,vec2(2.5),1.75+y*sin(u_time));\n        float x5=cir(vUv,vec2(2.5),.75+y*cos(u_time));\n        float pct=plot(vUv,y);\n    \n        color=vec3(x1 + x2 + x3 + x4 + x5);\n        //color=vec3(pct + x1);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x)* 1e4);\n    }\n    \n    //2D random\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy, vec2(23.74927,89.23476))) * 64827.27364872 + rand(u_time * 0.00001));\n    }\n    \n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n    \n        // Four corners in 2D of a tile\n        float a = rand(i);\n        float b = rand(i + vec2(1.0, 0.0));\n        float c = rand(i + vec2(0.0, 1.0));\n        float d = rand(i + vec2(1.0, 1.0));\n    \n        // Smooth Interpolation\n    \n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n    \n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec2 pos = vec2(vUv * 5.0);\n        float n = noise(pos);\n        vec3 color = vec3(0.);\n        color.r =1. - n - 0.5;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //2D random\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(23.74927,89.23476))) * 64827.27364872);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat cir(vec2 vUv,vec2 pos,float size){\n    vUv = vec2(0.5) - vUv;\n    float f = size * 1.5;\n    float r = length(vUv) * 2.0;\n    float a = atan(vUv.y, vUv.x);\n    float m = abs(mod(a + u_time * 2., 3.14 * 2.) - 3.14)/3.6;\n    m += noise(vUv + u_time * 0.1) * .5;\n    f += sin(a * 40.) * noise(vUv + u_time * .2) * 0.1;\n    f += sin(a * 10.) * .1 * pow(m, 2.);\n    float x = 1.-smoothstep(size,size+.01,distance(vUv,pos));\n    float y = 1.-smoothstep(size + 0.02, size + 0.02+0.01, distance(vUv, pos));\n    return smoothstep(f, f + 0.01, r) + (x - y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float y = cir(vUv, vec2(0.0), 0.4);\n    color = vec3(y);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //2D random\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(23.74927,89.23476))) * 64827.27364872);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat lines(vec2 vUv, float b){\n    float s = 10.0;\n    vUv *= s;\n    return smoothstep(0., .5+b * .5, abs((sin(vUv.x * 3.1415) + b * 2.0)) * .5);\n}\n\n// vec2 Rot(vec2 vUv, float a){\n//     vUv -= 0.5;\n//     vUv = mat2(cos(a), -sin(a),\n//                sin(a), cos(a)) * vUv;\n//     vUv += 0.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv -= 0.25;\n    vec3 color = vec3(0.);\n    vUv = vUv.yx * vec2(3., 3.);\n    vUv = Rot(vUv, u_time * 0.2);\n    vUv = noise(vUv) * vUv + u_time * 0.25;\n    float p = vUv.x;\n    p = lines(vUv, .5);\n    color = vec3(p);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise2(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// vec2 Rot(vec2 vUv, float a){\n//     vUv -= 0.5;\n//     vUv = mat2(cos(a), -sin(a),\n//                sin(a), cos(a)) * vUv;\n//     vUv += 0.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.2);\n    vec3 color = vec3(0.);\n    vUv += noise2(vUv * 2.5) * 5.0 + sin(u_time * 0.25);\n    float y = smoothstep(.19, .2, noise2(vUv ));\n    y += smoothstep(.1, .2, noise2(vUv * 10.));\n    y -= smoothstep(.3, .4, noise2(vUv * 10.));\n    color = vec3(y);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise2(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// vec2 Rot(vec2 vUv, float a){\n//     vUv -= 0.5;\n//     vUv = mat2(cos(a), -sin(a),\n//                sin(a), cos(a)) * vUv;\n//     vUv += 0.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.2);\n    vec3 color = vec3(0.);\n    vUv += noise2(vUv * 2.5) * 1.0 + cos(u_time * 0.15);\n    float y = smoothstep(.19, .2, noise2(vUv ));\n    y += smoothstep(.1, .2, noise2(vUv * 10.));\n    y -= smoothstep(.3, .4, noise2(vUv * 10.));\n    y -= smoothstep(.4, .6, noise2(vUv * 20.));\n    color = vec3(y);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //2D random\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(23.74927,89.23476))) * 64827.27364872);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat cir(vec2 vUv,vec2 pos,float size){\n    vUv = vec2(0.5) - vUv;\n    float f = size * 1.5;\n    float r = length(vUv) * 2.0;\n    float a = atan(vUv.y, vUv.x);\n    float m = abs(mod(a + u_time * 2., 3.14 * 2.) - 3.14)/3.6;\n    m += noise(vUv + u_time * 0.1) * .5;\n    f += sin(a * 20.) * noise(vUv + u_time * .02) * 0.1;\n    f -= sin(a * 10.) * .1 * pow(m, 2.);\n    float x = 1.-smoothstep(size,size+.01,distance(vUv,pos));\n    float y = 1.-smoothstep(size + 0.05, size + 0.02+0.01, distance(vUv, pos));\n    return smoothstep(f, f + 0.007, r);\n}\n\nfloat boarder(vec2 vUv, float size, float w){\n    return cir(vUv, vec2(0.0), size ) - cir(vUv, vec2(0.0), size + w); \n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float y = boarder(vUv, 0.5, 0.04);\n    float y2 = boarder(vUv, 0.3, 0.04);\n    float y3 = boarder(vUv, 0.1, 0.04);\n    color = vec3(y + y2 + y3);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _S=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x)*1e4);\n    }\n    \n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-.2,pct,vUv.y)-\n        smoothstep(pct,pct+.02,vUv.y);\n    }\n    \n    //2D random\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy,vec2(23.74927,89.23476)))*64827.27364872);\n    }\n    \n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise(in vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        // Four corners in 2D of a tile\n        float a=rand(i);\n        float b=rand(i+vec2(1.,0.));\n        float c=rand(i+vec2(0.,1.));\n        float d=rand(i+vec2(1.,1.));\n        \n        // Smooth Interpolation\n        \n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u=f*f*(3.-2.*f);\n        // u = smoothstep(0.,1.,f);\n        \n        // Mix 4 coorners percentages\n        return mix(a,b,u.x)+\n        (c-a)*u.y*(1.-u.x)+\n        (d-b)*u.x*u.y;\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vUv*=10.-5.;\n        vUv.y-=2.5;\n        vUv.x+=u_time;\n        vec3 color=vec3(0.);\n        float i=floor(vUv.x);\n        float f=fract(vUv.x);\n        float y=rand(i);\n        //y = mix(rand(i), rand(i + 1.0), f);\n        y=mix(rand(i),rand(i+1.),smoothstep(0.,1.,f));\n        // float x=sin(u_time);\n        float pct=plot(noise(vUv+u_time)+vec2(vUv.x,vUv.y+ 0.8),y);\n        float pct2=plot(noise(vUv+u_time) + vUv,y);\n        float pct3=plot(noise(vUv+u_time)+vec2(vUv.x, vUv.y - 0.8),y);\n        float pct4=plot(noise(vUv+u_time)+vec2(vUv.x,vUv.y+ 1.6),y);\n        float pct5=plot(noise(vUv+u_time)+vec2(vUv.x,vUv.y-1.6),y);\n        color=vec3(pct + pct2 + pct3 + pct4 + pct5);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_S,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var US=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float rand(float x){\n        return fract(sin(x)*1e4);\n    }\n    \n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-.2,pct,vUv.y)-\n        smoothstep(pct,pct+.02,vUv.y);\n    }\n    \n    //2D random\n    float rand(vec2 vUv){\n        return fract(sin(dot(vUv.xy,vec2(23.74927,89.23476)))*64827.27364872);\n    }\n    \n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise(in vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        // Four corners in 2D of a tile\n        float a=rand(i);\n        float b=rand(i+vec2(1.,0.));\n        float c=rand(i+vec2(0.,1.));\n        float d=rand(i+vec2(1.,1.));\n        \n        // Smooth Interpolation\n        \n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u=f*f*(3.-2.*f);\n        // u = smoothstep(0.,1.,f);\n        \n        // Mix 4 coorners percentages\n        return mix(a,b,u.x)+\n        (c-a)*u.y*(1.-u.x)+\n        (d-b)*u.x*u.y;\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vUv = noise(Rot(vUv, u_time * 0.2)) * vUv;\n        vUv*=20.-10.;\n        vUv.y-=.0;\n        vUv.x+=u_time;\n        vec3 color=vec3(0.);\n        float i=floor(vUv.x);\n        float f=fract(vUv.x);\n        float y=rand(i);\n        //y = mix(rand(i), rand(i + 1.0), f);\n        y=mix(rand(i),rand(i+1.),smoothstep(0.,1.,f));\n        // float x=sin(u_time);\n        float pct=plot(vUv,y);\n        float pct2=plot(noise(vUv+u_time) + vUv,y);\n        float pct3=plot(noise(vUv+u_time)+vec2(vUv.x, vUv.y - 0.2),y);\n        float pct4=plot(noise(vUv+u_time)+vec2(vUv.x,vUv.y+ 0.4),y);\n        float pct5=plot(noise(vUv+u_time)+vec2(vUv.x,vUv.y-0.4),y);\n        color=vec3(pct + pct2 + pct3 + pct4 + pct5);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:US,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //2D random\nfloat rand(vec2 vUv){\n    return fract(sin(dot(vUv.xy, vec2(23.74927,89.23476))) * 64827.27364872);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat lines(vec2 vUv, float b){\n    float s = 10.0;\n    vUv *= s;\n    return smoothstep(0.45, .45+b * .451, abs((sin(vUv.x * 3.1415) + b * 1.)) * .5);\n}\n\n// vec2 Rot(vec2 vUv, float a){\n//     vUv -= 0.5;\n//     vUv = mat2(cos(a), -sin(a),\n//                sin(a), cos(a)) * vUv;\n//     vUv += 0.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv -= .25;\n    vUv.x += sin(u_time) * 0.2;\n    vec3 color = vec3(0.);\n    vUv = vUv.yx * vec2(3., 3.);\n    vUv = Rot(vUv, u_time * 0.2);\n    vUv = noise(vUv) * vUv + u_time * 0.025;\n    vUv.x = noise(vUv) * vUv.x;\n    vUv.y = noise(vUv) * vUv.y;\n    float p = vUv.x;\n    p = lines(vUv, .5);\n    color = vec3(p);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n// vec2 Rot(vec2 vUv, float a){\n//     vUv -= 0.5;\n//     vUv = mat2(cos(a), -sin(a),\n//                sin(a), cos(a)) * vUv;\n//     vUv += 0.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vec3 color = vec3(0.);\n    vec2 pos = vec2(vUv * 2.);\n    pos = Rot(pos, u_time);\n    float y = noise(pos + sin(u_time));\n    float d = length( max(abs(vUv)-(.13 * sin(u_time * 0.25) * 2.),0.));\n    color = vec3(y * (fract(d * 10.0)));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st = vec2( dot(st,vec2(127.1,311.7)),\n                  dot(st,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n    \n        vec2 u = f*f*(3.0-2.0*f);\n    \n        return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                         dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                    mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                         dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    }\n    \n    mat2 rotate2d(float angle){\n        return mat2(cos(angle),-sin(angle),\n                    sin(angle),cos(angle));\n    }\n    \n    float lines(in vec2 pos, float b){\n        float scale = 10.0/2.;\n        pos *= scale;\n        return smoothstep(0.001,\n                        .05+b*.251,\n                        abs((sin(pos.x*3.1415)+b*2.0))*.0251);\n    }\n    \n    float Cir(vec2 vUv, vec2 pos, float size){\n        float scale  = 1.;\n        pos *= scale;\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        //vUv -= 0.5;\n        vec3 color = vec3(0.);\n        vec2 pos = vUv.yx*vec2(10.,3.);\n        pos -= vec2(5., 1.5);\n        float p = pos.x;\n        pos = rotate2d(noise2(pos + u_time)) * pos;\n        //p = Cir(pos, vec2(0.75), 0.45);\n        p += lines(pos, .5);\n        float r = smoothstep(0.4, 0.6, vUv.y * p);\n        float b = smoothstep(0.4, 0.6, 1. - vUv.y * p);\n        color.b = p * 0.025 * b;\n        color.b += 1. * r + p * 2. ;\n        //color.b = 1.0 * r;\n        //color.rg = vec2(p * b);\n        color.rg += (.8 - p * 1.23);\n        //color.rg += (.9 - p * 1.23);\n        //color.g = step(0.5, 1.);\n        //color.rg = vec2(1., 1.);\n        //color.b -= sin(u_time * 0.25);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st = vec2( dot(st,vec2(127.1,311.7)),\n                  dot(st,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n    \n        vec2 u = f*f*(3.0-2.0*f);\n    \n        return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                         dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                    mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                         dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    }\n    \n    mat2 rotate2d(float angle){\n        return mat2(cos(angle),-sin(angle),\n                    sin(angle),cos(angle));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv *= 10. - 5.;\n        //vUv.x += u_time * 0.2;\n        vec2 newUv = vUv;\n        newUv.x += 1. - noise2(newUv) * newUv.x + u_time;\n        newUv.y += 1. - noise2(newUv) * newUv.y + u_time;\n        \n        newUv = noise2(newUv) * newUv + sin(u_time);\n        color = vec3(newUv, 0.); \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st = vec2( dot(st,vec2(127.1,311.7)),\n                  dot(st,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n    \n        vec2 u = f*f*(3.0-2.0*f);\n    \n        return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                         dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                    mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                         dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    }\n    \n    mat2 rotate2d(float angle){\n        return mat2(cos(angle),-sin(angle),\n                    sin(angle),cos(angle));\n    }\n    \n    float Tri(vec2 vUv, float size){\n        vUv = vUv * 5. - 2.5;\n        float a  = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/3.;\n        float d = cos(floor(.05 * a/r) * r-a) * length(vUv);\n        return 1. - smoothstep(size, size+0.01, d);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec2 triUv = vUv;\n        triUv = noise2(triUv + (u_time * 0.5)) + triUv;\n        vec3 color = vec3(0.);\n        float tri = Tri(triUv, 0.5);\n        color = vec3(tri);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    vec2 rotate2d(vec2 vUv, float angle){\n        vUv -= vec2(0.5);\n        vUv = (cos(angle),-sin(angle),\n                sin(angle),cos(angle)) * vUv ;\n        vUv += vec2(0.5);\n        return vUv;\n    }\n    \n    float Tri(vec2 vUv,float size){\n        vUv=vUv*5.-2.5;\n        float a=atan(vUv.x,vUv.y)+PI;\n        float r=TWO_PI/3.;\n        float d=cos(floor(.05*a/r)*r-a)*length(vUv);\n        return 1.-smoothstep(size,size+.01,d);\n    }\n    \n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-8. - abs(cos(u_time * 0.75)),pct,(vUv.y * (noise2(vUv + u_time))))-\n        smoothstep(pct,pct+8. + abs(sin(u_time * 0.75)),(vUv.y*(noise2(vUv + u_time))));\n    }\n    \n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 15. - 7.5;\n        //vUv = rotate2d(vUv, sin(u_time));\n        //vUv.x -= 0.5;\n        vUv.x = noise2(vUv * sin(u_time * 0.5)) + vUv.x;\n        vUv.y = noise2(vUv * sin(u_time * 0.5)) + vUv.y;\n        vec3 color = vec3(0.);\n        float y = noise2(vUv) + vUv.x;\n        float pct=plot(vUv, y);\n        color = vec3(pct);\n        gl_FragColor = vec4(color, 0.5);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ES(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    vec2 rotate2d(vec2 vUv,float angle){\n        vUv-=vec2(.5);\n        vUv=(cos(angle),-sin(angle),\n        sin(angle),cos(angle))*vUv;\n        vUv+=vec2(.5);\n        return vUv;\n    }\n    \n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-0.01-abs(sin(u_time*.75 )+7.5),pct,(vUv.y*(noise2(vUv+u_time + 2.0))))-\n        smoothstep(pct,pct+0.01+abs(sin(u_time*.75 )+2.0),(vUv.y*(noise2(vUv+u_time + 2.0))));\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vUv=vUv*15.-7.5;\n        vUv.y += 4.5;\n        //vUv = rotate2d(vUv, sin(u_time));\n        //vUv.x -= 0.5;\n        vUv.x=noise2(vUv)+vUv.x;\n        vUv.y=noise2(vUv)+vUv.y;\n        vec2 newUv = vUv;\n        newUv.y += 7.0;\n        vec3 color=vec3(0.);\n        float y=noise2(vUv)+vUv.y;\n        //float y2=noise2(vec2(newUv))+vUv.y - 7.5;\n        float pct=plot(vUv,y);\n        //float pct2=plot(vUv,y2);\n        float gradient = pow(1.0 - vUv.y, 2.0) * 0.5;\n        float final = pct * gradient;\n        color = final * vec3(pct, pct*pct, pct*pct*pct*pct*pct);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    vec2 rotate2d(vec2 vUv,float angle){\n        vUv-=vec2(.5);\n        vUv=(cos(angle),-sin(angle),\n        sin(angle),cos(angle))*vUv;\n        vUv+=vec2(.5);\n        return vUv;\n    }\n    \n    float plot(vec2 vUv,float p){\n        return smoothstep(p + 4.5, p, vUv.y) -\n               smoothstep(p, p - 0.0005, vUv.y);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 4. - 2.;\n        vUv.y += 2.5;\n        //vUv = vUv * sin(u_time * 0.5)/2.0;\n        vec3 color = vec3(.5, .8, .9);\n        float y1 = noise2(vUv + u_time);\n        float y2 = noise2(vUv + u_time);\n        float y3 = noise2(vUv + u_time);\n        float y4 = noise2(vUv + u_time);\n        float y5 = noise2(vUv + u_time);\n        float pct1 = plot(vec2(vUv.x + 0.0, vUv.y), y1);\n        float pct2 = plot(vec2(vUv.x + 0.5, vUv.y), y2);\n        float pct3 = plot(vec2(vUv.x + 1.0, vUv.y), y3);\n        float pct4 = plot(vec2(vUv.x - 0.5, vUv.y), y4);\n        float pct5 = plot(vec2(vUv.x - 1.0, vUv.y), y5);\n        color *= vec3(pct1 * pct2 * pct3 * pct4 * pct5);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p *= vUv.x;\n        return smoothstep(p + vUv.x * 1.5, p, vUv.y) -\n               smoothstep(p, p - vUv.x * 1.5, vUv.y);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 5.;\n        vUv.x -= 1.5;\n        vUv.y += 1.2;\n        vUv = Rot(vUv, PI * 0.5);\n        //vUv = vUv * sin(u_time * 0.5)/2.0;\n        vec3 color = vec3(0.);\n        float y1 = noise2(vUv - u_time * 0.2);\n        float y2 = noise2(vUv - u_time * 1.0);\n        float y3 = noise2(vUv - u_time * 1.5);\n        float y4 = noise2(vUv - u_time * 1.5);\n        float y5 = noise2(vUv - u_time * 0.5);\n        float pct1 = plot(vec2(vUv.x + 0.0, vUv.y), y1);\n        float pct2 = plot(vec2(vUv.x + 0.5, vUv.y), y2);\n        float pct3 = plot(vec2(vUv.x + 1.0, vUv.y), y3);\n        float pct4 = plot(vec2(vUv.x - 0.5, vUv.y), y4);\n        float pct5 = plot(vec2(vUv.x - 1.0, vUv.y), y5);\n        color = vec3(pct1 * pct2 * pct3 * pct4 * pct5);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     //vUv *= 2.0;\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    \n    float plot(vec2 vUv,float p){\n        p *= vUv.x;\n        return smoothstep(p + vUv.x * 1.5, p, vUv.y) -\n               smoothstep(p, p - vUv.x * 1.5, vUv.y);\n    }\n    \n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        //vUv = vUv * 3. - 0.5;\n        //vUv.x -= 1.5;\n        //vUv.y += 1.2;\n        //vUv *= 2.0;\n        vUv = Rot(vUv, PI * u_time * 0.25);\n        vUv = vUv * 2. - 1.;\n        //vUv = vUv * sin(u_time * 0.5)/2.0;\n        vec3 color = vec3(.5, .8, .9);\n        float y1 = noise2(vUv - u_time * 0.2);\n        float y2 = noise2(vUv - u_time * 1.0);\n        float y3 = noise2(vUv - u_time * 1.5);\n        float y4 = noise2(vUv - u_time * 1.5);\n        float y5 = noise2(vUv - u_time * 0.5);\n        float pct1 = plot(vec2(vUv.x + 0.0, vUv.y), y1);\n        float pct2 = plot(vec2(vUv.x + 0.5, vUv.y), y2);\n        float pct3 = plot(vec2(vUv.x + 1.0, vUv.y), y3);\n        float pct4 = plot(vec2(vUv.x - 0.5, vUv.y), y4);\n        float pct5 = plot(vec2(vUv.x - 1.0, vUv.y), y5);\n        color *= vec3(pct1 * pct2 * pct3 * pct4 * pct5);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     //vUv *= 2.0;\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    \n    float plot(vec2 vUv,float p){\n        p *= vUv.x;\n        return smoothstep(p + vUv.x * 1.5, p, vUv.y) -\n               smoothstep(p, p - vUv.x * 1.5, vUv.y);\n    }\n    \n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    vec2 Tile2(vec2 vUv, float zoom, float speed){\n        vUv *= zoom;\n        //vUv = noise2(vUv + u_time) + vUv;\n        float t = u_time * speed;\n        if(fract(t) > .5 ){\n            if(fract(vUv.y * .5)>.5){\n                vUv.x+= fract(t) * 2.;\n                vUv.x = noise2(vUv + u_time) + vUv.x;\n            }else{\n                vUv.x-= fract(t) * 2.;\n                vUv.x = noise2(vUv - u_time) - vUv.x;\n            }\n            //vUv = Rot(vUv, PI * 0.5);\n        } else {\n            if(fract(vUv.x*.5) > .5){\n                vUv.y += fract(t) * 2.;\n                vUv.y = noise2(vUv + u_time) + vUv.y;\n            } else {\n                vUv.y -= fract(t) * 2.;\n                vUv.y = noise2(vUv - u_time) - vUv.y;\n            }\n        }\n        return fract(vUv);\n    }\n    \n    float Tri(vec2 vUv, float size){\n        vUv -= 0.5;\n        float a = atan(vUv.x, vUv.y) + PI;\n        float r = TWO_PI/3.0;\n        float d = cos(floor(.5 + a/r) * r-a) * length(vUv);\n        return 1.0 - smoothstep(size, size+0.01, d);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = Tile2(vUv, 10.0, 0.25);\n        float c1 = cir(vUv, vec2(0.5), 0.25);\n    \n        vec2 newUv = vUv;\n        newUv = Rot(vUv, sin(u_time + 2.0) * PI);\n        float t1 = Tri(newUv, 0.1);\n        \n        color = vec3(c1 - t1);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv, float a){\n    //     //vUv *= 2.0;\n    //     vUv -= 0.5;\n    //     vUv = mat2(cos(a), -sin(a),\n    //                sin(a), cos(a)) * vUv;\n    //     vUv += 0.5;\n    //     return vUv;\n    // }\n    \n    \n    float plot(vec2 vUv,float p){\n        p *= vUv.x;\n        return smoothstep(p +0.15, p, vUv.y) -\n               smoothstep(p, p - 0.15, vUv.y);\n    }\n    \n    float plot2(vec2 vUv,float p){\n        p *= vUv.y;\n        return smoothstep(p +0.15, p, vUv.x) -\n               smoothstep(p, p - 0.15, vUv.x);\n    }\n    \n    float cir(vec2 vUv, vec2 pos, float size){\n        return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 15. - 7.5;\n        vec3 color = vec3(0.);\n        vUv = noise2(vUv+u_time) * vUv;\n        float y = plot(vUv, 50.);\n        float y2 = plot2(vUv, cos(u_time+ TWO_PI));\n        color = vec3(y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv,float a){\n    //     //vUv *= 2.0;\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.15,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        return 1. - (smoothstep(size,size+.01,distance(vUv,pos)) - \n                     smoothstep(size-0.025, size-0.025+0.1,distance(vUv,pos)));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2.6 - 1.3;\n        vec3 color = vec3(0.);\n        vec2 translate = noise2(vUv + u_time) * vUv;\n    \n        float c1=cir(vUv,vec2(.50 * translate.x , 0.50 * translate.y),.25);\n        float c2=cir(vUv,vec2(.25 * translate.x +sin(u_time), 0.50 * translate.y),.25);\n        float c3=cir(vUv,vec2(.75 * translate.x, 0.50 * translate.y +sin(u_time)),.25);\n        float c4=cir(vUv,vec2(.50 * translate.x -sin(u_time), 0.25 * translate.y),.25);\n        float c5=cir(vUv,vec2(.50 * translate.x, 0.75 * translate.y -sin(u_time)),.25);\n        color = 1. - vec3(c1*c2*c3*c4*c5);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QS=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv,float a){\n    //     //vUv *= 2.0;\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.15,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        return 1.-(smoothstep(size,size+.01,distance(vUv,pos))-\n        smoothstep(size-.025,size-.025+.1,distance(vUv,pos)));\n    }\n    \n    float sqr(vec2 vUv,vec2 size){\n        vec2 b=smoothstep(size,size+vec2(.03),vUv);\n        b*=smoothstep(size,size+vec2(.03),1.-vUv);\n        float box1=b.x*b.y;\n        vec2 b2=smoothstep(size-vec2(.03),(size-vec2(.03))+vec2(.03),vUv);\n        b2*=smoothstep(size-vec2(.03),(size-vec2(.03))+vec2(.03),1.-vUv);\n        float box2=b2.x*b2.y;\n        return box2-box1;\n    }\n    \n    void main(){\n        vec2 vUv=vec2(vUv.x,vUv.y);\n        vUv=vUv*3.-1.;\n        \n        vec2 newUv1= vUv;\n        newUv1.x += 1.0;\n        vec2 newUv2 = vUv;\n        newUv2.x -= 2.0;\n        vec3 color=vec3(0.);\n        vec2 translate1=noise2(newUv1+u_time)*newUv1;\n        vec2 translate2=noise2(newUv2+u_time)*newUv2;\n        //vUv = noise2(vUv+u_time ) + vUv;\n        float s1=sqr(vec2(newUv1.x,newUv1.y),vec2(.005+translate1.x,.05));\n        float s2=sqr(vec2(newUv1.x,newUv1.y+1.),vec2(.005-translate1.x,.005));\n        float s3=sqr(vec2(newUv1.x,newUv1.y-1.),vec2(.0005-translate1.x,.005));\n    \n        float s4=sqr(vec2(newUv2.x+1.,newUv2.y),vec2(.005+translate2.x,.05));\n        float s5=sqr(vec2(newUv2.x+1.,newUv2.y+1.),vec2(.005+translate2.x,.005));\n        float s6=sqr(vec2(newUv2.x+1.,newUv2.y-1.),vec2(.0005-translate2.x,.005));\n    \n        color = vec3(s1 + s2 + s3 + s4 + s5 + s6);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QS,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $S=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv,float a){\n    //     //vUv *= 2.0;\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.15,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        return 1.-(smoothstep(size,size+.01,distance(vUv,pos))-\n        smoothstep(size-.025,size-.025+.1,distance(vUv,pos)));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 0.5;\n        vec3 color = vec3(0.);\n        vUv += noise2(vUv + u_time) * vUv;\n        float c1 = cir(vUv, vec2(0.5,0.0), 0.25);\n        float c2 = cir(vUv, vec2(0.0,0.0), 0.25);\n        float c3 = cir(vUv, vec2(1.0,0.0), 0.25);\n    \n        float c4 = cir(vUv, vec2(0.5,0.5), 0.25);\n        float c5 = cir(vUv, vec2(0.0,0.5), 0.25);\n        float c6 = cir(vUv, vec2(1.0,0.5), 0.25);\n    \n        float c7 = cir(vUv, vec2(0.5,1.0), 0.25);\n        float c8 = cir(vUv, vec2(0.0,1.0), 0.25);\n        float c9 = cir(vUv, vec2(1.0,1.0), 0.25);\n        color = vec3(c1 * c2 * c3 * c4 *c5 * c6 * c7 * c8 * c9);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$S,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv,float a){\n    //     //vUv *= 2.0;\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.15,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        return 1.-(smoothstep(size,size+.01,distance(vUv,pos))-\n        smoothstep(size-.025,size-.025+.5,distance(vUv,pos)));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 3. - 1.;\n        vec2 newUv = vUv;\n        vec2 translate = vec2(noise2(newUv+u_time) + newUv.x, sin(noise2(newUv+u_time)) * newUv.y);\n        vec3 color = vec3(0.);\n    \n        vUv = Rot(vUv, u_time * 0.25);\n    \n        vec2 pos = vec2(0.5);\n        pos.x = translate.x * pos.x + 0.25;\n        pos.y = translate.y * pos.y + 0.75;\n        float c1 = cir(vUv, pos, 0.5);\n    \n        vec2 pos2 = vec2(0.5);\n        pos2.x = translate.x * pos2.x + 0.25;\n        pos2.y = translate.y * pos2.y + 0.5;\n        float c2 = cir(vUv, pos2, 0.5);\n    \n        vec2 pos3 = vec2(0.5);\n        pos3.x = translate.x * pos3.x + 0.25;\n        pos3.y = translate.y * pos3.y + 0.25;\n        float c3 = cir(vUv, pos3, 0.5);\n    \n        vec2 pos4 = vec2(0.5);\n        pos4.x = translate.x * pos4.x + 0.25;\n        pos4.y = translate.y * pos4.y + 1.0;\n        float c4 = cir(vUv, pos4, 0.5);\n    \n        vec2 pos5 = vec2(0.5);\n        pos5.x = translate.x * pos5.x + 0.25;\n        pos5.y = translate.y * pos5.y + 1.25;\n        float c5 = cir(vUv, pos5, 0.5);\n    \n        vec2 pos6 = vec2(0.5);\n        pos6.x = translate.x * pos6.x + 0.25;\n        pos6.y = translate.y * pos6.y + 0.0;\n        float c6 = cir(vUv, pos6, 0.5);\n    \n        color = vec3(c1 * c2 * c3 * c4 * c5 * c6);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv,float a){\n    //     //vUv *= 2.0;\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.015,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        return 1.-(smoothstep(size,size+.01,distance(vUv,pos))-\n        smoothstep(size-.025,size-.025+.5,distance(vUv,pos)));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 2. - 1.;\n        vUv = noise2(vUv + u_time) + vUv;\n        vec3 color = vec3(0.);\n        float p1 = vUv.y;\n        float p2 = vUv.y - 0.5;\n        float p3 = vUv.y - 1.0;\n        float p4 = vUv.x;\n        float p5 = vUv.x - 0.5;\n        float p6 = vUv.x - 1.0;\n        float pct1 = plot(vUv, p1);\n        float pct2 = plot(vUv, p2);\n        float pct3 = plot(vUv, p3);\n        float pct4 = plot(vUv, p4);\n        float pct5 = plot(vUv, p5);\n        float pct6 = plot(vUv, p6);\n        color = vec3(pct1 + pct2 + pct3 + pct4 + pct5 + pct6);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    vec2 random2(vec2 st){\n        st=vec2(dot(st,vec2(127.1,311.7)),\n        dot(st,vec2(269.5,183.3)));\n        return-1.+2.*fract(sin(st)*43758.5453123);\n    }\n    \n    // Gradient Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/XdXGW8\n    float noise2(vec2 st){\n        vec2 i=floor(st);\n        vec2 f=fract(st);\n        \n        vec2 u=f*f*(3.-2.*f);\n        \n        return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n        dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n        mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n        dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n    }\n    \n    // vec2 Rot(vec2 vUv,float a){\n    //     //vUv *= 2.0;\n    //     vUv-=.5;\n    //     vUv=mat2(cos(a),-sin(a),\n    //     sin(a),cos(a))*vUv;\n    //     vUv+=.5;\n    //     return vUv;\n    // }\n    \n    float plot(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.015,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float plot2(vec2 vUv,float p){\n        p*=vUv.x;\n        return smoothstep(p+.015,p,vUv.y)-\n        smoothstep(p,p-.15,vUv.y);\n    }\n    \n    float cir(vec2 vUv,vec2 pos,float size){\n        return 1.-(smoothstep(size,size+.01,distance(vUv,pos))-\n        smoothstep(size-.025,size-.025+.5,distance(vUv,pos)));\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 5. - 2.5;\n        vec3 color = vec3(0.);\n        vUv *= noise2(vUv+u_time) * vUv;\n        float y = plot(vUv, abs(sin(u_time+ TWO_PI)));\n        float y2 = plot2(vUv,  abs(sin(u_time+ TWO_PI)));\n        color = vec3(y2);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, sin(u_time * 0.25));\n    vec3 color = vec3(0.);\n    vec2 pos = vec2(vUv * 5.);\n    vec2 vel = vec2(u_time * 0.1);\n    float y = snoise(pos + vel) * 0.25 + 0.25;\n    float a = snoise(pos * vec2(cos(u_time * 0.15), sin(u_time * 0.1)) * 0.1) * PI;\n    vel = vec2(cos(a), sin(a));\n    y += snoise(pos + vel) * 0.25 + 0.25;\n    color = vec3(smoothstep(0.7, 0.75, fract(y)));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    //vUv = Rot(vUv, sin(u_time * 0.25));\n    vec3 color = vec3(0.);\n    vec2 pos = vec2(vUv * 2.);\n    vec2 vel = vec2(u_time * 0.1);\n    float y = snoise(pos) * 2.75 + 0.75;\n    float a = snoise(pos * vec2(cos(u_time * 0.25), sin(u_time * 0.2)) * 0.1) * PI;\n    vel = vec2(cos(a), sin(a));\n    y += snoise(pos + vel) * 0.25 + 0.25;\n    color = 1. - vec3(smoothstep(0.7, 0.75, fract(y)));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    p*=vUv.x;\n    return smoothstep(p+.015,p,vUv.y)-\n    smoothstep(p,p-.15,vUv.y);\n}\n\nfloat cir(vec2 vUv,vec2 pos,float size){\n    return 1.-(smoothstep(size,size+.01,distance(vUv,pos))-\n    smoothstep(size+.292,size+.295,distance(vUv,pos)));\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, (u_time * 0.25));\n    vUv = vUv * 5.0 - 2.5;\n    vec3 color = vec3(0.);\n    vUv = snoise(vUv) * vUv;\n    vec2 pos = vec2(0.5);\n    pos = snoise(pos) * pos;\n    float c1 = cir(vUv, pos, 0.25 + snoise(vUv + (u_time * 0.1)));\n    color = vec3(c1);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    p*=vUv.x;\n    return smoothstep(p+.015,p,vUv.y)-\n    smoothstep(p,p-.15,vUv.y);\n}\n\nfloat cir(vec2 vUv,vec2 pos,float size){\n    float x = 1.-(smoothstep(size,size+.1,distance(vUv,pos)));\n    float y = 1.-(smoothstep(size * 1.5, size * 1.5 + 0.1, distance(vUv, pos)));\n    return y - x;\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, (u_time * 0.25));\n    //vUv.x += u_time * 0.25;\n    vUv = vUv * 2. - 0.5;\n    vec3 color = vec3(0.);\n    //vUv += snoise(vUv) * vUv;\n    vec2 pos = vec2(0.5);\n    vUv = snoise(vUv) * vec2 (0.5);\n    float size = 0.25;\n    size = snoise(vUv * 5.0 + sin(u_time * 0.25)) + size;\n    float x = 1.-(smoothstep(size,size+.5,distance(vUv,pos)));\n    float y = 1.-(smoothstep(size * 1.25, size * 1.75 + 0.5, distance(vUv, pos)));\n    float c1 = y - x;\n    color = vec3(c1);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x = snoise(vUv + u_time * 0.1);\n    p += x;\n    return smoothstep(p+(.045),p,vUv.y)-\n    smoothstep(p,p-(.045),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    //vUv = vUv * 1. - 2.;\n    vec3 color = vec3(0.);\n    float x = vUv.x;\n    float y1 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct1 = plot(vec2(vUv.x - 2.5, vUv.y), y1);\n    float y2 =  x*x*(3.0-2.0*x);\n    float pct2 = plot(vec2(vUv.x - 2.0, vUv.y), y2);\n    float y3 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct3 = plot(vec2(vUv.x - 1.5, vUv.y), y3);\n    float y4 =  x*x*(3.0-2.0*x);\n    float pct4 = plot(vec2(vUv.x -1.0, vUv.y), y4);\n    float y5 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct5 = plot(vec2(vUv.x , vUv.y), y5);\n    float y6 =  x*x*(3.0-2.0*x);\n    float pct6 = plot(vec2(vUv.x + 1.0, vUv.y), y6);\n    float y7 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct7 = plot(vec2(vUv.x + 1.5, vUv.y), y7);\n    float y8 =  x*x*(3.0-2.0*x);\n    float pct8 = plot(vec2(vUv.x + 2.0, vUv.y), y8);\n    float y9 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct9 = plot(vec2(vUv.x + 2.5, vUv.y), y9);\n    float y10 =  x*x*(3.0-2.0*x);\n    float pct10 = plot(vec2(vUv.x + 3.5, vUv.y), y10);\n    color = vec3(pct1 + pct2 + pct3 + pct4 + pct5 + pct6 + pct7 + pct8 + pct9 + pct10);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x = snoise(vUv + u_time * 0.1);\n    p += x;\n    return smoothstep(p+(.045),p,vUv.y)-\n    smoothstep(p,p-(.045),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 2.;\n    vUv.x += 1.0;\n    vec3 color = vec3(0.);\n    float noise = snoise(vUv + u_time);\n    float x = vUv.x;\n    float y1 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct1 = plot(vec2(vUv.x - 2.5, vUv.y), y1);\n    float y2 =  x*x*(3.0-2.0*x);\n    float pct2 = plot(vec2(vUv.x - 2.0, vUv.y), y2);\n    float y3 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct3 = plot(vec2(vUv.x - 1.5, vUv.y), y3);\n    float y4 =  x*x*(3.0-2.0*x);\n    float pct4 = plot(vec2(vUv.x -1.0, vUv.y), y4);\n    float y5 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct5 = plot(vec2(vUv.x , vUv.y), y5);\n    float y6 =  x*x*(3.0-2.0*x);\n    float pct6 = plot(vec2(vUv.x + 1.0, vUv.y), y6);\n    float y7 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct7 = plot(vec2(vUv.x + 1.5, vUv.y), y7);\n    float y8 =  x*x*(3.0-2.0*x);\n    float pct8 = plot(vec2(vUv.x + 2.0, vUv.y), y8);\n    float y9 =  x*x*x*(x*(x*6.-15.)+10.);\n    float pct9 = plot(vec2(vUv.x + 2.5, vUv.y), y9);\n    float y10 =  x*x*(3.0-2.0*x);\n    float pct10 = plot(vec2(vUv.x + 3.5, vUv.y), y10);\n    color = vec3(pct1 + pct2 + pct3 + pct4 + pct5 + pct6 + pct7 + pct8 + pct9 + pct10);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x = snoise(vUv + u_time * 0.1);\n    p += x;\n    return smoothstep(p+(.045),p,vUv.y)-\n    smoothstep(p,p-(.045),vUv.y);\n}\n\nfloat cir(vec2 vUv,vec2 pos,float size){\n    float x = 1.-(smoothstep(size,size+.01,distance(vUv,pos)));\n    float y = 1.-(smoothstep(size * 1.25, size * 1.25 + 0.01, distance(vUv, pos)));\n    return y - x;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2.5 - 0.75;\n    vec3 color = vec3(0.);\n    float noise = snoise(vUv + u_time);\n    float c1 = cir(vUv, vec2(0.5 + sin(noise * 0.1), 0.5), 0.15);\n    float c2 = cir(vUv, vec2(0.5 + sin(noise * 0.1), 0.5), 0.35);\n    float c3 = cir(vUv, vec2(0.5 + sin(noise * 0.1), 0.5), 0.55);\n    float c4 = cir(vUv, vec2(0.5 + sin(noise * 0.1), 0.5), 0.75);\n    float c5 = cir(vUv, vec2(0.5 + sin(noise * 0.1), 0.5), 0.95);\n    color = vec3(c1 + c2 + c3 + c4 + c5);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _M=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat sqr(vec2 vUv,vec2 size){\n    vec2 b=smoothstep(size,size+vec2(.013),vUv);\n    b*=smoothstep(size,size+vec2(.013),1.-vUv);\n    float box1=b.x*b.y;\n    vec2 b2=smoothstep(size-vec2(.013),(size-vec2(.031))+vec2(.031),vUv);\n    b2*=smoothstep(size-vec2(.013),(size-vec2(.031))+vec2(.031),1.-vUv);\n    float box2=b2.x*b2.y;\n    return box2-box1;\n}\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 movingTiles(vec2 _st, float _zoom, float _speed){\n    _st *= _zoom;\n    float time = u_time*_speed;\n    if( fract(time)>0.5 ){\n        if (fract( _st.y * 0.5) > 0.5){\n            _st.x += fract(time)*2.0;\n        } else {\n            _st.x -= fract(time)*2.0;\n        }\n    } else {\n        if (fract( _st.x * 0.5) > 0.5){\n            _st.y += fract(time)*2.0;\n        } else {\n            _st.y -= fract(time)*2.0;\n        }\n    }\n    return fract(_st);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv.y -= 2.5;\n    float noise = snoise(vUv + (u_time * 0.5));\n    vUv = movingTiles(vec2(sin(vUv.x) + noise * 0.01, cos(vUv.y) + noise * 0.01), 4., 0.15);\n    vec3 color = vec3(0.);\n    vec2 vUv2 = Rot(vUv, PI * 0.25);\n    vUv = Rot(vUv, u_time * 0.25 );\n    //vUv2 = Rot(vUv2, -u_time * 0.25  );\n    float y1 = sqr(vUv + (noise * 0.05), vec2(0.25));\n    float y2 = sqr(vUv2 + (noise * 0.05), vec2(0.2));\n    float y3 = sqr(vUv + (noise * 0.05), vec2(0.25 * 1.75));\n    float y4 = sqr(vUv2 + (noise * 0.05), vec2(0.2 * 1.75));\n    float y5 = sqr(vUv + (noise * 0.05), vec2(0.25 * 2.));\n    float y6 = sqr(vUv2 + (noise * 0.05), vec2(0.2 * 2.));\n    float y7 = sqr(vUv + (noise * 0.05), vec2(0.25 * 1.5));\n    float y8 = sqr(vUv2 + (noise * 0.05), vec2(0.2 * 1.5));\n    color = vec3(y1 + y2 + y3 + y4 + y5 + y6 + y7 + y8);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_M,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.1);\n    // p+=x * 0.15;\n    return smoothstep(p+(.045),p,vUv.y)-\n    smoothstep(p,p-(.045),vUv.y);\n}\n\nfloat cir(vec2 vUv, float size){\n    vUv=vec2(.5)-vUv;\n    float r=length(vUv)*2.;\n    float a=atan(vUv.y,vUv.x);\n    float m=abs(mod(a+u_time*1.,3.14*2.)-3.14)/3.6;\n    float f=size;\n    m+=snoise(vUv+u_time*.1)*.01;\n    // a *= 1.+abs(atan(u_time*0.2))*.1;\n    // a *= 1.+noise(st+u_time*0.1)*0.1;\n    f+=sin(a*12.)*snoise(vUv*u_time*.2)*.01;\n    f+=(sin(a*10.)*.1*pow(m,1.));\n    return 1.-smoothstep(f,f+.007,r);\n}\n\nfloat cirOutline(vec2 vUv, float size, float width){\n    return cir(vUv, size) - cir(vUv, size - width);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    //vUv = vUv * 2. - 0.5;\n    vec3 color = vec3(0.);\n    float y1=cirOutline(vUv,0.9,.025);\n    float y2=cirOutline(vUv,.8,.025);\n    float y3=cirOutline(vUv,0.7,.025);\n    float y4=cirOutline(vUv,.6,.025);\n    float y5=cirOutline(vUv,.5,.025);\n    color = vec3(y1 + y2 + y3 + y4 + y5);\n    gl_FragColor = vec4(color, 1.);\n}\n\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.1);\n    // p+=x * 0.15;\n    return smoothstep(p+(.045),p,vUv.y)-\n    smoothstep(p,p-(.045),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2.2 - 1.1;\n    vUv /= u_time * 0.15;\n    vec3 color = vec3(0.);\n    float y = sin(vUv.x + u_time);\n    y *= snoise(sin(vUv*(u_time))) * 0.5 ;\n    float pct = plot(vec2(vUv.x,vUv.y), y);\n    float pct2= plot(vec2(vUv.x,vUv.y + 0.25),y);\n    float pct3=plot(vec2(vUv.x,vUv.y-.25),y);\n    float pct4=plot(vec2(vUv.x,vUv.y+.50),y);\n    float pct5=plot(vec2(vUv.x,vUv.y-.50),y);\n    color = vec3(pct + pct2 + pct3 + pct4 + pct5);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.1);\n    p=x * 0.15;\n    return smoothstep(p+(.05),p,vUv.y)-\n    smoothstep(p,p-(.5),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 5. - 2.5;\n    vec3 color = vec3(0.);\n    float y = sin(vUv.x + u_time * 0.5);\n    float sn = snoise(vUv + u_time);\n    float pct = plot(vUv * sn, y);\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.1);\n    p=x * 0.15;\n    return smoothstep(p+(.15),p,vUv.y)-\n    smoothstep(p,p-(2.5),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vUv.y -= 0.5;\n    vec3 color = vec3(0.);\n    vec2 translate = (vec2(snoise(vUv + (u_time * 0.5)) + vUv.x, snoise(vUv + (u_time * 0.5)) + vUv.y));\n    float x = vUv.x;\n    float y = x * x * ( 3. - 2. * x);\n    float pct = plot(vUv + translate, y);\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.1);\n    p=x * 0.75;\n    return smoothstep(p+(.5),p,vUv.y)-\n    smoothstep(p,p-(2.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vUv = Rot(vUv, u_time * 0.15);\n    vec3 color = vec3(0.);\n    float n = snoise((vUv + u_time));\n    float y = sin(vUv.x + u_time) * n;\n    float pct = plot(vUv + sin(n + u_time * 0.25), y);\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.1);\n    p=x * 0.5 ;\n    return smoothstep(p+(0.25),p,vUv.y)-\n    smoothstep(p,p-(1.0),vUv.y);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float noise = snoise(vUv);\n    float c1 = cir(vUv, vec2(0.5), 0.25);\n    color = vec3(c1);\n    float x = vUv.x;\n    float y = x*x*x*(x*(x*6.-15.)+10.) + noise;\n    float p1 = plot(vec2(vUv.x * (noise + sin(u_time)), vUv.y - 0.5 + (noise + cos(u_time))), y);\n    color *= p1;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.1);\n    p=x * 0.5 ;\n    return smoothstep(p+(0.25),p,vUv.y)-\n    smoothstep(p,p-(1.0),vUv.y);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv *= 2.0;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float noise = snoise(vUv + (u_time * 0.5)) * 0.1;\n    float c1 = cir(vUv, vec2(0.5 + sin(noise), 0.5), 0.35 + noise);\n    float c2 = cir(vUv, vec2(0.5 + sin(noise), 0.5), 0.325 + noise);\n    float b1 = Box(vUv, vec2(0.25) + noise);\n    float b2 = Box(vUv, vec2(0.225) + noise);\n    color = vec3(c1 - c2);\n    color += (b2 - b1);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(0.01),p,vUv.y)-\n    smoothstep(p,p-(0.01),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    //vUv.y -= 0.5;\n    vec3 color = vec3(0.);\n    float noise=snoise((vUv)+(u_time*.15))*.51;\n    vUv = vUv * sin(noise +u_time * 0.5);\n    float x=vUv.x;\n    float y=x*x*x*(x*(x*6.-15.)+10.)*noise;\n    float pct1=plot(vec2(vUv.x,vUv.y-.0),y);\n    float pct2=plot(vec2(vUv.x,vUv.y-.1),y);\n    float pct3=plot(vec2(vUv.x,vUv.y-.2),y);\n    float pct4=plot(vec2(vUv.x,vUv.y-.3),y);\n    float pct5=plot(vec2(vUv.x,vUv.y-.4),y);\n    float pct6=plot(vec2(vUv.x,vUv.y+.0),y);\n    float pct7=plot(vec2(vUv.x,vUv.y+.1),y);\n    float pct8=plot(vec2(vUv.x,vUv.y+.2),y);\n    float pct9=plot(vec2(vUv.x,vUv.y+.3),y);\n    float pct10=plot(vec2(vUv.x,vUv.y+.4),y);\n    color = vec3(pct1 + pct2 + pct3 + pct4 + pct5 + pct6 + pct7 + pct8 + pct9 + pct10);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+(0.5),p,vUv.y)-\n    smoothstep(p,p-(0.025),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 5. - 2.5;\n    vUv.x += 1.5;\n    float noise = snoise(vUv) * (sin(u_time)) * 0.5;\n    vec3 color = vec3(0.);\n    float y = sin(vUv.x + (u_time) + noise);\n    float pct1=plot(vec2(vUv.x,vUv.y-0.25),y);\n    float pct2=plot(vec2(vUv.x,vUv.y),y);\n    float pct3=plot(vec2(vUv.x,vUv.y-0.5),y);\n    float pct4=plot(vec2(vUv.x,vUv.y-.75),y);\n    color = vec3(pct1 + pct2 + pct3 + pct4);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(.75),p,vUv.y)-\n    smoothstep(p,p-(.01),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main()\n{\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vec3 color = vec3(0.);\n    float noise = snoise(vUv);\n    float y1 = sin(vUv.x *noise+ u_time);\n    float pct1 = plot(vUv , y1);\n    vec2 newUv = vUv;\n    newUv = Rot(newUv, TWO_PI);\n    float y2=sin(newUv.x*noise+u_time);\n    float pct2=plot(newUv,y2);\n    vec2 newUv2=newUv;\n    newUv2=Rot(newUv2,TWO_PI);\n    float y3=sin(newUv2.x*noise+u_time);\n    float pct3=plot(newUv2,y3);\n    color = vec3(pct1 + pct2 + pct3);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.25);\n    p=x * 0.75 ;\n    return smoothstep(p+(2.75),p,vUv.y * p)-\n    smoothstep(p,p-(2.75),vUv.y * p);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    \n    vUv = vUv * 5. - 2.5;\n    \n    float noise = snoise(vUv + sin(u_time * 0.25) ) * (22.0);\n    vUv = vUv * (noise);\n    \n    vec3 color = vec3(0.);\n    float y = sin(vUv.x + u_time);\n    float pct = plot(Rot(vUv, u_time * 5.0), y);\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(1.75),p,vUv.y * p)-\n    smoothstep(p,p-(1.75),vUv.y * p);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    \n    float n = snoise(vUv);\n    vec2 vUv = vec2(vUv.x + n, vUv.y - n);\n    \n    vUv = vUv * 5. - 2.5;\n    vUv = Rot(vUv, u_time * 0.25);\n    vec3 color = vec3(0.);\n    float y = sin(vUv.x * n * 2.5);\n    float pct = plot(vUv, y);\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(0.25),p,vUv.y * p)-\n    smoothstep(p,p-(0.025),vUv.y * p);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float c1 = cir(vUv, vec2(0.5), 0.25);\n    float y = snoise(vUv) + sin(c1);\n    float pct = plot(vec2(vUv.x, vUv.y + 0.5), y + (sin(u_time+ 15.0)) );\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(0.525),p,vUv.y * p)-\n    smoothstep(p,p-(0.025),vUv.y * p);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vec2 newUv = vUv;\n    newUv = Rot(vUv, u_time * 0.5);\n    float c1 = cir(vUv, vec2(0.5), 0.25);\n    float s1 = Box(newUv, vec2(0.25));\n    float y = snoise(vUv) + sin(s1);\n    float pct = plot(vec2(vUv.x, vUv.y + 0.5) + snoise(vUv + u_time * 0.25), y + (sin(u_time+ 15.0)) );\n    color = vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QM=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(0.525),p,vUv.y * p)-\n    smoothstep(p,p-(0.025),vUv.y * p);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float n = snoise(vUv + u_time) * 0.05;\n    vec2 newUv = vUv;\n    newUv = Rot(vUv, u_time * 0.5);\n    float c1 = cir(vUv + n, vec2(0.5), 0.25);\n    float s1 = Box(newUv * n, vec2(0.25));\n    float y = snoise(vUv) + sin(s1);\n    float pct = plot(vUv, s1 - c1);\n    color = 1. - vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QM,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $M=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * 0.75 ;\n    return smoothstep(p+(0.525),p,vUv.y * p)-\n    smoothstep(p,p-(0.025),vUv.y * p);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.21, distance(vUv, pos));\n}\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.011), vUv);\n    b *= smoothstep(size, size + vec2(0.011), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float n = snoise(vUv * (u_time)) * 0.15;\n    vec2 newUv = vUv;\n    newUv = Rot(vUv, u_time * 0.5);\n    float c1 = cir(vUv * n, vec2(0.5), 0.25);\n    float s1 = Box(newUv + (n), vec2(0.15));\n    float y = snoise(vUv) + sin(s1);\n    float pct = plot(vUv, s1);\n    color = 1. - vec3(pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$M,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ej=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    float x=snoise(vUv+u_time*.25);\n    p=x * .95 ;\n    return smoothstep(p + 0.25,p,vUv.y)-\n    smoothstep(p,p-(0.25),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.25);\n    vUv = vUv * 8. - 4.;\n    vec3 color = vec3(0.);\n    float y = sin(vUv.x + u_time);\n    vec2 vUv1 = vUv;\n    vec2 vUv2 = vUv;\n    vec2 vUv3 = vUv;\n    vec2 vUv4 = vUv;\n    vUv2 = Rot(vUv2, PI * 0.5);\n    vUv3 = Rot(vUv3, PI * 0.75);\n    vUv4 = Rot(vUv4,-PI * 0.75);\n    float pct1 = plot(vUv1, y);\n    float pct2 = plot(vUv2, y);\n    float pct3 = plot(vUv3, y);\n    float pct4 = plot(vUv4, y);\n    color = vec3(pct1 + pct2 + pct3 + pct4);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ej,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * .05 ;\n    return smoothstep(p + 0.25,p,vUv.y)-\n    smoothstep(p,p-(0.25),vUv.y);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    float n = snoise((vUv) + (u_time * 0.25)) * .19;\n    float y0 = 1. - smoothstep(size - (0.15 * n) + n, size - (0.15 * n) + n + .01, distance(vUv + n, pos));\n    float y1 = 1. - smoothstep(size + n, (size + .01) + n, distance(vUv + n, pos));\n    float y2 = 1. - smoothstep(size + (0.15 * n) + n, size + (0.15 * n)  + n+ .01, distance(vUv + n, pos));\n    return y2 - y1 + y0;\n}\n\nvec2 tile(vec2 vUv, float zoom){\n    float n = snoise(vUv + u_time) * 0.2;\n    vUv *= zoom;\n    float time = u_time * 0.1 ;\n    if (fract(time) > 0.5){\n        if(fract(vUv.y * 0.5) > 0.5){\n            vUv.x += fract(time) * 2.0;\n        } else {\n            vUv.x -= fract(time) * 2.0;\n        }\n    } else {\n        if(fract(vUv.x * 0.5) > 0.5){\n            vUv.y += fract(time) * 2.0;\n        } else {\n            vUv.y -= fract(time) * 2.0;\n        }\n    }\n    return fract(vUv);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vUv = tile(vUv, 1.);\n    vec3 color = vec3(0.);\n    float c1 = cir(vUv, vec2(0.5), 0.125);\n    color = vec3(c1);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat plot(vec2 vUv,float p){\n    // float x=snoise(vUv+u_time*.25);\n    // p=x * .05 ;\n    return smoothstep(p + 0.015,p,vUv.y)-\n    smoothstep(p,p-(0.015),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vec3 color = vec3(0.);\n    float n = snoise(vUv + u_time) * 1.0;\n    float y = sin((vUv.x * n) + u_time) / 10.0;\n    float p1 = plot(vec2(vUv.x, vUv.y + 0.1), y);\n    float p2 = plot(vec2(vUv.x, vUv.y + 0.2), y);\n    float p3 = plot(vec2(vUv.x, vUv.y + 0.3), y);\n    float p4 = plot(vec2(vUv.x, vUv.y + 0.4), y);\n    float p5 = plot(vec2(vUv.x, vUv.y + 0.5), y);\n    float p6 = plot(vec2(vUv.x, vUv.y - 0.0), y);\n    float p7 = plot(vec2(vUv.x, vUv.y - 0.1), y);\n    float p8 = plot(vec2(vUv.x, vUv.y - 0.2), y);\n    float p9 = plot(vec2(vUv.x, vUv.y - 0.3), y);\n    float p10 =plot(vec2(vUv.x, vUv.y - 0.4), y);\n    float p11 =plot(vec2(vUv.x, vUv.y - 0.5), y);\n    float p12 =plot(vec2(vUv.x, vUv.y + 0.6), y);\n    float p13 =plot(vec2(vUv.x, vUv.y + 0.7), y);\n    float p14 =plot(vec2(vUv.x, vUv.y + 0.8), y);\n    float p15 =plot(vec2(vUv.x, vUv.y + 0.9), y);\n    float p16 =plot(vec2(vUv.x, vUv.y + 1.0), y);\n    float p17 =plot(vec2(vUv.x, vUv.y - 0.6), y);\n    float p18 =plot(vec2(vUv.x, vUv.y - 0.7), y);\n    float p19 =plot(vec2(vUv.x, vUv.y - 0.8), y);\n    float p20 =plot(vec2(vUv.x, vUv.y - 0.9), y);\n    float p21 =plot(vec2(vUv.x, vUv.y - 1.0), y);\n    float p22 =plot(vec2(vUv.x, vUv.y - 1.1), y);\n    float p23 =plot(vec2(vUv.x, vUv.y + 1.1), y);\n    color = vec3(p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11\n                 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ij=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv = vUv * 1.5 - 0.25;\n        vec3 color = vec3(0.);\n        //cellular noise loops\n        vec2 point[6];\n        point[0] = vec2(0.83 + sin(u_time * 0.25), 0.75);\n        point[1] = vec2(0.60 - cos(u_time * 0.25), 0.1);\n        point[2] = vec2(0.28 , 0.64 + sin(u_time * 0.25) );\n        point[3] = vec2(0.31 , 0.26 - cos(u_time * 0.25));\n        point[4] = vec2(0.50 + sin(u_time * 0.25), 0.50 + cos(u_time * 0.25) );\n        point[5] = vec2(0.5, 0.5);\n        float m_dist = 1.;\n    \n        for(int i = 0; i < 6; i++){\n            float dist = distance(vUv, point[i]);\n            m_dist = min(m_dist, dist);\n        }\n        color = vec3(smoothstep(.345, .511, abs(sin(50. * m_dist + cos(u_time * 2.)))));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ij,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = vUv * 2. - 1.;\n    vec3 color = vec3(0.);\n    //cellular noise loops\n   //scale\n   vUv *= 3.;\n\n   //tile the space\n   vec2 vUvI = floor(vUv);\n   vec2 vUvF = fract(vUv);\n   float m_dist = 1.; //min distance\n\n    //double loop\n    for (int y = -1; y <= 1; y++){\n        for (int x = -1; x <= 1; x++){\n            //neighbor grid\n            vec2 neighbor = vec2(float(x), float(y));\n            //random position from current and neighbor place in grid\n            vec2 point = random2(vUvI + neighbor);\n            //animate points\n            point = 0.5 + 0.5 * sin(u_time + TWO_PI * point);\n            //vector b/n pixel and point\n            vec2 diff = neighbor + point - vUvF;\n            //distance to the point\n            float dist = length(diff);\n            //closer distance\n            m_dist = min(m_dist, dist);\n        }\n    }\n\n    color += m_dist;\n    //center cell\n    color += 1. - step(0.02, m_dist);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.25);\n    vUv = vUv * 2. - 1.;\n\n    vec3 color = vec3(0.);\n    //cellular noise loops\n   //scale\n   vUv *= 3.;\n\n   //tile the space\n   vec2 vUvI = floor(vUv);\n   vec2 vUvF = fract(vUv);\n   float m_dist = 1.; //min distance\n   vec2 m_point;//min position\n    //double loop\n    for (int y = -1; y <= 1; y++){\n        for (int x = -1; x <= 1; x++){\n            //neighbor grid\n            vec2 neighbor = vec2(float(x), float(y));\n            //random position from current and neighbor place in grid\n            vec2 point = random2(vUvI + neighbor);\n            //animate points\n            point = 0.25 + 0.35 * sin(u_time * TWO_PI * point);\n            //vector b/n pixel and point\n            vec2 diff = neighbor + (point * sin(u_time - 20.)) - vUvF;\n            //distance to the point\n            float dist = length(diff);\n            //closer distance\n            m_dist = min(m_dist, dist);\n            m_point = point;\n        }\n    }\n\n    color = vec3(m_dist);\n    //color = vec3(abs(cos(100. * m_dist))*0.07);\n    color *= m_dist * 1.025 + abs(sin(u_time * 0.5));\n    //color += vec3(1.)  * (1. - max(0.0, dot(m_dist - cos(u_time), m_dist + sin(u_time))));\n    //center cell\n    //color += 1. - step(0.02, m_dist);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+1.15,p,vUv.y)-\n    smoothstep(p,p-(1.151),vUv.y);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv=Rot(vUv,u_time*.25);\n    vUv=vUv*2.-1.;\n    \n    vec3 color=vec3(0.);\n    //cellular noise loops\n    //scale\n    vUv*=3.;\n    \n    //tile the space\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=1.;//min distance\n    vec2 m_point;//min position\n    //double loop\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            //neighbor grid\n            vec2 neighbor=vec2(float(x),float(y));\n            //random position from current and neighbor place in grid\n            vec2 point=random2(vUvI+neighbor);\n            //animate points\n            // point.x=.15+.15*sin(u_time*TWO_PI*point.x);\n            // point.y=.25+.35*cos(u_time*TWO_PI*point.y);\n            point = 0.5 + 0.5 * sin(u_time + TWO_PI * point);\n            //vector b/n pixel and point\n            vec2 diff=neighbor+point-vUvF;\n            //distance to the point\n            float dist=length(diff);\n            //closer distance\n            m_dist=min(m_dist,m_dist * dist);\n            m_point=point;\n        }\n    }\n    \n    color=1. - vec3(m_dist) - .9;\n    color += smoothstep(0.04, 0.41, m_dist);\n    // //color = vec3(abs(cos(100. * m_dist))*0.07);\n    // //color*=m_dist*1.025+abs(sin(u_time*.5));\n    //color += vec3(1.)  * (1. - max(0.0, dot(m_dist - cos(u_time), m_dist + sin(u_time))));\n    // //center cell\n    //color += 1. - step(.2, m_dist);\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+1.15,p,vUv.y)-\n    smoothstep(p,p-(1.151),vUv.y);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv=Rot(vUv,u_time*.25);\n    vUv=vUv*2.-1.;\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //cellular noise loops\n    //scale\n    vUv*=3.;\n    \n    //tile the space\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=1.;//min distance\n    vec2 m_point;//min position\n    //double loop\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            //neighbor grid\n            vec2 neighbor=vec2(float(x),float(y));\n            //random position from current and neighbor place in grid\n            vec2 point=random2(vUvI+neighbor);\n            //animate points\n            // point.x=.15+.15*sin(u_time*TWO_PI*point.x);\n            // point.y=.25+.35*cos(u_time*TWO_PI*point.y);\n            point = 0.5 + 0.5 * sin(u_time + TWO_PI * point);\n            //vector b/n pixel and point\n            vec2 diff=neighbor+point-vUvF;\n            //distance to the point\n            float dist=length(diff);\n            //closer distance\n            m_dist=min(m_dist,m_dist * dist);\n            m_point=point;\n        }\n    }\n    color = vec3(m_dist);\n    //color += smoothstep(0.04, 0.41, m_dist);\n    // //color = vec3(abs(cos(100. * m_dist))*0.07);\n    // //color*=m_dist*1.025+abs(sin(u_time*.5));\n    //color += vec3(1.)  * (1. - max(0.0, dot(m_dist - cos(u_time), m_dist + sin(u_time))));\n    // //center cell\n    //color += 1. - step(.2, m_dist);\n    color -= smoothstep(.017, .171, abs(sin(12.0*m_dist))) * 0.25;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform vec2 u_mouse;\n\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453) + (u_time * 0.25);\n}\n\n//return min distance\n// float cellular(vec2 vUv, float scale, vec2 vUvI, vec2 vUvF, float minDist){\n//     vUv *= scale;\n//     for(int y=-1; y<=1; y++){\n//         for(int x=-1; x<=1; x++){\n//             vec2 neighbor = vec2(float(x), float(y));\n//             vec2 point = random2(vUvI + neighbor);\n//             point = 0.5 + 0.5 * sin(u_time + TWO_PI * point);\n//             vec2 diff = neighbor + point - vUvF;\n//             float dist = length(diff);\n//             minDist = min(minDist,dist);\n//             //return minDist;\n//         }\n//     }\n    \n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color=vec3(0.);\n    vUv *= 8.;\n    vUv.x +=  u_time;\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    //vUv*=scale;\n    float minDist = 1.;\n    for(int y=-2;y<=2;y++){\n        for(int x=-2;x<=2;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor );\n            point=.5+.5*sin(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF;\n            float dist=length(diff);\n            minDist=min(minDist,dist + u_mouse.x + u_mouse.y);\n        }\n    }\n    color += minDist;\n    //float c1 = cellular(vUv, 4.0, vUvI, vUvF, 12.0);\n    //color += c1;\n    //color.r += step(.98, f_st.x) + step(.98, f_st.y);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453) + (u_time * 0.25);\n}\n\n//simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color=vec3(0.);\n    vUv *= 5.;\n    vUv.x +=  u_time;\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float n = snoise(vUv + u_time) * 0.1;\n    //vUv*=scale;\n    float minDist = 1.;\n    for(int y=-2;y<=2;y++){\n        for(int x=-2;x<=2;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor ) + n;\n            point=.5+.5*sin(u_time+TWO_PI*point);\n            // point.x = point.x + n;\n            // point.y = point.y + n;\n            vec2 diff=neighbor+point-vUvF;\n            float dist=length(diff + n);\n            minDist=min(minDist,dist);\n        }\n    }\n    color += minDist;\n    //color += 1. - step(0.1, minDist);\n    //color.r += step(.98, vUvF.x) + step(.98, vUvF.y);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _j=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+1.15,p,vUv.y)-\n    smoothstep(p,p-(1.151),vUv.y);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    return 1. - smoothstep(size, size + 0.01, distance(vUv, pos));\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv=Rot(vUv,u_time*.25);\n    vUv=vUv*2.-1.;\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //cellular noise loops\n    //scale\n    vUv*=3.;\n    \n    //tile the space\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=10.;//min distance\n    vec2 m_point;//min position\n    //double loop\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            //neighbor grid\n            vec2 neighbor=vec2(float(x),float(y));\n            //random position from current and neighbor place in grid\n            vec2 point=random2(vUvI+neighbor);\n            //animate points\n            // point.x=.15+.15*sin(u_time*TWO_PI*point.x);\n            // point.y=.25+.35*cos(u_time*TWO_PI*point.y);\n            point = 0.5 + 0.5 * sin(u_time + TWO_PI * point);\n            //vector b/n pixel and point\n            vec2 diff=neighbor+point-vUvF;\n            //distance to the point\n            float dist=length(diff);\n            //closer distance\n            m_dist=min(m_dist,m_dist * dist);\n            m_point=point;\n        }\n    }\n    color = 1. - vec3(m_dist);\n    //color += smoothstep(0.04, 0.41, m_dist);\n    // //color = vec3(abs(cos(100. * m_dist))*0.07);\n    // //color*=m_dist*1.025+abs(sin(u_time*.5));\n    //color += vec3(1.)  * (1. - max(0.0, dot(m_dist - cos(u_time), m_dist + sin(u_time))));\n    // //center cell\n    //color += 1. - step(.2, m_dist);\n    color -= smoothstep(.017, .171, abs(sin(12.0*m_dist))) * 0.25;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_j,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Uj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv *= 2.;\n    vec2 vUvI = floor(vUv);\n    vec2 vUvF = fract(vUv);\n    float m_dist = 0.5 * sin(u_time) + 2.0;\n    for(int y = -1; y <= 1; y++){\n        for (int x = -1; x <= 1; x ++){\n            vec2 neighbor = vec2(float(x), float(y));\n            vec2 point = random2(vUvI + neighbor);\n            point = 0.5 + 0.5 * cos(u_time + TWO_PI * point);\n            vec2 diff = neighbor + point - vUvF;\n            float dist = length(diff) ;\n            m_dist = min(m_dist, dist);\n            \n        }\n    }\n    color.rg += m_dist;\n    color.rg += 1.- smoothstep(0.01, 0.011, m_dist);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Uj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    vUv.x+=u_time*.025;\n    vUv*=5.;\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=.05+.2*cos(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF;\n            float dist=length(diff);\n            m_dist=min(m_dist,dist);\n            \n        }\n    }\n    color +=m_dist;\n    color +=1.-smoothstep(.01,.011,m_dist);\n    color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Mj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.025,p,vUv.y)-\n    smoothstep(p,p-(0.025),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.025;\n    vUv*=5.;\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 0.25;\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=.5+.5*cos(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF;\n            float dist=length(diff);\n            m_dist=min(m_dist,dist);\n            float y =dist-m_dist;\n            float pct = plot(point, y);\n            color = vec3(pct);\n        }\n    }\n    \n    //color +=m_dist;\n    color +=1.-smoothstep(.01,.011,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.025,p,vUv.y)-\n    smoothstep(p,p-(0.25),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.025;\n    vUv*=5.;\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 0.25;\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=.5+.25*cos(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF;\n            float dist=length(diff);\n            m_dist=min(m_dist,dist);\n            float y =m_dist;\n            float pct = plot(vUvF, y);\n            color = vec3(pct);\n            \n            \n        }\n    }\n    \n    //color +=m_dist;\n    color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Tj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Cj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.025,p,vUv.y)-\n    smoothstep(p,p-(0.025),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=8.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 4.;\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=.5+.5*cos(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist = dot(diff, diff);\n            dist -= 0.65;\n            m_dist=min(m_dist,dist);\n\n        }\n    }\n    \n    color +=m_dist * 3.;\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Rj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.5,p,vUv.y)-\n    smoothstep(p,p-(0.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=3.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    for(int y=-5;y<=5;y++){\n        for(int x=-5; x<=5;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=.75+.75*sin(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.75));\n            dist1=plot(diff, vUvF.y);\n            float dist = dot(diff / dist1, diff/ dist1);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n\n        }\n    }\n    \n    color +=m_dist * 3.;\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Pj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.5,p,vUv.y)-\n    smoothstep(p,p-(0.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=5.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-5;y<=5;y++){\n        for(int x=-5; x<=5;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=2.35+1.25*sin(u_time+TWO_PI*point);\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.5));\n            dist1=plot(diff, vUv.y - 2.5);\n            float dist = dot(diff / dist1 / 15., diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n\n        }\n    }\n    \n    color +=m_dist * 3.;\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ej(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Dj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ij=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.5,p,vUv.y)-\n    smoothstep(p,p-(0.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=10.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-5;y<=5;y++){\n        for(int x=-5; x<=5;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor);\n            point=2.35+0.95*abs(sin(u_time+TWO_PI*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.5));\n            dist1=plot(diff, vUv.y - 2.5);\n            float dist = dot(diff / dist1 / 15., diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n\n        }\n    }\n    \n    color +=m_dist;\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Lj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ij,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Aj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.5,p,vUv.y)-\n    smoothstep(p,p-(0.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=12.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) * 0.5;\n            point= .8*abs(sin(u_time+TWO_PI+TWO_PI*2.75*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.15));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff / dist1 / 25., diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n\n        }\n    }\n    \n    \n    color = vec3(0., 0.25, 0.5);\n    color *= vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Oj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Aj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+.5,p,vUv.y)-\n    smoothstep(p,p-(.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv,vec2 size){\n    vec2 b=smoothstep(size,size+vec2(.01),vUv);\n    b*=smoothstep(size,size+vec2(.01),1.-vUv);\n    float b1=b.x*b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=12.;\n    vec3 m=vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8;x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor)*.5;\n            point=4.-abs(sin(u_time+TWO_PI+TWO_PI*2.75*point));\n            vec2 diff=neighbor+point-vUvF;\n            //float dist=length(diff);\n            float dist1=Box(diff,vec2(.15));\n            dist1=plot(diff,vUv.y-2.75);\n            float dist=dot(diff/m_dist,diff/m_dist);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            \n        }\n    }\n    \n    color=vec3(0.,.25,.5);\n    color=vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Nj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Bj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+.5,p,vUv.y)-\n    smoothstep(p,p-(.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv,vec2 size){\n    vec2 b=smoothstep(size,size+vec2(.01),vUv);\n    b*=smoothstep(size,size+vec2(.01),1.-vUv);\n    float b1=b.x*b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=3.;\n    vec3 m=vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8;x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor)*.5;\n            point=(sin(u_time+TWO_PI*2.*point));\n            vec2 diff=neighbor+point-vUvF;\n            //float dist=length(diff);\n            float dist1=Box(diff,vec2(.005));\n            dist1=plot(diff,vUv.y-2.75);\n            float dist=dot(diff/m_dist/m_dist,diff/m_dist/m_dist);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            \n        }\n    }\n    \n    color=vec3(0.,.25,.5);\n    color+=vec3(m_dist) * 0.9;\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+.5,p,vUv.y)-\n    smoothstep(p,p-(.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv,vec2 size){\n    vec2 b=smoothstep(size,size+vec2(.01),vUv);\n    b*=smoothstep(size,size+vec2(.01),1.-vUv);\n    float b1=b.x*b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=3.;\n    vec3 m=vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=5.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8;x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor)*.25;\n            point=0.5 + 1.5 * (sin(u_time+TWO_PI + TWO_PI* 2.75*point));\n            vec2 diff=neighbor+point-vUvF;\n            //float dist=length(diff);\n            float dist1=Box(diff,vec2(.05));\n            dist1=plot(diff,vUv.y-2.75);\n            float dist=dot(diff/m_dist,diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            \n        }\n    }\n    \n    //color=vec3(0.,.25,.5);\n    color+=vec3(m_dist) * 2.0;\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.05,p,vUv.y)-\n    smoothstep(p,p-(0.05),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=12.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) * 0.5;\n            point= .8*abs(sin(u_time+TWO_PI*2.75*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.15 * sin(u_time)));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff, diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            float y = plot(point, m_dist);\n            color = vec3(y);\n        }\n    }\n    \n    \n    //color = vec3(0., 0.25, 0.5);\n    //color = vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.05,p,vUv.y)-\n    smoothstep(p,p-(0.05),vUv.y);\n}\n\nfloat plot2(vec2 vUv,float p, float m){\n    return smoothstep(p + 0.05,p,vUv.y * m)-\n    smoothstep(p,p-(0.05),vUv.y * m);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=5.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) ;\n            point= 0.5 + .8*abs(sin(u_time+TWO_PI*2.75*point) + 12.0);\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.15 * (u_time)));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff, diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            float y = plot2(vUv, m_dist, m_dist);\n            color = vec3(y);\n        }\n    }\n    \n    \n    //color = vec3(0., 0.25, 0.5);\n    //color = vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qj=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.05,p,vUv.y)-\n    smoothstep(p,p-(0.05),vUv.y);\n}\n\nfloat plot2(vec2 vUv,float p, float m){\n    return smoothstep(p + 0.05,p,vUv.y * m)-\n    smoothstep(p,p-(0.05),vUv.y * m);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b) {\n    float thickness = 1.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa - ba*h);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=5.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) ;\n            point= .8*abs(sin(u_time+TWO_PI*2.75*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.15 * (u_time)));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff, diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            // float y = plot2(vUv, m_dist, m_dist);\n            // color = vec3(y);\n            float line = lineSegment(vUvF + m_dist, point, neighbor);\n            color = vec3(line);\n        }\n    }\n    \n    \n    //color = vec3(0., 0.25, 0.5);\n    //color = vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qj,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $j=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.05,p,vUv.y)-\n    smoothstep(p,p-(0.05),vUv.y);\n}\n\nfloat plot2(vec2 vUv,float p, float m){\n    return smoothstep(p + 0.05,p,vUv.y * m)-\n    smoothstep(p,p-(0.05),vUv.y * m);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b, float m) {\n    float thickness = 2.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba, pa), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa*h * b * m);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=5.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 3.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) ;\n            point= .9*abs(sin(u_time+TWO_PI*1.75*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.25 * (u_time)));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff, diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            // float y = plot2(vUv, m_dist, m_dist);\n            // color = vec3(y);\n            float line = lineSegment(vUvF, point, neighbor, m_dist);\n            color = vec3(line);\n        }\n    }\n    \n    \n    //color = vec3(0., 0.25, 0.5);\n    //color *= vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$j,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ek=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p+.5,p,vUv.y)-\n    smoothstep(p,p-(.5),vUv.y);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv,vec2 size){\n    vec2 b=smoothstep(size,size+vec2(.01),vUv);\n    b*=smoothstep(size,size+vec2(.01),1.-vUv);\n    float b1=b.x*b.y;\n    return b1;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=5.;\n    vec3 m=vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist=1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8;x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor)*.5;\n            point=1. + 1.8*abs(sin(u_time+TWO_PI+TWO_PI*2.75*point));\n            vec2 diff=neighbor+point-vUvF;\n            //float dist=length(diff);\n            float dist1=Box(diff,vec2(.15));\n            dist1=plot(diff,vUv.y-2.75);\n            float dist=dot(diff,diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            \n        }\n    }\n    \n    color=vec3(1.,.25,.5);\n    color*=1. - vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ek,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.05,p,vUv.y)-\n    smoothstep(p,p-(0.05),vUv.y);\n}\n\nfloat plot2(vec2 vUv,float p, float m){\n    return smoothstep(p + 0.05,p,vUv.y * m)-\n    smoothstep(p,p-(0.05),vUv.y * m);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b, float m) {\n    float thickness = 2.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba, pa), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa*h * b * m);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=5.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 8.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) ;\n            point= .7*abs(sin(u_time+TWO_PI*2.75*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.25 * (u_time)));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff, diff);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            // float y = plot2(vUv, m_dist, m_dist);\n            // color = vec3(y);\n            float line = lineSegment(neighbor, point/m_dist, point * m_dist, 0.15);\n            color = 1. - vec3(line);\n        }\n    }\n    \n    \n    //color = vec3(0., 0.25, 0.5);\n    //color *= vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ok=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat plot(vec2 vUv,float p){\n    return smoothstep(p + 0.5,p,vUv.y)-\n    smoothstep(p,p-(0.5),vUv.y);\n}\n\nfloat plot2(vec2 vUv,float p, float m){\n    return smoothstep(p + 0.5,p,vUv.y * m)-\n    smoothstep(p,p-(0.5),vUv.y * m);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nfloat Box(vec2 vUv, vec2 size){\n    vec2 b = smoothstep(size, size + vec2(0.01), vUv);\n    b *= smoothstep(size, size + vec2(0.01), 1. - vUv);\n    float b1 = b.x * b.y;\n    return b1;\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b, float m) {\n    float thickness = 5.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba, pa), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa*h * b * m);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv -= 0.25;\n    //vUv=Rot(vUv,u_time*.15);\n    vec3 color=vec3(0.);\n    //vUv.x+=u_time*.25;\n    vUv*=3.;\n    vec3 m = vec3(5.);\n    vec2 vUvI=floor(vUv);\n    vec2 vUvF=fract(vUv);\n    float m_dist= 1.;\n    \n    for(int y=-8;y<=8;y++){\n        for(int x=-8; x<=8;x++){\n            vec2 neighbor=vec2(float(x),float(y));\n            vec2 point=random2(vUvI+neighbor) ;\n            point= 0.5 + .35*abs(cos(u_time+PI*20.75*point));\n            vec2 diff=neighbor+point-vUvF ;\n            //float dist=length(diff);\n            float dist1 = Box(diff, vec2(0.25 * (u_time)));\n            dist1=plot(diff, vUv.y - 2.75);\n            float dist = dot(diff/m_dist, diff/m_dist);\n            //dist -= 0.5;\n            m_dist=min(m_dist,dist);\n            // float y = plot2(vUv, m_dist, m_dist);\n            // color = vec3(y);\n            float line = lineSegment(vUvF, point, neighbor, m_dist);\n            color = vec3(line);\n        }\n    }\n    \n    \n    //color = vec3(0., 0.25, 0.5);\n    //color *= vec3(m_dist);\n    \n    //color *= clamp(1.0 - 0.4 * m_dist * m_dist, 0.0, 1.0);\n    //color += smoothstep(.2,.21,m_dist);\n    //color-=step(.05,abs(sin(10. *m_dist)))*.3;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ak(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ok,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ik=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b) {\n    float thickness = 1.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba, pa), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa*h * b);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    vec2 mg, mr;\n    float md = 8.0;\n\n    for (int i = -1; i <=1; i++){\n        for(int j = -1; j<= 1; j++){\n            vec2 g = vec2(float(j), float(i));\n            vec2 o = random2(n + g);\n            o = 0.5 + 0.5 * sin(u_time + TWO_PI * o);\n\n            vec2 r = g + o - f;\n            float d = dot(r, r);\n\n            if(d < md){\n                md = d;\n                mr = r;\n                mg = g;\n            }\n        }\n    }\n    md = 8.0;\n    for (int i = -3; i <=3; i++){\n        for(int j = -3; j<= 3; j++){\n            vec2 g = vec2(float(j), float(i));\n            vec2 o = random2(n + g);\n            o = 0.5 + 0.5 * sin(u_time + TWO_PI * o);\n\n            vec2 r = g + o - f;\n            if (dot(mr -r, mr -r) > 0.00001){\n                md = min(md, dot(0.5 * (mr + r), normalize(r -mr)));\n\n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vUv = Rot(vUv, u_time * 0.25);\n    vUv *= 3.;\n    vec3 c = voronoi(vUv);\n    float dd = length( c.yz );\n    color = mix( vec3(1.0), color, smoothstep( 0.01, 0.02, c.x * c ) );\n    //color += vec3(1.) * (1. - smoothstep(0.0, 0.04, dd));\n    //color = c;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ik,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b) {\n    float thickness = 1.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba, pa), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa*h * b);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    vec2 mg, mr;\n    float md = 8.0;\n\n    for (int i = -1; i <=1; i++){\n        for(int j = -1; j<= 1; j++){\n            vec2 g = vec2(float(j), float(i));\n            vec2 o = random2(n + g);\n            o = 0.5 + 0.5 * sin(u_time + TWO_PI * o);\n\n            vec2 r = g + o - f;\n            float d = dot(r, r);\n\n            if(d < md){\n                md = d;\n                mr = r;\n                mg = g;\n            }\n        }\n    }\n    md = 8.0;\n    for (int i = -2; i <=2; i++){\n        for(int j = -2; j<= 2; j++){\n            vec2 g = vec2(float(j), float(i));\n            vec2 o = random2(n + g);\n            o = 0.5 + 0.5 * sin(u_time + TWO_PI * o);\n\n            vec2 r = g + o - f;\n            if (dot(mr -r, mr -r) > 0.00001){\n                md = min(md, dot(0.5 * (mr + r), normalize(r -mr)));\n\n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv = vUv * 2. - 1.;\n    vUv *= 2.5 + sin(u_time * 0.5);\n    vec3 c = voronoi(vUv);\n    float dd = length( c.yz );\n    color = mix( vec3(1.0), color, smoothstep( 0.01, 0.04, c.x) );\n    //color += vec3(1.) * (1. - smoothstep(0.0, 0.04, dd));\n    color *= c * 20.;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ck(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b) {\n    float thickness = 1.0/100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba, pa), 0.0, 1.0 );\n    // ????????\n    float idk = length(pa*h * b);\n\n    return smoothstep(0.0, thickness, idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\n//simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nvec3 voronoi(vec2 x){\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    vec2 mg, mr;\n    float md = 8.0;\n\n    for (int i = -1; i <=1; i++){\n        for(int j = -1; j<= 1; j++){\n            vec2 g = vec2(float(j), float(i));\n            vec2 o = random2(n + g);\n            o = 0.5 + 0.5 * sin(u_time + TWO_PI * o);\n\n            vec2 r = g + o - f;\n            float d = dot(r, r);\n\n            if(d < md){\n                md = d;\n                mr = r;\n                mg = g;\n            }\n        }\n    }\n    md = 8.0;\n    for (int i = -2; i <=2; i++){\n        for(int j = -2; j<= 2; j++){\n            vec2 g = vec2(float(j), float(i));\n            vec2 o = random2(n + g);\n            o = 0.5 + 0.5 * sin(u_time + TWO_PI * o);\n\n            vec2 r = g + o - f;\n            if (dot(mr -r, mr -r) > 0.00001){\n                md = min(md, dot(0.5 * (mr + r), normalize(r -mr)));\n\n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    float n = snoise(vUv + (u_time * 0.25)) * 0.4;\n    vUv = vUv * 2. - 1.;\n    vUv *= 2.5 + sin(u_time * 0.5);\n    vec3 c = voronoi(vUv + u_time);\n    float dd = length( c.yz );\n    color = mix( vec3(1.0), color, smoothstep( 0.01, 0.011, c.x * c.y * c.z) );\n    //color += vec3(1.) * (1. - smoothstep(0.0, 0.04, dd));\n    //color *= c * 20.;\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=0.1;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-2;i<=2;i++){\n        for(int j=-2;j<=2;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x += u_time * 0.25;\n    vec3 c=voronoi(vUv);\n    float dd=length(c.yz);\n    color=1. - mix(vec3(1.),color,smoothstep(.01,.04,c.x));\n    color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    //color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //simplex noise book of shaders\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n//book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=.1;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=.1;\n    for(int i=-2;i<=2;i++){\n        for(int j=-2;j<=2;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md,mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x+=u_time*.15;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    float n = snoise(vUv + u_time) * 0.05;\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x+=u_time*.25;\n    vec3 c=voronoi(vUv);\n    vec3 c2=voronoi(vec2(vUv.x+n+0.25,vUv.y+n+0.25));\n    vec3 c3=voronoi(vec2(vUv.x-n-0.25,vUv.y-n-0.25));\n    float dd=length(c.yz);\n    color=mix(vec3(1.),color,smoothstep(.01,.04,c.x));\n    color+=mix(vec3(1.),color,smoothstep(.01,.04,c2.x));\n    color+=mix(vec3(1.),color,smoothstep(.01,.04,c3.x));\n    //color-=vec3(1.)*(1.-smoothstep(.1,.11,dd));\n    //color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=3.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-2;i<=2;i++){\n        for(int j=-2;j<=2;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x += u_time * 0.25;\n    vec3 c=voronoi(vUv);\n    float dd=length(c.yz);\n    color=1. - mix(vec3(1.),color,smoothstep(.01,.04,c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    //color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=3.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-2;i<=2;i++){\n        for(int j=-2;j<=2;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=3.5;\n    vUv.x += u_time * 0.125;\n    vec3 c=voronoi(vUv);\n    float dd=length(c.yz);\n    color=mix(vec3(1.),color,smoothstep(.01 + c.x,.08,c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    //color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _k=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=3.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-2;i<=2;i++){\n        for(int j=-2;j<=2;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=3.5;\n    vUv.x += u_time * 0.125;\n    vec3 c1=voronoi(vec2(vUv.x, vUv.y + sin(u_time)));\n    vec3 c2=voronoi(vec2(vUv.x, vUv.y + 0.25 + sin(u_time)));\n    vec3 c3=voronoi(vec2(vUv.x, vUv.y - 0.25 + sin(u_time)));\n    float dd=length(c1.yz);\n    color=mix(vec3(1.),color,smoothstep(.05,.051,c1.x));\n    color=mix(vec3(1.),color,smoothstep(.045,.0451,c2.x));\n    color=mix(vec3(1.),color,smoothstep(.035,.0351,c3.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    //color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_k,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Uk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x += u_time * 0.125;\n    vec3 c=voronoi((vUv));\n    float dd=length(c.yz);\n    color=mix(vec3(1.),color,smoothstep(.2,.21,dd + c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Uk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x += u_time * 0.125;\n    vec3 c=voronoi((vUv));\n    float dd=length(c.yz)/2.;\n    color=1. - mix(vec3(1.),color,smoothstep(.2,.21,dd + c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    //color*=c*20.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Mk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.25;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x += u_time * 0.125;\n    vec3 c=voronoi((vUv));\n    // float c1 = cir(vec2 vUv, vec2(0.5), 0.25);\n    float dd=length(c.yz);\n    color=1. - mix(vec3(1.),color,smoothstep(.05,.1,c.x));\n    color /= vec3(1.) * (1. - smoothstep(0.01, 0.91, dd ));\n    color*=c.z * c.y / c.x * 50.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ck=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin(u_time+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nfloat cir(vec2 vUv, vec2 pos, float size){\n    float x = smoothstep(size + 0.05, size + 0.06, distance(vUv, pos));\n    float y = smoothstep(size, size + 0.01, distance(vUv, pos));\n    return x * y;\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vec2 newUv = vUv;\n    //vUv.x += u_time * 0.25;\n    \n    float c1 = cir(newUv, vec2(0.5), 0.45);\n    vec3 color=vec3(0.);\n    color = vec3(c1); \n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5 * sin(u_time * 0.5) + 5.0;\n    vUv.x += u_time * 0.125;\n    vec3 c=voronoi((vUv));\n    \n    float dd=length(c.yz);\n    \n    color=1. - mix(vec3(1.),color,smoothstep(.05,.04,c.x));\n    //color /= vec3(1.) * (1. - smoothstep(0.01, 0.91, dd ));\n    color*=c.x * 50.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Tk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ck,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.125;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*2.-1.;\n    vUv*=2.5;\n    vUv.x += u_time * 0.125;\n    vec3 c=voronoi((vUv));\n    float dd=length(c.yz);\n    color=mix(vec3(1.),color,smoothstep(.5,.51,dd + c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    color+=c.x*50.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Rk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, mr);\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.125;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*4.-2.;\n    vUv*=1.;\n    vUv.x += u_time * 0.25;\n    vec3 c=voronoi((vUv));\n    float dd=length(c.yz);\n    color=mix(vec3(1.),color,smoothstep(.45,.751,dd + c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    color/=c.x * 70.;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Pk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders\nvec2 random2(vec2 p){\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat lineSegment(vec2 p,vec2 a,vec2 b){\n    float thickness=1./100.;\n    \n    vec2 pa=p-a;\n    vec2 ba=b-a;\n    \n    float h=clamp(dot(pa,ba)/dot(ba,pa),0.,1.);\n    // ????????\n    float idk=length(pa*h*b);\n    \n    return smoothstep(0.,thickness,idk);\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvec3 voronoi(vec2 x){\n    vec2 n=floor(x);\n    vec2 f=fract(x);\n    \n    vec2 mg,mr;\n    float md=5.;\n    \n    for(int i=-1;i<=1;i++){\n        for(int j=-1;j<=1;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            float d=dot(r,r);\n            \n            if(d<md){\n                md=d;\n                mr=r;\n                mg=g;\n            }\n            \n        }\n    }\n    md=0.1;\n    for(int i=-5;i<=5;i++){\n        for(int j=-5;j<=5;j++){\n            vec2 g=vec2(float(j),float(i));\n            vec2 o=random2(n+g);\n            o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n            \n            vec2 r=g+o-f;\n            if(dot(mr-r,mr-r)>.00001){\n                md=min(md,dot(.025*(mr+r),normalize(r-mr)));\n                \n            }\n        }\n    }\n    return vec3(md, vec2(mr.x, mr.y/md/(200.0 - sin(u_time))));\n}\n\nvoid main(){\n    vec2 vUv=vec2(vUv.x,vUv.y);\n    vUv.x += u_time * 0.125;\n    vec3 color=vec3(0.);\n    //vUv = Rot(vUv, u_time * 0.125);\n    vUv=vUv*4.-2.;\n    vUv*=2.;\n    vUv.x += u_time * 0.25;\n    vec3 c=voronoi((vUv));\n    float dd=length(c.yz);\n    color=mix(vec3(1.),color,smoothstep(.45,.751,dd + c.x));\n    //color -= vec3(1.) * (1. - smoothstep(0.1, 0.11, dd));\n    color/=c.x;\n    gl_FragColor=vec4(color,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ek(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Dk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ik=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n    \n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n    \n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n    \n        vec2 u = f * f * (3.0 - 2.0 * f);\n    \n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n    float plot(vec2 vUv,float p){\n        return smoothstep(p + 0.09,p,vUv.y)-\n        smoothstep(p,p-(0.02),vUv.y);\n    }\n    \n    float fbm(vec2 vUv, int octaves){\n        //inital values\n        float value = 0.0;\n        float amplitude = 0.5 ;\n        float frequency = 0. ;\n        //loop of octaves\n        for (int i = 0; i < octaves; i++){\n            //vUv += 2.;\n            value += amplitude * (noise(vUv + u_time));\n            //vUv = vUv * 2. - 1.;\n            vUv *= 2.;\n            // vUv.x += u_time * 0.5;\n            amplitude *= 0.5 ;\n        }\n        return value; \n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = fbm(vUv, 6);\n        // float pct = plot(vec2(vUv), y);\n        // color = vec3(pct);\n        color += y;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Lk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ik,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ak=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+'\n    // Some useful functions\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\n//\n// Description : GLSL 2D simplex noise function\n//      Author : Ian McEwan, Ashima Arts\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License :\n//  Copyright (C) 2011 Ashima Arts. All rights reserved.\n//  Distributed under the MIT License. See LICENSE file.\n//  https://github.com/ashima/webgl-noise\n//\nfloat snoise(vec2 v) {\n\n    // Precompute values for skewed triangular grid\n    const vec4 C = vec4(0.211324865405187,\n                        // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,\n                        // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,\n                        // -1.0 + 2.0 * C.x\n                        0.024390243902439);\n                        // 1.0 / 41.0\n\n    // First corner (x0)\n    vec2 i  = floor(v + dot(v, C.yy));\n    vec2 x0 = v - i + dot(i, C.xx);\n\n    // Other two corners (x1, x2)\n    vec2 i1 = vec2(0.0);\n    i1 = (x0.x > x0.y)? vec2(1.0, 0.0):vec2(0.0, 1.0);\n    vec2 x1 = x0.xy + C.xx - i1;\n    vec2 x2 = x0.xy + C.zz;\n\n    // Do some permutations to avoid\n    // truncation effects in permutation\n    i = mod289(i);\n    vec3 p = permute(\n            permute( i.y + vec3(0.0, i1.y, 1.0))\n                + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(\n                        dot(x0,x0),\n                        dot(x1,x1),\n                        dot(x2,x2)\n                        ), 0.0);\n\n    m = m*m ;\n    m = m*m ;\n\n    // Gradients:\n    //  41 pts uniformly over a line, mapped onto a diamond\n    //  The ring size 17*17 = 289 is close to a multiple\n    //      of 41 (41*7 = 287)\n\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n\n    // Normalise gradients implicitly by scaling m\n    // Approximation of: m *= inversesqrt(a0*a0 + h*h);\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0+h*h);\n\n    // Compute final noise value at P\n    vec3 g = vec3(0.0);\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * vec2(x1.x,x2.x) + h.yz * vec2(x1.y,x2.y);\n    return 130.0 * dot(m, g);\n}\n\n#define OCTAVES 5\n// Ridged multifractal\n// See "Texturing & Modeling, A Procedural Approach", Chapter 12\nfloat ridge(float h, float offset) {\n    h = abs(h);     // create creases\n    h = offset - h; // invert so creases are at top\n    h = h * h;      // sharpen creases\n    return h;\n}\n\nfloat ridgedMF(vec2 p) {\n    float lacunarity = 2.0;\n    float gain = 0.5;\n    float offset = 0.9;\n\n    float sum = 0.0;\n    float freq = 1.0, amp = 0.5;\n    float prev = 1.0;\n    for(int i=0; i < OCTAVES; i++) {\n        float n = ridge(snoise(p*freq + (u_time * 0.25)), offset);\n        sum += n*amp;\n        sum += n*amp*prev;  // scale by previous octave\n        prev = n;\n        freq *= lacunarity;\n        amp *= gain;\n    }\n    return sum;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float y = ridgedMF(vUv);\n    color += y;\n    gl_FragColor = vec4(color, 1.);\n}\n    ',uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ok(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Ak,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders example\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm(vec2 vUv){\n    float v = 0.;\n    float a = 0.6;\n    vec2 shift = vec2(100.);\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.5));\n    for(int i = 0; i < NUM_OCTAVES; i++){\n        v += a * noise(vUv);\n        vUv = rot * vUv * 2.0 + shift + (u_time * 0.05);\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv *= 1.5;\n    vUv.x += u_time * 0.1;\n    vec3 color = vec3(0.);\n\n    vec2 q = vec2(0.);\n    q.x = fbm(vUv + 0.2 * u_time);\n    q.y = fbm(vUv + vec2(1.));\n\n    vec2 r = vec2(0.);\n    r.x = fbm(vUv + 1.0 * q + vec2(1.7, 9.2) + 0.15 * u_time);\n    r.y = fbm(vUv + 1.0 * q + vec2(8.3, 2.8) + 0.16 * u_time);\n\n    float f = fbm(vUv + r);\n\n    color = mix(vec3(0.101961,0.619608,0.666667),\n                vec3(0.066667,0.666667,0.498039),\n                clamp((f*f)*5.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0.,0.5,0.164706),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,.2));\n\n    float x = f * f * f + 0.6 * f * f + 0.5 * f;\n\n   gl_FragColor = vec4(color * x,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Nk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Bk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders example\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm(vec2 vUv){\n    float v = 0.;\n    float a = .9;\n    vec2 shift = vec2(1000.);\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.5));\n    for(int i = 0; i < NUM_OCTAVES; i++){\n        v += a * noise(vUv);\n        vUv = rot * vUv * 2.0 + shift + (u_time * 0.5);\n        a *= .95 * noise(vUv);\n    }\n    return v;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv *= 1.5;\n    vUv.x += u_time * 0.1;\n    vec3 color = vec3(0.);\n\n    vec2 q = vec2(0.);\n    q.x = fbm(vUv + 0.2 * u_time);\n    q.y = fbm(vUv + vec2(1.));\n\n    vec2 r = vec2(0.);\n    r.x = fbm(vUv + 1.0 * q + vec2(1.7, 9.2) + 0.15 * u_time);\n    r.y = fbm(vUv + 1.0 * q + vec2(8.3, 2.8) + 0.16 * u_time);\n\n    float f = fbm(vUv + fbm(vUv + fbm(vUv)));\n\n    //f(p) = fbm( p + fbm( p + fbm( p ) ) )\n    color = mix(vec3(0.101961,0.619608,0.666667),\n                vec3(0.066667,0.666667,0.498039),\n                clamp((f*f)*5.0,0.0,1.0));\n\n    // color = mix(color,\n    //             vec3(0.,0.5,0.164706),\n    //             clamp(length(q),0.0,1.0));\n\n    // color = mix(color,\n    //             vec3(0.666667,1.,1),\n    //             clamp(length(r.x),0.0,.2));\n\n    float x = f;\n\n   gl_FragColor = vec4(color * x,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders example\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm(vec2 vUv){\n    float v = 0.;\n    float a = .45;\n    vec2 shift = vec2(1.);\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.5));\n    for(int i = 0; i < NUM_OCTAVES; i++){\n        v += a * noise(vUv);\n        vUv = rot * vUv * 2.0 + shift + (u_time * 0.5);\n        a *= .95 * noise(vUv);\n    }\n    return v;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv *= 4.;\n    vUv.x += u_time * 0.1;\n    vec3 color = vec3(0.);\n\n    vec2 q = vec2(0.);\n    q.x = fbm(vUv);\n    q.y = fbm(vUv + vec2(1.));\n\n    vec2 r = vec2(0.);\n    r.x = fbm(vUv + 1.0 * q + vec2(1.7, 9.2) + 0.15 * u_time);\n    r.y = fbm(vUv + 1.0 * q + vec2(8.3, 2.8) + 0.16 * u_time);\n\n    float f = fbm(vUv + fbm(vUv + fbm(vUv)));\n\n    //f(p) = fbm( p + fbm( p + fbm( p ) ) )\n    color = mix(vec3(0.901961,0.619608,0.666667),\n                vec3(0.966667,0.666667,0.098039),\n                clamp((f*f)*5.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0.,.8,0.94706),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(0.166667,.1,0.2),\n                clamp(length(r.x),0.0,.2));\n\n    float x = f;\n\n   gl_FragColor = vec4(color * x,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //book of shaders example\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm(vec2 vUv){\n    float v = .0;\n    float a = .55;\n    vec2 shift = vec2(1.5);\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.5));\n    for(int i = 0; i < NUM_OCTAVES; i++){\n        v += a * noise(vUv);\n        vUv = rot * vUv * 2.0 + shift + (u_time * 0.25);\n        a *= 1.05 * noise(vUv);\n    }\n    return v;\n}\n\n// vec2 Rot(vec2 vUv,float a){\n//     //vUv*=2.;\n//     vUv-=.5;\n//     vUv=mat2(cos(a),-sin(a),\n//     sin(a),cos(a))*vUv;\n//     vUv+=.5;\n//     return vUv;\n// }\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.01);\n    vUv *= 2.;\n    vUv.x += u_time * 0.24;\n    vec3 color = vec3(0.);\n\n    vec2 q = vec2(0.);\n    q.x = fbm(vUv);\n    q.y = fbm(vUv + vec2(1.));\n\n    vec2 r = vec2(0.);\n    r.x = fbm(vUv + 1.0 * q + vec2(1.3, 9.2) + 0.15 * u_time);\n    r.y = fbm(vUv + 1.0 * q + vec2(9.3, 2.8) + 0.16 * u_time);\n\n    float f = fbm(vUv + fbm(vUv + fbm(vUv)));\n\n    //f(p) = fbm( p + fbm( p + fbm( p ) ) )\n    color = mix(vec3(0.401961,0.619608,0.666667),\n                vec3(0.466667,0.666667,0.098039),\n                clamp((f),0.4,1.0));\n\n    color = mix(color,\n                vec3(0.15,.78,0.94706),\n                clamp(length(q),.2,1.0));\n\n    color = mix(color,\n                vec3(0.66667,.1,0.2),\n                clamp(length(r.x),0.0,.2));\n\n    float x = 1. - f;\n\n   gl_FragColor = vec4(color * x,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+'\n    // Some useful functions\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\n//\n// Description : GLSL 2D simplex noise function\n//      Author : Ian McEwan, Ashima Arts\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License :\n//  Copyright (C) 2011 Ashima Arts. All rights reserved.\n//  Distributed under the MIT License. See LICENSE file.\n//  https://github.com/ashima/webgl-noise\n//\nfloat snoise(vec2 v) {\n\n    // Precompute values for skewed triangular grid\n    const vec4 C = vec4(0.211324865405187,\n                        // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,\n                        // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,\n                        // -1.0 + 2.0 * C.x\n                        0.024390243902439);\n                        // 1.0 / 41.0\n\n    // First corner (x0)\n    vec2 i  = floor(v + dot(v, C.yy));\n    vec2 x0 = v - i + dot(i, C.xx);\n\n    // Other two corners (x1, x2)\n    vec2 i1 = vec2(0.0);\n    i1 = (x0.x > x0.y)? vec2(1.0, 0.0):vec2(0.0, 1.0);\n    vec2 x1 = x0.xy + C.xx - i1;\n    vec2 x2 = x0.xy + C.zz;\n\n    // Do some permutations to avoid\n    // truncation effects in permutation\n    i = mod289(i);\n    vec3 p = permute(\n            permute( i.y + vec3(0.0, i1.y, 1.0))\n                + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(\n                        dot(x0,x0),\n                        dot(x1,x1),\n                        dot(x2,x2)\n                        ), 0.0);\n\n    m = m*m ;\n    m = m*m ;\n\n    // Gradients:\n    //  41 pts uniformly over a line, mapped onto a diamond\n    //  The ring size 17*17 = 289 is close to a multiple\n    //      of 41 (41*7 = 287)\n\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n\n    // Normalise gradients implicitly by scaling m\n    // Approximation of: m *= inversesqrt(a0*a0 + h*h);\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0+h*h);\n\n    // Compute final noise value at P\n    vec3 g = vec3(0.0);\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * vec2(x1.x,x2.x) + h.yz * vec2(x1.y,x2.y);\n    return 130.0 * dot(m, g);\n}\n\n#define OCTAVES 5\n// Ridged multifractal\n// See "Texturing & Modeling, A Procedural Approach", Chapter 12\nfloat ridge(float h, float offset) {\n    h = abs(h);     // create creases\n    h = offset - h; // invert so creases are at top\n    h = h * h * h * h;      // sharpen creases\n    return h;\n}\n\nfloat ridgedMF(vec2 p) {\n    float lacunarity = .1 ;\n    float gain = 0.5 ;\n    float offset = 1. + snoise(p + (u_time * 0.25));\n\n    float sum = 0.0 ;\n    float freq = 1.0; \n    float amp = 0.5 ;\n    float prev = 1.0;\n    for(int i=0; i < OCTAVES; i++) {\n        p *= 5.;\n        float n = ridge(snoise(p*freq + (u_time * 0.25)), offset);\n        sum += n*amp;\n        sum += n*amp*prev ;  // scale by previous octave\n        prev = n;\n        freq *= lacunarity;\n        amp *= gain;\n    }\n    return sum;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float y = ridgedMF(vUv);\n    color += y;\n    color -= mix(vec3(0.401961,0.619608,0.666667),\n                vec3(0.466667,0.666667,0.098039),\n                clamp((y),0.4,1.0));\n    color -= mix(color,\n                vec3(0.66667,.1,0.2),\n                clamp(length(y),0.0,.2));\n    gl_FragColor = vec4(color, 1.);\n}\n    ',uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qk=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+'\n    // Some useful functions\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\n//\n// Description : GLSL 2D simplex noise function\n//      Author : Ian McEwan, Ashima Arts\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License :\n//  Copyright (C) 2011 Ashima Arts. All rights reserved.\n//  Distributed under the MIT License. See LICENSE file.\n//  https://github.com/ashima/webgl-noise\n//\nfloat snoise(vec2 v) {\n\n    // Precompute values for skewed triangular grid\n    const vec4 C = vec4(0.211324865405187,\n                        // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,\n                        // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,\n                        // -1.0 + 2.0 * C.x\n                        0.024390243902439);\n                        // 1.0 / 41.0\n\n    // First corner (x0)\n    vec2 i  = floor(v + dot(v, C.yy));\n    vec2 x0 = v - i + dot(i, C.xx);\n\n    // Other two corners (x1, x2)\n    vec2 i1 = vec2(0.0);\n    i1 = (x0.x > x0.y)? vec2(1.0, 0.0):vec2(0.0, 1.0);\n    vec2 x1 = x0.xy + C.xx - i1;\n    vec2 x2 = x0.xy + C.zz;\n\n    // Do some permutations to avoid\n    // truncation effects in permutation\n    i = mod289(i);\n    vec3 p = permute(\n            permute( i.y + vec3(0.0, i1.y, 1.0))\n                + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(\n                        dot(x0,x0),\n                        dot(x1,x1),\n                        dot(x2,x2)\n                        ), 0.0);\n\n    m = m*m ;\n    m = m*m ;\n\n    // Gradients:\n    //  41 pts uniformly over a line, mapped onto a diamond\n    //  The ring size 17*17 = 289 is close to a multiple\n    //      of 41 (41*7 = 287)\n\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n\n    // Normalise gradients implicitly by scaling m\n    // Approximation of: m *= inversesqrt(a0*a0 + h*h);\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0+h*h);\n\n    // Compute final noise value at P\n    vec3 g = vec3(0.0);\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * vec2(x1.x,x2.x) + h.yz * vec2(x1.y,x2.y);\n    return 130.0 * dot(m, g);\n}\n\n#define OCTAVES 5\n// Ridged multifractal\n// See "Texturing & Modeling, A Procedural Approach", Chapter 12\nfloat ridge(float h, float offset) {\n    h = abs(h);     // create creases\n    h = offset - h; // invert so creases are at top\n    h = h * h * h * h;      // sharpen creases\n    return h;\n}\n\nfloat ridgedMF(vec2 p) {\n    float lacunarity = .1 ;\n    float gain = 0.5 ;\n    float offset = 1. + snoise(p + (u_time * 0.25));\n\n    float sum = 0.0 ;\n    float freq = 1.0; \n    float amp = 0.5 ;\n    float prev = 1.0;\n    for(int i=0; i < OCTAVES; i++) {\n        p *= 5.;\n        float n = ridge(snoise(p*freq + (u_time * 0.25)), offset);\n        sum += n*amp;\n        sum += n*amp*prev ;  // scale by previous octave\n        prev = n;\n        freq *= lacunarity;\n        amp *= gain;\n    }\n    return sum;\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    float y = ridgedMF(vUv + snoise(vUv + (u_time * 0.1)));\n    color += y;\n    color -= mix(vec3(0.401961,0.619608,0.666667),\n                vec3(0.466667,0.666667,0.098039),\n                clamp((y),0.4,1.0));\n    color -= mix(color,\n                vec3(0.66667,.1,0.2 + sin(u_time)),\n                clamp(length(y),0.0,.2));\n    gl_FragColor = vec4(color, 1.);\n}\n    ',uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qk,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $k=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$k,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _C=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_C,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    //book of shaders example\n        float random (in vec2 _st) {\n            return fract(sin(dot(_st.xy,\n                                vec2(12.9898,78.233)))*\n                43758.5453123);\n        }\n\n        // Based on Morgan McGuire @morgan3d\n        // https://www.shadertoy.com/view/4dS3Wd\n        float noise (in vec2 _st) {\n            vec2 i = floor(_st);\n            vec2 f = fract(_st);\n\n            // Four corners in 2D of a tile\n            float a = random(i);\n            float b = random(i + vec2(1.0, 0.0));\n            float c = random(i + vec2(0.0, 1.0));\n            float d = random(i + vec2(1.0, 1.0));\n\n            vec2 u = f * f * (3.0 - 2.0 * f);\n\n            return mix(a, b, u.x) +\n                    (c - a)* u.y * (1.0 - u.x) +\n                    (d - b) * u.x * u.y;\n        }\n\n        #define NUM_OCTAVES 5\n\n        float fbm(vec2 vUv){\n            float v = 0.;\n            float a = .45;\n            vec2 shift = vec2(1.);\n            mat2 rot = mat2(cos(0.5), sin(0.5),\n                            -sin(0.5), cos(0.5));\n            for(int i = 0; i < NUM_OCTAVES; i++){\n                v += a / noise(vUv - u_time * 0.2);\n                vUv = rot * PI * 0.25 * vUv * 3. + shift + (u_time * 0.5);\n                a *= .95 * noise(vUv);\n            }\n            return 1. -  v / 4.;\n        }\n\n        void main(){\n            vec2 vUv = vec2(vUv.x, vUv.y);\n            vUv *= 2.;\n            vUv.x += u_time * 0.1;\n            vec3 color = vec3(0.);\n\n            vec2 q = vec2(0.);\n            q.x = fbm(vUv);\n            q.y = fbm(vUv + vec2(1.));\n\n            vec2 r = vec2(0.);\n            r.x = fbm(vUv + 1.0 * q + vec2(1.7, 9.2) + 0.15 * u_time);\n            r.y = fbm(vUv + 1.0 * q + vec2(8.3, 2.8) + 0.16 * u_time);\n\n            float f = fbm(vUv + fbm(vUv + fbm(vUv)));\n            float f2 = fbm(vUv * 1.2 + fbm(vUv * 1.2 + fbm(vUv)));\n\n            //f(p) = fbm( p + fbm( p + fbm( p ) ) )\n            color = mix(vec3(0.901961,0.619608,0.666667),\n                        vec3(0.966667,0.666667,0.098039),\n                        clamp((f*f)*5.0,0.0,1.0));\n\n            color *= mix(vec3(0.901961,0.619608,0.666667),\n                        vec3(0.966667,0.666667,0.098039),\n                        clamp((f2*f2)*5.0,0.0,1.0));\n\n            // color = mix(color,\n            //             vec3(0.,.8,0.94706),\n            //             clamp(length(q),0.0,1.0));\n\n            // color = mix(color,\n            //             vec3(0.166667,.1,0.2),\n            //             clamp(length(r.x),0.0,.2));\n\n            float x = f + f2 + noise(vUv + u_time);\n\n        gl_FragColor = vec4(color * x,1.);\n        }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QC=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QC,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $C=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$C,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _T=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_T,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ST=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ST,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ET(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QT=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QT,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $T=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$T,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _R=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_R,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ER(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QR=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QR,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $R=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$R,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ez=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ez,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function az(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _z=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_z,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Uz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Uz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Mz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Sz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Tz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Cz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Rz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Fz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Pz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Ez(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Dz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Iz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Lz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Iz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Az=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Oz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Az,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Nz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Bz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Vz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Gz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Wz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Xz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Hz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Zz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Yz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qz=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Jz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:Qz,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $z=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function Kz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$z,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _P=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_P,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QP=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QP,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $P=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$P,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eF=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tF=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oF=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iF=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sF=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n        varying vec2 vUv;\n        #define PI 3.14159265359\n        #define TWO_PI 6.28318530718\n        uniform float u_time;\n        uniform vec2 u_resolution;\n\n        //iquilezles.org/articls/distfunctions2d\n        float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n        {\n            //p - point\n            //b - size of box\n            //r - round box - top right, bottom right, top left, bottom left\n            p = p * 2.0 - 1.;\n            r.xy = (p.x > 0.0) ? r.xy : r.zw;\n            r.x = (p.y > 0.0) ? r.x : r.y;\n            vec2 q = abs(p)-b+r.x;\n            float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n            return 1. - smoothstep(0.01, 0.02, v);\n        }\n\n        float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n        {\n            //x - thickness\n            float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n            float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n            return (c - a);\n        }\n\n        float sdBox(vec2 p, vec2 b)\n        {\n            //p - point \n            //b -\n            p = p * 2.0 - 1.; \n            vec2 d = abs(p) - b;\n            float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n            float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n            return smoothstep(0.01, 0.11, y / x);\n        }\n\n        float sdCircle(vec2 p, float r)\n        {\n            p = p * 2.0 - 1.;\n            float x = length(p) - r;\n            return 1. - smoothstep(0.01, 0.02, x);\n        }\n\n        float sdSegment(vec2 p, vec2 a, vec2 b)\n        {\n            vec2 pa = p-a;\n            vec2 ba = b-a;\n            float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n            return length(pa - ba * h);\n        }\n\n        vec2 Rot(vec2 vUv, float a){\n            vUv -= 0.5;\n            vUv = mat2(cos(a), -sin(a),\n                    sin(a), cos(a)) * vUv;\n            vUv += 0.5;\n            return vUv;\n        }\n\n        float ndot(vec2 a, vec2 b)\n        {\n            return a.x * b.x - a.y * b.y;\n        }\n\n        float sdRhombus(vec2 p, vec2 b)\n        {\n            p = abs(p);\n            float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n            float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n            return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n        }\n\n        float dot2(vec2 a)\n        {\n            return dot(a.x, a.y);\n        }\n\n        float trapezoid(vec2 p, float r1, float r2, float he)\n        {\n            vec2 k1 = vec2(r2, he);\n            vec2 k2 = vec2(r2-r1, 2.0 * he);\n            p.x = abs(p.x);\n            vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n            vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n            float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n            return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n        }\n\n        float sdEqTriangle(vec2 p, float size)\n        {\n            p = p / size;\n            float k = sqrt(3.);\n            p.x = abs(p.x) - 1.;\n            p.y = p.y + 1.0/k;\n            if(p.x+k*p.y > 0.)\n            {\n                p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n            }\n            p.x -= clamp(p.x, -2., 0.);\n            return -length(p) * sign(p.y);\n        }\n\n        float sdEqTriangleOutline(vec2 p, float size)\n        {\n            float x = 1. - sdEqTriangle(p, size);\n            float y = 1. - sdEqTriangle(p, size + 0.025);\n            x = smoothstep(0.01, 0.021, x);\n            y = smoothstep(0.01, 0.021, y);\n            return y - x;\n        }\n\n        float sdTriIsosceles(vec2 p, vec2 q)\n        {\n            p = Rot(p, PI);\n            p.x = abs(p.x);\n            vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n            vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n            float s = -sign(q.y);\n            vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                        vec2(dot(b,b), s*(p.y-q.y)));\n            return -sqrt(d.x)*sign(d.y);\n        }\n\n        void main()\n        {\n            vec2 vUv = vec2(vUv.x, vUv.y);\n            vUv = vUv * 2.;\n            //vUv.y -= 0.25;\n            vec2 vUv2 = vUv;\n            vUv2 -= 1.;\n            vUv2 = Rot(vUv2, PI);\n            vec3 color = vec3(0.);\n            float y = sdTriIsosceles(vUv, vec2(0.25 +(sin(u_time)/4.), 0.5 +(cos(u_time)/4.)));\n            float x = sdTriIsosceles(vUv2, vec2(0.25 +(cos(u_time)/4.), 0.5 +(sin(u_time)/4.)));\n            y = 1. - smoothstep(0.01, 0.021, y);\n            x = 1. - smoothstep(0.01, 0.021, x);\n            color += y;\n            color += x;\n            gl_FragColor = vec4(color, 1.);\n        }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n//iquilezles.org/articls/distfunctions2d\nfloat sdRoundedBox(vec2 p, vec2 b, vec4 r)\n{\n    //p - point\n    //b - size of box\n    //r - round box - top right, bottom right, top left, bottom left\n    p = p * 2.0 - 1.;\n    r.xy = (p.x > 0.0) ? r.xy : r.zw;\n    r.x = (p.y > 0.0) ? r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n    return 1. - smoothstep(0.01, 0.02, v);\n}\n\nfloat sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n{\n    //x - thickness\n    float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n    float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n    return (c - a);\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n    return smoothstep(0.01, 0.11, y / x);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    return 1. - smoothstep(0.01, 0.02, x);\n}\n\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n    return length(pa - ba * h);\n}\n\nvec2 Rot(vec2 vUv, float a){\n    vUv -= 0.5;\n    vUv = mat2(cos(a), -sin(a),\n               sin(a), cos(a)) * vUv;\n    vUv += 0.5;\n    return vUv;\n}\n\nfloat ndot(vec2 a, vec2 b)\n{\n    return a.x * b.x - a.y * b.y;\n}\n\nfloat sdRhombus(vec2 p, vec2 b)\n{\n    p = abs(p);\n    float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n    float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n    return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n}\n\nfloat dot2(vec2 a)\n{\n    return dot(a.x, a.y);\n}\n\nfloat trapezoid(vec2 p, float r1, float r2, float he)\n{\n    vec2 k1 = vec2(r2, he);\n    vec2 k2 = vec2(r2-r1, 2.0 * he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n    float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n    return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n}\n\nfloat sdEqTriangle(vec2 p, float size)\n{\n    p = p / size;\n    float k = sqrt(3.);\n    p.x = abs(p.x) - 1.;\n    p.y = p.y + 1.0/k;\n    if(p.x+k*p.y > 0.)\n    {\n        p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n    }\n    p.x -= clamp(p.x, -2., 0.);\n    return -length(p) * sign(p.y);\n}\n\nfloat sdEqTriangleOutline(vec2 p, float size)\n{\n    float x = 1. - sdEqTriangle(p, size);\n    float y = 1. - sdEqTriangle(p, size + 0.025);\n    x = smoothstep(0.01, 0.021, x);\n    y = smoothstep(0.01, 0.021, y);\n    return y - x;\n}\n\nfloat sdTriIsosceles(vec2 p, vec2 q)\n{\n    p = Rot(p, PI);\n    p.x = abs(p.x);\n    vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n    vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n    float s = -sign(q.y);\n    vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                 vec2(dot(b,b), s*(p.y-q.y)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nvoid main()\n{\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.2);\n    vUv = vUv * 2.;\n    \n    //vUv.y -= 0.25;\n    vec2 vUv2 = vUv;\n    vUv2 -= 1.;\n    vec2 vUv3 = vUv;\n    vUv3 -= 1.;\n    vUv3.y += 1.;\n    vec2 vUv4 = vUv;\n    vUv4 -= 1.;\n    vUv4.x += 1.;\n    vUv2 = Rot(vUv2, PI);\n    vUv3 = Rot(vUv3, PI * 0.5);\n    \n    vUv4 = Rot(vUv4, PI * -0.5);\n    vec3 color = vec3(0.);\n    float y = sdTriIsosceles(vUv, vec2(0.25 +(sin(u_time)/4.), 0.5 +(cos(u_time)/4.)));\n    float x = sdTriIsosceles(vUv2, vec2(0.25 +(cos(u_time)/4.), 0.5 +(sin(u_time)/4.)));\n    float y2 = sdTriIsosceles(vUv3, vec2(0.25 +(cos(u_time)/4.), 0.5 +(sin(u_time)/4.)));\n    float x2 = sdTriIsosceles(vUv4, vec2(0.25 +(sin(u_time)/4.), 0.5 +(cos(u_time)/4.)));\n    y = 1. - smoothstep(0.01, 0.021, y);\n    x = 1. - smoothstep(0.01, 0.021, x);\n    y2 = 1. - smoothstep(0.01, 0.021, y2);\n    x2 = 1. - smoothstep(0.01, 0.021, x2);\n    color.g += y + y2;\n    color.r += x + x2;\n    gl_FragColor = vec4(color, 1.);\n}\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n//iquilezles.org/articls/distfunctions2d\nfloat sdRoundedBox(vec2 p, vec2 b, vec4 r)\n{\n    //p - point\n    //b - size of box\n    //r - round box - top right, bottom right, top left, bottom left\n    p = p * 2.0 - 1.;\n    r.xy = (p.x > 0.0) ? r.xy : r.zw;\n    r.x = (p.y > 0.0) ? r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n    return 1. - smoothstep(0.01, 0.02, v);\n}\n\nfloat sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n{\n    //x - thickness\n    float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n    float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n    return (c - a);\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n    return smoothstep(0.01, 0.11, y / x);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    return 1. - smoothstep(0.01, 0.02, x);\n}\n\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n    return length(pa - ba * h);\n}\n\nvec2 Rot(vec2 vUv, float a){\n    vUv -= 0.5;\n    vUv = mat2(cos(a), -sin(a),\n               sin(a), cos(a)) * vUv;\n    vUv += 0.5;\n    return vUv;\n}\n\nfloat ndot(vec2 a, vec2 b)\n{\n    return a.x * b.x - a.y * b.y;\n}\n\nfloat sdRhombus(vec2 p, vec2 b)\n{\n    p = abs(p);\n    float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n    float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n    return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n}\n\nfloat dot2(vec2 a)\n{\n    return dot(a.x, a.y);\n}\n\nfloat trapezoid(vec2 p, float r1, float r2, float he)\n{\n    vec2 k1 = vec2(r2, he);\n    vec2 k2 = vec2(r2-r1, 2.0 * he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n    float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n    return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n}\n\nfloat sdEqTriangle(vec2 p, float size)\n{\n    p = p / size;\n    float k = sqrt(3.);\n    p.x = abs(p.x) - 1.;\n    p.y = p.y + 1.0/k;\n    if(p.x+k*p.y > 0.)\n    {\n        p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n    }\n    p.x -= clamp(p.x, -2., 0.);\n    return -length(p) * sign(p.y);\n}\n\nfloat sdEqTriangleOutline(vec2 p, float size)\n{\n    float x = 1. - sdEqTriangle(p, size);\n    float y = 1. - sdEqTriangle(p, size + 0.025);\n    x = smoothstep(0.01, 0.021, x);\n    y = smoothstep(0.01, 0.021, y);\n    return y - x;\n}\n\nfloat sdArc(vec2 p, vec2 sc, float ra, float rb){\n    //sc is arc's aperture\n    p.x = abs(p.x);\n    sc = vec2(sin(sc.x), cos(sc.y));\n    if (sc.y * p.x > sc.x * p.y){\n        return length(p - sc*ra) - rb;\n    }\n    else {\n        return abs(length(p) - ra) - rb;\n    }\n}\n\nfloat sdTriIsosceles(vec2 p, vec2 q)\n{\n    p = Rot(p, PI);\n    p.x = abs(p.x);\n    vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n    vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n    float s = -sign(q.y);\n    vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                 vec2(dot(b,b), s*(p.y-q.y)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nvoid main()\n{\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vec2 onevUv = vUv;\n    vec2 vUvy2 = vUv;\n    vUv = vUv * 2. - 0.5;\n    vec2 twovUv = vUv;\n    twovUv = twovUv * 2. - 1.;\n    twovUv.x -= 0.5;\n    \n    onevUv = Rot(onevUv, PI * -0.25);\n    float one = sdRoundedBox(vec2(vUv.x + 0.275, vUv.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n    float oneP = sdRoundedBox(vec2(onevUv.x + 0.24, onevUv.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n    \n    // color += one;\n    float a = PI * (0.5 + 0.25);\n    float b = 0.2 *(0.5 + 0.5);\n    twovUv = Rot(twovUv, PI * 1.85);\n    float y1 = sdArc(vec2(twovUv.x - 0.1, twovUv.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n    y1 = smoothstep(0.0, 0.015, y1); //yellow\n    vUvy2 = Rot(vUvy2, PI * -0.22);\n    float y2 = sdRoundedBox(vec2(vUvy2.x - 0.122, vUvy2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n    float y3 = sdRoundedBox(vec2(vUv.x - 0.25, vUv.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n    color += y1;\n    color -= one;\n    color -= y2;\n    color -= y3; \n    color -= oneP;\n    gl_FragColor = vec4(color, 1.);\n}\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.02, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.2;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        // vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x + 0.35, vUv.y));\n        // color += one;\n        float two = sdTwo(vec2(vUv.x + 0.05, vUv.y));\n        // color += two;\n        float three = sdThree(vec2(vUv.x, vUv.y));\n        color += three;\n        // color += one;\n        // color += two;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.02, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.2;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x + 0.5 * sin(u_time), vUv.y - 0.5 * cos(u_time)));\n        color += one;\n        float two = sdTwo(vec2(vUv.x + 0.5 * sin(u_time), vUv.y + 0.5 * cos(u_time)));\n        color += two;\n        float three = sdThree(vec2(vUv.x - 0.5 * cos(u_time), vUv.y - 0.5 * sin(u_time)));\n        color += three;\n        float four = sdFour(vec2(vUv.x - 0.5 * cos(u_time), vUv.y + 0.5 * sin(u_time)));\n        color += four;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.02, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.015, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x + 0.5 * sin(u_time), vUv.y - 0.5 * cos(u_time)));\n        color += one;\n        float two = sdTwo(vec2(vUv.x + 0.5 * sin(u_time), vUv.y + 0.5 * cos(u_time)));\n        color += two;\n        float three = sdThree(vec2(vUv.x - 0.5 * cos(u_time), vUv.y - 0.5 * sin(u_time)));\n        color += three;\n        float four = sdFour(vec2(vUv.x - 0.5 * cos(u_time), vUv.y + 0.5 * sin(u_time)));\n        color += four;\n        float five = sdFive(vec2(vUv.x + (sin(u_time)*0.5), vUv.y));\n        color += five;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _F=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.015, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.35), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.015, z1);\n        z2 = 1. - smoothstep(0.01, 0.015, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.015, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 15.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1.0, floor(u_time * 5. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float one = sdOne(b);\n        float zero = sdZero(b);\n        float shape;\n        if(str > .5 )\n        {\n            shape = smoothstep(0.01, 0.011, one);\n        } else {\n            shape = smoothstep(0.01, 0.011, zero);\n        }\n        \n        return vec3(shape * str );\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        // vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x , vUv.y ));\n        // color += one;\n        float zero = sdZero(vUv);\n        // color += zero;\n        // float two = sdTwo(vec2(vUv.x + 0.5 * sin(u_time), vUv.y + 0.5 * cos(u_time)));\n        // color += two;\n        // float three = sdThree(vec2(vUv.x - 0.5 * cos(u_time), vUv.y - 0.5 * sin(u_time)));\n        // color += three;\n        // float four = sdFour(vec2(vUv.x - 0.5 * cos(u_time), vUv.y + 0.5 * sin(u_time)));\n        // color += four;\n        // float five = sdFive(vec2(vUv.x + (sin(u_time)*0.5), vUv.y));\n        // color += five;\n        vec3 m = matrix(vUv);\n        color.g += m.x * 1.5;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_F,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n#ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.015, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.35), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.015, z1);\n        z2 = 1. - smoothstep(0.01, 0.015, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.015, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float sdSix(vec2 p)\n    {\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float s1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        s1 = 1. - smoothstep(0.01, 0.015, s1);\n        s2 = 1. - smoothstep(0.01, 0.015, s2);\n        s3 = 1. - smoothstep(0.01, 0.015, s3);\n        float s4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return s1 + s2 + s3 + s4;\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 8.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1.0, floor(u_time * 5. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float shape;\n        float zero = sdZero(b);\n        float one = sdOne(b);\n        float two = sdTwo(b);\n        float three = sdThree(b);\n        float four = sdFour(b);\n        float five = sdFive(b);\n        float six = sdSix(b);\n         if(str > 0.0 && str < 0.1 ){\n            shape = smoothstep(0.01, 0.011, zero);\n        }if(str > 0.1 && str < 0.2 ) {\n            shape = smoothstep(0.01, 0.011, one);\n        }if(str > 0.2 && str < 0.3 ) {\n            shape = smoothstep(0.01, 0.011, two);\n        }if(str > 0.3 && str < 0.4 ) {\n            shape = smoothstep(0.01, 0.011, three);\n        }if(str > 0.4 && str < 0.5 ) {\n            shape = smoothstep(0.01, 0.011, four);\n        }if(str > 0.5 && str < 0.6 ) {\n            shape = smoothstep(0.01, 0.011, five);\n        }if(str > 0.6 && str < 0.7 ) {\n            shape = smoothstep(0.01, 0.011, six);\n        }if(str > 0.7 && str < 0.8 ) {\n            shape = smoothstep(0.01, 0.011, two);\n        }if(str > 0.8 && str < 0.9 ) {\n            shape = smoothstep(0.01, 0.011, three);\n        }if(str > 0.9 && str < 1.0 ) {\n            shape = smoothstep(0.01, 0.011, four);\n        }\n        \n        return vec3(shape * str );\n    }\n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec3 m = matrix(vUv);\n        m.x *= sin(u_time * 0.25);\n        m.y *= cos(u_time * 0.25);\n        color = m * 2.5;\n       \n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n#ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.015, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.35), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.02, z1);\n        z2 = 1. - smoothstep(0.01, 0.02, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.01, 0.02, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.01, 0.02, x1);\n        x2 = 1. - smoothstep(0.01, 0.02, x2);\n        x3 = 1. - smoothstep(0.01, 0.02, x3);\n        x4 = 1. - smoothstep(0.01, 0.02, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.02, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float sdSix(vec2 p)\n    {\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float s1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        s1 = 1. - smoothstep(0.01, 0.02, s1);\n        s2 = 1. - smoothstep(0.01, 0.02, s2);\n        s3 = 1. - smoothstep(0.01, 0.02, s3);\n        float s4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return s1 + s2 + s3 + s4;\n    }\n\n    float sdSeven(vec2 p)\n    {\n        vec2 p2 = p;\n        float s1 = sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        p2 = Rot(p2, PI * -0.127);\n        float s2 = sdRoundedBox((vec2(p2.x-0.016, p2.y+0.001)), vec2(0.08, 0.44), vec4(0.075));\n        return s1 + s2;\n    }\n\n    float sdEight(vec2 p)\n    {\n        p *= 4.;\n        vec2 p2 = p;\n        p2 = Rot(p2, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float e1 = sdArc(vec2(p.x - 2., p.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e2 = sdArc(vec2(p2.x+1., p2.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e3 = sdArc(vec2(p.x - 2., p.y - 2.5), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e4 = sdArc(vec2(p2.x+1., p2.y+1.5), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        e1 = 1. - smoothstep(0.01, 0.02, e1);\n        e2 = 1. - smoothstep(0.01, 0.02, e2);\n        e3 = 1. - smoothstep(0.01, 0.02, e3);\n        e4 = 1. - smoothstep(0.01, 0.02, e4);\n        return e1 + e2 + e3 + e4;\n    }\n\n    float sdNine(vec2 p)\n    {\n        p = Rot(p, PI);\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float n1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        n1 = 1. - smoothstep(0.01, 0.02, n1);\n        n2 = 1. - smoothstep(0.01, 0.02, n2);\n        n3 = 1. - smoothstep(0.01, 0.02, n3);\n        float n4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return n1 + n2 + n3 + n4;\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 15.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1., floor(u_time * 6. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float shape;\n        float zero = sdZero(b);\n        float one = sdOne(b);\n        float two = sdTwo(b);\n        float three = sdThree(b);\n        float four = sdFour(b);\n        float five = sdFive(b);\n        float six = sdSix(b);\n        float seven = sdSeven(b);\n        float eight = sdEight(b);\n        float nine = sdNine(b);\n         if(str >= 0.0 && str < 0.1 ){\n            shape = zero;\n        }if(str >= 0.1 && str < 0.2 ) {\n            shape = one;\n        }if(str >= 0.2 && str < 0.3 ) {\n            shape = two;\n        }if(str >= 0.3 && str < 0.4 ) {\n            shape = three;\n        }if(str >= 0.4 && str < 0.5 ) {\n            shape = four;\n        }if(str >= 0.5 && str < 0.6 ) {\n            shape = five;\n        }if(str >= 0.6 && str < 0.7 ) {\n            shape = six;\n        }if(str >= 0.7 && str < 0.8 ) {\n            shape = seven;\n        }if(str >= 0.8 && str < 0.9 ) {\n            shape = eight;\n        }if(str >= 0.9 && str < 1.0 ) {\n            shape = nine;\n        }\n        return vec3(shape);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec3 m = matrix(vUv);\n        // m.x *= sin(u_time * 0.25) + 2.;\n        // m.y *= cos(u_time * 0.25) ;\n        color = m;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jF=new qa({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Ox+Bx+Ax+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdFive(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float hexagramOutline(vec2 p, float size)\n    {\n        float x = sdHexagram(p, size);\n        x = 1. - smoothstep(0.01, 0.02, x);\n        float y = sdHexagram(p, size * 0.95);\n        y = 1. - smoothstep(0.01, 0.02, y);\n        return x - y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time);\n        newUv = newUv * 2. - 1.;\n        vec2 uv2 = newUv;\n        uv2 *= ((sin(u_time) / 1.25) - 2.);\n        float hexagram = sdHexagram(newUv, 0.25);\n        hexagram = 1. - smoothstep(0.01, 0.02, hexagram);\n        color += hexagram;\n        float hexOutline = hexagramOutline(newUv, 0.28);\n        color += hexOutline;\n        float hexOutline2 = hexagramOutline(uv2, 0.2);\n        color -= hexOutline2;\n        float shaderLabel = label(vUv);\n        color += shaderLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdSix(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 vUv2 = vUv;\n        float s1 = sdSegment(vUv, vec2(0.5 + (sin(u_time)/2.5),0.5 + (cos(u_time) / 2.5)), vec2(0.5, 0.5));\n        float s2 = sdSegment(vUv2, vec2(0.5 + (sin(u_time * 0.5)/5.), 0.5 + (cos(u_time * 0.5) / 5.)), vec2(0.5, 0.5));\n        s1 = 1. - smoothstep(0.01, 0.012, s1);\n        s2 = 1. - smoothstep(0.01, 0.012, s2);\n        color.r += s1;\n        color.g += s2;\n        float shaderLabel = label(vUv);\n        color += shaderLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdSeven(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 evUv = vUv;\n        evUv = evUv * 2. - 1.;\n        float e1 = sdEgg(evUv, 0.5, 0.25);\n        e1 = 1. - smoothstep(0.01, 0.02, e1);\n        color += e1;\n\n        float s1 = sdSegment(vUv, vec2(0.45, 0.5), vec2(0.45, 0.1));\n        float s2 = sdSegment(vUv, vec2(0.55, 0.5), vec2(0.55, 0.1));\n        s1 = 1. - smoothstep(0.01, 0.015, s1);\n        s2 = 1. - smoothstep(0.01, 0.015, s2);\n        color += s1 + s2;\n\n        float numberLabel = label(vUv);\n        color += numberLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdEight(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 5. - 2.5;\n        p.y -= 1.25;\n        p.x += 0.5;\n        float c;\n        float steps = 15.;\n        for(float i = 1.; i < steps; i++)\n        {\n            c += sdCircle(vec2(p.x  + i/ 4. * (sin(u_time * i * 0.25)), p.y + i / 4. ), a);\n        }\n        \n        return c;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float x = newfunc(vUv, 0.25);\n        color += x;\n        float num = label(vUv);\n        color += num;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdNine(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 4.;\n        //p.y -= 1.25;\n        p.x += 0.5;\n        p.y += 0.5;\n        float c;\n        float steps = 25.;\n        for(float i = 1.; i < steps; i++)\n        {\n            c += sdCircle(vec2(p.x  + i/ 4. * (sin(u_time * i * 0.25)), p.y + i / 12. * (cos(u_time * i * 0.25)) ), a);\n        }\n        return c;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        float y = newfunc(vUv, 0.25);\n        color += y;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdZero(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n    float sdCircleHighlight(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 1.5, x);\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 4.;\n        //p.y -= 1.25;\n        p.x += 0.5;\n        p.y += 0.5;\n        float c;\n        float d;\n        float e;\n        float f;\n        float steps = 25.;\n        for(float i = 1.; i < steps; i++)\n        {\n            c += sdCircle(vec2(p.x  + i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y + i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            d += sdCircle(vec2(p.x  - i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y - i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            e += sdCircleHighlight(vec2(p.x  + i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y + i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            f += sdCircleHighlight(vec2(p.x  - i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y - i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n        }\n        e *= 0.25;\n        f *= 0.25;\n        return c + d + e + f ;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdOne(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n    \n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 4.;\n        // //p.y -= 1.25;\n        p.x += 0.5;\n        p.y += 0.5;\n        p*= 0.5;\n        // float c;\n        // float d;\n        // float steps = 25.;\n        // for(float i = 1.; i < steps; i++)\n        // {\n        //     c += sdCircle(vec2(p.x  + i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y + i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n        //     d += sdCircle(vec2(p.x  - i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y - i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            \n        // }\n        // return c + d;\n        float b;\n        float steps = 30.;\n        for(float i = 1.; i<steps; i++)\n        {\n            b += sdSegment(vec2(p.x, p.y), vec2(0.25 + i/20. * (cos(u_time * i * 0.015)) , 0.25 + i/20. * (sin(u_time * i * 0.05)) ), vec2(0.75 + i/20. * (cos(u_time * i * 0.025)), 0.75 + i/20. * (sin(u_time * i * 0.05)) ));\n            \n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 12. - 6.;\n        // //p.y -= 1.25;\n        // p.x += 0.5;\n        // p.y += 0.5;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            b += sdEqTriangleOutline(vec2(p.x + i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n            b += sdEqTriangleOutline(vec2(p.x - i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 12. - 6.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            b += sdCircleOutline(vec2(p.x + i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n            b += sdCircleOutline(vec2(p.x - i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n            b += sdCircleOutline(vec2(p.x + i / 10. * cos(u_time + i / 5. ), p.y + i / 10. * sin(u_time + i / 10.)), a);\n            b += sdCircleOutline(vec2(p.x - i / 10. * cos(u_time + i / 5. ), p.y + i / 10. * sin(u_time + i / 10.)), a);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdFour(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 100. - 50.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, sin(u_time * i/1.));\n            b += 1. - sdBox(vec2(p.x + i + sin(u_time * i), p.y + sin(u_time * i)), vec2(1.5, 0.5));\n            b += 1. - sdBox(vec2(p.x - i + cos(u_time * i), p.y + sin(u_time * i)), vec2(1.5, 0.5));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i), p.y + i + cos(u_time * i)), vec2(0.5, 1.5));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i) , p.y - i + sin(u_time * i)), vec2(0.5, 1.5));\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdFive(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 100. - 50.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, cos(u_time * i/25.));\n            b += 1. - sdBox(vec2(p.x + i + sin(u_time * i / 50.), p.y + sin(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n            b += 1. - sdBox(vec2(p.x - i + cos(u_time * i / 50.), p.y + sin(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i / 50.), p.y + i + cos(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i / 50.) , p.y - i + sin(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdSix(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 100. - 50.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 30.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/10.)));\n            b += sdCircle(vec2(p.x + i /1.75 + sin(u_time * i / 150.), p.y + sin(u_time * i / 150.)),  2.5 * i/50.);\n            b += sdCircle(vec2(p.x - i/1.75 + cos(u_time * i / 150.), p.y + sin(u_time * i / 150.)),  2.5 * i/50.);\n            b += sdCircle(vec2(p.x + sin(u_time * i / 150.), p.y + i/1.75 + cos(u_time * i / 150.)),  2.5 * i/50.);\n            b += sdCircle(vec2(p.x + sin(u_time * i / 150.) , p.y - i/1.75 + sin(u_time * i / 150.)),  2.5 * i/50.);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QF=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdSeven(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 10. - 5.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 30.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/15.)));\n            b += sdSegment(p, vec2(0.25 * i + ((sin(u_time) * 2.) - 12.5), 0.25 ), vec2(2.75 * i, 2.75));\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QF,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $F=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdEight(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 2.;\n\n        // //p.y -= 1.25;\n        // p.x += 1.;\n        // p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 15.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/15.)));\n            b += rectOutline(vec2(p.x, p.y), 0.5 * i / 15., 0.5 * i / 15.);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$F,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdNine(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 3.;\n        p*= 0.5;\n        float b;\n        float steps = 15.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/15.)));\n            b += cirOutline(vec2(p.x + sin(u_time * i/15. + i), p.y + cos(u_time * i/15. + i)), 0.5 * (i + sin(u_time)) * 0.25);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdZero(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 3.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            // if(i < 12.)\n            // {\n            //     p = Rot(p, (cos(u_time * i/50.)));\n            // } else \n            // {\n            //     p = Rot(p, (sin(u_time * i/50.)));\n            // }\n\n            p = Rot(p, (sin(u_time * i/50.)));\n            b += cirOutline(vec2(p.x + 0.75, p.y + sin(u_time * i/25. + 5.)), 0.5);\n            b += cirOutline(vec2(p.x - 0.75, p.y + sin(u_time * i/25. + 5.)), 0.5);\n\n           \n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdOne(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        // vUv = vUv * 4. - 2.;\n        float x = random(vUv);\n        float y = sin(vUv.x);\n        vec2 cp = vec2(cos(u_time), sin(u_time  )) * 0.45 + 0.5;\n        y = quadraticBezier(y, cp);\n        // y += mod(vUv.x, 0.5);\n        float line = plot(vec2(vUv.x, vUv.y) , y, 0.01);\n        float line2 = plot(vec2(vUv.x, vUv.y) , y / x, 0.1);\n        float line3 = plot(vec2(vUv.x, vUv.y), y * x, 0.001);\n        color += line + line2 + line3;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // vec3 sdgBox(vec2 p, vec2 b)\n    // {\n    //     vec2 w = abs(p) - b;\n    //     vec2 s = vec2(p.y < 0. ? -1. : 1., p.x < 0. ? -1. : 1.);\n    //     float g = max(w.x, w.y);\n    //     vec2 q = max(w, 0.0);\n    //     float l = length(q);\n    //     vec3 x = vec3((g > 0.0) ? l : g, s * ((g > 0.0) ? q /l : ((w.x > w.y) ? vec2(1., 0.) : vec2(0., 1.))));\n    //     return smoothstep(0.01, 0.02, x);\n    // }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        \n        vUv = Rot(vUv, u_time);\n        vUv = vUv * 6. - 3.;\n        \n        float ra = 0.5;\n        vec3 cir = 1. - sdgCircle(vUv, ra);\n        float d = cir.x;\n        vec2 g = cir.yz;\n        \n        color += (d > 0.) ? vec3(1.) : vec3(0.0);\n        color *= 1.0 + vec3(0.5 * g, 0.0);\n        color *= 1.0 - 0.5 * exp(-16.0 * abs(d));\n        color *= 0.5 + 0.1 * cos(150.0 * d);\n        color = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.01, abs(d)));\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    vec3 sdgBox(vec2 p, vec2 b)\n    {\n        vec2 w = abs(p) - b;\n        vec2 s = vec2(p.y < 0. ? -1. : 1., p.x < 0. ? -1. : 1.);\n        float g = max(w.x, w.y);\n        vec2 q = max(w, 0.0);\n        float l = length(q);\n        vec3 x = vec3((g > 0.0) ? l : g, s * ((g > 0.0) ? q /l : ((w.x > w.y) ? vec2(1., 0.) : vec2(0., 1.))));\n        return x;\n    }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        \n        vUv = Rot(vUv, u_time);\n        vUv = vUv * 6. - 3.;\n        \n        float ra = 0.5;\n        vec3 cir = 1. - sdgCircle(vUv, ra);\n        vec3 box = 1. - sdgBox(vUv, vec2(0.5, 0.5));\n        float d = cir.x;\n        vec2 g = cir.yz;\n\n        d = box.x;\n        g = box.yz;\n        \n        color += (d > 0.) ? vec3(1.) : vec3(0.0);\n        color *= 1.0 + vec3(0.5 * g, 0.0);\n        color *= 1.0 - 0.5 * exp(-16.0 * abs(d));\n        color *= 0.5 + 0.1 * cos(150.0 * d);\n        color = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.01, abs(d)));\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    vec3 sdgBox(vec2 p, vec2 b)\n    {\n        vec2 w = abs(p) - b;\n        vec2 s = vec2(p.y < 0. ? -1. : 1., p.x < 0. ? -1. : 1.);\n        float g = max(w.x, w.y);\n        vec2 q = max(w, 0.0);\n        float l = length(q);\n        vec3 x = vec3((g > 0.0) ? l : g, s * ((g > 0.0) ? q /l : ((w.x > w.y) ? vec2(1., 0.) : vec2(0., 1.))));\n        return x;\n    }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        \n        vUv = Rot(vUv, u_time);\n        vUv = vUv * 4. - 2.;\n        \n        float ra = 0.5;\n        vec3 cir = 1. - sdgCircle(vUv, ra);\n        vec3 box = 1. - sdgBox(vUv, vec2(0.5, 0.5));\n        float d = cir.x;\n        vec2 g = cir.yz;\n\n        d = box.x;\n        g = box.yz;\n        \n        color += (d > 0.) ? vec3(1.) : vec3(0.0);\n        // color *= 1.0 + vec3(0.5 * g, 0.0);\n        color *= 1.0 - 0.5 * exp(-16.0 * abs(d));\n        color *= 0.1 + 0.5 * cos(20.0 * d * (sin(u_time * 0.5) * 2.) + 5. );\n        color = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.01, abs(d)));\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdFive(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n\n        vUv = vUv * 2. - 1.;\n        float k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\n        float spiral = sdSpiral(vUv, 1.0, k);\n        color += 1. - smoothstep(0.01, 0.02, spiral);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdSix(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = Rot(p , u_time);\n        p = p * 2. - 1.;\n        // //p.y -= 1.25;\n        // p.x += 1.;\n        // p.y += 1.;\n        // p*= 0.5;\n        float b;\n        float steps = 15.;\n        \n        for(float i = 1.; i<steps; i++)\n        {\n            // p = Rot(p, u_time * 0.25);\n            // p = p * 2. - 1.;\n            float k = 1. + i * (0.25 - 0.25 * cos(u_time * i * 0.025));\n            b += sdSpiral(p , a  * i, k + i * 0.2);\n        }\n        return b;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n\n        // vUv = vUv * 2. - 1.;\n        float k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\n        float spiral = sdSpiral(vUv, 1.0, k);\n        // color += spiral;\n        float func = newfunc(vUv, 1.0);\n        // color.g += func * 0.25;\n        color.r += func * 0.25 - abs(cos(u_time * 0.5));\n        color.b += func * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdSeven(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = Rot(p , u_time);\n        p = p * 2. - 1.;\n        // //p.y -= 1.25;\n        // p.x += 1.;\n        // p.y += 1.;\n        // p*= 0.5;\n        float b;\n        float steps = 15.;\n        \n        for(float i = 1.; i<steps; i++)\n        {\n            // p = Rot(p, u_time * 0.25);\n            // p = p * 2. - 1.;\n            p = p * i / (3. + sin(u_time * 0.5));\n            float k = 1. + i * (0.25 - 0.25 * cos(u_time * i * 0.025));\n            b += sdSpiral(p , a  * i, k + i * 0.2);\n        }\n        return b;\n    }\n\n    \n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n\n        // vUv = vUv * 2. - 1.;\n        float k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\n        float spiral = sdSpiral(vUv, 1.0, k);\n        // color += spiral;\n        float func = newfunc(vUv, 1.0);\n        // color.g += func * 0.25;\n        color.r += func * 0.25 - abs(cos(u_time * 0.5));\n        color.b += func * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\n        color += numLabel + numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\nfloat label(vec2 p)\n{\n    p *= 10.;\n    p.x -= 0.25;\n    float left = sdFour(vec2(p.x + 0.3, p.y));\n    float center = sdFour(vec2(p.x -0.05, p.y));\n    float right = sdEight(vec2(p.x - 0.38, p.y));\n    return left + center + right;\n}\n\nfloat newfunc(vec2 p, float a)\n{\np = Rot(p , u_time);\np = p * 2. - 1.;\n// //p.y -= 1.25;\n// p.x += 1.;\n// p.y += 1.;\n// p*= 0.5;\nfloat b;\nfloat steps = 15.;\n\nfor(float i = 1.; i<steps; i++)\n{\n    // p = Rot(p, u_time * 0.25);\n    // p = p * 2. - 1.;\n    p = p * i / (3.);\n    float k = 1. + i * (0.25 - 0.25 * cos(u_time * i * 0.025));\n    b += sdSpiral(p * i, a  * i, k + i * 0.2);\n    b += sdSegment(p * i , vec2(0.0), vec2(0.25));\n}\nreturn b;\n}\n\nvoid main()\n{\nvec2 vUv = vec2(vUv.x, vUv.y);\nvec3 color = vec3(0.);\nfloat numLabel = label(vUv);\nvec2 newUv = vUv;\n// vUv = vUv * 2. - 1.;\nfloat k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\nfloat spiral = sdSpiral(vUv, 1.0, k);\n// color += spiral;\nvUv = Rot(vUv, u_time);\nnewUv = Rot(newUv, PI * 0.25);\nfloat func = newfunc(vUv, 1.0);\nfloat func2 = newfunc(newUv, 1.0);\n// color.g += func * 0.25;\ncolor.r += func * 0.25 - abs(cos(u_time * 0.5));\ncolor.r += func2 * 0.25 - abs(cos(u_time * 0.5));\ncolor.b += func * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\ncolor.b += func2 * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\ncolor += numLabel + numLabel + numLabel;\ngl_FragColor = vec4(color, 1.);\n}\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _D=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdNine(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n\n        float y = (sin(noiseUv.x + u_time) )  / 2. ;\n        float line = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y, 0.01);\n        float line2 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n, 0.01);\n        float line3 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n * n, 0.01);\n        color += line;\n        color += line2;\n        color += line3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_D,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = newUv / 1.25 + 0.1;\n        float box = sdRoundedBoxOutline(newUv, vec2(0.5), vec4(\n            0.25 * n + (sin(u_time * (sin(n + u_time/5.))/50.) / 10.) + 0.2, \n            0.25 * n + (sin(u_time * (sin(n + u_time/5.))/50.) / 10.) + 0.2, \n            0.25 * n + (sin(u_time * (cos(n + u_time/5.))/50.) / 10.) + 0.2, \n            0.25 * n + (sin(u_time * (cos(n + u_time/5.))/50.) / 10.) + 0.2), \n            0.025);\n        float y = (sin(noiseUv.x + u_time) )  / 2. ;\n        float line = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y, 0.01);\n        float line2 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n, 0.01);\n        float line3 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n * n, 0.01);\n        // color += line;\n        // color += line2;\n        // color += line3;\n        color += box;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = newUv / 1.25 + 0.1;\n        float box = sdRoundedBox(newUv, vec2(0.5), vec4(\n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2, \n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2, \n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2, \n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2));\n        float y = (sin(noiseUv.x + u_time) )  / 2. ;\n        float line = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y, 0.01);\n        float line2 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n, 0.01);\n        float line3 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n * n, 0.01);\n        // color += line;\n        // color += line2;\n        // color += line3;\n        color += box;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n       \n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        color += spiral;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        newUv = newUv * 2. - 1.;\n        vec2 newUv2 = vUv;\n        newUv2 = Rot(newUv2, u_time * 0.5);\n        newUv2 = newUv2 * 2. - 1.;\n        float tri = sdEqTriangleOutline(newUv, 0.35 + (n * 0.05 * sin(u_time)));\n        float tri2 = sdEqTriangleOutline(newUv2, 0.15 + (n * 0.05 * sin(u_time)));\n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        // color += spiral;\n        color += tri;\n        color += tri2;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        // newUv = newUv * 2. - 1.;\n        vec2 newUv2 = vUv;\n        newUv2 = Rot(newUv2, u_time * 0.5);\n        // newUv2 = newUv2 * 2. - 1.;\n        float c1 = cirOutline(newUv, 0.35 + (n * 0.05 * sin(u_time)));\n        float c2 = cirOutline(newUv2, 0.15 + (n * 0.05 * sin(u_time)));\n        float c3 = cirOutline(newUv, 0.5 + (n * 0.05 * sin(u_time)));\n        float c4 = cirOutline(newUv2, 0.25 + (n * 0.035 * sin(u_time)));\n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        // color += spiral;\n        color += c1;\n        color += c2 + c3 + c4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/25.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = newUv * 4. - 2.;\n        float y = sin(vUv.x + u_time + n);\n        float x = sin(vUv.y + u_time + n);\n        float line = plot(newUv, y, 0.5);\n        float line2 = plot(newUv, x, 0.25);\n        color += line;\n        color += line2;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 220. * 1.2)/10.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n       \n        float shape = rectOutline(vUv, 0.5 + n/5., 0.25);\n        color += shape;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ED(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ID=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 82. * 1.2)/15.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n       \n        float shape = rectOutline(vUv, 0.5 + n/5. * sin(u_time), 0.5 + n/5. * cos(u_time));\n        color += shape;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:ID,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 82. * 1.2)/15.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        float shape = rectOutline(newUv, 0.5 + n/5. * sin(u_time), 0.5 + n/5. * cos(u_time));\n        float shape2 = cirOutline(vUv, 0.5 + n/5. * sin(u_time));\n        color += shape;\n        color += shape2;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 1580. * 1.2)/35.);\n        vec2 vUv2, vUv3, vUv4, vUv5;\n        vUv2 = vUv;\n        vUv2 = vUv2 * 2. - 0.5;\n        vUv2.x += 0.56;\n        vUv3 = vUv;\n        vUv3 = vUv3 * 2. - 0.5;\n        vUv3.x += 0.2;\n        vUv4 = vUv;\n        vUv4 = vUv4 * 2. - 0.5;\n        vUv4.x -= 0.05;\n        vUv5 = vUv;\n        vUv5 = vUv5 * 2. - 0.5;\n        vUv5.x -= 0.4;\n\n        float two = sdTwo(vUv2 * abs(sin(n + u_time)+ 25.)/25.);\n        float zero = sdZero(vUv3 * abs(cos(n + u_time) + 25.)/25.);\n        float two1 = sdTwo(vUv4 * abs(sin(n + u_time)+ 25.)/25.);\n        float three = sdThree(vUv5 * abs(cos(n + u_time)+ 25.)/25.);\n        color += two;\n        color += zero;\n        color += two1;\n        color += three;\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ND(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 82. * 1.2)/15.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        float shape = rect(newUv, 0.5 + n/5. * sin(u_time), 0.5 + n/5. * cos(u_time));\n        float shape2 = circle(vUv * 2. - 0.5, 0.5 + n/5. * sin(u_time));\n        float shape3 = circle(vUv * 2.5 - 0.75, 0.5 + n/5. * sin(u_time));        color += shape;\n        color += shape2;\n        color -= shape3;\n        float shape4 = rect(newUv, 0.45 + n/5. * sin(u_time), 0.45 + n/5. * cos(u_time));\n        color -= shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * ((u_time) / 5.) + 65.);\n        vec2 newUv = vUv;\n        float y = vUv.x * n;\n\n        float line = plot(vUv, y, 0.01);\n        // newUv = newUv * 2.;\n        float cir = cirOutline(newUv, 0.25); \n        // color += line;\n        color += cir;\n        color += line;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    \n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv + u_time);\n        // vUv.x += u_time;\n        float y = sin(vUv.x * n * u_time);\n\n        float line = plot(vUv, y, 0.5 + n);\n        color += line;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        // newUv = newUv * 2. - 1.;\n        vec2 newUv2 = vUv;\n        newUv2 = Rot(newUv2, u_time * 0.5);\n        // newUv2 = newUv2 * 2. - 1.;\n        float c1 = circle(newUv, 0.35 + (n * 0.07 * sin(u_time)));\n        float c2 = circle(newUv2, 0.15 + (n * 0.05 * cos(u_time)));\n        float c3 = circle(newUv, 0.5 + (n * 0.04 * sin(u_time)));\n        float c4 = circle(newUv2, 0.25 + (n * 0.035 * cos(u_time)));\n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        // color += spiral;\n        \n        color += c2;\n        color -= c1;\n        color += c3;\n        // color -= c3;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QD=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float shape1 = sdPolygonOutline(vUv, 7.0 + sin(u_time), 0.1);\n        float shape2 = sdPolygonOutline(vUv, 6.0 + sin(u_time), 0.2);\n        float shape3 = sdPolygonOutline(vUv, 5.0 + sin(u_time), 0.3);\n        float shape4 = sdPolygonOutline(vUv, 4.0 + sin(u_time), 0.4);\n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1 + shape2 + shape3 + shape4;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QD,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $D=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        for (int i=4; i<=15; i++)\n        {\n            shape1 += sdPolygonOutline(vUv, i, float(i) * 0.1 + (sin(u_time)/2.) - 0.95);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$D,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 0.5;\n        newvUv = Rot(newvUv, u_time * 0.25);\n        for (int i=4; i<=15; i++)\n        {\n            shape1 += sdPolygonOutline(vec2(newvUv.x, newvUv.y + sin(float(i)/2.)), i, float(i) * 0.1 + (sin(u_time)/4.) - 0.95);\n            shape2 += sdPolygonOutline(vec2(newvUv.x + cos(float(i)/2.), newvUv.y ), i, float(i) * 0.1 + (cos(u_time)/4.) - 0.95);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color += shape2;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 0.5;\n        newvUv = Rot(newvUv, u_time * 0.25);\n        for (int i=3; i<=7; i++)\n        {\n            shape1 += sdPolygonOutline(vec2(newvUv.x, newvUv.y + sin(float(i)/1.)), i, float(i) * 0.1 + (sin(u_time * float(i) * 0.5)/1.) - 0.95);\n            shape2 += sdPolygonOutline(vec2(newvUv.x + cos(float(i)/1.), newvUv.y ), i, float(i) * 0.1 + (cos(u_time * float(i) * 0.5)/1.) - 0.95);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color += shape2;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 1.;\n        // newvUv = Rot(newvUv, u_time * 0.25);\n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=3; i<=7; i++)\n        {\n            shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            shape2 += sdSpiral(newvUv, 0.5* float(i), 5./k );\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color *= shape2;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 4. - 1.5;\n        // newvUv = Rot(newvUv, u_time * 0.25);\n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=3; i<=7; i++)\n        {\n            // shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            // shape2 += sdSpiral(newvUv, 0.5* float(i), 20./k );\n            // shape3 += sdSpiral(newvUv, 0.5* float(i), 100./k );\n            shape1 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.75), 0.5* float(i)), vec4(float(i)), 0.1);\n            shape2 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.25), 0.5* float(i)), vec4(float(i)), 0.1);\n            shape3 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.5), 0.5* float(i)), vec4(float(i)), 0.2);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color *= shape2;\n        color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 4. - 1.5;\n        newvUv = Rot(newvUv, u_time * 0.5);\n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=0; i<=10; i++)\n        {\n            // shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            // shape2 += sdSpiral(newvUv, 0.5* float(i), 20./k );\n            // shape3 += sdSpiral(newvUv, 0.5* float(i), 100./k );\n            shape1 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.35), 0.25* float(i)), vec4(float(i)), 0.1);\n            shape2 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.25), 0.5* float(i)), vec4(float(i)), 0.1);\n            shape3 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.35), 0.5* float(i)), vec4(float(i)), 0.1);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color *= shape2;\n        color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * 0.5);\n        newvUv = newvUv * 4. - 2.;\n        \n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=0; i<=10; i++)\n        {\n            // shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            // shape2 += sdSpiral(newvUv, 0.5* float(i), 20./k );\n            // shape3 += sdSpiral(newvUv, 0.5* float(i), 100./k );\n            shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            // shape2 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.25), 0.5* float(i)), vec4(float(i)), 0.1);\n            // shape3 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.35), 0.5* float(i)), vec4(float(i)), 0.1);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        // color *= shape2;\n        // color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 3. - 1.;\n        newvUv = Rot(newvUv, u_time * 0.25);\n        \n        for (int i=4; i<=10; i++)\n        {\n            // shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            shape2 += sdPolygonOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.0725), newvUv.y + sin(float(i) * u_time * 0.0725)), 4, 0.1 * (float(i) - 0.125));\n            shape3 += sdPolygonOutline(vec2(newvUv.x - sin(float(i) * u_time * 0.0725), newvUv.y - sin(float(i) * u_time * 0.0725)), 4, 0.1 * (float(i) - 0.125));\n            \n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        // color += shape1;\n        color += shape2;\n        color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 3. - 1.;\n        // newvUv = Rot(newvUv, u_time * 0.25);\n        \n        for (int i=4; i<=8; i++)\n        {\n            // shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            shape2 += sdPolygonOutline(vec2(newvUv.x - sin(float(i) * u_time * 0.25), newvUv.y + sin(float(i) * u_time * 0.125)), 4, 0.05 * (float(i) - 0.125));\n            shape3 += sdPolygonOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + sin(float(i) * u_time * 0.125)), 4, 0.05 * (float(i) - 0.125));\n            \n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        // color += shape1;\n        color += shape2;\n        color += shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 0.5;\n        \n        \n        for (int i=4; i<=15; i++)\n        {\n            newvUv = Rot(newvUv, u_time * 0.125);\n            // shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            shape2 += sdPolygonOutline(vec2(newvUv), 3, 0.0525 * (float(i) - 0.125));\n            shape3 += sdPolygonOutline(vec2(newvUv.x + cos(float(i) * u_time * 0.125), newvUv.y + sin(float(i) * u_time * 0.125)), 3, 0.025 * (float(i) - 0.125));\n            \n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        // color += shape1;\n        color += shape2;\n        // color += shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * 4.);\n        newvUv = newvUv / 2. - 0.25;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=4; i<=15; i++)\n        {\n            shape1 += sdSpiral(vec2(newvUv), 0.45, k);\n        }\n        \n        color += shape1;\n        shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2;\n        color += shape3;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _E=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * .25);\n        // newvUv = newvUv / 2. - 0.25;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=0; i<=10; i++)\n        {\n            shape1 += rectOutline(vec2(newvUv.x + (float(i) * (sin(u_time) / 2.)/ 20.), newvUv.y), 0.25, 0.25);\n            shape2 += rectOutline(vec2(newvUv.x , newvUv.y + (float(i) * (sin(u_time) / 2.)/ 20.)), 0.25, 0.25);\n            // shape3 += rectOutline(vec2(newvUv.x + (float(i) * (cos(u_time) / 2.)/ 20.), newvUv.y), 0.25, 0.25);\n            // shape4 += rectOutline(vec2(newvUv.x , newvUv.y + (float(i) * (cos(u_time) / 2.)/ 20.)), 0.25, 0.25);\n        }\n        \n        color += shape1;\n        // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2;\n        // color += shape3;\n        // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_E,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * .25);\n        // newvUv = newvUv / 2. +0.125;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=5; i<=15; i++)\n        {\n            shape1 += rectOutline(vec2(newvUv) , 0.0725 * float(i) * cos(u_time * float(i) * 0.01), 0.0725 * float(i) * sin(u_time * float(i) * 0.05));\n        //     shape2 += rectOutline(vec2(newvUv.x , newvUv.y), 0.025 * float(i), 0.25);\n        //     shape3 += rectOutline(vec2(newvUv.x , newvUv.y), 0.025 * float(i), 0.25);\n        //     shape4 += rectOutline(vec2(newvUv.x , newvUv.y), 0.025 * float(i), 0.25);\n        }\n        \n        color += shape1;\n        // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2;\n        color += shape3;\n        color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        // newvUv = Rot(newvUv, u_time * .25);\n        newvUv = newvUv * 4. - 1.5;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=0; i<=13; i++)\n        {\n            shape1 += circle(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5), newvUv.y +  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n            shape2 += circle(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5) , newvUv.y -  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n            shape3 += cirOutline(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5), newvUv.y +  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n            shape4 += cirOutline(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5) , newvUv.y -  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n        }\n        \n        color += shape1 * shape3;\n        // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2 * shape4;\n        // color *= shape3;\n        // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ME(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        // newvUv = Rot(newvUv, u_time * .25);\n        newvUv = newvUv * 3. - 1.5;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=1; i<=15; i++)\n        {\n            shape1 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.5 * (sin(u_time * float(i) * 0.1)), 0.75 * (cos(u_time * float(i) * 0.21))));\n            shape2 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.5 * (sin(u_time * float(i) * 0.1)), 0.75 * (cos(u_time * float(i) * 0.21))));\n            shape3 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.75 * (cos(u_time * float(i) * 0.21)), 0.75 * (sin(u_time * float(i) * 0.21))));\n            shape4 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.75 * (cos(u_time * float(i) * 0.21)), 0.75 * (sin(u_time * float(i) * 0.21))));\n        }\n        \n        // color += shape1;\n        color += shape1 * shape3;\n        color += shape2 * shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        // newvUv = Rot(newvUv, u_time * .25);\n        newvUv = newvUv * 3. - 1.5;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=1; i<=15; i++)\n        {\n            shape1 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.25 * (sin(u_time * float(i) * 0.1)), 0.25 * (cos(u_time * float(i) * 0.1))));\n            shape2 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.15 + (sin(u_time * float(i) * 0.1)), 0.15 + (cos(u_time * float(i) * 0.1))));\n            shape3 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.15 + (sin(u_time * float(i) * 0.1)), -0.15 + (cos(u_time * float(i) * 0.1))));\n            shape4 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(-0.15 + (sin(u_time * float(i) * 0.1)), 0.15 + (cos(u_time * float(i) * 0.1))));\n        }\n        \n        // color += shape1;\n        color += shape1; \n        color += shape3;\n        color += shape2;\n        color += shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        \n        newvUv = newvUv * 2. - 0.5;\n        newvUv.y -= 0.7;\n        newvUv = Rot(newvUv, PI * 0.25);\n        float k = 1. + 20. * (0.25 - 0.125);\n        vec2 uv2 = newvUv;\n        \n        uv2.x += 1.;\n        uv2.y -0.2;\n        uv2 = Rot(uv2, PI * 0.5);\n        \n        for (int i=1; i<=15; i++)\n        {\n            shape1 += sdSegment(vec2(newvUv.x + sin(float(i) * u_time * 0.1), newvUv.y + cos(float(i) * u_time * 0.1)), vec2(0. + sin(u_time * float(i) * (0.1))), vec2(0.0 + cos(u_time * float(i) * 0.1)));\n            \n        }\n        \n        // color += shape1;\n        color += shape1; \n        color += shape3;\n        color += shape2;\n        color += shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        vec2 uv2 = newvUv;\n        newvUv = Rot(newvUv, PI * 0.5);\n        uv2 = Rot(uv2, PI *0.5);\n        newvUv = newvUv * 2. - 0.5;\n        newvUv.y -= 0.7;\n        newvUv = Rot(newvUv, PI * 0.25);\n        uv2 = uv2 * 2. - 0.5;\n        uv2.y -= 0.7;\n        \n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        \n        for (int i=1; i<=15; i++)\n        {\n            uv2 = Rot(uv2, PI * 0.25 + u_time * 0.1);\n            shape1 += sdSegment(vec2(newvUv.x + cos(float(i) * u_time * 0.01), newvUv.y + sin(float(i) * u_time * 0.1)), vec2(0. + cos(u_time * float(i) * (0.1))), vec2(0.0 + sin(u_time * float(i) * 0.1)));\n            shape2 += sdSegment(vec2(uv2.x + cos(float(i) * u_time * 0.01), uv2.y + sin(float(i) * u_time * 0.1)), vec2(0. + cos(u_time * float(i) * (0.1))), vec2(0.0 + sin(u_time * float(i) * 0.0)));\n            \n        }\n        \n        // color += shape1;\n        color += shape1; \n        color += shape3;\n        color += shape2;\n        color += shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=15; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += sdSegment(vec2(uv2.x + float(i) /10. - 0.25, uv2.y + float(i) /10. - 0.25), vec2(0.0), vec2(0.25));\n            \n        }\n        \n        color += shape1; \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.25;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=15; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += sdSegment(vec2(uv2.x + (float(i) * sin(u_time) /10. ) , uv2.y + (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            shape2 += sdSegment(vec2(uv2.x - (float(i) * sin(u_time) /10. ) , uv2.y - (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            shape3 += sdSegment(vec2(uv2.x + (float(i) * sin(u_time) /10. ) , uv2.y - (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            shape4 += sdSegment(vec2(uv2.x - (float(i) * sin(u_time) /10. ) , uv2.y + (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=0; i<=20; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += circle(vec2(uv2.x + float(i) / 10. + sin(u_time*(float(i)/15.)), uv2.y - float(i) / 150. + cos(u_time*(float(i)/10.))), 0.25);\n            shape2 += cirOutline(vec2(uv2.x + float(i) / 10. + sin(u_time*(float(i)/15.)), uv2.y - float(i) / 150. + cos(u_time*(float(i)/10.))), 0.25);\n            \n        }\n        \n        color += shape1; \n        color *= shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += circle(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * cos(u_time)), 0.005);\n            shape2 += circle(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * sin(u_time)), 0.005);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, u_time * 0.0000005 * float(i));\n            shape1 += circle(vec2(uv2.x + sin(u_time*(float(i)/25.)) - sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) + cos(u_time)), 0.005);\n            shape2 += circle(vec2(uv2.x + cos(u_time*(float(i)/25.)) - cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) + sin(u_time)), 0.005);\n            shape3 += circle(vec2(uv2.x + sin(u_time*(float(i)/12.5)) + sin(u_time), uv2.y - cos(u_time*(float(i)/12.5)) - cos(u_time)), 0.005);\n            shape4 += circle(vec2(uv2.x - cos(u_time*(float(i)/12.5)) + cos(u_time), uv2.y + sin(u_time*(float(i)/12.5)) - sin(u_time)), 0.005);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=45; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.0000005 * float(i));\n            shape1 += circle(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) + sin(u_time)), 0.005);\n            shape2 += circle(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) + sin(u_time)), 0.005);\n            shape3 += circle(vec2(uv2.x + sin(u_time*(float(i)/12.5)) * cos(u_time), uv2.y - cos(u_time*(float(i)/12.5)) - cos(u_time)), 0.005);\n            shape4 += circle(vec2(uv2.x + cos(u_time*(float(i)/12.5)) * sin(u_time), uv2.y + sin(u_time*(float(i)/12.5)) - sin(u_time)), 0.005);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=50; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.0000005 * float(i));\n            shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape2 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape3 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * cos(u_time)), 0.25, 0.25);\n            shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * sin(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=40; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, ((u_time * 0.5) * float(i/25))/200825.);\n            // shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape2 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5)), uv2.y + sin(u_time*(float(i)/5.)) * abs(sin(u_time * 0.5))), 0.0525, 0.0525);\n            shape3 += rectOutline(vec2(uv2.x + (sin(u_time*(float(i)/5.))) * (sin(u_time * 0.5)), uv2.y + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5))), 0.0525, 0.0525);\n            // shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * cos(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QE=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=40; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, ((u_time * 0.5) * float(i/25))/200825.);\n            // shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape2 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/5.)) + abs(cos(u_time * 0.5)), uv2.y + sin(u_time*(float(i)/5.)) * abs(sin(u_time * 0.5))), 0.0525, 0.0525);\n            shape3 += rectOutline(vec2(uv2.x + (sin(u_time*(float(i)/5.))) - (sin(u_time * 0.5)), uv2.y + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5))), 0.0525, 0.0525);\n            // shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * cos(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QE,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $E=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=40; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, ((u_time * 0.5) * float(i/25))/200825.);\n            shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) + sin(u_time), uv2.y + cos(u_time*(float(i)/15.)) - cos(u_time * float(i/10))), 0.25, 0.25);\n            // shape2 += rectOutline(vec2(uv2.x / cos(u_time*(float(i)/5.)) + abs(cos(u_time * 0.5)), uv2.y + sin(u_time*(float(i)/5.)) * abs(sin(u_time * 0.5))), 0.0525, 0.0525);\n            // shape3 += rectOutline(vec2(uv2.x * (sin(u_time*(float(i)/5.))) - (sin(u_time * 0.5)), uv2.y + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5))), 0.0525, 0.0525);\n            // shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * cos(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$E,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=0; i<=10; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            \n            shape1 += circle(vec2(uv2.x + sin(float(i) + u_time) * 2. , uv2.y), 0.0525);\n            shape2 += circle(vec2(uv2.x  , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=5; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.15));\n            shape1 += circle(vec2(uv2.x + cos(float(i) + u_time) * 2. , uv2.y), 0.0525);\n            shape2 += circle(vec2(uv2.x  , uv2.y - sin(float(i) + u_time) * 2.), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=5; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, sin(u_time * 0.15 * (float(i))));\n            shape1 += circle(vec2(uv2.x + cos(float(i) + u_time) - float(i)/10. , uv2.y + sin(float(i) + u_time) + float(i)/10.), 0.0525);\n            shape2 += circle(vec2(uv2.x + cos(float(i) + u_time) + float(i)/10.  , uv2.y - sin(float(i) + u_time) - float(i)/10.), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) + u_time) + float(i)/10. , uv2.y + cos(float(i) + u_time) - float(i)/10.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) + u_time) + float(i)/10. , uv2.y + cos(float(i) + u_time) - float(i)/10.), 0.0525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=5; i<=150; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.0125 * (float(i))));\n            shape1 += circle(vec2(uv2.x + cos(float(i) + u_time) - float(i)/50. , uv2.y ), 0.0525);\n            shape2 += circle(vec2(uv2.x + cos(float(i) + u_time) + float(i)/50. , uv2.y ), 0.0525);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=0; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, sin(u_time * 0.0125));\n            shape1 += cirOutline(vec2(uv2.x + sin(float(i) * u_time/12.) - float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10.), 0.0525);\n            shape2 += cirOutline(vec2(uv2.x - sin(float(i) * u_time/12.) + float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10. ), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) * u_time/12.) - float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) * u_time/12.) + float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10. ), 0.0525);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color -= shape3; \n        color -= shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=0; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.25));\n            shape1 += cirOutline(vec2(uv2.x + (float(i)/4.) + cos(u_time * 0.5 + (float(i))), uv2.y+ sin(float(i)/4.) + sin(u_time * 0.5 + (float(i)))), 0.0525);\n            shape2 += cirOutline(vec2(uv2.x + (float(i)/4.) + cos(u_time + (float(i)) ), uv2.y+ sin(float(i)/4.) + sin(u_time * 0.5 + (float(i)))), 0.0525);\n            shape3 += cirOutline(vec2(uv2.x + (float(i)/4.) + sin(u_time * 0.5 + (float(i))), uv2.y+ sin(float(i)/4.) + cos(u_time)), 0.0525);\n            shape4 += cirOutline(vec2(uv2.x + (float(i)/4.) + sin(u_time + (float(i))), uv2.y+ sin(float(i)/4.) + cos(u_time)), 0.0525);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=0; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.25));\n            float y = sin(u_time + uv2.x + (float(i) * sin(u_time + 25.) * 0.1));\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)), uv2.y), y, 0.05 );\n        }\n        \n        color += shape1; \n        color += shape2;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=0; i<=20; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.125) + 2.5);\n            float y = abs(sin(u_time + uv2.x + (float(i) * cos(u_time + 025.) * 0.00161)) + 1.5);\n            float x = abs(cos(u_time + uv2.x + (float(i) * sin(u_time + 025.) * 0.00161)) + 1.5);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)), uv2.y), x / y, 0.0375 );\n        }\n        \n        color += shape1; \n        color += shape2;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=0; i<=20; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.125) + 2.5);\n            float y = abs(sin(u_time + uv2.x + (float(i) * cos(u_time + 025.) * 0.00161)) + .05);\n            float x = abs(cos(u_time + uv2.x + (float(i) * sin(u_time + 025.) * 0.00161)) + .05);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i) * u_time), uv2.y), x, 0.04575 );\n        }\n        \n        color += shape1; \n        color += shape2;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=8; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.25) + 10.5);\n            float y = (sin(u_time + uv2.x + (float(i) * cos(u_time * 25.) * 0.00161)) + .05);\n            float x = (cos(u_time + uv2.x + (float(i) * sin(u_time * 25.) * 0.00161)) + .05);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), x, 0.04575 );\n        }\n\n        float z = circle(uv2, 10.5);\n        \n        color += shape1; \n        color += shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _I=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=8; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, cos(u_time * 0.025) + 10.5 / 1.);\n            float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05);\n            float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), x * y, 0.04575 );\n        }\n\n        float z = circle(uv2, 10.5);\n        \n        color += shape1; \n        color += shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_I,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=5; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, cos(u_time * 0.025) + 10.5 / 1.);\n            float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            float z = (cos(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            float a = (cos(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), y * x, 0.075 );\n            shape2 += plot(vec2(uv2.x + cos(u_time + float(i)/100. * u_time), uv2.y), z * a, 0.075 );\n        }\n\n        float z = circle(uv2, 10.5);\n        \n        color += shape1; \n        color *= shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *15. - 15.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=10; i++)\n        {\n            for(int j=1; j<=10; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), sin(u_time + 0.075 * float(j + i))*4.);\n                float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(1.));\n                \n                shape1 += line;\n            }\n            // uv2 = uv2 * 1.1 - 0.1;\n            \n            // float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // float z = (cos(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float a = (cos(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), y * x, 0.075 );\n            // shape2 += plot(vec2(uv2.x + cos(u_time + float(i)/100. * u_time), uv2.y), z * a, 0.075 );\n        }\n\n        float z = circle(uv3, 0.75);\n        \n        color += shape1; \n        // color *= shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *25. - 25.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=20; i++)\n        {\n            for(int j=1; j<=20; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), sin(u_time + 0.075 * float(j * i)/4.)*4.);\n                float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                \n                shape1 += line;\n            }\n            // uv2 = uv2 * 1.1 - 0.1;\n            \n            // float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // float z = (cos(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float a = (cos(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), y * x, 0.075 );\n            // shape2 += plot(vec2(uv2.x + cos(u_time + float(i)/100. * u_time), uv2.y), z * a, 0.075 );\n        }\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color *= shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *25. - 24.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=15; i++)\n        {\n            for(int j=1; j<=15; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), cos(u_time + 0.08 * float(j * i)/5.) + 0.53*1.9);\n                float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                float r = rect(vec2(newUv), 0.45, 3.);\n                shape1 += r;\n            }\n        }\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color *= shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *15. - 15.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=15; i++)\n        {\n            for(int j=1; j<=15; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), cos(u_time + 0.08 * float(j * i)/5.) + 0.53*1.9);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                shape1 += c;\n            }\n        }\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color *= shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - 0.5;\n        // uv2.x -= 1.;\n        vec2 uv3 = uv2;\n        uv2 = Rot(uv2, u_time * 0.75);\n        uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<=5; i++)\n        {\n            for(int j=1; j<=15; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 0.085, newUv.y + float(i) * .085), (u_time + 0.08 * float(j * i)/5.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                shape1 += rectOutline(vec2(newUv), 0.5, 0.5);\n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *1.5 - 0.5;\n        uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<=13; i++)\n        {\n            for(int j=1; j<=10; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var II=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<=5; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, (u_time * float(i * j) * 0.025)/11. + 100.);\n                shape1 += circle(vec2(uv2.x + sin(float(i) + u_time)  , uv2.y), 0.00525);\n                shape2 += circle(vec2(uv2.x  , uv2.y + sin(float(i) + u_time)), 0.00525);\n                shape3 += circle(vec2(uv2.x + sin(float(i) + u_time), uv2.y + sin(float(i) + u_time)), 0.00525);\n                shape4 += circle(vec2(uv2.x - sin(float(i) + u_time), uv2.y + sin(float(i) + u_time)), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:II,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<7; i++)\n        {\n            for(int j=1; j<=7; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, sin(u_time * 0.000115));\n                shape1 += circle(vec2(uv2.x + sin(float(i * j) + (u_time * 0.5))  , uv2.y), 0.00525);\n                shape2 += circle(vec2(uv2.x  , uv2.y + cos(float(i - j) + (u_time * 0.5))), 0.00525);\n                shape3 += circle(vec2(uv2.x + sin(float(j -i  ) + (u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n                shape4 += circle(vec2(uv2.x - sin(float(j * i) +(u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<15; i++)\n        {\n            for(int j=1; j<=10; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, sin(u_time * 0.00115 * float(i)));\n                shape1 += circle(vec2(uv2.x + sin(float(i - j)/30. + (u_time * 0.25)) * 2. , uv2.y), 0.00525);\n                shape2 += circle(vec2(uv2.x  , uv2.y + cos(float(i - j) + (u_time * 0.5))), 0.00525);\n                shape3 += circle(vec2(uv2.x + sin(float(j -i  ) + (u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n                shape4 += circle(vec2(uv2.x - sin(float(j * i) +(u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<15; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, (sin(u_time * 0.0525)));\n                // shape1 += circle(vec2(uv2.x + sin(float(i * j)/30. + (u_time * 0.25)) * 1. , uv2.y), 0.00525);\n                shape1 += sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.) * sin(float(i + j)));\n                // shape2 += circle(vec2(uv2.x  , uv2.y + cos(float(i - j) + (u_time * 0.5))), 0.00525);\n                // shape3 += circle(vec2(uv2.x + sin(float(j ) + (u_time * 0.5)), uv2.y + cos(float(j) + (u_time * 0.5))), 0.00525);\n                // shape4 += circle(vec2(uv2.x - sin(float(j) +(u_time * 0.5)), uv2.y + cos(float(j ) + (u_time * 0.5))), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<15; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, ((u_time * 0.01525) + 10.));\n                uv2 = noise(uv2) * 0.08 + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y ), vec2(0.0), vec2(2.));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - .5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=2; i<5; i++)\n        {\n            for(int j=2; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, (sin(u_time * 1.525)/5. - 10.2));\n                // uv2 = (noise(uv2) * 0.15) + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0 + noise(uv2) * (cos(u_time)/1. + 2.) * 0.2, 0.0 + noise(uv2) * (sin(u_time)/1. + 2.)), vec2(0.0 + noise(uv2) * (cos(u_time)/1. + 2.), 0.0 + noise(uv2) * (sin(u_time)/1. + 2.)));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        // float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - .5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<14; i++)\n        {\n            for(int j=1; j<=4; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, (sin(u_time * .175)/4. + 11.0));\n                uv2 = (noise(uv2) * 0.15) + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.01 * float(i + j), 0.01 * float(i +j)));\n                shape2 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.015 * float(j + i), 0.015 * float(j + i)));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        // float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QI=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - .5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<5; i++)\n        {\n            for(int j=1; j<=4; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, (sin(u_time * .175)/6. + 11.0));\n                uv2 = (noise(uv2) * 0.15) + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.05 * float(i) + cos(u_time), 0.05 / float(i) + cos(u_time)));\n                shape2 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.05 * float(i) + sin(u_time), 0.05 / float(i) + sin(u_time)));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 2.);\n        \n        color += shape1; \n        color += shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QI,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $I=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    float semi (vec2 p, float n)\n    {\n        float c = circle(vec2(p), n);\n        float c2 = circle(vec2(p), n + n * 0.05);\n        float r = rect(vec2(p.x, p.y- n * 0.45), n - n * 0.1, n + n * 0.5);\n        float r2= rect(vec2(p.x, p.y -0.2), n, n * 0.3);\n        float shape = r * c * 2.;\n        float shape2 = r2 * c2* 2.;\n        return shape;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        uv2 = uv2 *2. - .5;\n\n        for(int i = 1; i < 20; i++)\n        {\n            uv2 = Rot(uv2, ((u_time * .175)/1. + 1.0));\n            vec2 newUv = uv2;\n            shape1 += semi(newUv, float(i)/10. + 0.5);\n            shape2 -= semi(newUv, float(i)/10. + 0.45);\n        }\n        \n        \n        color += shape1; \n        color += shape2;\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$I,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    float semi (vec2 p, float n)\n    {\n        float c = circle(vec2(p), n);\n        float c2 = circle(vec2(p), n + n * 0.05);\n        float r = rect(vec2(p.x, p.y- n * 0.45), n - n * 0.1, n + n * 0.5);\n        float r2= rect(vec2(p.x, p.y -0.2), n, n * 0.3);\n        float shape = r * c * 2.;\n        float shape2 = r2 * c2* 2.;\n        return shape;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        uv2 = uv2 *2. - .5;\n\n        for(int i = 0; i < 20; i++)\n        {\n            uv2 = Rot(uv2, ((u_time * .275)));\n            vec2 newUv = uv2;\n            float n = noise(newUv) + u_time;\n            \n            shape1 += semi(newUv, float(i)/5. + 0.5);\n            shape2 -= semi(newUv, float(i)/5. + 0.45);\n            shape3 += semi(newUv, float(i)/10. + 0.52);\n            shape4 -= semi(newUv, float(i)/10. + 0.45);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color *= shape3 * 1.5; \n        color += shape4;\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    float semi (vec2 p, float n)\n    {\n        float c = circle(vec2(p), n);\n        float c2 = circle(vec2(p), n + n * 0.05);\n        float r = rect(vec2(p.x, p.y- n * 0.45), n - n * 0.1, n + n * 0.5);\n        float r2= rect(vec2(p.x, p.y -0.2), n, n * 0.3);\n        float shape = r * c * 2.;\n        float shape2 = r2 * c2* 2.;\n        return shape;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        uv2 = uv2 *3. - 1.;\n\n        for(int i = 1; i < 80; i++)\n        {\n            uv2 = Rot(uv2, ((u_time * .275 )));\n            // uv2 *= 2. - 1.;\n            vec2 newUv = uv2;\n            // float n = noise(newUv) * u_time;\n            // newUv += n * 0.0005;\n            shape1 += semi(newUv, float(i)/5. + 0.5);\n            shape2 -= semi(newUv, float(i)/5. + 0.45);\n            shape3 += semi(newUv, float(i)/10. + 0.52);\n            shape4 -= semi(newUv, float(i)/10. + 0.45);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color *= shape3 * 2.5; \n        color += shape4;\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 4.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 1.;\n        float seg;\n        float shape;\n\n        for(int y = -2; y <=2; y++){\n            for(int x = -2; x <=2; x++){\n                vec2 n = vec2(float(x), float(y));\n                vec2 p = random2(iUv + n);\n                p = 0.5 + 0.5 * sin(u_time + TWO_PI * p);\n                vec2 dif = n + p - fUv;\n                float dist = length(dif);\n                m_dist = min(m_dist, dist);\n                shape = min(m_dist, dist);\n                // m_dist = smoothstep(0.05, 0.051, m_dist);\n                \n                // seg = sdSegment(fUv, dif, dif * dis);\n            }\n        }\n        color += seg;\n        color += shape;\n        // color += smoothstep(0.9, 0.11, shape);\n        // color += 1. - m_dist;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n    \n        vec2 mg,mr;\n        float md=1.;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.75)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=0.5;\n        for(int i=-5;i<=5;i++){\n            for(int j=-5;j<=5;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.75)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.001){\n                    md=min(md,dot(.25*(mr+r),normalize(r-mr)));\n                    \n                }\n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 5.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float seg;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        float dd = length(s.yz);\n\n        color+=mix(vec3(1.), color, smoothstep(0.002, 0.05, dd * s.x));\n        // color += 1. - smoothstep(0.01, 0.012, s.x);\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n    \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 10.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float seg;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        float dd = length(s.yz) + 0.;\n\n        color+=mix(vec3(1.), color, smoothstep(0.09, 0.061, dd * s.x));\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float seg;\n        vec2 uv2 = vUv;\n\n        uv2 *= 5.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/4., uv2.y  + cos(u_time)/4.));\n        float dd = length(s.yz) + 0.;\n        seg = sdSegment(fUv, vec2(s2.yz), vec2(s.yz));\n        color+=mix(vec3(1.), color, smoothstep(0.01, 0.021, s.x));\n        color+= mix(vec3(1.), color,smoothstep(0.01, 0.021, s2.x));\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n        // color += seg;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float seg;\n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.1);\n        uv2 *= 10.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        float dd = length(s.yz) + 0.;\n        seg = sdSegment(fUv, vec2(s2.yz), vec2(s.yz));\n        color.r+= 1. - smoothstep(0.01 * 2., 0.021 * 2., s.x);\n        color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 4., s2.x);\n        color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 4., s3.x);\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n        // color += seg;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float seg;\n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.1);\n        uv2 *= 5.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        float dd = length(s.yz) + 0.;\n        seg = sdSegment(fUv, vec2(s2.yz), vec2(s.yz));\n        color.r+= 1. - smoothstep(0.01 * 2., 0.021 * 2.,  dd);\n        color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 4., dd);\n        color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 4., s3.x / dd);\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n        // color += seg;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 4.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 1.;\n        float seg;\n        float shape;\n\n        for(int y = -2; y <=2; y++){\n            for(int x = -2; x <=2; x++){\n                vec2 n = vec2(float(x), float(y));\n                vec2 p = random2(iUv + n);\n                p = 0.25 + 0.25 * sin(u_time + TWO_PI * p );\n                vec2 dif = n + p - fUv;\n                float dist = length(dif);\n                m_dist = min(m_dist, dist);\n                shape = min(m_dist, dist);\n                // m_dist = smoothstep(0.05, 0.051, m_dist);\n                \n                seg = sdSegment(p, vec2(m_dist /dist), vec2(m_dist));\n                color += seg;\n            }\n        }\n        \n        // color += shape;\n        // color += smoothstep(0.9, 0.11, shape);\n        // color += 1. - m_dist;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    #define S(a, b, t) smoothstep(a, b, t)\n\n    float DistLine(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p - a;\n        vec2 ba = b - a;\n        float t = clamp(dot(pa, ba)/ dot(ba, ba), 0., 1.);\n        return length(pa - ba * t);\n    }\n\n    float N21(vec2 p)\n    {\n        p = fract(p * vec2(445.23, 789.92));\n        p += dot(p, p + 54.23 );\n        return fract(p.x * p.y);\n    }\n\n    vec2 N22(vec2 p)\n    {\n        float n = N21(p);\n        return vec2(n, N21(p + n));\n    }\n\n    vec2 GetPos(vec2 id, vec2 offset)\n    {\n        vec2 n = N22(id+offset) * u_time;\n        // float x = sin(u_time* n.x);\n        // float y = cos(u_time*n.y);\n        return offset + sin(n) * .4;\n    }\n\n    float Line(vec2 p, vec2 a, vec2 b)\n    {\n        float d = DistLine(p, a, b);\n        float m = S(.03, 0.01, d);\n        m *= S(1.2, .8, length(a -b));\n        return m;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n        \n        // float d = DistLine(uv2, vec2(0.), vec2(1.));\n        float m = 0.;\n        \n        uv2 *= 8.;\n        vec2 gv = fract(uv2) - 0.5;\n        vec2 id = floor(uv2);\n\n        // vec2 p = N22(id) - 0.5;\n\n        vec2 p[9];\n\n        // vec2 p = GetPos(id);\n        // float d = length(gv - p);\n        // m = S(0.1, 0.05, d);\n\n        int i = 0;\n        for(float y=-1.; y <=1.; y++)\n        {\n            for(float x=-1.; x<=1.; x++)\n            {\n                p[i++]= GetPos(id, vec2(x, y));\n            }\n        }\n\n        float t = u_time * 10.;\n\n        for(int i=0; i < 9; i++)\n        {\n            m += Line(gv, p[4], p[i]);\n            \n            vec2 j = (p[i] - gv) * 40.;\n            float sparkle = 1. / dot(j, j);\n\n            m += sparkle * (sin(t+p[i].x * 10.) * .5 + .5);\n        }\n        m += Line(gv, p[1], p[3]);\n        m += Line(gv, p[1], p[5]);\n        m += Line(gv, p[7], p[3]);\n        m += Line(gv, p[7], p[5]);\n\n        vec3 col = vec3(m);\n        // col.rg = gv;\n\n        // color.rg = col.rg;\n\n        // color += m;\n        // if(gv.x > .48 || gv.y > .48) col = vec3(1., 0, 0);\n        color += col;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _L=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    #define S(a, b, t) smoothstep(a, b, t)\n\n    float DistLine(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p - a;\n        vec2 ba = b - a;\n        float t = clamp(dot(pa, ba)/ dot(ba, ba), 0., 1.);\n        return length(pa - ba * t);\n    }\n\n    float N21(vec2 p)\n    {\n        p = fract(p * vec2(445.23, 789.92));\n        p += dot(p, p + 54.23 );\n        return fract(p.x * p.y);\n    }\n\n    vec2 N22(vec2 p)\n    {\n        float n = N21(p);\n        return vec2(n, N21(p + n));\n    }\n\n    vec2 GetPos(vec2 id, vec2 offset)\n    {\n        vec2 n = N22(id+offset) * u_time;\n        // float x = sin(u_time* n.x);\n        // float y = cos(u_time*n.y);\n        return offset + sin(n) * .4;\n    }\n\n    float Line(vec2 p, vec2 a, vec2 b)\n    {\n        float d = DistLine(p, a, b);\n        float m = S(.03, 0.01, d);\n        float d2 = length(a - b);\n        m *= S(1.2, .8, d2) * .5 + S(.05, .03, abs(d2-.75));\n        return m;\n    }\n\n    float Layer(vec2 uv2)\n    {\n        float m;\n        vec2 gv = fract(uv2) - 0.5;\n        vec2 id = floor(uv2);\n\n        // vec2 p = N22(id) - 0.5;\n\n        vec2 p[9];\n\n        // vec2 p = GetPos(id);\n        // float d = length(gv - p);\n        // m = S(0.1, 0.05, d);\n\n        int i = 0;\n        for(float y=-1.; y <=1.; y++)\n        {\n            for(float x=-1.; x<=1.; x++)\n            {\n                p[i++]= GetPos(id, vec2(x, y));\n            }\n        }\n\n        float t = u_time * 10.;\n\n        for(int i=0; i < 9; i++)\n        {\n            m += Line(gv, p[4], p[i]);\n            \n            vec2 j = (p[i] - gv) * 40.;\n            float sparkle = 1. / dot(j, j);\n\n            m += sparkle * (sin(t+fract(p[i].x) * 10.) * .5 + .5);\n        }\n        m += Line(gv, p[1], p[3]);\n        m += Line(gv, p[1], p[5]);\n        m += Line(gv, p[7], p[3]);\n        m += Line(gv, p[7], p[5]);\n\n        return m;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.1);\n        uv2 -= 0.5;\n        \n        // float d = DistLine(uv2, vec2(0.), vec2(1.));\n        float m = 0.;\n        float t = u_time * 0.05;\n        \n        for(float i =0.; i <1.; i+= 1./4.)\n        {\n            float z = fract(i + t);//reuse layers\n            float size = mix(20., .1, z);\n            float fade = S(0., 0.5, z) * S(1., 0.8, z);\n            m += Layer(uv2 * size + i * 20.) * fade;\n        }\n        \n\n        vec3 base = sin(t * vec3(.345, .456, .678)) * .4 + .6;\n        vec3 col = m * base;\n        col += uv2.y * base * 0.2;\n        col -= uv2.x  * base * 0.2;\n        color += col;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_L,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float GetDist(vec3 p)\n    {\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p.y;\n\n        float d = min(sphereDist, planeDist);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(0, 5, 6);\n        lightPos.xz += vec2(sin(u_time), cos(u_time)) * 2.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 1, 0);//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p.y;\n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, .5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(-3, .75, 6), vec3(.5));\n        float cyld = sdCylinder(p, vec3(0, .3, 3), vec3(3, 1, 6), 0.2);\n\n        // float d = min(sphereDist, planeDist);\n        float d = min(cd, planeDist);\n        d = min(d, td);\n        d = min(d, bd);\n        d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(0, 5, 6);\n        lightPos.xz += vec2(sin(u_time), cos(u_time)) * 2.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(sin(u_time), 3, -2.-cos(u_time));//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ML(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p.y;\n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0, 2.75, 6.+ sin(u_time) * 2.), vec3(.5));\n        float bd2 = sdBox(p - vec3(0, 2.75+ cos(u_time * 2.) * 2., 6.), vec3(.5));\n        float bd3 = sdBox(p - vec3(0. + cos(u_time * 2.) * 2., 0.75, 6.), vec3(.5));\n        float cyld = sdCylinder(p, vec3(0, .3, 3), vec3(3, 1, 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd, d);\n        d = min(bd3, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 5, -2.-cos(u_time));//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 2.75, 6.+ sin(u_time) * 2.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(0, 2.75+ cos(u_time * 2.) * 2., 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3(0. + cos(u_time * 2.) * 2., 0.75, 6.), vec3(.5));\n        float cyld = sdCylinder(p, vec3(0, .3, 3), vec3(3, 1, 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd, d);\n        d = min(bd3, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5, -6.);//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 2.75 + sin(u_time), 6.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(-2. + sin(u_time), 2.75, 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3(2. + sin(u_time), 2.75, 6.), vec3(.5));\n        float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(cyld, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5., -6.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 4.75 - sin(u_time), 6.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(-2. + sin(u_time), 2.75, 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3(2. - sin(u_time), 2.75, 6.), vec3(.5));\n        float bd4 = sdBox(p2 - vec3(0. , 1.75 + sin(u_time), 6.), vec3(.5));\n        float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(bd4, d);\n        // d = min(cyld, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5., -6.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 4.75 - sin(u_time), 6.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float shape;\n        for(int i =0; i<= 5; i++)\n        {\n            // shape = sdBox(p2 - vec3(0., 0.+ (float(i)), 5.), vec3(.5));\n            // float d = min(shape, planeDist);\n            float d = min(sdBox(p2 - vec3(0. , 0. + 2., 6.), vec3(.5)), planeDist);\n            // d = min(bd, d);\n            d = min(bd2, d);\n            d = min(bd3, d);\n            d = min(bd4, d);\n        // d = min(cyld, d);\n        // d = min(d, cyld);\n            return d;\n            // return d;\n        }\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5., -6.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0, 3. , 6.), vec3(.5));\n        float bd2 = sdBox2(p - vec3(0, 4.5 , 6.), vec3(.5));\n        float bd3 = sdBox3(p - vec3(0, 1.5 , 6.), vec3(.5));\n        float bd4 = sdBox3(p - vec3(-1.5, 3. , 6.), vec3(.5));\n        float bd5 = sdBox(p - vec3(-1.5, 4.5 , 6.), vec3(.5));\n        float bd6 = sdBox2(p - vec3(-1.5, 1.5 , 6.), vec3(.5));\n        float bd7 = sdBox2(p - vec3(1.5, 3. , 6.), vec3(.5));\n        float bd8 = sdBox3(p - vec3(1.5, 4.5 , 6.), vec3(.5));\n        float bd9 = sdBox(p - vec3(1.5, 1.5 , 6.), vec3(.5));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(bd, planeDist);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(bd4, d);\n        d = min(bd5, d);\n        d = min(bd6, d);\n        d = min(bd7, d);\n        d = min(bd8, d);\n        d = min(bd9, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0. + sin(u_time), 3. + cos(u_time), 6.), vec3(.5));\n        float bd2 = sdBox2(p - vec3(0. + cos(u_time), 4.5 + cos(u_time) , 6.), vec3(.5));\n        float bd3 = sdBox3(p - vec3(0. + sin(u_time), 1.5 + cos(u_time), 6.), vec3(.5));\n        float bd4 = sdBox3(p - vec3(-1.5 + sin(u_time), 3. + cos(u_time) , 6.), vec3(.5));\n        float bd5 = sdBox(p - vec3(-1.5, 4.5 , 6.), vec3(.5));\n        float bd6 = sdBox2(p - vec3(-1.5, 1.5 , 6.), vec3(.5));\n        float bd7 = sdBox2(p - vec3(1.5 + sin(u_time), 3. + sin(u_time) , 6.), vec3(.5));\n        float bd8 = sdBox3(p - vec3(1.5, 4.5 , 6.), vec3(.5));\n        float bd9 = sdBox(p - vec3(1.5, 1.5 , 6.), vec3(.5));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(bd, planeDist);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(bd4, d);\n        // d = min(bd5, d);\n        // d = min(bd6, d);\n        d = min(bd7, d);\n        // d = min(bd8, d);\n        // d = min(bd9, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus2(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 3., 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0., 3., 6.), vec3(.5));\n        float td2 = sdTorus2(p-vec3(0, 3., 6), vec2(.4, 0.2));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(td, planeDist);\n\n        d = min(td2, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus2(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus3(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateZ(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus4(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time *2.));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 3., 6), vec2(1., 0.2));\n        float bd = sdBox(p - vec3(0., 3., 6.), vec3(.5));\n        float td2 = sdTorus2(p-vec3(0, 3., 6), vec2(.4, 0.1));\n        float td3 = sdTorus3(p-vec3(0, 3., 6), vec2(1.5, 0.1));\n        float td4 = sdTorus4(p-vec3(0, 3., 6), vec2(2.0, 0.2));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(td, planeDist);\n\n        d = min(td2, d);\n        d = min(td3, d);\n        d = min(td4, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus2(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus3(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateZ(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus4(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time *2.));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n        float n = cnoise(p + u_time) * 0.15;\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 3., 6) + n, vec2(1., 0.2));\n        float bd = sdBox(p - vec3(0., 3., 6.) + n, vec3(.5));\n        float td2 = sdTorus2(p-vec3(0, 3., 6), vec2(.4, 0.1));\n        float td3 = sdTorus3(p-vec3(0, 3., 6), vec2(1.5, 0.1));\n        float td4 = sdTorus4(p-vec3(0, 3., 6) + n, vec2(2.0, 0.2));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(bd, planeDist);\n\n        // d = min(td2, d);\n        // d = min(td3, d);\n        d = min(td4, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        float d = max(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 unionSDF(vec4 a, vec4 b) {\n        float d = min(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        float d = max(a.w, -b.w);\n        return d == a.w ? a : vec4(b.rgb,-b.w);\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,1.05));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0);\n     \n    csg0 = differenceSDF(b0,s0); // Intersect box with sphere creating a CSG object.\n\n    \n     \n    // csg1 = unionSDF(c0,c1); // Unite cylinders\n    // csg1 = unionSDF(csg1,c2);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg0, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(5.*sin(u_time),5.,5.*cos(u_time));// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,2.5,-3.5); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        float d = max(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 unionSDF(vec4 a, vec4 b) {\n        float d = min(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        float d = max(a.w, -b.w);\n        return d == a.w ? a : vec4(b.rgb,-b.w);\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.85,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .2);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .2);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,1.05));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0);\n     \n    csg0 = differenceSDF(b0, b1); // Intersect box with sphere creating a CSG object.\n\n    \n     \n    csg1 = differenceSDF(csg0,b2);\n\n    // csg1 = unionSDF(csg1,c2);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg1, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,5.,0.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,2.5,-3.5); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QL=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.85,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .2);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .2);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,0.5,1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, s0, 0.15 + sin(u_time * 1.5)/8.);\n     \n    csg2 = smoothDifferenceSDF(csg1, s1, 0.15 + cos(u_time * 1.5)/8.);\n\n    csg3 = smoothDifferenceSDF(csg2, b2, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,5.,0.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QL,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $L=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(1,0,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .4);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,0.5,1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0);\n     \n    csg0 = smoothUnionSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s0, 0.25);\n     \n    // csg2 = smoothDifferenceSDF(csg1, s1, 0.15 + cos(u_time * 1.5)/8.);\n\n    csg3 = smoothUnionSDF(csg1, b2, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$L,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(1,0,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .4);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2. - sin(u_time),1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,2. + sin(u_time),1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s1, 0.25);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.25);\n\n    csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg5, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(1,0,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.0175,1.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2. - sin(u_time),1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0. + sin(u_time),2. ,1.);\n    s1p=p-s1p;\n    s1p.xz *=Rotate(0.1);\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, p0, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s1, 0.25);\n     \n    // csg2 = smoothUnionSDF(csg1, s1, 0.25);\n\n    // csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg1, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.0175,1.75,1.5); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + sin(u_time));\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(2.,2. - sin(u_time),2.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0. + sin(u_time) * 2.,2. ,.5);\n    s1p=p-s1p;\n    s1p.xz *=Rotate(0.1);\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, p0, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s1, 0.25);\n     \n    // csg2 = smoothUnionSDF(csg1, s1, 0.25);\n\n    // csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg1, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(2.,2. - sin(u_time),2.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, p0, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b2, 0.25);\n     \n    csg2 = smoothDifferenceSDF(csg1, b1, 0.25);\n\n    // csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg0, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(1.25,.5,.75);\n    vec3 b3p = vec3(0., 1.5, 1.);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2. - sin(u_time),0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothUnionSDF(b1, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b2, 0.125);\n     \n    csg2 = unionSDF(csg1, b3);\n\n    csg3 = smoothUnionSDF(csg2, s0, 0.125);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,0.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.0,0.75);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p,1.5 + sin(u_time)/2. - 0.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, s1, 0.125); // Intersect box with sphere creating a CSG object.\n\n    // csg1 = smoothDifferenceSDF(csg0, s1, 0.125);\n     \n    // csg2 = unionSDF(csg1, b3);\n\n    // csg3 = smoothUnionSDF(csg2, s0, 0.125);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothUnionSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg0, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,0.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.0,0.75);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p,1.5 + sin(u_time)/2. - 0.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, s1, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, b1, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, b2, 0.125);\n\n    // csg3 = smoothUnionSDF(csg2, s0, 0.125);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothUnionSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg2, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdFour(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.65,2.5,-0.45);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.65,2.5,-0.45);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.1);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b0, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg6, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdFive(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,2.,-0.65 ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.65,2.5,-0.45);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.65,2.5,-0.45);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.1);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg6, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdSix(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,0.6,-0.7 - sin(u_time)/15. ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI * 2.);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.65,2.24,-0.45);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.65,2.24,-0.6);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.24,-0.1);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.125));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.24,-0.1);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.125));\n\n      vec4 s6 = vec4(vec3(0, 0, 0), sphereSDF(s5p, 0.125));\n      vec4 s7 = vec4(vec3(0, 0, 0), sphereSDF(s4p, 0.125));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0), csg7 = vec4(0), csg8 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n\n    csg7 = smoothUnionSDF(csg6, s6, 0.15);\n\n    csg8 = smoothUnionSDF(csg7, s7, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg8, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _A=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 t = vUv;\n        vUv -= 0.5;\n        // t *= 0.5;\n\n        for(int i = 0; i < 20; i++) {\n            float t = 2.0 * PI * float(i) / 30.0 * u_time * 0.5;\n            float x = cos(0.0*t);\n\t\t    float y = sin(2.0*t);\n            vec2 o = 0.40 * vec2(x + sin(u_time) - 1., y);\n            float r = fract(x);\n            float g = 1.0 - r;\n            color += 0.003 / (length(vUv - o)) * vec3(r, g, 0.9);\n        }\n        for(int i = 0; i < 20; i++) {\n            float t = 2.0 * PI * float(i) / 30.0 * u_time * 0.5;\n            float x = cos(2.0*t);\n\t\t    float y = sin(0.0*t);\n            vec2 o = 0.40 * vec2(x , y - sin(u_time) );\n            float r = fract(x);\n            float g = 1.0 - r;\n            color += 0.003 / (length(vUv - o)) * vec3(r, g, 0.9);\n        }\n        for(int i = 0; i < 20; i++) {\n            float t = 2.0 * PI * float(i) / 30.0 * u_time * 0.5;\n            float x = cos(2.0*t);\n\t\t    float y = sin(2.0*t);\n            vec2 o = 0.40 * vec2(x , y );\n            float r = fract(x);\n            float g = 1.0 - r;\n            color += 0.003 / (length(vUv - o)) * vec3(r, g, 0.9);\n        }\n\n        float numLabel = label(t);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_A,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdEight(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    // Octahedron - exact\n    float octahedronSDF(vec3 p,float s) {\n    p=abs(p);\n    float m=p.x+p.y+p.z-s;\n    vec3 q;\n    if(3.*p.x<m)q=p.xyz;\n    else if(3.*p.y<m)q=p.yzx;\n    else if(3.*p.z<m)q=p.zxy;\n    else return m*.57735027;\n \n    float k=clamp(.5*(q.z-q.y+s),0.,s);\n    return length(vec3(q.x,q.y-s+k,q.z-k));\n}\n\n    vec4 GetDist(vec3 p)\n    {\n        //octahedron\n\n        vec3 op = vec3(0, 2.5, 0);\n        op = p - op;\n        op.xy *= Rotate(-u_time);\n        op.xz *= Rotate(-u_time);\n\n        float r = fract(BoxColor.b);\n        float g = 1.0 - r;\n        vec4 o = vec4(BoxColor.rgb + vec3(r * cos(u_time), g * sin(u_time), 0.9 * sin(u_time)), octahedronSDF(op, 1.));\n\n        vec4 scene = vec4(0);\n\n        vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n        scene = unionSDF(p0, o);\n        \n        \n    \n        return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdNine(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    // float sdNumHorizontal(vec2 p)\n    // {\n    //     vec2 newUv = p;\n    //     newUv.x += 0.125;\n    //     newUv.y -= 0.25;\n    //     vec2 uv1 = newUv;\n    //     vec2 uv2 = newUv;\n    //     uv1 = Rot(uv1, PI * 0.5);\n    //     uv1 /= .5;\n    //     uv1 -= 1.;\n\n    //     uv2 = Rot(uv2, -PI* .5);\n    //     uv2 /= .5;\n    //     uv2 -= 1.;\n    //     float shape1 = sdEqTriangle(uv1, 0.15);\n    //     shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n    //     float shape2 = sdBox(vec2(uv1.x + 0.5, uv1.y+0.75), vec2(0.33, 0.2815));\n    //     shape2 = 1. - smoothstep(0.1, 0.11, shape2);\n\n    //     float shape3 = sdEqTriangle(vec2(uv2.x, uv2.y-0.5), 0.15);\n    //     shape3 = 1. - smoothstep(0.1, 0.11, shape3);\n\n    //     return shape1 + shape2 + shape3;\n    // }\n\n    // float sdNumVertical(vec2 p){\n    //     vec2 newUv = p;\n    //     newUv.x += 0.125;\n    //     newUv.y -= 0.25;\n    //     vec2 uv1 = newUv;\n    //     vec2 uv3 = newUv;\n    //     vec2 uv4 = newUv;\n    //     uv1 = Rot(uv1, PI * 0.5);\n    //     uv1 /= .5;\n    //     uv1 -= 1.;\n\n    //     uv3 = Rot(uv3, PI * 1.5);\n    //     uv3 /= .5;\n    //     uv3 -= 1.;\n    //     uv3.x -= 0.2;\n    //     uv3.y += 0.1;\n\n    //     uv4 = Rot(uv4, PI * 1.5);\n    //     uv4 /= .5;\n    //     uv4 -= 1.;\n    //     uv4.y += 0.1;\n    //     uv4.x -= 0.52;\n\n    //     float shape1 = sdEqTriangle(vec2(uv1.x + 0.36125, uv1.y-0.01), 0.125);\n    //     shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n    //     float shape4 = sdEqTriangle(vec2(uv3.x, uv3.y), 0.14);\n    //     shape4 = 1. - smoothstep(0.1, 0.11, shape4);\n\n    //     float shape5 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.35, 0.325));\n    //     shape5 = 1. - smoothstep(0.1, 0.11, shape5);\n\n    //     float shape6 = sdEqTriangle(vec2(uv4), 0.14);\n    //     shape6 = 1. - smoothstep(0.1, 0.11, shape6);\n\n    //     float tri = ((shape4 + shape6 + shape1 ) );\n    //     float sq = sdBox(vec2(uv1.x + 0.859, uv1.y +0.442), vec2(0.3));\n    //     sq = 1. - smoothstep(0.1, 0.11, sq);\n    //     float shape7 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.3));\n    //     shape7 = 1. - smoothstep(0.1, 0.11, shape7);\n\n    //     return tri ;\n    // }\n\n   \n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float z = sdZero(vUv);\n        // color += z;\n\n        float zero = numZero(vUv);\n        // color += zero;\n        \n        float one = numOne(vUv);\n        color += one;\n\n        float two = numTwo(vUv);\n        // color += two;\n\n        float three = numThree(vUv);\n        // color += three;\n\n        float four = numFour(vUv);\n        // color += four;\n\n        float five = numFive(vUv);\n        // color += five;\n\n        float six = numSix(vUv);\n        // color += six;\n\n        float seven = numSeven(vUv);\n        // color += seven;\n\n        float eight = numEight(vUv);\n        // color += eight;\n        \n        float nine = numNine(vUv);\n        // color += nine;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n  \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float zero = numZero(vUv);\n        float one = numOne(vUv);\n        float two = numTwo(vUv);\n        float three = numThree(vUv);\n        float four = numFour(vUv);\n        float five = numFive(vUv);\n        float six = numSix(vUv);\n        float seven = numSeven(vUv);\n        float eight = numEight(vUv);\n        float nine = numNine(vUv);\n        // color += zero;\n\n        \n        // color += one;\n\n        float t = u_time;\n        t = t * 0.5;\n\n        if(fract(t) < 0.1)\n        {\n            color += zero;\n        }\n        if(fract(t) <= 0.2)\n        {\n            if(fract(t) > 0.1)\n            {\n                color += one;\n            }\n            \n        }\n        if(fract(t) <= 0.3)\n        {\n            if(fract(t) > 0.2)\n            {\n                color += two;\n            }\n        }\n        if(fract(t) <= 0.4)\n        {\n            if(fract(t) > 0.3)\n            {\n                color += three;\n            }\n        }\n        if(fract(t) <= 0.5)\n        {\n            if(fract(t) > 0.4)\n            {\n                color += four;\n            }\n        }\n        if(fract(t) <= 0.6)\n        {\n            if(fract(t) > 0.5)\n            {\n                color += five;\n            }\n        }\n        if(fract(t) <= 0.7)\n        {\n            if(fract(t) > 0.6)\n            {\n                color += six;\n            }\n        }\n        if(fract(t) <= 0.8)\n        {\n            if(fract(t) > 0.7)\n            {\n                color += seven;\n            }\n        }\n        if(fract(t) <= 0.9)\n        {\n            if(fract(t) > 0.8)\n            {\n                color += eight;\n            }\n        }\n        if(fract(t) <= 1.)\n        {\n            if(fract(t) > 0.9)\n            {\n                color += nine;\n            }\n        }\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    float tile(vec2 uv, float zoom)\n    {\n        uv *= zoom;\n\n        float index = 0.;\n        index += step(1., mod(uv.x, 3.));\n        index += step(1., mod(uv.y, 3.)) * 2.;\n        \n        uv = fract(uv);\n        float c;\n        float zero = numZero(uv);\n        float one = numOne(uv);\n        float two = numTwo(uv);\n        float three = numThree(uv);\n        float four = numFour(uv);\n        float five = numFive(uv);\n        float six = numSix(uv);\n        float seven = numSeven(uv);\n        float eight = numEight(uv);\n        float nine = numNine(uv);\n\n        float t = u_time;\n        t = t / 2.;\n\n        if(index == 0.)\n        {\n            c = zero;\n        } else if (index == 1.){\n            if(fract(t) < 0.1)\n            {\n                c += zero;\n            }\n            if(fract(t) <= 0.2)\n            {\n                if(fract(t) > 0.1)\n                {\n                    c += one;\n                }\n                \n            }\n            if(fract(t) <= 0.3)\n            {\n                if(fract(t) > 0.2)\n                {\n                    c += two;\n                }\n            }\n            if(fract(t) <= 0.4)\n            {\n                if(fract(t) > 0.3)\n                {\n                    c += three;\n                }\n            }\n            if(fract(t) <= 0.5)\n            {\n                if(fract(t) > 0.4)\n                {\n                    c += four;\n                }\n            }\n            if(fract(t) <= 0.6)\n            {\n                if(fract(t) > 0.5)\n                {\n                    c += five;\n                }\n            }\n            if(fract(t) <= 0.7)\n            {\n                if(fract(t) > 0.6)\n                {\n                    c += six;\n                }\n            }\n            if(fract(t) <= 0.8)\n            {\n                if(fract(t) > 0.7)\n                {\n                    c += seven;\n                }\n            }\n            if(fract(t) <= 0.9)\n            {\n                if(fract(t) > 0.8)\n                {\n                    c += eight;\n                }\n            }\n            if(fract(t) <= 1.)\n            {\n                if(fract(t) > 0.9)\n                {\n                    c += nine;\n                }\n            }\n        } else if (index == 2.){\n            c = two;\n        } else if (index == 3.){\n            c = three;\n        } else if (index == 4.){\n            c = four;\n        }else if (index == 5.){\n            c = five;\n        } else if (index == 6.){\n            c = six;\n        }\n\n        return c;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        float x = tile(uv2, 3.);\n        color += x;\n\n        float count = numZero(vec2(uv2.x + 0.2, uv2.y)) + numZero(vec2(uv2.x-0.2, uv2.y));\n\n        // color += count;\n        \n        // float zero = numZero(uv2);\n        // float one = numOne(uv2);\n        // float two = numTwo(uv2);\n        // float three = numThree(uv2);\n        // float four = numFour(uv2);\n        // float five = numFive(uv2);\n        // float six = numSix(uv2);\n        // float seven = numSeven(uv2);\n        // float eight = numEight(uv2);\n        // float nine = numNine(uv2);\n        // color += zero;\n\n        \n        // color += one;\n\n        // float t = u_time;\n        // t = t / 2.;\n\n        // if(fract(t) < 0.1)\n        // {\n        //     color += zero;\n        // }\n        // if(fract(t) <= 0.2)\n        // {\n        //     if(fract(t) > 0.1)\n        //     {\n        //         color += one;\n        //     }\n            \n        // }\n        // if(fract(t) <= 0.3)\n        // {\n        //     if(fract(t) > 0.2)\n        //     {\n        //         color += two;\n        //     }\n        // }\n        // if(fract(t) <= 0.4)\n        // {\n        //     if(fract(t) > 0.3)\n        //     {\n        //         color += three;\n        //     }\n        // }\n        // if(fract(t) <= 0.5)\n        // {\n        //     if(fract(t) > 0.4)\n        //     {\n        //         color += four;\n        //     }\n        // }\n        // if(fract(t) <= 0.6)\n        // {\n        //     if(fract(t) > 0.5)\n        //     {\n        //         color += five;\n        //     }\n        // }\n        // if(fract(t) <= 0.7)\n        // {\n        //     if(fract(t) > 0.6)\n        //     {\n        //         color += six;\n        //     }\n        // }\n        // if(fract(t) <= 0.8)\n        // {\n        //     if(fract(t) > 0.7)\n        //     {\n        //         color += seven;\n        //     }\n        // }\n        // if(fract(t) <= 0.9)\n        // {\n        //     if(fract(t) > 0.8)\n        //     {\n        //         color += eight;\n        //     }\n        // }\n        // if(fract(t) <= 1.)\n        // {\n        //     if(fract(t) > 0.9)\n        //     {\n        //         color += nine;\n        //     }\n        // }\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,2.,-0.65 ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.5,2.5,-0.5);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.5,2.5,-0.5);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.15);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n\n      // Sphere.\n      vec3 s6p=vec3(-0.15,2.,-0.75);\n      s6p=p-s6p;\n      vec4 s6 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s6p, 0.012525));\n\n      vec3 s7p=vec3(0.15,2.,-0.75);\n      s7p=p-s7p;\n      vec4 s7 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s7p, 0.012525));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0), csg7 = vec4(0), csg8 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n\n    csg7 = smoothDifferenceSDF(csg6, s6, 0.15);\n\n    csg8 = smoothDifferenceSDF(csg7, s7, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg8, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,2.,-0.65 ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.5,2.5,-0.5);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.5,2.5,-0.5);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.15);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n\n      // Sphere.\n      vec3 s6p=vec3(-0.15,2.,-0.75);\n      s6p=p-s6p;\n      vec4 s6 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s6p, 0.012525));\n\n      vec3 s7p=vec3(0.15,2.,-0.75);\n      s7p=p-s7p;\n      vec4 s7 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s7p, 0.012525));\n\n      // Sphere.\n      vec3 s8p=vec3(0.65,2.5,-0.35);\n      s8p=p-s8p;\n      vec4 s8 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s8p, 0.125));\n\n      vec3 s9p=vec3(-0.65,2.5,-0.35);\n      s9p=p-s9p;\n      vec4 s9 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s9p, 0.125));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0), csg7 = vec4(0), csg8 = vec4(0), csg9 = vec4(0), csg10 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n\n    csg7 = smoothDifferenceSDF(csg6, s6, 0.15);\n\n    csg8 = smoothDifferenceSDF(csg7, s7, 0.15);\n     \n    csg9 = smoothDifferenceSDF(csg8, s8, 0.15);\n    csg10 = smoothDifferenceSDF(csg9, s9, 0.15);\n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg10, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    float displacement =  sin(2.0 * p.x + (u_time)/1.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/1.) * 0.37525;\n    s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 1.));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect \n\n    scene = smoothUnionSDF(s0, p0, 0.15);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    float displacement =  sin(2.0 * p.x + (u_time)/1.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/1.) * 0.37525;\n    s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 1.));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5, 1.0,0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n\n    float b1 = boxSDF(p - vec3(-1.5,1.5,0), vec3(1));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    //shell\n    box = abs(box)-.1 + (sin(u_time * 0.5)/6.)-0.15;\n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect \n\n    scene = smoothIntersectSDF(box, plane, 0.15);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3 );\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    float displacement =  sin(2.0 * p.x + (u_time)/1.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/1.) * 0.37525;\n    s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 1.));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-1.5,1.5,0);\n    // b1p.yz *= Rotate((u_time));\n    float b1 = boxSDF(p - b1p, vec3(1));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    //shell\n    box = abs(box)-.1;\n    // box.xy *= Rotate(sin(u_time)); \n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0);\n     \n    csg0 = smoothIntersectSDF(box, plane, 0.125); // Intersect \n\n    scene = unionSDF(csg0, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(-1.5,1.5,0);\n    float displacement =  sin(2.0 * p.x + (u_time)/2.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/2.) * 0.37525;\n    // s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 0.15));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-1.5,1.5,0);\n    // b1p.yz *= Rotate((u_time));\n    float b1 = boxSDF(p - b1p + displacement, vec3(1.25));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    //shell\n    box = abs(box)-.1;\n    // box.xy *= Rotate(sin(u_time)); \n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0);\n     \n    csg0 = smoothUnionSDF(box, p0, 0.125);\n    csg1 = smoothUnionSDF(csg0, s0, 0.125); \n\n    scene = smoothUnionSDF(box, p0, 0.25);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n        lightPos.zx *= Rotate(PI * 1.75);\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9 ,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(.0,1.5,0);\n    float displacement =  sin(3.0 * p.x + (u_time)/2.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/2.) * 0.137525;\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 0.05));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-.5,1.5,0);\n    b1p.xz *= Rotate((u_time));\n    \n    float s1 = sphereSDF(p - s0p + displacement, 1.75);\n    float s2 = sphereSDF(p - s0p + displacement, 0.5);\n    float b1 = boxSDF(p - b1p , vec3(1.25));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    \n    vec4 sphere = vec4(ColorRed.rgb, s1);\n    vec4 sphere2 = vec4(ColorRed.rgb, s2);\n    //shell\n    box = abs(box)-.1;\n    // box.xy *= Rotate(sin(u_time)); \n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0);\n     \n    csg0 = smoothUnionSDF(box, p0, 0.125);\n    csg1 = smoothDifferenceSDF(csg0, sphere, 0.125); \n    csg2 = smoothUnionSDF(csg1, sphere2, 0.125);\n    scene = smoothUnionSDF(csg2, p0, 0.25);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n        lightPos.zx *= Rotate(PI * 1.75);\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9 ,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(.0,1.5,0);\n    float displacement =  sin(3.0 * p.x + (u_time)/2.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/2.) * 0.137525;\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 0.05));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-0.5,1.5,0) ;\n    // b1p.xz *= Rotate((u_time));\n    float b1 = boxSDF(p - b1p * displacement , vec3(1.25 + sin(u_time * 0.25), .525 , 1.25 + cos(u_time * 0.25)));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0);\n     \n    csg0 = smoothUnionSDF(box, p0, 0.125);\n    scene = smoothUnionSDF(csg0, p0, 0.25);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n        lightPos.zx *= Rotate(PI * 1.75);\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9 ,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(1.0, 1.0, 1.0);\n        vec3 d = vec3(0.263,0.416 * u_time,0.557);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time *0.25);\n        uv2 -= 0.5;\n        vec2 uv3 = uv2;\n\n        \n        float d;\n        vec3 c;\n\n        for (float i = 0.; i < 4.; i++)\n        {\n            uv2 = fract(uv2 * 1.) - 0.5;\n            d = length(uv3) * exp(-length(uv2));\n            c = palette(length(uv2) + i * .4 + u_time * .4);\n            d = sin(d * 20. + u_time) / 8.;\n            d = abs(d);\n            d = pow(0.01/d, 1.2);\n            color += c * d;\n        }\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        // uv2 = Rot(uv2, u_time * 0.25);\n        uv2 -= 0.5;\n        vec2 uv3 = uv2;\n\n        \n        float d;\n        vec3 c;\n\n        for (float i = 0.; i < 4.; i++)\n        {\n            uv2 = fract(uv2 * (1.5 + sin(u_time * 0.25)/15.)) - 0.5;\n            d = length(uv3) * (-length(uv2));\n            c = palette(length(uv2) + i * .4 + u_time * .4);\n            d = sin(d * 15. + sin(u_time)) / 5.;\n            d = abs(d);\n            d = pow(0.01/d, 1.);\n            color += c * d;\n        }\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QA=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.25);\n        uv2 -= 0.5;\n        vec2 uv3 = uv2;\n\n        \n        float d;\n        float d2;\n        vec3 c;\n\n        for (float i = 0.; i < 4.; i++)\n        {\n            uv2 = fract(uv2 * (1.5 + sin(u_time * 0.25)/15.)) - 0.5;\n            d = length(uv3) * (length(uv2));\n            c = palette(length(uv2) + i * .4 + u_time * .4);\n            d2 = d;\n            d = sin(d * 5. + (u_time * 0.5)) / 5.;\n            d2 = tan(d * 5. + (u_time * 0.5)) / 5.;\n            d = abs(d);\n            d2 = abs(d2);\n            d = pow(0.005/d, 1.);\n            d2 = pow(0.002/d2, 1.);\n            color += c * d + d2;\n        }\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QA,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $A=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float variation(vec2 v1, vec2 v2, float strength, float speed) {\n        return sin(\n            dot(normalize(v1), normalize(v2)) * strength + u_time * speed\n        ) / 100.0;\n    }\n    \n    vec3 paintCircle (vec2 uv, vec2 center, float rad, float width) {\n        \n        vec2 diff = center-uv;\n        float len = length(diff);\n    \n        len += variation(diff, vec2(0.0, 1.0), 5.0, 2.0);\n        len -= variation(diff, vec2(1.0, 0.0), 5.0, 2.0);\n        \n        float circle = smoothstep(rad-width, rad, len) - smoothstep(rad, rad+width, len);\n\n        float segment = sdSegment(uv, vec2(0.), vec2(0.5));\n\n        return vec3(circle);\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        // uv2 = Rot(uv2, u_time * 0.25);\n        float m = 0.;\n        vec3 d;\n        uv2 -= 0.5;\n        float t = u_time * 0.05;\n        for(float i =0.; i <1.; i+= 1./2.)\n        {\n            float z = fract(i + t);//reuse layers\n            float size = mix(.5, .05, z);\n            float fade = S(0.0, 0.5, z) * S(.0, 1., z) ;\n            \n            \n            vec3 cir = paintCircle(uv2 , vec2(0.0) ,  fade  + 0.15 * 1.25 , 0.01 );\n            vec3 cir2 = paintCircle(uv2, vec2(0.0) ,  fade + 0.15 * 1.25, 0.04 );\n\n            vec3 cir3 = paintCircle(uv2, vec2(0.0) ,  fade + 0.1 * 1.25, 0.01);\n            vec3 cir4 = paintCircle(uv2, vec2(0.0) ,  fade + 0.1 * 1.25, 0.04);\n\n            vec3 cir5 = paintCircle(uv2, vec2(0.0) ,  fade + 0.05 * 1.25, 0.01);\n            vec3 cir6 = paintCircle(uv2, vec2(0.0) ,  fade + 0.05 * 1.25, 0.04 );\n\n            vec3 cir7 = paintCircle(uv2, vec2(0.0) ,  fade - 0.0 * 1.25, 0.01);\n            vec3 cir8 = paintCircle(uv2, vec2(0.0) ,  fade - 0.0 * 1.25, 0.04);\n\n            vec3 cir9 = paintCircle(uv2, vec2(0.0) ,  fade - 0.05 * 1.25, 0.01);\n            vec3 cir10 = paintCircle(uv2, vec2(0.0) ,  fade - 0.05 * 1.25, 0.04);\n\n            vec3 cir11 = paintCircle(uv2, vec2(0.0) , fade - 0.1 * 1.25, 0.01);\n            vec3 cir12 = paintCircle(uv2, vec2(0.0) , fade - 0.1 * 1.25, 0.04);\n\n            vec3 cir13 = paintCircle(uv2, vec2(0.0) , fade - 0.15  * 1.25, 0.01 );\n            vec3 cir14 = paintCircle(uv2, vec2(0.0) ,  fade - 0.15 * 1.25, 0.04);\n\n            cir += cir2;\n            color += cir2 * vec3(0.9, 0., 0.);\n            // m += Layer(uv2 * size + i * 20.) * fade;\n\n            cir3 += cir4;\n            color += cir4 * vec3(0.9, 0.5, 0.0);\n\n            cir5 += cir6;\n            color += cir6 * vec3(1., 1., 0.0);\n\n            cir7 += cir8;\n            color += cir8 * vec3(0., 1., 0.0);\n\n            cir9 += cir10;\n            color += cir10 * vec3(0., 0., 1.0);\n\n            cir11 += cir12;\n            color += cir12 * vec3(0.29, 0., 0.51);\n\n            cir13 += cir14;\n            color += cir14 * vec3(0.93, 0.51, 0.93);\n        }\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$A,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n        uv2.y -= 0.065;\n\n        float one = 1. - sdBox(vec2(uv2.x, uv2.y + (1./7.)), vec2(2.5, 1./7.));\n        float two = 1. - sdBox(vec2(uv2.x, uv2.y + (2./7.)), vec2(2.5, 1./7.));\n        float three = 1. - sdBox(vec2(uv2.x, uv2.y + 3./7.), vec2(2.5, 1./7.));\n        float four = 1. - sdBox(vec2(uv2.x, uv2.y + 4./7.), vec2(2.5, 1./7.));\n        float five = 1. - sdBox(vec2(uv2.x, uv2.y + 5./7.), vec2(2.5, 1./7.));\n        float six = 1. - sdBox(vec2(uv2.x, uv2.y + 6./7.), vec2(2.5, 1./7.));\n        float seven = 1. - sdBox(vec2(uv2.x, uv2.y + 7./7.), vec2(2.5, 1./7.));\n\n        color += one * vec3(0.9, 0., 0.);\n        color += two * vec3(0.9, 0.5, 0.0);\n        color += three * vec3(1., 1., 0.0);\n        color += four * vec3(0., 1., 0.0);\n        color += five * vec3(0., 0., 1.0);\n        color += six * vec3(0.29, 0., 0.51);\n        color += seven * vec3(0.93, 0.51, 0.93);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, - uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (TWO_PI * 2.0) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), 4.0);\n    \n    return radialUv;\n    }\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        vec2 uv3 = uv2;\n        vec2 uv4 = vUv;\n        uv4 -= 0.5;\n        uv4 = getRadialUv(uv4);\n        uv2 -= .5;\n        uv3 = Rot(uv3, PI * 2.);\n        uv3 -= 0.5;\n        \n\n        float an = -u_time * 0.15;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2);\n        float a = atan(uv2.y, uv2.x);\n        uv2 = vec2(0.3/r1 + 0.5 * u_time , a);\n        float r2 = length(uv3);\n        float a2 = atan(uv3.y, uv3.x);\n        uv3 = vec2(0.3/r2 + 0.5 * u_time, a2);\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv4 + 0.00*u_time);\n        q.y = fbm( uv4 + vec2(1.0));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv4 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv4 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r);\n        float f2 = fbm(uv3+r);\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.101961,0.619608,0.666667),\n                    vec3(0.666667,0.666667,0.498039),\n                    clamp((f*f)*4.0,0.0,1.0));\n\n        c = mix(color,\n                    vec3(0,0,0.164706),\n                    clamp(length(q),0.0,1.0));\n\n        c = mix(color,\n                    vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n        c *= f*f*f+.6*f *f + .5 *f * c ;\n        // c *= f2*f2*f2+.6*f2 *f2 + .5 *f2 * c ;\n\n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function rO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:tO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    // radialUv.x = angle / (PI) + 0.5;\n    // radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) + 0.0005 * u_time, angle );\n    \n    return radialUv;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n        \n        \n\n        float an = -u_time * 0.15;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2) ;\n        r1 = abs(r1);\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a);\n        uv2 = vec2(0.3/r1 + .95 * u_time , a);\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.00*u_time);\n        q.y = fbm( uv2 + vec2(1.0));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.101961,0.619608,0.666667),\n                    vec3(0.666667,0.666667,0.498039),\n                    clamp((f*f)*4.0,0.0,1.0));\n\n        c = mix(color,\n                    vec3(0,0,0.164706),\n                    clamp(length(q),0.0,1.0));\n\n        c = mix(color,\n                    vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n        c *= f*f*f+.6*f *f + .25 *f * c* f * c ;\n\n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function aO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:oO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (PI) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) * u_time, angle );\n    \n    return radialUv;\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.15;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 0.5) ;\n        r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.3/r1 + .95 - u_time * 1.25 , a);\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + vec2(50.01));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.619608,0.666667),\n                    vec3(0.666667,0.666667,0.498039),\n                    clamp((f*f)*5.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.9,0,0.164706),\n                    clamp(length(q),0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.966667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n        c *= f*f*f+.6*f *f + .25 *f * c* f * f ;\n\n        float cir = sdCircle(vUv, 0.0525);\n        \n\n        color += c * 2. * 2. + c;\n        color *=  c - cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function vO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:iO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (PI) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) * u_time, angle );\n    \n    return radialUv;\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.15;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 0.5) ;\n        r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.3/r1 + .95 + u_time * 2.25 , a);\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + vec2(50.01));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.9666667,0.9666667,0.998039),\n                    clamp((f*f)*1.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.099,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,1),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color,\n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        c *= f ;\n\n        float cir = sdCircle(vUv, 0.125 * sin(1. /u_time));\n        \n\n        color += c * 2. * 2. + c;\n        color *=  c - cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function cO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:sO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (PI) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) * u_time, angle );\n    \n    return radialUv;\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1 + sin(u_time), a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color,\n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.125 ) * 0.65;\n        \n\n        color += c * 2. ;\n        color *=  c - cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function uO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:lO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1 + sin(u_time), a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color,\n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.125 );\n        \n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        color.rgb+= smoothstep(0.02 * 2., 0.031 * 2., s.x);\n        //color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        //color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function pO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:fO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1 + sin(u_time), a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.125 );\n        \n        vec3 s = voronoi(uv2 * 0.25);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        color.rgb+= smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f);\n        //color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        //color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function dO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:mO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1, a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.0125 );\n        \n        vec3 s = voronoi(uv2 * 0.25);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        color.rgb += smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f + s2.x);\n        color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function xO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:hO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n\n    vec2 tile(vec2 uv, float zoom, float speed){\n        uv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > 0.5)\n        {\n            if(fract(uv.y * 0.5) > 0.5){\n                uv.x += fract(t) * 2.;\n            } else {\n                uv.x -= fract(t) * 2.;\n            }\n        } else {\n            if(fract(uv.x * 0.5) > 0.5)\n            {\n                uv.y += fract(t) * 2.;\n            } else {\n                uv.y -= fract(t) * 2.;\n            }\n        }\n        return fract(uv);\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1, a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        vec2 pattern = tile(uv2, 1., 0.5);\n        float x = numZero(pattern);\n        color.g += x;\n\n        float cir = sdCircle(vUv, 0.0125 );\n        \n        vec3 s = voronoi(uv2 );\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        // color.rgb += 1. - smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f + s.x);\n        // color.g+= smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        // color.b+= smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function yO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:gO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _O=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n\n    vec2 tile(vec2 uv, float zoom, float speed){\n        uv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > 0.5)\n        {\n            if(fract(uv.y * 0.5) > 0.5){\n                uv.x += fract(t) * 2.;\n            } else {\n                uv.x -= fract(t) * 2.;\n            }\n        } else {\n            if(fract(uv.x * 0.5) > 0.5)\n            {\n                uv.y += fract(t) * 2.;\n            } else {\n                uv.y -= fract(t) * 2.;\n            }\n        }\n        return fract(uv);\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1, a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        vec2 pattern = tile(uv2, 1., 0.5);\n        float x = numTwo(pattern);\n        color.r += x;\n\n        \n        float cir = sdCircle(vUv, 0.0125 );\n        vec3 s = voronoi(uv2 );\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        // color.rgb += 1. - smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f + s.x);\n        // color.g+= smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        // color.b+= smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function bO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:_O,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var UO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv -= 0.5;\n\n        float x = sdSpiral(newUv, 0.525, 2.525 + sin(u_time));\n        color += x;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function wO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:UO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv *= 0.25 + 0.75;\n        newUv = Rot(newUv, u_time * 4.5 + sin(u_time));\n        newUv -= 0.5;\n\n        float x;\n        for(float i=0.; i<2.; i++){\n            newUv*= 0.165;\n\n            x = sdSpiral(newUv, 0.82, 3.525 + sin(u_time + i/2. ));\n            color += x;\n\n            vec3 c = palette(x * i);\n            color -= c.xyz;\n        }\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function MO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:SO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv *= 0.25 + 0.75;\n        newUv = Rot(newUv, u_time * 4.5 + sin(u_time));\n        newUv -= 0.5;\n\n        float x;\n        for(float i=0.; i<6.; i++){\n            newUv*= 0.165;\n\n            x = sdSpiral(vec2(newUv.x * 55.5 * i, newUv.y * 55.5 * i), i, 3.525 + sin(u_time + i/2. ));\n            color += x;\n\n            vec3 c = palette(x * i);\n            color -= c.xyz;\n        }\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function kO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:jO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        // newUv = Rot(newUv, u_time * 4.5 + sin(u_time));\n        // newUv -= 0.5;\n\n        float line = 0.;\n        // float x = plot(newUv, line, 0.02 );\n        float x = circle(newUv, 1.025);\n        float x1 = circle(vec2(newUv.x + sin(u_time)/4., newUv.y + cos(u_time)/4.), 0.275);\n        float x2 = circle(vec2(newUv.x + sin(u_time)/8., newUv.y + cos(u_time)/8.), 0.075);\n        float x3 = circle(vec2(newUv.x + sin(u_time)/16. , newUv.y + cos(u_time)/16.) , 0.022);\n        float x4 = circle(vec2(newUv.x + sin(u_time)/32. , newUv.y + cos(u_time)/32.) , 0.006);\n        float x5 = circle(vec2(newUv.x + sin(u_time)/64. , newUv.y + cos(u_time)/64.) , 0.002);\n\n        color.rgb += x;\n        color.rgb -= x1;\n        color.rgb += x2;\n        color.rgb -= x3;\n        color.rgb += x4;\n        color.rgb -= x5;\n        // color.rb -= x2;\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function TO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:CO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var RO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float flower(vec2 vUv, float n, float zoom)\n    {\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * zoom;\n        float a = atan(pos.y, pos.x);\n        float f = cos(a * n );\n        return smoothstep(f, f + 0.25, r );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        vec2 newUv2 = newUv;\n        vec2 newUv3 = newUv;\n        newUv = Rot(newUv, u_time * 1.5 + sin(u_time));\n        newUv2 = Rot(newUv2, u_time * 1.5 + cos(u_time));\n        newUv3 = Rot(newUv2, u_time * 1. + cos(u_time));\n        // newUv -= 0.5;\n        // newUv2.x -= 0.2;\n\n        float line = 0.;\n        // float x = plot(newUv, line, 0.02 );\n        float x = flower(newUv, 5., 2.);\n        float x2 = flower(newUv2, 5., 2.);\n        float x3 = flower(newUv3, 5., 2.);\n        color += 1. - palette(x * 0.5);\n        color += 1. - palette(x2 * 0.25);\n        color += 1. - palette(x3 * 0.15);\n\n        // color.rb -= x2;\n\n        \n\n        float numLabel = label(vUv);\n        color *= 1. - numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function zO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:RO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var PO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 3.28318*(c*t+d) * abs(sin(u_time/8. )- 0.25));\n    }\n\n    float flower(vec2 vUv, float n, float zoom)\n    {\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * zoom;\n        float a = atan(pos.y, pos.x);\n        float f = cos(a * n );\n        return smoothstep(f, f + 0.25, r );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        vec2 newUv2 = newUv;\n        vec2 newUv3 = newUv;\n        vec2 newUv4 = newUv;\n        vec2 newUv5 = newUv;\n        vec2 newUv6 = newUv;\n        vec2 newUv7 = newUv;\n        vec2 newUv8 = newUv;\n\n        newUv = Rot(newUv, u_time * 2.25 + cos(u_time));\n        newUv2 = Rot(newUv2, u_time * 2.0 + cos(u_time));\n        newUv3 = Rot(newUv3, u_time * 1.75 + cos(u_time));\n        newUv4 = Rot(newUv4, u_time * 1.5 + cos(u_time));\n        newUv5 = Rot(newUv5, u_time * 1.25 + cos(u_time));\n        newUv6 = Rot(newUv6, u_time * 1. + cos(u_time));\n        newUv7 = Rot(newUv7, u_time * 0.75 + cos(u_time));\n        newUv8 = Rot(newUv8, u_time * 0.5 + cos(u_time));\n        // newUv -= 0.5;\n        // newUv2.x -= 0.2;\n\n        float x = sdPolygonOutline(newUv, 6, 0.8); \n        float x2 = sdPolygonOutline(newUv2, 6, 0.7);\n        float x3 = sdPolygonOutline(newUv3, 6, 0.6); \n        float x4 = sdPolygonOutline(newUv4, 6, 0.5); \n        float x5 = sdPolygonOutline(newUv5, 6, 0.4); \n        float x6 = sdPolygonOutline(newUv6, 6, 0.3);\n        float x7 = sdPolygonOutline(newUv7, 6, 0.2); \n        float x8 = sdPolygonOutline(newUv8, 6, 0.1);  \n        \n        color += 1. - palette(x * 0.59);\n        color += 1. - palette(x2 * 0.58);\n        color += 1. - palette(x3 * 0.57);\n        color += 1. - palette(x4 * 0.56);\n        color += 1. - palette(x5 * 0.55);\n        color += 1. - palette(x6 * 0.54);\n        color += 1. - palette(x7 * 0.53);\n        color += 1. - palette(x8 * 0.52);\n\n        color *= 2.;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function FO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:PO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 3.28318*(c*t+d) * abs(sin(u_time/8. )- 0.25));\n    }\n\n    float flower(vec2 vUv, float n, float zoom)\n    {\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * zoom;\n        float a = atan(pos.y, pos.x);\n        float f = cos(a * n );\n        return smoothstep(f, f + 0.25, r );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        vec2 newUv2 = newUv;\n        vec2 newUv3 = newUv;\n        vec2 newUv4 = newUv;\n        vec2 newUv5 = newUv;\n        vec2 newUv6 = newUv;\n        vec2 newUv7 = newUv;\n        vec2 newUv8 = newUv;\n\n        newUv = Rot(newUv,   u_time/4. * 2.25 + cos(u_time));\n        newUv2 = Rot(newUv2, u_time/4. * 2.00 + cos(u_time));\n        newUv3 = Rot(newUv3, u_time/4. * 1.75 + cos(u_time));\n        newUv4 = Rot(newUv4, u_time/4. * 1.50 + cos(u_time));\n        newUv5 = Rot(newUv5, u_time/4. * 1.25 + cos(u_time));\n        newUv6 = Rot(newUv6, u_time/4. * 1.00 + cos(u_time));\n        newUv7 = Rot(newUv7, u_time/4. * 0.75 + cos(u_time));\n        newUv8 = Rot(newUv8, u_time/4. * 0.50 + cos(u_time));\n        // newUv -= 0.5;\n        // newUv2.x -= 0.2;\n\n        float x = sdPolygonOutline(newUv,   4, 0.8); \n        float x2 = sdPolygonOutline(newUv2, 4, 0.7);\n        float x3 = sdPolygonOutline(newUv3, 4, 0.6); \n        float x4 = sdPolygonOutline(newUv4, 4, 0.5); \n        float x5 = sdPolygonOutline(newUv5, 4, 0.4); \n        float x6 = sdPolygonOutline(newUv6, 4, 0.3);\n        float x7 = sdPolygonOutline(newUv7, 4, 0.2); \n        float x8 = sdPolygonOutline(newUv8, 4, 0.1);  \n        \n        color += 1. - palette(x  * 0.59 * 2.2 * abs(sin(u_time) + 0.1));\n        color += 1. - palette(x2 * 0.58 * 2.2 * abs(cos(u_time) + 0.2));\n        color += 1. - palette(x3 * 0.57 * 2.2 * abs(sin(u_time) + 0.3));\n        color += 1. - palette(x4 * 0.56 * 2.2 * abs(cos(u_time) + 0.4));\n        color += 1. - palette(x5 * 0.55 * 2.2 * abs(sin(u_time) + 0.5));\n        color += 1. - palette(x6 * 0.54 * 2.2 * abs(cos(u_time) + 0.6));\n        color += 1. - palette(x7 * 0.53 * 2.2 * abs(sin(u_time) + 0.7));\n        color += 1. - palette(x8 * 0.52 * 2.2 * abs(cos(u_time) + 0.8));\n\n        // color *= 2.;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function EO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:DO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var IO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 15.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1.0, floor(u_time * 5. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float one = sdOne(b);\n        float zero = sdZero(b);\n        float two = sdTwo(b);\n        float three = sdThree(b);\n        float four = sdFour(b);\n        float five = sdFive(b);\n        float six = sdSix(b);\n        float seven = sdSeven(b);\n        float eight = sdEight(b);\n        float nine = sdNine(b);\n        float shape;\n        if(str > .9 )\n        {\n            shape = smoothstep(0.01, 0.011, zero);\n        } else if(str > .8){\n            shape = smoothstep(0.01, 0.011, one);\n        } else if(str > .7){\n            shape = smoothstep(0.01, 0.011, two);\n        } else if(str > .6){\n            shape = smoothstep(0.01, 0.011, three);\n        } else if(str > .5){\n            shape = smoothstep(0.01, 0.011, four);\n        } else if(str > .4){\n            shape = smoothstep(0.01, 0.011, five);\n        } else if(str > .3){\n            shape = smoothstep(0.01, 0.011, six);\n        } else if(str > .2){\n            shape = smoothstep(0.01, 0.011, seven);\n        } else if(str > .1){\n            shape = smoothstep(0.01, 0.011, eight);\n        } else {\n            shape = smoothstep(0.01, 0.011, nine);\n        }\n        \n        return vec3(shape * str );\n    }\n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv -= 0.5;\n    \n        float an = -u_time * 0.5;\n        // newUv = mat2(cos(an),-sin(an),sin(an),cos(an)) * newUv;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(newUv) ;\n        // r1 = abs(r1 );\n        float a = -atan(newUv.x, newUv.y) * 0.425;\n        // a = abs(a * 0.85);\n        newUv = vec2(0.5/r1 + .95 + u_time * 0.25 + r1, a );\n\n        vec3 mat = matrix(vec2(newUv.y, newUv.x));\n\n        color.g += mat.g;\n\n        float cir = sdCircle(vUv, 0.125 );\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function LO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:IO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float cloudscale = 1.1;\n    float speed = 0.03;\n    float clouddark = 0.5;\n    float cloudlight = 0.3;\n    float cloudcover = 0.2;\n    float cloudalpha = 8.0;\n    float skytint = 0.5;\n    vec3 skycolour1 = vec3(0.2, 0.4, 0.6);\n    vec3 skycolour2 = vec3(1.4, 0.7, 1.0);\n\n    const mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\n    vec2 hash( vec2 p ) {\n        p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n    \n    float noise( in vec2 p ) {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n        vec2 i = floor(p + (p.x+p.y)*K1);\t\n        vec2 a = p - i + (i.x+i.y)*K2;\n        vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n        vec2 b = a - o + K2;\n        vec2 c = a - 1.0 + 2.0*K2;\n        vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n        vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n        return dot(n, vec3(70.0));\t\n    }\n    \n    float fbm(vec2 n) {\n        float total = 0.0, amplitude = 0.1;\n        for (int i = 0; i < 7; i++) {\n            total += noise(n) * amplitude;\n            n = m * n;\n            amplitude *= 0.4;\n        }\n        return total;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv -= 0.5;\n        // newUv *= 20.5;\n        float t = u_time * speed;\n        float q = fbm(newUv * cloudscale * 0.5);\n\n        float r = 0.;\n        newUv *= cloudscale;\n        newUv -= q - t;\n        float weight = 0.8;\n        for(int i = 0; i < 8; i++){\n            r += abs(weight*noise(newUv));\n            newUv = m*newUv + t;\n            weight *= 0.7;\n        }\n        float f = 0.0;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv *= cloudscale;\n        newUv -= q - t;\n        weight = 0.7;\n        for (int i=0; i<8; i++){\n            f += weight*noise( newUv );\n            newUv = m*newUv + t;\n            weight *= 0.6;\n    }\n        f *= r + f;\n        float c = 0.0;\n        t = u_time * speed * 2.0;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv *= cloudscale*2.0;\n        newUv -= q - t;\n        weight = 0.4;\n        for (int i=0; i<7; i++){\n            c += weight*noise( newUv );\n            newUv = m*newUv + t;\n            weight *= 0.6;\n        }\n        float c1 = 0.0;\n        t = u_time * speed * 3.0;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv *= cloudscale*3.0;\n        newUv -= q - t;\n        weight = 0.4;\n        for (int i=0; i<7; i++){\n            c1 += abs(weight*noise( newUv ));\n            newUv = m*newUv + t;\n            weight *= 0.6;\n        }\n\n        c += c1;\n        \n        vec3 skycolour = mix(skycolour2, skycolour1, vUv.x);\n        vec3 cloudcolour = vec3(1.1, 1.1, 0.9) * clamp((clouddark + cloudlight*c), 0.0, 1.0);\n    \n        f = cloudcover + cloudalpha*f*r;\n\n        vec3 result = mix(skycolour, clamp(skytint * skycolour + cloudcolour, 0.0, 1.0), clamp(f + c, 0.0, 1.0));\n    \n        color += result;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function OO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:AO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var BO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        uv2 -= 0.52;\n        uv2 *= 2.9;\n        uv2.x += u_time*0.1;\n        \n        vec2 q = vec2(0.);\n        q.y = fbm( uv2 + 0.2*u_time);\n        q.x = fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r ));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f),0.0,1.0));\n        color += c;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function NO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:BO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var GO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        uv2 -= 0.52;\n        uv2 *= 3.9;\n        uv2.x += u_time*0.1;\n        uv2.y += u_time * 0.1;\n        \n        vec2 q = vec2(0.);\n        q.y = fbm( uv2 + 0.2*u_time);\n        q.x = fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function VO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:GO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(1.83/r1 + .95 + u_time * 0.025 + r1, a );\n        uv2 -= 0.52;\n        uv2 *= 2.9;\n        uv2.x -= u_time*0.1;\n        uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        uv3 *= 1.2;\n        uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        vec2 cp0 = vec2(-0.5, 1.95);\n        vec2 cp1 = vec2(0.75, 0.5);\n        vec2 cp3 = vec2(0.5, 0.5);\n        float l = cubicBezierNearlyThroughTwoPoints(uv3.x*0.25, cp0, cp1);\n        float l2 = cubicBezierNearlyThroughTwoPoints(uv4.y*0.25, cp0, cp3);\n        float px = 1. / vUv.y;\n\n        float t1 = uv3.x*7.-2.*u_time+uv3.y*3.;\n        uv3.y += sin(t1) * 0.05;\n        float x = .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        float y = fbm(uv4 + r2 * fbm(uv4 + r2));\n        // color *= .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        \n        color *= vec3( smoothstep(l, l+0.025, vUv.y+0.6));\n        color.g += (1. - smoothstep(l, l+0.025, vUv.y+0.6))* 0.72 * x* y;\n        \n        // color -= vec3(1. - smoothstep(l2, l2, vUv.y+0.5));\n\n        \n        \n        // color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function WO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:qO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(1.83/r1 + .95 + u_time * 0.025 + r1, a );\n        uv2 -= 0.52;\n        uv2 *= 2.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        uv3 *= 1.2;\n        uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        vec2 cp0 = vec2(-0.5, 1.95);\n        vec2 cp1 = vec2(0.75, 0.5);\n        vec2 cp3 = vec2(0.5, 0.5);\n        float l = cubicBezierNearlyThroughTwoPoints(uv3.x*0.25, cp0, cp1);\n        float l2 = cubicBezierNearlyThroughTwoPoints(uv4.y*0.25, cp0, cp3);\n        float px = 1. / vUv.y;\n\n        float t1 = uv3.x*7.-2.*u_time+uv3.y*3.;\n        uv3.y += sin(t1) * 0.05;\n        float x = .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        float y = fbm(uv4 + r2 * fbm(uv4 + r2));\n        color *= .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        \n        color *= vec3( smoothstep(l, l+0.025, vUv.y+0.6));\n        color.g += (1. - smoothstep(l, l+0.025, vUv.y+0.6))* 0.72 * x* y;\n        \n        // color -= vec3(1. - smoothstep(l2, l2, vUv.y+0.5));\n\n        \n        \n        // color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function XO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:HO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var YO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    uniform sampler2D u_texture;\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n        \n        // vec2 pic = texture2D(u_texture);\n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 2.5);\n        uv2 = vec2(1.83/r1 + .45 + -u_time * 0.125 + r1, a );\n        uv2 -= 0.52;\n        uv2 *= 1.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        uv3 *= 1.2;\n        uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        vec2 cp0 = vec2(-0.65, 1.95);\n        vec2 cp1 = vec2(0.85, 0.4);\n        vec2 cp3 = vec2(0.5, 0.5);\n        float l = cubicBezierNearlyThroughTwoPoints(uv3.x*0.25, cp0, cp1);\n        float l2 = cubicBezierNearlyThroughTwoPoints(uv4.y*0.25, cp0, cp3);\n        float px = 1. / vUv.y;\n\n        float t1 = uv3.x*7.-2.*u_time+uv3.y*3.;\n        uv3.y += sin(t1) * 0.05;\n        float x = .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        float y = fbm(uv4 + r2 * fbm(uv4 + r2));\n        // color *= .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        \n        color *= vec3( smoothstep(l, l+0.025, vUv.y+0.6));\n        // color.g += (1. - smoothstep(l, l+0.025, vUv.y+0.6))* 0.72 * x* y;\n        \n        // color -= vec3(1. - smoothstep(l2, l2, vUv.y+0.5));\n\n        \n        // color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        vec4 col = texture2D(u_texture, vec2(vUv.x, vUv.y + 0.305));\n        \n        col.xyz += color;\n        gl_FragColor = vec4(color, 1.);\n        // gl_FragColor = texture2D(u_texture, vUv);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function ZO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:YO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QO=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n   \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n        uv2 -= 0.475;\n        // vec2 pic = texture2D(u_texture);\n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 2.75 +0.6) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(.000083/r1 + .45 + -u_time * 0.925 + r1, a );\n        // uv2.x -= 0.52;\n        // uv2 *= 1.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        // uv3 *= 1.2;\n        // uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * f * 0.8),0.0,1.0));\n\n        \n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n        // gl_FragColor = texture2D(u_texture, vUv);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function JO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:QO,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $O=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n   \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numSix(vec2(p.x + 0.35, p.y));\n        float center = numZero(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.5, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n        uv2 -= 0.475;\n        // vec2 pic = texture2D(u_texture);\n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 2.75 +0.6) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 8.5);\n        uv2 = vec2(.003/r1 + u_time * 0.925 + r1, a );\n        // uv2.x -= 0.52;\n        // uv2 *= 1.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        // uv3 *= 1.2;\n        // uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1 + cos(u_time * 0.3), skycolour2 + abs(sin(u_time * 0.1)/5.) - 0.5, clamp((f*f*f + f * f * 0.8),0.,.8));\n\n        \n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n        // gl_FragColor = texture2D(u_texture, vUv);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function KO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:$O,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eB=new qa({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Ox+Bx+Ax+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numSix(vec2(p.x + 0.35, p.y));\n        float center = numZero(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.2,1.); // box position\n    b0p = p-b0p;\n    b0p.yz *=Rotate(u_time * .2);\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.85,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.2,1.); // box position\n    b1p = p-b1p;\n    b1p.yz *=Rotate(u_time * .2);\n    b1p.xz *=Rotate(u_time * .2);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.2,1.); // box position\n    b2p = p-b2p;\n    b2p.yz *=Rotate(u_time * .2);\n    b2p.xz *=Rotate(u_time * .2);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,0.5,1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, s0, 0.15 + sin(u_time * 1.5)/8.);\n     \n    csg2 = smoothDifferenceSDF(csg1, s1, 0.15 + cos(u_time * 1.5)/8.);\n\n    csg3 = smoothDifferenceSDF(csg0, b2, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,5.,0.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,2.,-2.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new ir},u_mouse:{type:"v2",value:new ir}}});function nB(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)("mesh",{ref:e,material:eB,children:(0,Nx.jsx)("boxGeometry",{args:[2,2,.1]})})})}function tB(){var e=[(0,Nx.jsx)(Vx,{}),(0,Nx.jsx)(Wx,{}),(0,Nx.jsx)(Xx,{}),(0,Nx.jsx)(Zx,{}),(0,Nx.jsx)(Jx,{}),(0,Nx.jsx)(Kx,{}),(0,Nx.jsx)(ng,{}),(0,Nx.jsx)(rg,{}),(0,Nx.jsx)(ag,{}),(0,Nx.jsx)(vg,{}),(0,Nx.jsx)(cg,{}),(0,Nx.jsx)(ug,{}),(0,Nx.jsx)(pg,{}),(0,Nx.jsx)(dg,{}),(0,Nx.jsx)(xg,{}),(0,Nx.jsx)(yg,{}),(0,Nx.jsx)(bg,{}),(0,Nx.jsx)(wg,{}),(0,Nx.jsx)(Mg,{}),(0,Nx.jsx)(kg,{}),(0,Nx.jsx)(Tg,{}),(0,Nx.jsx)(zg,{}),(0,Nx.jsx)(Fg,{}),(0,Nx.jsx)(Eg,{}),(0,Nx.jsx)(Lg,{}),(0,Nx.jsx)(Og,{}),(0,Nx.jsx)(Ng,{}),(0,Nx.jsx)(Vg,{}),(0,Nx.jsx)(Wg,{}),(0,Nx.jsx)(Xg,{}),(0,Nx.jsx)(Zg,{}),(0,Nx.jsx)(Jg,{}),(0,Nx.jsx)(Kg,{}),(0,Nx.jsx)(ny,{}),(0,Nx.jsx)(ry,{}),(0,Nx.jsx)(ay,{}),(0,Nx.jsx)(vy,{}),(0,Nx.jsx)(cy,{}),(0,Nx.jsx)(uy,{}),(0,Nx.jsx)(py,{}),(0,Nx.jsx)(dy,{}),(0,Nx.jsx)(xy,{}),(0,Nx.jsx)(yy,{}),(0,Nx.jsx)(by,{}),(0,Nx.jsx)(wy,{}),(0,Nx.jsx)(My,{}),(0,Nx.jsx)(ky,{}),(0,Nx.jsx)(Ty,{}),(0,Nx.jsx)(zy,{}),(0,Nx.jsx)(Fy,{}),(0,Nx.jsx)(Ey,{}),(0,Nx.jsx)(Ly,{}),(0,Nx.jsx)(Oy,{}),(0,Nx.jsx)(Ny,{}),(0,Nx.jsx)(Vy,{}),(0,Nx.jsx)(Wy,{}),(0,Nx.jsx)(Xy,{}),(0,Nx.jsx)(Zy,{}),(0,Nx.jsx)(Jy,{}),(0,Nx.jsx)(Ky,{}),(0,Nx.jsx)(n_,{}),(0,Nx.jsx)(r_,{}),(0,Nx.jsx)(a_,{}),(0,Nx.jsx)(v_,{}),(0,Nx.jsx)(c_,{}),(0,Nx.jsx)(u_,{}),(0,Nx.jsx)(p_,{}),(0,Nx.jsx)(d_,{}),(0,Nx.jsx)(x_,{}),(0,Nx.jsx)(y_,{}),(0,Nx.jsx)(b_,{}),(0,Nx.jsx)(w_,{}),(0,Nx.jsx)(M_,{}),(0,Nx.jsx)(k_,{}),(0,Nx.jsx)(T_,{}),(0,Nx.jsx)(z_,{}),(0,Nx.jsx)(F_,{}),(0,Nx.jsx)(E_,{}),(0,Nx.jsx)(L_,{}),(0,Nx.jsx)(O_,{}),(0,Nx.jsx)(N_,{}),(0,Nx.jsx)(V_,{}),(0,Nx.jsx)(W_,{}),(0,Nx.jsx)(X_,{}),(0,Nx.jsx)(Z_,{}),(0,Nx.jsx)(J_,{}),(0,Nx.jsx)(K_,{}),(0,Nx.jsx)(nb,{}),(0,Nx.jsx)(rb,{}),(0,Nx.jsx)(ab,{}),(0,Nx.jsx)(vb,{}),(0,Nx.jsx)(cb,{}),(0,Nx.jsx)(ub,{}),(0,Nx.jsx)(pb,{}),(0,Nx.jsx)(db,{}),(0,Nx.jsx)(xb,{}),(0,Nx.jsx)(yb,{}),(0,Nx.jsx)(bb,{}),(0,Nx.jsx)(wb,{}),(0,Nx.jsx)(Mb,{}),(0,Nx.jsx)(kb,{}),(0,Nx.jsx)(Tb,{}),(0,Nx.jsx)(zb,{}),(0,Nx.jsx)(Fb,{}),(0,Nx.jsx)(Eb,{}),(0,Nx.jsx)(Lb,{}),(0,Nx.jsx)(Ob,{}),(0,Nx.jsx)(Nb,{}),(0,Nx.jsx)(Vb,{}),(0,Nx.jsx)(Wb,{}),(0,Nx.jsx)(Xb,{}),(0,Nx.jsx)(Zb,{}),(0,Nx.jsx)(Jb,{}),(0,Nx.jsx)(Kb,{}),(0,Nx.jsx)(nU,{}),(0,Nx.jsx)(rU,{}),(0,Nx.jsx)(aU,{}),(0,Nx.jsx)(vU,{}),(0,Nx.jsx)(cU,{}),(0,Nx.jsx)(uU,{}),(0,Nx.jsx)(pU,{}),(0,Nx.jsx)(dU,{}),(0,Nx.jsx)(xU,{}),(0,Nx.jsx)(yU,{}),(0,Nx.jsx)(bU,{}),(0,Nx.jsx)(wU,{}),(0,Nx.jsx)(MU,{}),(0,Nx.jsx)(kU,{}),(0,Nx.jsx)(TU,{}),(0,Nx.jsx)(zU,{}),(0,Nx.jsx)(FU,{}),(0,Nx.jsx)(EU,{}),(0,Nx.jsx)(LU,{}),(0,Nx.jsx)(OU,{}),(0,Nx.jsx)(NU,{}),(0,Nx.jsx)(VU,{}),(0,Nx.jsx)(WU,{}),(0,Nx.jsx)(XU,{}),(0,Nx.jsx)(ZU,{}),(0,Nx.jsx)(JU,{}),(0,Nx.jsx)(KU,{}),(0,Nx.jsx)(nw,{}),(0,Nx.jsx)(rw,{}),(0,Nx.jsx)(aw,{}),(0,Nx.jsx)(vw,{}),(0,Nx.jsx)(cw,{}),(0,Nx.jsx)(uw,{}),(0,Nx.jsx)(pw,{}),(0,Nx.jsx)(dw,{}),(0,Nx.jsx)(xw,{}),(0,Nx.jsx)(yw,{}),(0,Nx.jsx)(bw,{}),(0,Nx.jsx)(ww,{}),(0,Nx.jsx)(Mw,{}),(0,Nx.jsx)(kw,{}),(0,Nx.jsx)(Tw,{}),(0,Nx.jsx)(zw,{}),(0,Nx.jsx)(Fw,{}),(0,Nx.jsx)(Ew,{}),(0,Nx.jsx)(Lw,{}),(0,Nx.jsx)(Ow,{}),(0,Nx.jsx)(Nw,{}),(0,Nx.jsx)(Vw,{}),(0,Nx.jsx)(Ww,{}),(0,Nx.jsx)(Xw,{}),(0,Nx.jsx)(Zw,{}),(0,Nx.jsx)(Jw,{}),(0,Nx.jsx)(Kw,{}),(0,Nx.jsx)(nS,{}),(0,Nx.jsx)(rS,{}),(0,Nx.jsx)(aS,{}),(0,Nx.jsx)(vS,{}),(0,Nx.jsx)(cS,{}),(0,Nx.jsx)(uS,{}),(0,Nx.jsx)(pS,{}),(0,Nx.jsx)(dS,{}),(0,Nx.jsx)(xS,{}),(0,Nx.jsx)(yS,{}),(0,Nx.jsx)(bS,{}),(0,Nx.jsx)(wS,{}),(0,Nx.jsx)(MS,{}),(0,Nx.jsx)(kS,{}),(0,Nx.jsx)(TS,{}),(0,Nx.jsx)(zS,{}),(0,Nx.jsx)(FS,{}),(0,Nx.jsx)(ES,{}),(0,Nx.jsx)(LS,{}),(0,Nx.jsx)(OS,{}),(0,Nx.jsx)(NS,{}),(0,Nx.jsx)(VS,{}),(0,Nx.jsx)(WS,{}),(0,Nx.jsx)(XS,{}),(0,Nx.jsx)(ZS,{}),(0,Nx.jsx)(JS,{}),(0,Nx.jsx)(KS,{}),(0,Nx.jsx)(nM,{}),(0,Nx.jsx)(rM,{}),(0,Nx.jsx)(aM,{}),(0,Nx.jsx)(vM,{}),(0,Nx.jsx)(cM,{}),(0,Nx.jsx)(uM,{}),(0,Nx.jsx)(pM,{}),(0,Nx.jsx)(dM,{}),(0,Nx.jsx)(xM,{}),(0,Nx.jsx)(yM,{}),(0,Nx.jsx)(bM,{}),(0,Nx.jsx)(wM,{}),(0,Nx.jsx)(MM,{}),(0,Nx.jsx)(kM,{}),(0,Nx.jsx)(TM,{}),(0,Nx.jsx)(zM,{}),(0,Nx.jsx)(FM,{}),(0,Nx.jsx)(EM,{}),(0,Nx.jsx)(LM,{}),(0,Nx.jsx)(OM,{}),(0,Nx.jsx)(NM,{}),(0,Nx.jsx)(VM,{}),(0,Nx.jsx)(WM,{}),(0,Nx.jsx)(XM,{}),(0,Nx.jsx)(ZM,{}),(0,Nx.jsx)(JM,{}),(0,Nx.jsx)(KM,{}),(0,Nx.jsx)(nj,{}),(0,Nx.jsx)(rj,{}),(0,Nx.jsx)(aj,{}),(0,Nx.jsx)(vj,{}),(0,Nx.jsx)(cj,{}),(0,Nx.jsx)(uj,{}),(0,Nx.jsx)(pj,{}),(0,Nx.jsx)(dj,{}),(0,Nx.jsx)(xj,{}),(0,Nx.jsx)(yj,{}),(0,Nx.jsx)(bj,{}),(0,Nx.jsx)(wj,{}),(0,Nx.jsx)(Mj,{}),(0,Nx.jsx)(kj,{}),(0,Nx.jsx)(Tj,{}),(0,Nx.jsx)(zj,{}),(0,Nx.jsx)(Fj,{}),(0,Nx.jsx)(Ej,{}),(0,Nx.jsx)(Lj,{}),(0,Nx.jsx)(Oj,{}),(0,Nx.jsx)(Nj,{}),(0,Nx.jsx)(Vj,{}),(0,Nx.jsx)(Wj,{}),(0,Nx.jsx)(Xj,{}),(0,Nx.jsx)(Zj,{}),(0,Nx.jsx)(Jj,{}),(0,Nx.jsx)(Kj,{}),(0,Nx.jsx)(nk,{}),(0,Nx.jsx)(rk,{}),(0,Nx.jsx)(ak,{}),(0,Nx.jsx)(vk,{}),(0,Nx.jsx)(ck,{}),(0,Nx.jsx)(uk,{}),(0,Nx.jsx)(pk,{}),(0,Nx.jsx)(dk,{}),(0,Nx.jsx)(xk,{}),(0,Nx.jsx)(yk,{}),(0,Nx.jsx)(bk,{}),(0,Nx.jsx)(wk,{}),(0,Nx.jsx)(Mk,{}),(0,Nx.jsx)(kk,{}),(0,Nx.jsx)(Tk,{}),(0,Nx.jsx)(zk,{}),(0,Nx.jsx)(Fk,{}),(0,Nx.jsx)(Ek,{}),(0,Nx.jsx)(Lk,{}),(0,Nx.jsx)(Ok,{}),(0,Nx.jsx)(Nk,{}),(0,Nx.jsx)(Vk,{}),(0,Nx.jsx)(Wk,{}),(0,Nx.jsx)(Xk,{}),(0,Nx.jsx)(Zk,{}),(0,Nx.jsx)(Jk,{}),(0,Nx.jsx)(Kk,{}),(0,Nx.jsx)(nC,{}),(0,Nx.jsx)(rC,{}),(0,Nx.jsx)(aC,{}),(0,Nx.jsx)(vC,{}),(0,Nx.jsx)(cC,{}),(0,Nx.jsx)(uC,{}),(0,Nx.jsx)(pC,{}),(0,Nx.jsx)(dC,{}),(0,Nx.jsx)(xC,{}),(0,Nx.jsx)(yC,{}),(0,Nx.jsx)(bC,{}),(0,Nx.jsx)(wC,{}),(0,Nx.jsx)(MC,{}),(0,Nx.jsx)(kC,{}),(0,Nx.jsx)(TC,{}),(0,Nx.jsx)(zC,{}),(0,Nx.jsx)(FC,{}),(0,Nx.jsx)(EC,{}),(0,Nx.jsx)(LC,{}),(0,Nx.jsx)(OC,{}),(0,Nx.jsx)(NC,{}),(0,Nx.jsx)(VC,{}),(0,Nx.jsx)(WC,{}),(0,Nx.jsx)(XC,{}),(0,Nx.jsx)(ZC,{}),(0,Nx.jsx)(JC,{}),(0,Nx.jsx)(KC,{}),(0,Nx.jsx)(nT,{}),(0,Nx.jsx)(rT,{}),(0,Nx.jsx)(aT,{}),(0,Nx.jsx)(vT,{}),(0,Nx.jsx)(cT,{}),(0,Nx.jsx)(uT,{}),(0,Nx.jsx)(pT,{}),(0,Nx.jsx)(dT,{}),(0,Nx.jsx)(xT,{}),(0,Nx.jsx)(yT,{}),(0,Nx.jsx)(bT,{}),(0,Nx.jsx)(wT,{}),(0,Nx.jsx)(MT,{}),(0,Nx.jsx)(kT,{}),(0,Nx.jsx)(TT,{}),(0,Nx.jsx)(zT,{}),(0,Nx.jsx)(FT,{}),(0,Nx.jsx)(ET,{}),(0,Nx.jsx)(LT,{}),(0,Nx.jsx)(OT,{}),(0,Nx.jsx)(NT,{}),(0,Nx.jsx)(VT,{}),(0,Nx.jsx)(WT,{}),(0,Nx.jsx)(XT,{}),(0,Nx.jsx)(ZT,{}),(0,Nx.jsx)(JT,{}),(0,Nx.jsx)(KT,{}),(0,Nx.jsx)(nR,{}),(0,Nx.jsx)(rR,{}),(0,Nx.jsx)(aR,{}),(0,Nx.jsx)(vR,{}),(0,Nx.jsx)(cR,{}),(0,Nx.jsx)(uR,{}),(0,Nx.jsx)(pR,{}),(0,Nx.jsx)(dR,{}),(0,Nx.jsx)(xR,{}),(0,Nx.jsx)(yR,{}),(0,Nx.jsx)(bR,{}),(0,Nx.jsx)(wR,{}),(0,Nx.jsx)(MR,{}),(0,Nx.jsx)(kR,{}),(0,Nx.jsx)(TR,{}),(0,Nx.jsx)(zR,{}),(0,Nx.jsx)(FR,{}),(0,Nx.jsx)(ER,{}),(0,Nx.jsx)(LR,{}),(0,Nx.jsx)(OR,{}),(0,Nx.jsx)(NR,{}),(0,Nx.jsx)(VR,{}),(0,Nx.jsx)(WR,{}),(0,Nx.jsx)(XR,{}),(0,Nx.jsx)(ZR,{}),(0,Nx.jsx)(JR,{}),(0,Nx.jsx)(KR,{}),(0,Nx.jsx)(nz,{}),(0,Nx.jsx)(rz,{}),(0,Nx.jsx)(az,{}),(0,Nx.jsx)(vz,{}),(0,Nx.jsx)(cz,{}),(0,Nx.jsx)(uz,{}),(0,Nx.jsx)(pz,{}),(0,Nx.jsx)(dz,{}),(0,Nx.jsx)(xz,{}),(0,Nx.jsx)(yz,{}),(0,Nx.jsx)(bz,{}),(0,Nx.jsx)(wz,{}),(0,Nx.jsx)(Mz,{}),(0,Nx.jsx)(kz,{}),(0,Nx.jsx)(Tz,{}),(0,Nx.jsx)(zz,{}),(0,Nx.jsx)(Fz,{}),(0,Nx.jsx)(Ez,{}),(0,Nx.jsx)(Lz,{}),(0,Nx.jsx)(Oz,{}),(0,Nx.jsx)(Nz,{}),(0,Nx.jsx)(Vz,{}),(0,Nx.jsx)(Wz,{}),(0,Nx.jsx)(Xz,{}),(0,Nx.jsx)(Zz,{}),(0,Nx.jsx)(Jz,{}),(0,Nx.jsx)(Kz,{}),(0,Nx.jsx)(nP,{}),(0,Nx.jsx)(rP,{}),(0,Nx.jsx)(aP,{}),(0,Nx.jsx)(vP,{}),(0,Nx.jsx)(cP,{}),(0,Nx.jsx)(uP,{}),(0,Nx.jsx)(pP,{}),(0,Nx.jsx)(dP,{}),(0,Nx.jsx)(xP,{}),(0,Nx.jsx)(yP,{}),(0,Nx.jsx)(bP,{}),(0,Nx.jsx)(wP,{}),(0,Nx.jsx)(MP,{}),(0,Nx.jsx)(kP,{}),(0,Nx.jsx)(TP,{}),(0,Nx.jsx)(zP,{}),(0,Nx.jsx)(FP,{}),(0,Nx.jsx)(EP,{}),(0,Nx.jsx)(LP,{}),(0,Nx.jsx)(OP,{}),(0,Nx.jsx)(NP,{}),(0,Nx.jsx)(VP,{}),(0,Nx.jsx)(WP,{}),(0,Nx.jsx)(XP,{}),(0,Nx.jsx)(ZP,{}),(0,Nx.jsx)(JP,{}),(0,Nx.jsx)(KP,{}),(0,Nx.jsx)(nF,{}),(0,Nx.jsx)(rF,{}),(0,Nx.jsx)(aF,{}),(0,Nx.jsx)(vF,{}),(0,Nx.jsx)(cF,{}),(0,Nx.jsx)(uF,{}),(0,Nx.jsx)(pF,{}),(0,Nx.jsx)(dF,{}),(0,Nx.jsx)(xF,{}),(0,Nx.jsx)(yF,{}),(0,Nx.jsx)(bF,{}),(0,Nx.jsx)(wF,{}),(0,Nx.jsx)(MF,{}),(0,Nx.jsx)(kF,{}),(0,Nx.jsx)(TF,{}),(0,Nx.jsx)(zF,{}),(0,Nx.jsx)(FF,{}),(0,Nx.jsx)(EF,{}),(0,Nx.jsx)(LF,{}),(0,Nx.jsx)(OF,{}),(0,Nx.jsx)(NF,{}),(0,Nx.jsx)(VF,{}),(0,Nx.jsx)(WF,{}),(0,Nx.jsx)(XF,{}),(0,Nx.jsx)(ZF,{}),(0,Nx.jsx)(JF,{}),(0,Nx.jsx)(KF,{}),(0,Nx.jsx)(nD,{}),(0,Nx.jsx)(rD,{}),(0,Nx.jsx)(aD,{}),(0,Nx.jsx)(vD,{}),(0,Nx.jsx)(cD,{}),(0,Nx.jsx)(uD,{}),(0,Nx.jsx)(pD,{}),(0,Nx.jsx)(dD,{}),(0,Nx.jsx)(xD,{}),(0,Nx.jsx)(yD,{}),(0,Nx.jsx)(bD,{}),(0,Nx.jsx)(wD,{}),(0,Nx.jsx)(MD,{}),(0,Nx.jsx)(kD,{}),(0,Nx.jsx)(TD,{}),(0,Nx.jsx)(zD,{}),(0,Nx.jsx)(FD,{}),(0,Nx.jsx)(ED,{}),(0,Nx.jsx)(LD,{}),(0,Nx.jsx)(OD,{}),(0,Nx.jsx)(ND,{}),(0,Nx.jsx)(VD,{}),(0,Nx.jsx)(WD,{}),(0,Nx.jsx)(XD,{}),(0,Nx.jsx)(ZD,{}),(0,Nx.jsx)(JD,{}),(0,Nx.jsx)(KD,{}),(0,Nx.jsx)(nE,{}),(0,Nx.jsx)(rE,{}),(0,Nx.jsx)(aE,{}),(0,Nx.jsx)(vE,{}),(0,Nx.jsx)(cE,{}),(0,Nx.jsx)(uE,{}),(0,Nx.jsx)(pE,{}),(0,Nx.jsx)(dE,{}),(0,Nx.jsx)(xE,{}),(0,Nx.jsx)(yE,{}),(0,Nx.jsx)(bE,{}),(0,Nx.jsx)(wE,{}),(0,Nx.jsx)(ME,{}),(0,Nx.jsx)(kE,{}),(0,Nx.jsx)(TE,{}),(0,Nx.jsx)(zE,{}),(0,Nx.jsx)(FE,{}),(0,Nx.jsx)(EE,{}),(0,Nx.jsx)(LE,{}),(0,Nx.jsx)(OE,{}),(0,Nx.jsx)(NE,{}),(0,Nx.jsx)(VE,{}),(0,Nx.jsx)(WE,{}),(0,Nx.jsx)(XE,{}),(0,Nx.jsx)(ZE,{}),(0,Nx.jsx)(JE,{}),(0,Nx.jsx)(KE,{}),(0,Nx.jsx)(nI,{}),(0,Nx.jsx)(rI,{}),(0,Nx.jsx)(aI,{}),(0,Nx.jsx)(vI,{}),(0,Nx.jsx)(cI,{}),(0,Nx.jsx)(uI,{}),(0,Nx.jsx)(pI,{}),(0,Nx.jsx)(dI,{}),(0,Nx.jsx)(xI,{}),(0,Nx.jsx)(yI,{}),(0,Nx.jsx)(bI,{}),(0,Nx.jsx)(wI,{}),(0,Nx.jsx)(MI,{}),(0,Nx.jsx)(kI,{}),(0,Nx.jsx)(TI,{}),(0,Nx.jsx)(zI,{}),(0,Nx.jsx)(FI,{}),(0,Nx.jsx)(EI,{}),(0,Nx.jsx)(LI,{}),(0,Nx.jsx)(OI,{}),(0,Nx.jsx)(NI,{}),(0,Nx.jsx)(VI,{}),(0,Nx.jsx)(WI,{}),(0,Nx.jsx)(XI,{}),(0,Nx.jsx)(ZI,{}),(0,Nx.jsx)(JI,{}),(0,Nx.jsx)(KI,{}),(0,Nx.jsx)(nL,{}),(0,Nx.jsx)(rL,{}),(0,Nx.jsx)(aL,{}),(0,Nx.jsx)(vL,{}),(0,Nx.jsx)(cL,{}),(0,Nx.jsx)(uL,{}),(0,Nx.jsx)(pL,{}),(0,Nx.jsx)(dL,{}),(0,Nx.jsx)(xL,{}),(0,Nx.jsx)(yL,{}),(0,Nx.jsx)(bL,{}),(0,Nx.jsx)(wL,{}),(0,Nx.jsx)(ML,{}),(0,Nx.jsx)(kL,{}),(0,Nx.jsx)(TL,{}),(0,Nx.jsx)(zL,{}),(0,Nx.jsx)(FL,{}),(0,Nx.jsx)(EL,{}),(0,Nx.jsx)(LL,{}),(0,Nx.jsx)(OL,{}),(0,Nx.jsx)(NL,{}),(0,Nx.jsx)(VL,{}),(0,Nx.jsx)(WL,{}),(0,Nx.jsx)(XL,{}),(0,Nx.jsx)(ZL,{}),(0,Nx.jsx)(JL,{}),(0,Nx.jsx)(KL,{}),(0,Nx.jsx)(nA,{}),(0,Nx.jsx)(rA,{}),(0,Nx.jsx)(aA,{}),(0,Nx.jsx)(vA,{}),(0,Nx.jsx)(cA,{}),(0,Nx.jsx)(uA,{}),(0,Nx.jsx)(pA,{}),(0,Nx.jsx)(dA,{}),(0,Nx.jsx)(xA,{}),(0,Nx.jsx)(yA,{}),(0,Nx.jsx)(bA,{}),(0,Nx.jsx)(wA,{}),(0,Nx.jsx)(MA,{}),(0,Nx.jsx)(kA,{}),(0,Nx.jsx)(TA,{}),(0,Nx.jsx)(zA,{}),(0,Nx.jsx)(FA,{}),(0,Nx.jsx)(EA,{}),(0,Nx.jsx)(LA,{}),(0,Nx.jsx)(OA,{}),(0,Nx.jsx)(NA,{}),(0,Nx.jsx)(VA,{}),(0,Nx.jsx)(WA,{}),(0,Nx.jsx)(XA,{}),(0,Nx.jsx)(ZA,{}),(0,Nx.jsx)(JA,{}),(0,Nx.jsx)(KA,{}),(0,Nx.jsx)(nO,{}),(0,Nx.jsx)(rO,{}),(0,Nx.jsx)(aO,{}),(0,Nx.jsx)(vO,{}),(0,Nx.jsx)(cO,{}),(0,Nx.jsx)(uO,{}),(0,Nx.jsx)(pO,{}),(0,Nx.jsx)(dO,{}),(0,Nx.jsx)(xO,{}),(0,Nx.jsx)(yO,{}),(0,Nx.jsx)(bO,{}),(0,Nx.jsx)(wO,{}),(0,Nx.jsx)(MO,{}),(0,Nx.jsx)(kO,{}),(0,Nx.jsx)(TO,{}),(0,Nx.jsx)(zO,{}),(0,Nx.jsx)(FO,{}),(0,Nx.jsx)(EO,{}),(0,Nx.jsx)(LO,{}),(0,Nx.jsx)(OO,{}),(0,Nx.jsx)(NO,{}),(0,Nx.jsx)(VO,{}),(0,Nx.jsx)(WO,{}),(0,Nx.jsx)(XO,{}),(0,Nx.jsx)(ZO,{}),(0,Nx.jsx)(JO,{}),(0,Nx.jsx)(KO,{}),(0,Nx.jsx)(nB,{})];return(0,Nx.jsx)(Nx.Fragment,{children:(0,Nx.jsx)(Ex,{children:(0,Nx.jsxs)(zx,{children:[(0,Nx.jsx)(Tx,{index:!0,element:e[e.length-1]}),(0,Nx.jsx)(Tx,{path:"001",element:(0,Nx.jsx)(Vx,{})}),(0,Nx.jsx)(Tx,{path:"002",element:(0,Nx.jsx)(Wx,{})}),(0,Nx.jsx)(Tx,{path:"003",element:(0,Nx.jsx)(Xx,{})}),(0,Nx.jsx)(Tx,{path:"004",element:(0,Nx.jsx)(Zx,{})}),(0,Nx.jsx)(Tx,{path:"005",element:(0,Nx.jsx)(Jx,{})}),(0,Nx.jsx)(Tx,{path:"006",element:(0,Nx.jsx)(Kx,{})}),(0,Nx.jsx)(Tx,{path:"007",element:(0,Nx.jsx)(ng,{})}),(0,Nx.jsx)(Tx,{path:"008",element:(0,Nx.jsx)(rg,{})}),(0,Nx.jsx)(Tx,{path:"009",element:(0,Nx.jsx)(ag,{})}),(0,Nx.jsx)(Tx,{path:"010",element:(0,Nx.jsx)(vg,{})}),(0,Nx.jsx)(Tx,{path:"011",element:(0,Nx.jsx)(cg,{})}),(0,Nx.jsx)(Tx,{path:"012",element:(0,Nx.jsx)(ug,{})}),(0,Nx.jsx)(Tx,{path:"013",element:(0,Nx.jsx)(pg,{})}),(0,Nx.jsx)(Tx,{path:"014",element:(0,Nx.jsx)(dg,{})}),(0,Nx.jsx)(Tx,{path:"015",element:(0,Nx.jsx)(xg,{})}),(0,Nx.jsx)(Tx,{path:"016",element:(0,Nx.jsx)(yg,{})}),(0,Nx.jsx)(Tx,{path:"017",element:(0,Nx.jsx)(bg,{})}),(0,Nx.jsx)(Tx,{path:"018",element:(0,Nx.jsx)(wg,{})}),(0,Nx.jsx)(Tx,{path:"019",element:(0,Nx.jsx)(Mg,{})}),(0,Nx.jsx)(Tx,{path:"020",element:(0,Nx.jsx)(kg,{})}),(0,Nx.jsx)(Tx,{path:"021",element:(0,Nx.jsx)(Tg,{})}),(0,Nx.jsx)(Tx,{path:"022",element:(0,Nx.jsx)(zg,{})}),(0,Nx.jsx)(Tx,{path:"023",element:(0,Nx.jsx)(Fg,{})}),(0,Nx.jsx)(Tx,{path:"024",element:(0,Nx.jsx)(Eg,{})}),(0,Nx.jsx)(Tx,{path:"025",element:(0,Nx.jsx)(Lg,{})}),(0,Nx.jsx)(Tx,{path:"026",element:(0,Nx.jsx)(Og,{})}),(0,Nx.jsx)(Tx,{path:"027",element:(0,Nx.jsx)(Ng,{})}),(0,Nx.jsx)(Tx,{path:"028",element:(0,Nx.jsx)(Vg,{})}),(0,Nx.jsx)(Tx,{path:"029",element:(0,Nx.jsx)(Wg,{})}),(0,Nx.jsx)(Tx,{path:"030",element:(0,Nx.jsx)(Xg,{})}),(0,Nx.jsx)(Tx,{path:"031",element:(0,Nx.jsx)(Zg,{})}),(0,Nx.jsx)(Tx,{path:"032",element:(0,Nx.jsx)(Jg,{})}),(0,Nx.jsx)(Tx,{path:"033",element:(0,Nx.jsx)(Kg,{})}),(0,Nx.jsx)(Tx,{path:"034",element:(0,Nx.jsx)(ny,{})}),(0,Nx.jsx)(Tx,{path:"035",element:(0,Nx.jsx)(ry,{})}),(0,Nx.jsx)(Tx,{path:"036",element:(0,Nx.jsx)(ay,{})}),(0,Nx.jsx)(Tx,{path:"037",element:(0,Nx.jsx)(vy,{})}),(0,Nx.jsx)(Tx,{path:"038",element:(0,Nx.jsx)(cy,{})}),(0,Nx.jsx)(Tx,{path:"039",element:(0,Nx.jsx)(uy,{})}),(0,Nx.jsx)(Tx,{path:"040",element:(0,Nx.jsx)(py,{})}),(0,Nx.jsx)(Tx,{path:"041",element:(0,Nx.jsx)(dy,{})}),(0,Nx.jsx)(Tx,{path:"042",element:(0,Nx.jsx)(xy,{})}),(0,Nx.jsx)(Tx,{path:"043",element:(0,Nx.jsx)(yy,{})}),(0,Nx.jsx)(Tx,{path:"044",element:(0,Nx.jsx)(by,{})}),(0,Nx.jsx)(Tx,{path:"045",element:(0,Nx.jsx)(wy,{})}),(0,Nx.jsx)(Tx,{path:"046",element:(0,Nx.jsx)(My,{})}),(0,Nx.jsx)(Tx,{path:"047",element:(0,Nx.jsx)(ky,{})}),(0,Nx.jsx)(Tx,{path:"048",element:(0,Nx.jsx)(Ty,{})}),(0,Nx.jsx)(Tx,{path:"049",element:(0,Nx.jsx)(zy,{})}),(0,Nx.jsx)(Tx,{path:"050",element:(0,Nx.jsx)(Fy,{})}),(0,Nx.jsx)(Tx,{path:"051",element:(0,Nx.jsx)(Ey,{})}),(0,Nx.jsx)(Tx,{path:"052",element:(0,Nx.jsx)(Ly,{})}),(0,Nx.jsx)(Tx,{path:"053",element:(0,Nx.jsx)(Oy,{})}),(0,Nx.jsx)(Tx,{path:"054",element:(0,Nx.jsx)(Ny,{})}),(0,Nx.jsx)(Tx,{path:"055",element:(0,Nx.jsx)(Vy,{})}),(0,Nx.jsx)(Tx,{path:"056",element:(0,Nx.jsx)(Wy,{})}),(0,Nx.jsx)(Tx,{path:"057",element:(0,Nx.jsx)(Xy,{})}),(0,Nx.jsx)(Tx,{path:"058",element:(0,Nx.jsx)(Zy,{})}),(0,Nx.jsx)(Tx,{path:"059",element:(0,Nx.jsx)(Jy,{})}),(0,Nx.jsx)(Tx,{path:"060",element:(0,Nx.jsx)(Ky,{})}),(0,Nx.jsx)(Tx,{path:"061",element:(0,Nx.jsx)(n_,{})}),(0,Nx.jsx)(Tx,{path:"062",element:(0,Nx.jsx)(r_,{})}),(0,Nx.jsx)(Tx,{path:"063",element:(0,Nx.jsx)(a_,{})}),(0,Nx.jsx)(Tx,{path:"064",element:(0,Nx.jsx)(v_,{})}),(0,Nx.jsx)(Tx,{path:"065",element:(0,Nx.jsx)(c_,{})}),(0,Nx.jsx)(Tx,{path:"066",element:(0,Nx.jsx)(u_,{})}),(0,Nx.jsx)(Tx,{path:"067",element:(0,Nx.jsx)(p_,{})}),(0,Nx.jsx)(Tx,{path:"068",element:(0,Nx.jsx)(d_,{})}),(0,Nx.jsx)(Tx,{path:"069",element:(0,Nx.jsx)(x_,{})}),(0,Nx.jsx)(Tx,{path:"070",element:(0,Nx.jsx)(y_,{})}),(0,Nx.jsx)(Tx,{path:"071",element:(0,Nx.jsx)(b_,{})}),(0,Nx.jsx)(Tx,{path:"072",element:(0,Nx.jsx)(w_,{})}),(0,Nx.jsx)(Tx,{path:"073",element:(0,Nx.jsx)(M_,{})}),(0,Nx.jsx)(Tx,{path:"074",element:(0,Nx.jsx)(k_,{})}),(0,Nx.jsx)(Tx,{path:"075",element:(0,Nx.jsx)(T_,{})}),(0,Nx.jsx)(Tx,{path:"076",element:(0,Nx.jsx)(z_,{})}),(0,Nx.jsx)(Tx,{path:"077",element:(0,Nx.jsx)(F_,{})}),(0,Nx.jsx)(Tx,{path:"078",element:(0,Nx.jsx)(E_,{})}),(0,Nx.jsx)(Tx,{path:"079",element:(0,Nx.jsx)(L_,{})}),(0,Nx.jsx)(Tx,{path:"080",element:(0,Nx.jsx)(O_,{})}),(0,Nx.jsx)(Tx,{path:"081",element:(0,Nx.jsx)(N_,{})}),(0,Nx.jsx)(Tx,{path:"082",element:(0,Nx.jsx)(V_,{})}),(0,Nx.jsx)(Tx,{path:"083",element:(0,Nx.jsx)(W_,{})}),(0,Nx.jsx)(Tx,{path:"084",element:(0,Nx.jsx)(X_,{})}),(0,Nx.jsx)(Tx,{path:"085",element:(0,Nx.jsx)(Z_,{})}),(0,Nx.jsx)(Tx,{path:"086",element:(0,Nx.jsx)(J_,{})}),(0,Nx.jsx)(Tx,{path:"087",element:(0,Nx.jsx)(K_,{})}),(0,Nx.jsx)(Tx,{path:"088",element:(0,Nx.jsx)(nb,{})}),(0,Nx.jsx)(Tx,{path:"089",element:(0,Nx.jsx)(rb,{})}),(0,Nx.jsx)(Tx,{path:"090",element:(0,Nx.jsx)(ab,{})}),(0,Nx.jsx)(Tx,{path:"091",element:(0,Nx.jsx)(vb,{})}),(0,Nx.jsx)(Tx,{path:"092",element:(0,Nx.jsx)(cb,{})}),(0,Nx.jsx)(Tx,{path:"093",element:(0,Nx.jsx)(ub,{})}),(0,Nx.jsx)(Tx,{path:"094",element:(0,Nx.jsx)(pb,{})}),(0,Nx.jsx)(Tx,{path:"095",element:(0,Nx.jsx)(db,{})}),(0,Nx.jsx)(Tx,{path:"096",element:(0,Nx.jsx)(xb,{})}),(0,Nx.jsx)(Tx,{path:"097",element:(0,Nx.jsx)(yb,{})}),(0,Nx.jsx)(Tx,{path:"098",element:(0,Nx.jsx)(bb,{})}),(0,Nx.jsx)(Tx,{path:"099",element:(0,Nx.jsx)(wb,{})}),(0,Nx.jsx)(Tx,{path:"100",element:(0,Nx.jsx)(Mb,{})}),(0,Nx.jsx)(Tx,{path:"101",element:(0,Nx.jsx)(kb,{})}),(0,Nx.jsx)(Tx,{path:"102",element:(0,Nx.jsx)(Tb,{})}),(0,Nx.jsx)(Tx,{path:"103",element:(0,Nx.jsx)(zb,{})}),(0,Nx.jsx)(Tx,{path:"104",element:(0,Nx.jsx)(Fb,{})}),(0,Nx.jsx)(Tx,{path:"105",element:(0,Nx.jsx)(Eb,{})}),(0,Nx.jsx)(Tx,{path:"106",element:(0,Nx.jsx)(Lb,{})}),(0,Nx.jsx)(Tx,{path:"107",element:(0,Nx.jsx)(Ob,{})}),(0,Nx.jsx)(Tx,{path:"108",element:(0,Nx.jsx)(Nb,{})}),(0,Nx.jsx)(Tx,{path:"109",element:(0,Nx.jsx)(Vb,{})}),(0,Nx.jsx)(Tx,{path:"110",element:(0,Nx.jsx)(Wb,{})}),(0,Nx.jsx)(Tx,{path:"111",element:(0,Nx.jsx)(Xb,{})}),(0,Nx.jsx)(Tx,{path:"112",element:(0,Nx.jsx)(Zb,{})}),(0,Nx.jsx)(Tx,{path:"113",element:(0,Nx.jsx)(Jb,{})}),(0,Nx.jsx)(Tx,{path:"114",element:(0,Nx.jsx)(Kb,{})}),(0,Nx.jsx)(Tx,{path:"115",element:(0,Nx.jsx)(nU,{})}),(0,Nx.jsx)(Tx,{path:"116",element:(0,Nx.jsx)(rU,{})}),(0,Nx.jsx)(Tx,{path:"117",element:(0,Nx.jsx)(aU,{})}),(0,Nx.jsx)(Tx,{path:"118",element:(0,Nx.jsx)(vU,{})}),(0,Nx.jsx)(Tx,{path:"119",element:(0,Nx.jsx)(cU,{})}),(0,Nx.jsx)(Tx,{path:"120",element:(0,Nx.jsx)(uU,{})}),(0,Nx.jsx)(Tx,{path:"121",element:(0,Nx.jsx)(pU,{})}),(0,Nx.jsx)(Tx,{path:"122",element:(0,Nx.jsx)(dU,{})}),(0,Nx.jsx)(Tx,{path:"123",element:(0,Nx.jsx)(xU,{})}),(0,Nx.jsx)(Tx,{path:"124",element:(0,Nx.jsx)(yU,{})}),(0,Nx.jsx)(Tx,{path:"125",element:(0,Nx.jsx)(bU,{})}),(0,Nx.jsx)(Tx,{path:"126",element:(0,Nx.jsx)(wU,{})}),(0,Nx.jsx)(Tx,{path:"127",element:(0,Nx.jsx)(MU,{})}),(0,Nx.jsx)(Tx,{path:"128",element:(0,Nx.jsx)(kU,{})}),(0,Nx.jsx)(Tx,{path:"129",element:(0,Nx.jsx)(TU,{})}),(0,Nx.jsx)(Tx,{path:"130",element:(0,Nx.jsx)(zU,{})}),(0,Nx.jsx)(Tx,{path:"131",element:(0,Nx.jsx)(FU,{})}),(0,Nx.jsx)(Tx,{path:"132",element:(0,Nx.jsx)(EU,{})}),(0,Nx.jsx)(Tx,{path:"133",element:(0,Nx.jsx)(LU,{})}),(0,Nx.jsx)(Tx,{path:"134",element:(0,Nx.jsx)(OU,{})}),(0,Nx.jsx)(Tx,{path:"135",element:(0,Nx.jsx)(NU,{})}),(0,Nx.jsx)(Tx,{path:"136",element:(0,Nx.jsx)(VU,{})}),(0,Nx.jsx)(Tx,{path:"137",element:(0,Nx.jsx)(WU,{})}),(0,Nx.jsx)(Tx,{path:"138",element:(0,Nx.jsx)(XU,{})}),(0,Nx.jsx)(Tx,{path:"139",element:(0,Nx.jsx)(ZU,{})}),(0,Nx.jsx)(Tx,{path:"140",element:(0,Nx.jsx)(JU,{})}),(0,Nx.jsx)(Tx,{path:"141",element:(0,Nx.jsx)(KU,{})}),(0,Nx.jsx)(Tx,{path:"142",element:(0,Nx.jsx)(nw,{})}),(0,Nx.jsx)(Tx,{path:"143",element:(0,Nx.jsx)(rw,{})}),(0,Nx.jsx)(Tx,{path:"144",element:(0,Nx.jsx)(aw,{})}),(0,Nx.jsx)(Tx,{path:"145",element:(0,Nx.jsx)(vw,{})}),(0,Nx.jsx)(Tx,{path:"146",element:(0,Nx.jsx)(cw,{})}),(0,Nx.jsx)(Tx,{path:"147",element:(0,Nx.jsx)(uw,{})}),(0,Nx.jsx)(Tx,{path:"148",element:(0,Nx.jsx)(pw,{})}),(0,Nx.jsx)(Tx,{path:"149",element:(0,Nx.jsx)(dw,{})}),(0,Nx.jsx)(Tx,{path:"150",element:(0,Nx.jsx)(xw,{})}),(0,Nx.jsx)(Tx,{path:"151",element:(0,Nx.jsx)(yw,{})}),(0,Nx.jsx)(Tx,{path:"152",element:(0,Nx.jsx)(bw,{})}),(0,Nx.jsx)(Tx,{path:"153",element:(0,Nx.jsx)(ww,{})}),(0,Nx.jsx)(Tx,{path:"154",element:(0,Nx.jsx)(Mw,{})}),(0,Nx.jsx)(Tx,{path:"155",element:(0,Nx.jsx)(kw,{})}),(0,Nx.jsx)(Tx,{path:"156",element:(0,Nx.jsx)(Tw,{})}),(0,Nx.jsx)(Tx,{path:"157",element:(0,Nx.jsx)(zw,{})}),(0,Nx.jsx)(Tx,{path:"158",element:(0,Nx.jsx)(Fw,{})}),(0,Nx.jsx)(Tx,{path:"159",element:(0,Nx.jsx)(Ew,{})}),(0,Nx.jsx)(Tx,{path:"160",element:(0,Nx.jsx)(Lw,{})}),(0,Nx.jsx)(Tx,{path:"161",element:(0,Nx.jsx)(Ow,{})}),(0,Nx.jsx)(Tx,{path:"162",element:(0,Nx.jsx)(Nw,{})}),(0,Nx.jsx)(Tx,{path:"163",element:(0,Nx.jsx)(Vw,{})}),(0,Nx.jsx)(Tx,{path:"164",element:(0,Nx.jsx)(Ww,{})}),(0,Nx.jsx)(Tx,{path:"165",element:(0,Nx.jsx)(Xw,{})}),(0,Nx.jsx)(Tx,{path:"166",element:(0,Nx.jsx)(Zw,{})}),(0,Nx.jsx)(Tx,{path:"167",element:(0,Nx.jsx)(Jw,{})}),(0,Nx.jsx)(Tx,{path:"168",element:(0,Nx.jsx)(Kw,{})}),(0,Nx.jsx)(Tx,{path:"169",element:(0,Nx.jsx)(nS,{})}),(0,Nx.jsx)(Tx,{path:"170",element:(0,Nx.jsx)(rS,{})}),(0,Nx.jsx)(Tx,{path:"171",element:(0,Nx.jsx)(aS,{})}),(0,Nx.jsx)(Tx,{path:"172",element:(0,Nx.jsx)(vS,{})}),(0,Nx.jsx)(Tx,{path:"173",element:(0,Nx.jsx)(cS,{})}),(0,Nx.jsx)(Tx,{path:"174",element:(0,Nx.jsx)(uS,{})}),(0,Nx.jsx)(Tx,{path:"175",element:(0,Nx.jsx)(pS,{})}),(0,Nx.jsx)(Tx,{path:"176",element:(0,Nx.jsx)(dS,{})}),(0,Nx.jsx)(Tx,{path:"177",element:(0,Nx.jsx)(xS,{})}),(0,Nx.jsx)(Tx,{path:"178",element:(0,Nx.jsx)(yS,{})}),(0,Nx.jsx)(Tx,{path:"179",element:(0,Nx.jsx)(bS,{})}),(0,Nx.jsx)(Tx,{path:"180",element:(0,Nx.jsx)(wS,{})}),(0,Nx.jsx)(Tx,{path:"181",element:(0,Nx.jsx)(MS,{})}),(0,Nx.jsx)(Tx,{path:"182",element:(0,Nx.jsx)(kS,{})}),(0,Nx.jsx)(Tx,{path:"183",element:(0,Nx.jsx)(TS,{})}),(0,Nx.jsx)(Tx,{path:"184",element:(0,Nx.jsx)(zS,{})}),(0,Nx.jsx)(Tx,{path:"185",element:(0,Nx.jsx)(FS,{})}),(0,Nx.jsx)(Tx,{path:"186",element:(0,Nx.jsx)(ES,{})}),(0,Nx.jsx)(Tx,{path:"187",element:(0,Nx.jsx)(LS,{})}),(0,Nx.jsx)(Tx,{path:"188",element:(0,Nx.jsx)(OS,{})}),(0,Nx.jsx)(Tx,{path:"189",element:(0,Nx.jsx)(NS,{})}),(0,Nx.jsx)(Tx,{path:"190",element:(0,Nx.jsx)(VS,{})}),(0,Nx.jsx)(Tx,{path:"191",element:(0,Nx.jsx)(WS,{})}),(0,Nx.jsx)(Tx,{path:"192",element:(0,Nx.jsx)(XS,{})}),(0,Nx.jsx)(Tx,{path:"193",element:(0,Nx.jsx)(ZS,{})}),(0,Nx.jsx)(Tx,{path:"194",element:(0,Nx.jsx)(JS,{})}),(0,Nx.jsx)(Tx,{path:"195",element:(0,Nx.jsx)(KS,{})}),(0,Nx.jsx)(Tx,{path:"196",element:(0,Nx.jsx)(nM,{})}),(0,Nx.jsx)(Tx,{path:"197",element:(0,Nx.jsx)(rM,{})}),(0,Nx.jsx)(Tx,{path:"198",element:(0,Nx.jsx)(aM,{})}),(0,Nx.jsx)(Tx,{path:"199",element:(0,Nx.jsx)(vM,{})}),(0,Nx.jsx)(Tx,{path:"200",element:(0,Nx.jsx)(cM,{})}),(0,Nx.jsx)(Tx,{path:"201",element:(0,Nx.jsx)(uM,{})}),(0,Nx.jsx)(Tx,{path:"202",element:(0,Nx.jsx)(pM,{})}),(0,Nx.jsx)(Tx,{path:"203",element:(0,Nx.jsx)(dM,{})}),(0,Nx.jsx)(Tx,{path:"204",element:(0,Nx.jsx)(xM,{})}),(0,Nx.jsx)(Tx,{path:"205",element:(0,Nx.jsx)(yM,{})}),(0,Nx.jsx)(Tx,{path:"206",element:(0,Nx.jsx)(bM,{})}),(0,Nx.jsx)(Tx,{path:"207",element:(0,Nx.jsx)(wM,{})}),(0,Nx.jsx)(Tx,{path:"208",element:(0,Nx.jsx)(MM,{})}),(0,Nx.jsx)(Tx,{path:"209",element:(0,Nx.jsx)(kM,{})}),(0,Nx.jsx)(Tx,{path:"210",element:(0,Nx.jsx)(TM,{})}),(0,Nx.jsx)(Tx,{path:"211",element:(0,Nx.jsx)(zM,{})}),(0,Nx.jsx)(Tx,{path:"212",element:(0,Nx.jsx)(FM,{})}),(0,Nx.jsx)(Tx,{path:"213",element:(0,Nx.jsx)(EM,{})}),(0,Nx.jsx)(Tx,{path:"214",element:(0,Nx.jsx)(LM,{})}),(0,Nx.jsx)(Tx,{path:"215",element:(0,Nx.jsx)(OM,{})}),(0,Nx.jsx)(Tx,{path:"216",element:(0,Nx.jsx)(NM,{})}),(0,Nx.jsx)(Tx,{path:"217",element:(0,Nx.jsx)(VM,{})}),(0,Nx.jsx)(Tx,{path:"218",element:(0,Nx.jsx)(WM,{})}),(0,Nx.jsx)(Tx,{path:"219",element:(0,Nx.jsx)(XM,{})}),(0,Nx.jsx)(Tx,{path:"220",element:(0,Nx.jsx)(ZM,{})}),(0,Nx.jsx)(Tx,{path:"221",element:(0,Nx.jsx)(JM,{})}),(0,Nx.jsx)(Tx,{path:"222",element:(0,Nx.jsx)(KM,{})}),(0,Nx.jsx)(Tx,{path:"223",element:(0,Nx.jsx)(nj,{})}),(0,Nx.jsx)(Tx,{path:"224",element:(0,Nx.jsx)(rj,{})}),(0,Nx.jsx)(Tx,{path:"225",element:(0,Nx.jsx)(aj,{})}),(0,Nx.jsx)(Tx,{path:"226",element:(0,Nx.jsx)(vj,{})}),(0,Nx.jsx)(Tx,{path:"227",element:(0,Nx.jsx)(cj,{})}),(0,Nx.jsx)(Tx,{path:"228",element:(0,Nx.jsx)(uj,{})}),(0,Nx.jsx)(Tx,{path:"229",element:(0,Nx.jsx)(pj,{})}),(0,Nx.jsx)(Tx,{path:"230",element:(0,Nx.jsx)(dj,{})}),(0,Nx.jsx)(Tx,{path:"231",element:(0,Nx.jsx)(xj,{})}),(0,Nx.jsx)(Tx,{path:"232",element:(0,Nx.jsx)(yj,{})}),(0,Nx.jsx)(Tx,{path:"233",element:(0,Nx.jsx)(bj,{})}),(0,Nx.jsx)(Tx,{path:"234",element:(0,Nx.jsx)(wj,{})}),(0,Nx.jsx)(Tx,{path:"235",element:(0,Nx.jsx)(Mj,{})}),(0,Nx.jsx)(Tx,{path:"236",element:(0,Nx.jsx)(kj,{})}),(0,Nx.jsx)(Tx,{path:"237",element:(0,Nx.jsx)(Tj,{})}),(0,Nx.jsx)(Tx,{path:"238",element:(0,Nx.jsx)(zj,{})}),(0,Nx.jsx)(Tx,{path:"239",element:(0,Nx.jsx)(Fj,{})}),(0,Nx.jsx)(Tx,{path:"240",element:(0,Nx.jsx)(Ej,{})}),(0,Nx.jsx)(Tx,{path:"241",element:(0,Nx.jsx)(Lj,{})}),(0,Nx.jsx)(Tx,{path:"242",element:(0,Nx.jsx)(Oj,{})}),(0,Nx.jsx)(Tx,{path:"243",element:(0,Nx.jsx)(Nj,{})}),(0,Nx.jsx)(Tx,{path:"244",element:(0,Nx.jsx)(Vj,{})}),(0,Nx.jsx)(Tx,{path:"245",element:(0,Nx.jsx)(Wj,{})}),(0,Nx.jsx)(Tx,{path:"246",element:(0,Nx.jsx)(Xj,{})}),(0,Nx.jsx)(Tx,{path:"247",element:(0,Nx.jsx)(Zj,{})}),(0,Nx.jsx)(Tx,{path:"248",element:(0,Nx.jsx)(Jj,{})}),(0,Nx.jsx)(Tx,{path:"249",element:(0,Nx.jsx)(Kj,{})}),(0,Nx.jsx)(Tx,{path:"250",element:(0,Nx.jsx)(nk,{})}),(0,Nx.jsx)(Tx,{path:"251",element:(0,Nx.jsx)(rk,{})}),(0,Nx.jsx)(Tx,{path:"252",element:(0,Nx.jsx)(ak,{})}),(0,Nx.jsx)(Tx,{path:"253",element:(0,Nx.jsx)(vk,{})}),(0,Nx.jsx)(Tx,{path:"254",element:(0,Nx.jsx)(ck,{})}),(0,Nx.jsx)(Tx,{path:"255",element:(0,Nx.jsx)(uk,{})}),(0,Nx.jsx)(Tx,{path:"256",element:(0,Nx.jsx)(pk,{})}),(0,Nx.jsx)(Tx,{path:"257",element:(0,Nx.jsx)(dk,{})}),(0,Nx.jsx)(Tx,{path:"258",element:(0,Nx.jsx)(xk,{})}),(0,Nx.jsx)(Tx,{path:"259",element:(0,Nx.jsx)(yk,{})}),(0,Nx.jsx)(Tx,{path:"260",element:(0,Nx.jsx)(bk,{})}),(0,Nx.jsx)(Tx,{path:"261",element:(0,Nx.jsx)(wk,{})}),(0,Nx.jsx)(Tx,{path:"262",element:(0,Nx.jsx)(Mk,{})}),(0,Nx.jsx)(Tx,{path:"263",element:(0,Nx.jsx)(kk,{})}),(0,Nx.jsx)(Tx,{path:"264",element:(0,Nx.jsx)(Tk,{})}),(0,Nx.jsx)(Tx,{path:"265",element:(0,Nx.jsx)(zk,{})}),(0,Nx.jsx)(Tx,{path:"266",element:(0,Nx.jsx)(Fk,{})}),(0,Nx.jsx)(Tx,{path:"267",element:(0,Nx.jsx)(Ek,{})}),(0,Nx.jsx)(Tx,{path:"268",element:(0,Nx.jsx)(Lk,{})}),(0,Nx.jsx)(Tx,{path:"269",element:(0,Nx.jsx)(Ok,{})}),(0,Nx.jsx)(Tx,{path:"270",element:(0,Nx.jsx)(Nk,{})}),(0,Nx.jsx)(Tx,{path:"271",element:(0,Nx.jsx)(Vk,{})}),(0,Nx.jsx)(Tx,{path:"272",element:(0,Nx.jsx)(Wk,{})}),(0,Nx.jsx)(Tx,{path:"273",element:(0,Nx.jsx)(Xk,{})}),(0,Nx.jsx)(Tx,{path:"274",element:(0,Nx.jsx)(Zk,{})}),(0,Nx.jsx)(Tx,{path:"275",element:(0,Nx.jsx)(Jk,{})}),(0,Nx.jsx)(Tx,{path:"276",element:(0,Nx.jsx)(Kk,{})}),(0,Nx.jsx)(Tx,{path:"277",element:(0,Nx.jsx)(nC,{})}),(0,Nx.jsx)(Tx,{path:"278",element:(0,Nx.jsx)(rC,{})}),(0,Nx.jsx)(Tx,{path:"279",element:(0,Nx.jsx)(aC,{})}),(0,Nx.jsx)(Tx,{path:"280",element:(0,Nx.jsx)(vC,{})}),(0,Nx.jsx)(Tx,{path:"281",element:(0,Nx.jsx)(cC,{})}),(0,Nx.jsx)(Tx,{path:"282",element:(0,Nx.jsx)(uC,{})}),(0,Nx.jsx)(Tx,{path:"283",element:(0,Nx.jsx)(pC,{})}),(0,Nx.jsx)(Tx,{path:"284",element:(0,Nx.jsx)(dC,{})}),(0,Nx.jsx)(Tx,{path:"285",element:(0,Nx.jsx)(xC,{})}),(0,Nx.jsx)(Tx,{path:"286",element:(0,Nx.jsx)(yC,{})}),(0,Nx.jsx)(Tx,{path:"287",element:(0,Nx.jsx)(bC,{})}),(0,Nx.jsx)(Tx,{path:"288",element:(0,Nx.jsx)(wC,{})}),(0,Nx.jsx)(Tx,{path:"289",element:(0,Nx.jsx)(MC,{})}),(0,Nx.jsx)(Tx,{path:"290",element:(0,Nx.jsx)(kC,{})}),(0,Nx.jsx)(Tx,{path:"291",element:(0,Nx.jsx)(TC,{})}),(0,Nx.jsx)(Tx,{path:"292",element:(0,Nx.jsx)(zC,{})}),(0,Nx.jsx)(Tx,{path:"293",element:(0,Nx.jsx)(FC,{})}),(0,Nx.jsx)(Tx,{path:"294",element:(0,Nx.jsx)(EC,{})}),(0,Nx.jsx)(Tx,{path:"295",element:(0,Nx.jsx)(LC,{})}),(0,Nx.jsx)(Tx,{path:"296",element:(0,Nx.jsx)(OC,{})}),(0,Nx.jsx)(Tx,{path:"297",element:(0,Nx.jsx)(NC,{})}),(0,Nx.jsx)(Tx,{path:"298",element:(0,Nx.jsx)(VC,{})}),(0,Nx.jsx)(Tx,{path:"299",element:(0,Nx.jsx)(WC,{})}),(0,Nx.jsx)(Tx,{path:"300",element:(0,Nx.jsx)(XC,{})}),(0,Nx.jsx)(Tx,{path:"301",element:(0,Nx.jsx)(ZC,{})}),(0,Nx.jsx)(Tx,{path:"302",element:(0,Nx.jsx)(JC,{})}),(0,Nx.jsx)(Tx,{path:"303",element:(0,Nx.jsx)(KC,{})}),(0,Nx.jsx)(Tx,{path:"304",element:(0,Nx.jsx)(nT,{})}),(0,Nx.jsx)(Tx,{path:"305",element:(0,Nx.jsx)(rT,{})}),(0,Nx.jsx)(Tx,{path:"306",element:(0,Nx.jsx)(aT,{})}),(0,Nx.jsx)(Tx,{path:"307",element:(0,Nx.jsx)(vT,{})}),(0,Nx.jsx)(Tx,{path:"308",element:(0,Nx.jsx)(cT,{})}),(0,Nx.jsx)(Tx,{path:"309",element:(0,Nx.jsx)(uT,{})}),(0,Nx.jsx)(Tx,{path:"310",element:(0,Nx.jsx)(pT,{})}),(0,Nx.jsx)(Tx,{path:"311",element:(0,Nx.jsx)(dT,{})}),(0,Nx.jsx)(Tx,{path:"312",element:(0,Nx.jsx)(xT,{})}),(0,Nx.jsx)(Tx,{path:"313",element:(0,Nx.jsx)(yT,{})}),(0,Nx.jsx)(Tx,{path:"314",element:(0,Nx.jsx)(bT,{})}),(0,Nx.jsx)(Tx,{path:"315",element:(0,Nx.jsx)(wT,{})}),(0,Nx.jsx)(Tx,{path:"316",element:(0,Nx.jsx)(MT,{})}),(0,Nx.jsx)(Tx,{path:"317",element:(0,Nx.jsx)(kT,{})}),(0,Nx.jsx)(Tx,{path:"318",element:(0,Nx.jsx)(TT,{})}),(0,Nx.jsx)(Tx,{path:"319",element:(0,Nx.jsx)(zT,{})}),(0,Nx.jsx)(Tx,{path:"320",element:(0,Nx.jsx)(FT,{})}),(0,Nx.jsx)(Tx,{path:"321",element:(0,Nx.jsx)(ET,{})}),(0,Nx.jsx)(Tx,{path:"322",element:(0,Nx.jsx)(LT,{})}),(0,Nx.jsx)(Tx,{path:"323",element:(0,Nx.jsx)(OT,{})}),(0,Nx.jsx)(Tx,{path:"324",element:(0,Nx.jsx)(NT,{})}),(0,Nx.jsx)(Tx,{path:"325",element:(0,Nx.jsx)(VT,{})}),(0,Nx.jsx)(Tx,{path:"326",element:(0,Nx.jsx)(WT,{})}),(0,Nx.jsx)(Tx,{path:"327",element:(0,Nx.jsx)(XT,{})}),(0,Nx.jsx)(Tx,{path:"328",element:(0,Nx.jsx)(ZT,{})}),(0,Nx.jsx)(Tx,{path:"329",element:(0,Nx.jsx)(JT,{})}),(0,Nx.jsx)(Tx,{path:"330",element:(0,Nx.jsx)(KT,{})}),(0,Nx.jsx)(Tx,{path:"331",element:(0,Nx.jsx)(nR,{})}),(0,Nx.jsx)(Tx,{path:"332",element:(0,Nx.jsx)(rR,{})}),(0,Nx.jsx)(Tx,{path:"333",element:(0,Nx.jsx)(aR,{})}),(0,Nx.jsx)(Tx,{path:"334",element:(0,Nx.jsx)(vR,{})}),(0,Nx.jsx)(Tx,{path:"335",element:(0,Nx.jsx)(cR,{})}),(0,Nx.jsx)(Tx,{path:"336",element:(0,Nx.jsx)(uR,{})}),(0,Nx.jsx)(Tx,{path:"337",element:(0,Nx.jsx)(pR,{})}),(0,Nx.jsx)(Tx,{path:"338",element:(0,Nx.jsx)(dR,{})}),(0,Nx.jsx)(Tx,{path:"339",element:(0,Nx.jsx)(xR,{})}),(0,Nx.jsx)(Tx,{path:"340",element:(0,Nx.jsx)(yR,{})}),(0,Nx.jsx)(Tx,{path:"341",element:(0,Nx.jsx)(bR,{})}),(0,Nx.jsx)(Tx,{path:"342",element:(0,Nx.jsx)(wR,{})}),(0,Nx.jsx)(Tx,{path:"343",element:(0,Nx.jsx)(MR,{})}),(0,Nx.jsx)(Tx,{path:"344",element:(0,Nx.jsx)(kR,{})}),(0,Nx.jsx)(Tx,{path:"345",element:(0,Nx.jsx)(TR,{})}),(0,Nx.jsx)(Tx,{path:"346",element:(0,Nx.jsx)(zR,{})}),(0,Nx.jsx)(Tx,{path:"347",element:(0,Nx.jsx)(FR,{})}),(0,Nx.jsx)(Tx,{path:"348",element:(0,Nx.jsx)(ER,{})}),(0,Nx.jsx)(Tx,{path:"349",element:(0,Nx.jsx)(LR,{})}),(0,Nx.jsx)(Tx,{path:"350",element:(0,Nx.jsx)(OR,{})}),(0,Nx.jsx)(Tx,{path:"351",element:(0,Nx.jsx)(NR,{})}),(0,Nx.jsx)(Tx,{path:"352",element:(0,Nx.jsx)(VR,{})}),(0,Nx.jsx)(Tx,{path:"353",element:(0,Nx.jsx)(WR,{})}),(0,Nx.jsx)(Tx,{path:"354",element:(0,Nx.jsx)(XR,{})}),(0,Nx.jsx)(Tx,{path:"355",element:(0,Nx.jsx)(ZR,{})}),(0,Nx.jsx)(Tx,{path:"356",element:(0,Nx.jsx)(JR,{})}),(0,Nx.jsx)(Tx,{path:"357",element:(0,Nx.jsx)(KR,{})}),(0,Nx.jsx)(Tx,{path:"358",element:(0,Nx.jsx)(nz,{})}),(0,Nx.jsx)(Tx,{path:"359",element:(0,Nx.jsx)(rz,{})}),(0,Nx.jsx)(Tx,{path:"360",element:(0,Nx.jsx)(az,{})}),(0,Nx.jsx)(Tx,{path:"361",element:(0,Nx.jsx)(vz,{})}),(0,Nx.jsx)(Tx,{path:"362",element:(0,Nx.jsx)(cz,{})}),(0,Nx.jsx)(Tx,{path:"363",element:(0,Nx.jsx)(uz,{})}),(0,Nx.jsx)(Tx,{path:"364",element:(0,Nx.jsx)(pz,{})}),(0,Nx.jsx)(Tx,{path:"365",element:(0,Nx.jsx)(dz,{})}),(0,Nx.jsx)(Tx,{path:"366",element:(0,Nx.jsx)(xz,{})}),(0,Nx.jsx)(Tx,{path:"367",element:(0,Nx.jsx)(yz,{})}),(0,Nx.jsx)(Tx,{path:"368",element:(0,Nx.jsx)(bz,{})}),(0,Nx.jsx)(Tx,{path:"369",element:(0,Nx.jsx)(wz,{})}),(0,Nx.jsx)(Tx,{path:"370",element:(0,Nx.jsx)(Mz,{})}),(0,Nx.jsx)(Tx,{path:"371",element:(0,Nx.jsx)(kz,{})}),(0,Nx.jsx)(Tx,{path:"372",element:(0,Nx.jsx)(Tz,{})}),(0,Nx.jsx)(Tx,{path:"373",element:(0,Nx.jsx)(zz,{})}),(0,Nx.jsx)(Tx,{path:"374",element:(0,Nx.jsx)(Fz,{})}),(0,Nx.jsx)(Tx,{path:"375",element:(0,Nx.jsx)(Ez,{})}),(0,Nx.jsx)(Tx,{path:"376",element:(0,Nx.jsx)(Lz,{})}),(0,Nx.jsx)(Tx,{path:"377",element:(0,Nx.jsx)(Oz,{})}),(0,Nx.jsx)(Tx,{path:"378",element:(0,Nx.jsx)(Nz,{})}),(0,Nx.jsx)(Tx,{path:"379",element:(0,Nx.jsx)(Vz,{})}),(0,Nx.jsx)(Tx,{path:"380",element:(0,Nx.jsx)(Wz,{})}),(0,Nx.jsx)(Tx,{path:"381",element:(0,Nx.jsx)(Xz,{})}),(0,Nx.jsx)(Tx,{path:"382",element:(0,Nx.jsx)(Zz,{})}),(0,Nx.jsx)(Tx,{path:"383",element:(0,Nx.jsx)(Jz,{})}),(0,Nx.jsx)(Tx,{path:"384",element:(0,Nx.jsx)(Kz,{})}),(0,Nx.jsx)(Tx,{path:"385",element:(0,Nx.jsx)(nP,{})}),(0,Nx.jsx)(Tx,{path:"386",element:(0,Nx.jsx)(rP,{})}),(0,Nx.jsx)(Tx,{path:"387",element:(0,Nx.jsx)(aP,{})}),(0,Nx.jsx)(Tx,{path:"388",element:(0,Nx.jsx)(vP,{})}),(0,Nx.jsx)(Tx,{path:"389",element:(0,Nx.jsx)(cP,{})}),(0,Nx.jsx)(Tx,{path:"390",element:(0,Nx.jsx)(uP,{})}),(0,Nx.jsx)(Tx,{path:"391",element:(0,Nx.jsx)(pP,{})}),(0,Nx.jsx)(Tx,{path:"392",element:(0,Nx.jsx)(dP,{})}),(0,Nx.jsx)(Tx,{path:"393",element:(0,Nx.jsx)(xP,{})}),(0,Nx.jsx)(Tx,{path:"394",element:(0,Nx.jsx)(yP,{})}),(0,Nx.jsx)(Tx,{path:"395",element:(0,Nx.jsx)(bP,{})}),(0,Nx.jsx)(Tx,{path:"396",element:(0,Nx.jsx)(wP,{})}),(0,Nx.jsx)(Tx,{path:"397",element:(0,Nx.jsx)(MP,{})}),(0,Nx.jsx)(Tx,{path:"398",element:(0,Nx.jsx)(kP,{})}),(0,Nx.jsx)(Tx,{path:"399",element:(0,Nx.jsx)(TP,{})}),(0,Nx.jsx)(Tx,{path:"400",element:(0,Nx.jsx)(zP,{})}),(0,Nx.jsx)(Tx,{path:"401",element:(0,Nx.jsx)(FP,{})}),(0,Nx.jsx)(Tx,{path:"402",element:(0,Nx.jsx)(EP,{})}),(0,Nx.jsx)(Tx,{path:"403",element:(0,Nx.jsx)(LP,{})}),(0,Nx.jsx)(Tx,{path:"404",element:(0,Nx.jsx)(OP,{})}),(0,Nx.jsx)(Tx,{path:"405",element:(0,Nx.jsx)(NP,{})}),(0,Nx.jsx)(Tx,{path:"406",element:(0,Nx.jsx)(VP,{})}),(0,Nx.jsx)(Tx,{path:"407",element:(0,Nx.jsx)(WP,{})}),(0,Nx.jsx)(Tx,{path:"408",element:(0,Nx.jsx)(XP,{})}),(0,Nx.jsx)(Tx,{path:"409",element:(0,Nx.jsx)(ZP,{})}),(0,Nx.jsx)(Tx,{path:"410",element:(0,Nx.jsx)(JP,{})}),(0,Nx.jsx)(Tx,{path:"411",element:(0,Nx.jsx)(KP,{})}),(0,Nx.jsx)(Tx,{path:"412",element:(0,Nx.jsx)(nF,{})}),(0,Nx.jsx)(Tx,{path:"413",element:(0,Nx.jsx)(rF,{})}),(0,Nx.jsx)(Tx,{path:"414",element:(0,Nx.jsx)(aF,{})}),(0,Nx.jsx)(Tx,{path:"415",element:(0,Nx.jsx)(vF,{})}),(0,Nx.jsx)(Tx,{path:"416",element:(0,Nx.jsx)(cF,{})}),(0,Nx.jsx)(Tx,{path:"417",element:(0,Nx.jsx)(uF,{})}),(0,Nx.jsx)(Tx,{path:"418",element:(0,Nx.jsx)(pF,{})}),(0,Nx.jsx)(Tx,{path:"419",element:(0,Nx.jsx)(dF,{})}),(0,Nx.jsx)(Tx,{path:"420",element:(0,Nx.jsx)(xF,{})}),(0,Nx.jsx)(Tx,{path:"421",element:(0,Nx.jsx)(yF,{})}),(0,Nx.jsx)(Tx,{path:"422",element:(0,Nx.jsx)(bF,{})}),(0,Nx.jsx)(Tx,{path:"423",element:(0,Nx.jsx)(wF,{})}),(0,Nx.jsx)(Tx,{path:"424",element:(0,Nx.jsx)(MF,{})}),(0,Nx.jsx)(Tx,{path:"425",element:(0,Nx.jsx)(kF,{})}),(0,Nx.jsx)(Tx,{path:"426",element:(0,Nx.jsx)(TF,{})}),(0,Nx.jsx)(Tx,{path:"427",element:(0,Nx.jsx)(zF,{})}),(0,Nx.jsx)(Tx,{path:"428",element:(0,Nx.jsx)(FF,{})}),(0,Nx.jsx)(Tx,{path:"429",element:(0,Nx.jsx)(EF,{})}),(0,Nx.jsx)(Tx,{path:"430",element:(0,Nx.jsx)(LF,{})}),(0,Nx.jsx)(Tx,{path:"431",element:(0,Nx.jsx)(OF,{})}),(0,Nx.jsx)(Tx,{path:"432",element:(0,Nx.jsx)(NF,{})}),(0,Nx.jsx)(Tx,{path:"433",element:(0,Nx.jsx)(VF,{})}),(0,Nx.jsx)(Tx,{path:"434",element:(0,Nx.jsx)(WF,{})}),(0,Nx.jsx)(Tx,{path:"435",element:(0,Nx.jsx)(XF,{})}),(0,Nx.jsx)(Tx,{path:"436",element:(0,Nx.jsx)(ZF,{})}),(0,Nx.jsx)(Tx,{path:"437",element:(0,Nx.jsx)(JF,{})}),(0,Nx.jsx)(Tx,{path:"438",element:(0,Nx.jsx)(KF,{})}),(0,Nx.jsx)(Tx,{path:"439",element:(0,Nx.jsx)(nD,{})}),(0,Nx.jsx)(Tx,{path:"440",element:(0,Nx.jsx)(rD,{})}),(0,Nx.jsx)(Tx,{path:"441",element:(0,Nx.jsx)(aD,{})}),(0,Nx.jsx)(Tx,{path:"442",element:(0,Nx.jsx)(vD,{})}),(0,Nx.jsx)(Tx,{path:"443",element:(0,Nx.jsx)(cD,{})}),(0,Nx.jsx)(Tx,{path:"444",element:(0,Nx.jsx)(uD,{})}),(0,Nx.jsx)(Tx,{path:"445",element:(0,Nx.jsx)(pD,{})}),(0,Nx.jsx)(Tx,{path:"446",element:(0,Nx.jsx)(dD,{})}),(0,Nx.jsx)(Tx,{path:"447",element:(0,Nx.jsx)(xD,{})}),(0,Nx.jsx)(Tx,{path:"448",element:(0,Nx.jsx)(yD,{})}),(0,Nx.jsx)(Tx,{path:"449",element:(0,Nx.jsx)(bD,{})}),(0,Nx.jsx)(Tx,{path:"450",element:(0,Nx.jsx)(wD,{})}),(0,Nx.jsx)(Tx,{path:"451",element:(0,Nx.jsx)(MD,{})}),(0,Nx.jsx)(Tx,{path:"452",element:(0,Nx.jsx)(kD,{})}),(0,Nx.jsx)(Tx,{path:"453",element:(0,Nx.jsx)(TD,{})}),(0,Nx.jsx)(Tx,{path:"454",element:(0,Nx.jsx)(zD,{})}),(0,Nx.jsx)(Tx,{path:"455",element:(0,Nx.jsx)(FD,{})}),(0,Nx.jsx)(Tx,{path:"456",element:(0,Nx.jsx)(ED,{})}),(0,Nx.jsx)(Tx,{path:"457",element:(0,Nx.jsx)(LD,{})}),(0,Nx.jsx)(Tx,{path:"458",element:(0,Nx.jsx)(OD,{})}),(0,Nx.jsx)(Tx,{path:"459",element:(0,Nx.jsx)(ND,{})}),(0,Nx.jsx)(Tx,{path:"460",element:(0,Nx.jsx)(VD,{})}),(0,Nx.jsx)(Tx,{path:"461",element:(0,Nx.jsx)(WD,{})}),(0,Nx.jsx)(Tx,{path:"462",element:(0,Nx.jsx)(XD,{})}),(0,Nx.jsx)(Tx,{path:"463",element:(0,Nx.jsx)(ZD,{})}),(0,Nx.jsx)(Tx,{path:"464",element:(0,Nx.jsx)(JD,{})}),(0,Nx.jsx)(Tx,{path:"465",element:(0,Nx.jsx)(KD,{})}),(0,Nx.jsx)(Tx,{path:"466",element:(0,Nx.jsx)(nE,{})}),(0,Nx.jsx)(Tx,{path:"467",element:(0,Nx.jsx)(rE,{})}),(0,Nx.jsx)(Tx,{path:"468",element:(0,Nx.jsx)(aE,{})}),(0,Nx.jsx)(Tx,{path:"469",element:(0,Nx.jsx)(vE,{})}),(0,Nx.jsx)(Tx,{path:"470",element:(0,Nx.jsx)(cE,{})}),(0,Nx.jsx)(Tx,{path:"471",element:(0,Nx.jsx)(uE,{})}),(0,Nx.jsx)(Tx,{path:"472",element:(0,Nx.jsx)(pE,{})}),(0,Nx.jsx)(Tx,{path:"473",element:(0,Nx.jsx)(dE,{})}),(0,Nx.jsx)(Tx,{path:"474",element:(0,Nx.jsx)(xE,{})}),(0,Nx.jsx)(Tx,{path:"475",element:(0,Nx.jsx)(yE,{})}),(0,Nx.jsx)(Tx,{path:"476",element:(0,Nx.jsx)(bE,{})}),(0,Nx.jsx)(Tx,{path:"477",element:(0,Nx.jsx)(wE,{})}),(0,Nx.jsx)(Tx,{path:"478",element:(0,Nx.jsx)(ME,{})}),(0,Nx.jsx)(Tx,{path:"479",element:(0,Nx.jsx)(kE,{})}),(0,Nx.jsx)(Tx,{path:"480",element:(0,Nx.jsx)(TE,{})}),(0,Nx.jsx)(Tx,{path:"481",element:(0,Nx.jsx)(zE,{})}),(0,Nx.jsx)(Tx,{path:"482",element:(0,Nx.jsx)(FE,{})}),(0,Nx.jsx)(Tx,{path:"483",element:(0,Nx.jsx)(EE,{})}),(0,Nx.jsx)(Tx,{path:"484",element:(0,Nx.jsx)(LE,{})}),(0,Nx.jsx)(Tx,{path:"485",element:(0,Nx.jsx)(OE,{})}),(0,Nx.jsx)(Tx,{path:"486",element:(0,Nx.jsx)(NE,{})}),(0,Nx.jsx)(Tx,{path:"487",element:(0,Nx.jsx)(VE,{})}),(0,Nx.jsx)(Tx,{path:"488",element:(0,Nx.jsx)(WE,{})}),(0,Nx.jsx)(Tx,{path:"489",element:(0,Nx.jsx)(XE,{})}),(0,Nx.jsx)(Tx,{path:"490",element:(0,Nx.jsx)(ZE,{})}),(0,Nx.jsx)(Tx,{path:"491",element:(0,Nx.jsx)(JE,{})}),(0,Nx.jsx)(Tx,{path:"492",element:(0,Nx.jsx)(KE,{})}),(0,Nx.jsx)(Tx,{path:"493",element:(0,Nx.jsx)(nI,{})}),(0,Nx.jsx)(Tx,{path:"494",element:(0,Nx.jsx)(rI,{})}),(0,Nx.jsx)(Tx,{path:"495",element:(0,Nx.jsx)(aI,{})}),(0,Nx.jsx)(Tx,{path:"496",element:(0,Nx.jsx)(vI,{})}),(0,Nx.jsx)(Tx,{path:"497",element:(0,Nx.jsx)(cI,{})}),(0,Nx.jsx)(Tx,{path:"498",element:(0,Nx.jsx)(uI,{})}),(0,Nx.jsx)(Tx,{path:"499",element:(0,Nx.jsx)(pI,{})}),(0,Nx.jsx)(Tx,{path:"500",element:(0,Nx.jsx)(dI,{})}),(0,Nx.jsx)(Tx,{path:"501",element:(0,Nx.jsx)(xI,{})}),(0,Nx.jsx)(Tx,{path:"502",element:(0,Nx.jsx)(yI,{})}),(0,Nx.jsx)(Tx,{path:"503",element:(0,Nx.jsx)(bI,{})}),(0,Nx.jsx)(Tx,{path:"504",element:(0,Nx.jsx)(wI,{})}),(0,Nx.jsx)(Tx,{path:"505",element:(0,Nx.jsx)(MI,{})}),(0,Nx.jsx)(Tx,{path:"506",element:(0,Nx.jsx)(kI,{})}),(0,Nx.jsx)(Tx,{path:"507",element:(0,Nx.jsx)(TI,{})}),(0,Nx.jsx)(Tx,{path:"508",element:(0,Nx.jsx)(zI,{})}),(0,Nx.jsx)(Tx,{path:"509",element:(0,Nx.jsx)(FI,{})}),(0,Nx.jsx)(Tx,{path:"510",element:(0,Nx.jsx)(nL,{})}),(0,Nx.jsx)(Tx,{path:"511",element:(0,Nx.jsx)(rL,{})}),(0,Nx.jsx)(Tx,{path:"512",element:(0,Nx.jsx)(aL,{})}),(0,Nx.jsx)(Tx,{path:"513",element:(0,Nx.jsx)(vL,{})}),(0,Nx.jsx)(Tx,{path:"514",element:(0,Nx.jsx)(cL,{})}),(0,Nx.jsx)(Tx,{path:"515",element:(0,Nx.jsx)(uL,{})}),(0,Nx.jsx)(Tx,{path:"516",element:(0,Nx.jsx)(pL,{})}),(0,Nx.jsx)(Tx,{path:"517",element:(0,Nx.jsx)(dL,{})}),(0,Nx.jsx)(Tx,{path:"518",element:(0,Nx.jsx)(xL,{})}),(0,Nx.jsx)(Tx,{path:"519",element:(0,Nx.jsx)(yL,{})}),(0,Nx.jsx)(Tx,{path:"520",element:(0,Nx.jsx)(nL,{})}),(0,Nx.jsx)(Tx,{path:"521",element:(0,Nx.jsx)(rL,{})}),(0,Nx.jsx)(Tx,{path:"522",element:(0,Nx.jsx)(aL,{})}),(0,Nx.jsx)(Tx,{path:"523",element:(0,Nx.jsx)(vL,{})}),(0,Nx.jsx)(Tx,{path:"524",element:(0,Nx.jsx)(cL,{})}),(0,Nx.jsx)(Tx,{path:"525",element:(0,Nx.jsx)(uL,{})}),(0,Nx.jsx)(Tx,{path:"526",element:(0,Nx.jsx)(pL,{})}),(0,Nx.jsx)(Tx,{path:"527",element:(0,Nx.jsx)(dL,{})}),(0,Nx.jsx)(Tx,{path:"528",element:(0,Nx.jsx)(xL,{})}),(0,Nx.jsx)(Tx,{path:"529",element:(0,Nx.jsx)(yL,{})}),(0,Nx.jsx)(Tx,{path:"530",element:(0,Nx.jsx)(bL,{})}),(0,Nx.jsx)(Tx,{path:"531",element:(0,Nx.jsx)(wL,{})}),(0,Nx.jsx)(Tx,{path:"532",element:(0,Nx.jsx)(ML,{})}),(0,Nx.jsx)(Tx,{path:"533",element:(0,Nx.jsx)(kL,{})}),(0,Nx.jsx)(Tx,{path:"534",element:(0,Nx.jsx)(TL,{})}),(0,Nx.jsx)(Tx,{path:"535",element:(0,Nx.jsx)(zL,{})}),(0,Nx.jsx)(Tx,{path:"536",element:(0,Nx.jsx)(FL,{})}),(0,Nx.jsx)(Tx,{path:"537",element:(0,Nx.jsx)(EL,{})}),(0,Nx.jsx)(Tx,{path:"538",element:(0,Nx.jsx)(LL,{})}),(0,Nx.jsx)(Tx,{path:"539",element:(0,Nx.jsx)(OL,{})}),(0,Nx.jsx)(Tx,{path:"540",element:(0,Nx.jsx)(NL,{})}),(0,Nx.jsx)(Tx,{path:"541",element:(0,Nx.jsx)(VL,{})}),(0,Nx.jsx)(Tx,{path:"542",element:(0,Nx.jsx)(WL,{})}),(0,Nx.jsx)(Tx,{path:"543",element:(0,Nx.jsx)(XL,{})}),(0,Nx.jsx)(Tx,{path:"544",element:(0,Nx.jsx)(ZL,{})}),(0,Nx.jsx)(Tx,{path:"545",element:(0,Nx.jsx)(JL,{})}),(0,Nx.jsx)(Tx,{path:"546",element:(0,Nx.jsx)(KL,{})}),(0,Nx.jsx)(Tx,{path:"547",element:(0,Nx.jsx)(nA,{})}),(0,Nx.jsx)(Tx,{path:"548",element:(0,Nx.jsx)(rA,{})}),(0,Nx.jsx)(Tx,{path:"549",element:(0,Nx.jsx)(aA,{})}),(0,Nx.jsx)(Tx,{path:"550",element:(0,Nx.jsx)(vA,{})}),(0,Nx.jsx)(Tx,{path:"551",element:(0,Nx.jsx)(cA,{})}),(0,Nx.jsx)(Tx,{path:"552",element:(0,Nx.jsx)(uA,{})}),(0,Nx.jsx)(Tx,{path:"553",element:(0,Nx.jsx)(pA,{})}),(0,Nx.jsx)(Tx,{path:"554",element:(0,Nx.jsx)(dA,{})}),(0,Nx.jsx)(Tx,{path:"555",element:(0,Nx.jsx)(xA,{})}),(0,Nx.jsx)(Tx,{path:"556",element:(0,Nx.jsx)(yA,{})}),(0,Nx.jsx)(Tx,{path:"557",element:(0,Nx.jsx)(bA,{})}),(0,Nx.jsx)(Tx,{path:"558",element:(0,Nx.jsx)(wA,{})}),(0,Nx.jsx)(Tx,{path:"559",element:(0,Nx.jsx)(MA,{})}),(0,Nx.jsx)(Tx,{path:"560",element:(0,Nx.jsx)(kA,{})}),(0,Nx.jsx)(Tx,{path:"561",element:(0,Nx.jsx)(TA,{})}),(0,Nx.jsx)(Tx,{path:"562",element:(0,Nx.jsx)(zA,{})}),(0,Nx.jsx)(Tx,{path:"563",element:(0,Nx.jsx)(FA,{})}),(0,Nx.jsx)(Tx,{path:"564",element:(0,Nx.jsx)(EA,{})}),(0,Nx.jsx)(Tx,{path:"565",element:(0,Nx.jsx)(LA,{})}),(0,Nx.jsx)(Tx,{path:"566",element:(0,Nx.jsx)(OA,{})}),(0,Nx.jsx)(Tx,{path:"567",element:(0,Nx.jsx)(NA,{})}),(0,Nx.jsx)(Tx,{path:"568",element:(0,Nx.jsx)(VA,{})}),(0,Nx.jsx)(Tx,{path:"569",element:(0,Nx.jsx)(WA,{})}),(0,Nx.jsx)(Tx,{path:"570",element:(0,Nx.jsx)(XA,{})}),(0,Nx.jsx)(Tx,{path:"571",element:(0,Nx.jsx)(ZA,{})}),(0,Nx.jsx)(Tx,{path:"572",element:(0,Nx.jsx)(JA,{})}),(0,Nx.jsx)(Tx,{path:"573",element:(0,Nx.jsx)(KA,{})}),(0,Nx.jsx)(Tx,{path:"574",element:(0,Nx.jsx)(nO,{})}),(0,Nx.jsx)(Tx,{path:"575",element:(0,Nx.jsx)(rO,{})}),(0,Nx.jsx)(Tx,{path:"576",element:(0,Nx.jsx)(aO,{})}),(0,Nx.jsx)(Tx,{path:"577",element:(0,Nx.jsx)(vO,{})}),(0,Nx.jsx)(Tx,{path:"578",element:(0,Nx.jsx)(cO,{})}),(0,Nx.jsx)(Tx,{path:"579",element:(0,Nx.jsx)(uO,{})}),(0,Nx.jsx)(Tx,{path:"580",element:(0,Nx.jsx)(pO,{})}),(0,Nx.jsx)(Tx,{path:"581",element:(0,Nx.jsx)(dO,{})}),(0,Nx.jsx)(Tx,{path:"582",element:(0,Nx.jsx)(xO,{})}),(0,Nx.jsx)(Tx,{path:"583",element:(0,Nx.jsx)(yO,{})}),(0,Nx.jsx)(Tx,{path:"584",element:(0,Nx.jsx)(bO,{})}),(0,Nx.jsx)(Tx,{path:"585",element:(0,Nx.jsx)(wO,{})}),(0,Nx.jsx)(Tx,{path:"586",element:(0,Nx.jsx)(MO,{})}),(0,Nx.jsx)(Tx,{path:"587",element:(0,Nx.jsx)(kO,{})}),(0,Nx.jsx)(Tx,{path:"588",element:(0,Nx.jsx)(TO,{})}),(0,Nx.jsx)(Tx,{path:"589",element:(0,Nx.jsx)(zO,{})}),(0,Nx.jsx)(Tx,{path:"590",element:(0,Nx.jsx)(FO,{})}),(0,Nx.jsx)(Tx,{path:"591",element:(0,Nx.jsx)(EO,{})}),(0,Nx.jsx)(Tx,{path:"592",element:(0,Nx.jsx)(LO,{})}),(0,Nx.jsx)(Tx,{path:"593",element:(0,Nx.jsx)(OO,{})}),(0,Nx.jsx)(Tx,{path:"594",element:(0,Nx.jsx)(NO,{})}),(0,Nx.jsx)(Tx,{path:"595",element:(0,Nx.jsx)(VO,{})}),(0,Nx.jsx)(Tx,{path:"596",element:(0,Nx.jsx)(WO,{})}),(0,Nx.jsx)(Tx,{path:"597",element:(0,Nx.jsx)(XO,{})}),(0,Nx.jsx)(Tx,{path:"598",element:(0,Nx.jsx)(ZO,{})}),(0,Nx.jsx)(Tx,{path:"599",element:(0,Nx.jsx)(JO,{})}),(0,Nx.jsx)(Tx,{path:"600",element:(0,Nx.jsx)(KO,{})}),(0,Nx.jsx)(Tx,{path:"601",element:(0,Nx.jsx)(nB,{})})]})})})}var rB=Uint8Array,oB=Uint16Array,aB=Uint32Array,iB=new rB([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),vB=new rB([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),sB=new rB([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),cB=function(e,n){for(var t=new oB(31),r=0;r<31;++r)t[r]=n+=1<<e[r-1];var o=new aB(t[30]);for(r=1;r<30;++r)for(var a=t[r];a<t[r+1];++a)o[a]=a-t[r]<<5|r;return[t,o]},lB=cB(iB,2),uB=lB[0],fB=lB[1];uB[28]=258,fB[258]=28;for(var pB=cB(vB,0),mB=pB[0],dB=(pB[1],new oB(32768)),hB=0;hB<32768;++hB){var xB=(43690&hB)>>>1|(21845&hB)<<1;xB=(61680&(xB=(52428&xB)>>>2|(13107&xB)<<2))>>>4|(3855&xB)<<4,dB[hB]=((65280&xB)>>>8|(255&xB)<<8)>>>1}var gB=function(e,n,t){for(var r=e.length,o=0,a=new oB(n);o<r;++o)++a[e[o]-1];var i,v=new oB(n);for(o=0;o<n;++o)v[o]=v[o-1]+a[o-1]<<1;if(t){i=new oB(1<<n);var s=15-n;for(o=0;o<r;++o)if(e[o])for(var c=o<<4|e[o],l=n-e[o],u=v[e[o]-1]++<<l,f=u|(1<<l)-1;u<=f;++u)i[dB[u]>>>s]=c}else for(i=new oB(r),o=0;o<r;++o)e[o]&&(i[o]=dB[v[e[o]-1]++]>>>15-e[o]);return i},yB=new rB(288);for(hB=0;hB<144;++hB)yB[hB]=8;for(hB=144;hB<256;++hB)yB[hB]=9;for(hB=256;hB<280;++hB)yB[hB]=7;for(hB=280;hB<288;++hB)yB[hB]=8;var _B=new rB(32);for(hB=0;hB<32;++hB)_B[hB]=5;var bB=gB(yB,9,1),UB=gB(_B,5,1),wB=function(e){for(var n=e[0],t=1;t<e.length;++t)e[t]>n&&(n=e[t]);return n},SB=function(e,n,t){var r=n/8|0;return(e[r]|e[r+1]<<8)>>(7&n)&t},MB=function(e,n){var t=n/8|0;return(e[t]|e[t+1]<<8|e[t+2]<<16)>>(7&n)},jB=function(e){return(e/8|0)+(7&e&&1)},kB=function(e,n,t){(null==n||n<0)&&(n=0),(null==t||t>e.length)&&(t=e.length);var r=new(e instanceof oB?oB:e instanceof aB?aB:rB)(t-n);return r.set(e.subarray(n,t)),r},CB=function(e,n,t){var r=e.length;if(!r||t&&!t.l&&r<5)return n||new rB(0);var o=!n||t,a=!t||t.i;t||(t={}),n||(n=new rB(3*r));var i=function(e){var t=n.length;if(e>t){var r=new rB(Math.max(2*t,e));r.set(n),n=r}},v=t.f||0,s=t.p||0,c=t.b||0,l=t.l,u=t.d,f=t.m,p=t.n,m=8*r;do{if(!l){t.f=v=SB(e,s,1);var d=SB(e,s+1,3);if(s+=3,!d){var h=e[(k=jB(s)+4)-4]|e[k-3]<<8,x=k+h;if(x>r){if(a)throw"unexpected EOF";break}o&&i(c+h),n.set(e.subarray(k,x),c),t.b=c+=h,t.p=s=8*x;continue}if(1==d)l=bB,u=UB,f=9,p=5;else{if(2!=d)throw"invalid block type";var g=SB(e,s,31)+257,y=SB(e,s+10,15)+4,_=g+SB(e,s+5,31)+1;s+=14;for(var b=new rB(_),U=new rB(19),w=0;w<y;++w)U[sB[w]]=SB(e,s+3*w,7);s+=3*y;var S=wB(U),M=(1<<S)-1,j=gB(U,S,1);for(w=0;w<_;){var k,C=j[SB(e,s,M)];if(s+=15&C,(k=C>>>4)<16)b[w++]=k;else{var T=0,R=0;for(16==k?(R=3+SB(e,s,3),s+=2,T=b[w-1]):17==k?(R=3+SB(e,s,7),s+=3):18==k&&(R=11+SB(e,s,127),s+=7);R--;)b[w++]=T}}var z=b.subarray(0,g),P=b.subarray(g);f=wB(z),p=wB(P),l=gB(z,f,1),u=gB(P,p,1)}if(s>m){if(a)throw"unexpected EOF";break}}o&&i(c+131072);for(var F=(1<<f)-1,D=(1<<p)-1,E=s;;E=s){var I=(T=l[MB(e,s)&F])>>>4;if((s+=15&T)>m){if(a)throw"unexpected EOF";break}if(!T)throw"invalid length/literal";if(I<256)n[c++]=I;else{if(256==I){E=s,l=null;break}var L=I-254;if(I>264){var A=iB[w=I-257];L=SB(e,s,(1<<A)-1)+uB[w],s+=A}var O=u[MB(e,s)&D],B=O>>>4;if(!O)throw"invalid distance";s+=15&O;P=mB[B];if(B>3){A=vB[B];P+=MB(e,s)&(1<<A)-1,s+=A}if(s>m){if(a)throw"unexpected EOF";break}o&&i(c+131072);for(var N=c+L;c<N;c+=4)n[c]=n[c-P],n[c+1]=n[c+1-P],n[c+2]=n[c+2-P],n[c+3]=n[c+3-P];c=N}}t.l=l,t.p=E,t.b=c,l&&(v=1,t.m=f,t.d=u,t.n=p)}while(!v);return c==n.length?n:kB(n,0,c)},TB=new rB(0),RB=function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function zB(e,n){return CB((RB(e),e.subarray(2,-4)),n)}var PB="undefined"!=typeof TextDecoder&&new TextDecoder;try{PB.decode(TB,{stream:!0}),1}catch(lN){}function FB(e,n,t){var r=t.length-e-1;if(n>=t[r])return r-1;if(n<=t[e])return e;for(var o=e,a=r,i=Math.floor((o+a)/2);n<t[i]||n>=t[i+1];)n<t[i]?a=i:o=i,i=Math.floor((o+a)/2);return i}function DB(e,n,t,r){var o=[],a=[],i=[];o[0]=1;for(var v=1;v<=t;++v){a[v]=n-r[e+1-v],i[v]=r[e+v]-n;for(var s=0,c=0;c<v;++c){var l=i[c+1],u=a[v-c],f=o[c]/(l+u);o[c]=s+l*f,s=u*f}o[v]=s}return o}function EB(e,n){for(var t=1,r=2;r<=e;++r)t*=r;for(var o=1,a=2;a<=n;++a)o*=a;for(var i=2;i<=e-n;++i)o*=i;return t/o}function IB(e,n,t,r,o){var a=function(e,n,t,r,o){for(var a=o<e?o:e,i=[],v=FB(e,r,n),s=function(e,n,t,r,o){for(var a=[],i=0;i<=t;++i)a[i]=0;for(var v=[],s=0;s<=r;++s)v[s]=a.slice(0);for(var c=[],l=0;l<=t;++l)c[l]=a.slice(0);c[0][0]=1;for(var u=a.slice(0),f=a.slice(0),p=1;p<=t;++p){u[p]=n-o[e+1-p],f[p]=o[e+p]-n;for(var m=0,d=0;d<p;++d){var h=f[d+1],x=u[p-d];c[p][d]=h+x;var g=c[d][p-1]/c[p][d];c[d][p]=m+h*g,m=x*g}c[p][p]=m}for(var y=0;y<=t;++y)v[0][y]=c[y][t];for(var _=0;_<=t;++_){for(var b=0,U=1,w=[],S=0;S<=t;++S)w[S]=a.slice(0);w[0][0]=1;for(var M=1;M<=r;++M){var j=0,k=_-M,C=t-M;_>=M&&(w[U][0]=w[b][0]/c[C+1][k],j=w[U][0]*c[k][C]);for(var T=_-1<=C?M-1:t-_,R=k>=-1?1:-k;R<=T;++R)w[U][R]=(w[b][R]-w[b][R-1])/c[C+1][k+R],j+=w[U][R]*c[k+R][C];_<=C&&(w[U][M]=-w[b][M-1]/c[C+1][_],j+=w[U][M]*c[_][C]),v[M][_]=j;var z=b;b=U,U=z}}for(var P=t,F=1;F<=r;++F){for(var D=0;D<=t;++D)v[F][D]*=P;P*=t-F}return v}(v,r,e,a,n),c=[],l=0;l<t.length;++l){var u=t[l].clone(),f=u.w;u.x*=f,u.y*=f,u.z*=f,c[l]=u}for(var p=0;p<=a;++p){for(var m=c[v-e].clone().multiplyScalar(s[p][0]),d=1;d<=e;++d)m.add(c[v-e+d].clone().multiplyScalar(s[p][d]));i[p]=m}for(var h=a+1;h<=o+1;++h)i[h]=new Tr(0,0,0);return i}(e,n,t,r,o);return function(e){for(var n=e.length,t=[],r=[],o=0;o<n;++o){var a=e[o];t[o]=new Lr(a.x,a.y,a.z),r[o]=a.w}for(var i=[],v=0;v<n;++v){for(var s=t[v].clone(),c=1;c<=v;++c)s.sub(i[v-c].clone().multiplyScalar(EB(v,c)*r[c]));i[v]=s.divideScalar(r[0])}return i}(a)}var LB,AB,OB,BB=function(e){U(t,e);var n=k(t);function t(e,r,o,a,i){var v;y(this,t),(v=n.call(this)).degree=e,v.knots=r,v.controlPoints=[],v.startKnot=a||0,v.endKnot=i||v.knots.length-1;for(var s=0;s<o.length;++s){var c=o[s];v.controlPoints[s]=new Tr(c.x,c.y,c.z,c.w)}return v}return b(t,[{key:"getPoint",value:function(e,n){var t=n||new Lr,r=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),o=function(e,n,t,r){for(var o=FB(e,r,n),a=DB(o,r,e,n),i=new Tr(0,0,0,0),v=0;v<=e;++v){var s=t[o-e+v],c=a[v],l=s.w*c;i.x+=s.x*l,i.y+=s.y*l,i.z+=s.z*l,i.w+=s.w*c}return i}(this.degree,this.knots,this.controlPoints,r);return 1!=o.w&&o.divideScalar(o.w),t.set(o.x,o.y,o.z)}},{key:"getTangent",value:function(e,n){var t=n||new Lr,r=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),o=IB(this.degree,this.knots,this.controlPoints,r,1);return t.copy(o[1]).normalize(),t}}]),t}(Zc),NB=function(e){U(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return b(t,[{key:"load",value:function(e,n,t,r){var o=this,a=""===o.path?zf.extractUrlBase(e):o.path,i=new rf(this.manager);i.setPath(o.path),i.setResponseType("arraybuffer"),i.setRequestHeader(o.requestHeader),i.setWithCredentials(o.withCredentials),i.load(e,(function(t){try{n(o.parse(t,a))}catch(lN){r?r(lN):console.error(lN),o.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e,n){if(function(e){var n="Kaydara FBX Binary  \0";return e.byteLength>=n.length&&n===oN(e,0,n.length)}(e))LB=(new HB).parse(e);else{var t=oN(e);if(!function(e){var n=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],t=0;function r(n){var r=e[n-1];return e=e.slice(t+n),t++,r}for(var o=0;o<n.length;++o){if(r(1)===n[o])return!1}return!0}(t))throw new Error("THREE.FBXLoader: Unknown format.");if(ZB(t)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+ZB(t));LB=(new WB).parse(t)}var r=new lf(this.manager).setPath(this.resourcePath||n).setCrossOrigin(this.crossOrigin);return new GB(r,this.manager).parse(LB)}}]),t}(ef),GB=function(){function e(n,t){y(this,e),this.textureLoader=n,this.manager=t}return b(e,[{key:"parse",value:function(){AB=this.parseConnections();var e=this.parseImages(),n=this.parseTextures(e),t=this.parseMaterials(n),r=this.parseDeformers(),o=(new VB).parse(r);return this.parseScene(r,o,t),OB}},{key:"parseConnections",value:function(){var e=new Map;"Connections"in LB&&LB.Connections.connections.forEach((function(n){var t=n[0],r=n[1],o=n[2];e.has(t)||e.set(t,{parents:[],children:[]});var a={ID:r,relationship:o};e.get(t).parents.push(a),e.has(r)||e.set(r,{parents:[],children:[]});var i={ID:t,relationship:o};e.get(r).children.push(i)}));return e}},{key:"parseImages",value:function(){var e={},n={};if("Video"in LB.Objects){var t=LB.Objects.Video;for(var r in t){var o=t[r];if(e[parseInt(r)]=o.RelativeFilename||o.Filename,"Content"in o){var a=o.Content instanceof ArrayBuffer&&o.Content.byteLength>0,i="string"===typeof o.Content&&""!==o.Content;if(a||i){var v=this.parseImage(t[r]);n[o.RelativeFilename||o.Filename]=v}}}}for(var s in e){var c=e[s];void 0!==n[c]?e[s]=n[c]:e[s]=e[s].split("\\").pop()}return e}},{key:"parseImage",value:function(e){var n,t=e.Content,r=e.RelativeFilename||e.Filename,o=r.slice(r.lastIndexOf(".")+1).toLowerCase();switch(o){case"bmp":n="image/bmp";break;case"jpg":case"jpeg":n="image/jpeg";break;case"png":n="image/png";break;case"tif":n="image/tiff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",r),n="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+o+'" is not supported.')}if("string"===typeof t)return"data:"+n+";base64,"+t;var a=new Uint8Array(t);return window.URL.createObjectURL(new Blob([a],{type:n}))}},{key:"parseTextures",value:function(e){var n=new Map;if("Texture"in LB.Objects){var t=LB.Objects.Texture;for(var r in t){var o=this.parseTexture(t[r],e);n.set(parseInt(r),o)}}return n}},{key:"parseTexture",value:function(e,n){var t=this.loadTexture(e,n);t.ID=e.id,t.name=e.attrName;var r=e.WrapModeU,o=e.WrapModeV,a=void 0!==r?r.value:0,i=void 0!==o?o.value:0;if(t.wrapS=0===a?Oe:Be,t.wrapT=0===i?Oe:Be,"Scaling"in e){var v=e.Scaling.value;t.repeat.x=v[0],t.repeat.y=v[1]}return t}},{key:"loadTexture",value:function(e,n){var t,r,o=this.textureLoader.path,a=AB.get(e.id).children;void 0!==a&&a.length>0&&void 0!==n[a[0].ID]&&(0!==(t=n[a[0].ID]).indexOf("blob:")&&0!==t.indexOf("data:")||this.textureLoader.setPath(void 0));var i=e.FileName.slice(-3).toLowerCase();if("tga"===i){var v=this.manager.getHandler(".tga");null===v?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),r=new Cr):(v.setPath(this.textureLoader.path),r=v.load(t))}else"psd"===i?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),r=new Cr):r=this.textureLoader.load(t);return this.textureLoader.setPath(o),r}},{key:"parseMaterials",value:function(e){var n=new Map;if("Material"in LB.Objects){var t=LB.Objects.Material;for(var r in t){var o=this.parseMaterial(t[r],e);null!==o&&n.set(parseInt(r),o)}}return n}},{key:"parseMaterial",value:function(e,n){var t=e.id,r=e.attrName,o=e.ShadingModel;if("object"===typeof o&&(o=o.value),!AB.has(t))return null;var a,i=this.parseParameters(e,n,t);switch(o.toLowerCase()){case"phong":a=new wu;break;case"lambert":a=new ju;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',o),a=new wu}return a.setValues(i),a.name=r,a}},{key:"parseParameters",value:function(e,n,t){var r={};e.BumpFactor&&(r.bumpScale=e.BumpFactor.value),e.Diffuse?r.color=(new wr).fromArray(e.Diffuse.value):!e.DiffuseColor||"Color"!==e.DiffuseColor.type&&"ColorRGB"!==e.DiffuseColor.type||(r.color=(new wr).fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(r.displacementScale=e.DisplacementFactor.value),e.Emissive?r.emissive=(new wr).fromArray(e.Emissive.value):!e.EmissiveColor||"Color"!==e.EmissiveColor.type&&"ColorRGB"!==e.EmissiveColor.type||(r.emissive=(new wr).fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(r.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(r.opacity=parseFloat(e.Opacity.value)),r.opacity<1&&(r.transparent=!0),e.ReflectionFactor&&(r.reflectivity=e.ReflectionFactor.value),e.Shininess&&(r.shininess=e.Shininess.value),e.Specular?r.specular=(new wr).fromArray(e.Specular.value):e.SpecularColor&&"Color"===e.SpecularColor.type&&(r.specular=(new wr).fromArray(e.SpecularColor.value));var o=this;return AB.get(t).children.forEach((function(e){var t=e.relationship;switch(t){case"Bump":r.bumpMap=o.getTexture(n,e.ID);break;case"Maya|TEX_ao_map":r.aoMap=o.getTexture(n,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":r.map=o.getTexture(n,e.ID),void 0!==r.map&&("colorSpace"in r.map?r.map.colorSpace="srgb":r.map.encoding=3001);break;case"DisplacementColor":r.displacementMap=o.getTexture(n,e.ID);break;case"EmissiveColor":r.emissiveMap=o.getTexture(n,e.ID),void 0!==r.emissiveMap&&("colorSpace"in r.emissiveMap?r.emissiveMap.colorSpace="srgb":r.emissiveMap.encoding=3001);break;case"NormalMap":case"Maya|TEX_normal_map":r.normalMap=o.getTexture(n,e.ID);break;case"ReflectionColor":r.envMap=o.getTexture(n,e.ID),void 0!==r.envMap&&(r.envMap.mapping=Ie,"colorSpace"in r.envMap?r.envMap.colorSpace="srgb":r.envMap.encoding=3001);break;case"SpecularColor":r.specularMap=o.getTexture(n,e.ID),void 0!==r.specularMap&&("colorSpace"in r.specularMap?r.specularMap.colorSpace="srgb":r.specularMap.encoding=3001);break;case"TransparentColor":case"TransparencyFactor":r.alphaMap=o.getTexture(n,e.ID),r.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",t)}})),r}},{key:"getTexture",value:function(e,n){return"LayeredTexture"in LB.Objects&&n in LB.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),n=AB.get(n).children[0].ID),e.get(n)}},{key:"parseDeformers",value:function(){var e={},n={};if("Deformer"in LB.Objects){var t=LB.Objects.Deformer;for(var r in t){var o=t[r],a=AB.get(parseInt(r));if("Skin"===o.attrType){var i=this.parseSkeleton(a,t);i.ID=r,a.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),i.geometryID=a.parents[0].ID,e[r]=i}else if("BlendShape"===o.attrType){var v={id:r};v.rawTargets=this.parseMorphTargets(a,t),v.id=r,a.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),n[r]=v}}}return{skeletons:e,morphTargets:n}}},{key:"parseSkeleton",value:function(e,n){var t=[];return e.children.forEach((function(e){var r=n[e.ID];if("Cluster"===r.attrType){var o={ID:e.ID,indices:[],weights:[],transformLink:(new po).fromArray(r.TransformLink.a)};"Indexes"in r&&(o.indices=r.Indexes.a,o.weights=r.Weights.a),t.push(o)}})),{rawBones:t,bones:[]}}},{key:"parseMorphTargets",value:function(e,n){for(var t=[],r=0;r<e.children.length;r++){var o=e.children[r],a=n[o.ID],i={name:a.attrName,initialWeight:a.DeformPercent,id:a.id,fullWeights:a.FullWeights.a};if("BlendShapeChannel"!==a.attrType)return;i.geoID=AB.get(parseInt(o.ID)).children.filter((function(e){return void 0===e.relationship}))[0].ID,t.push(i)}return t}},{key:"parseScene",value:function(e,n,t){OB=new ks;var r=this.parseModels(e.skeletons,n,t),o=LB.Objects.Model,a=this;r.forEach((function(e){var n=o[e.ID];a.setLookAtProperties(e,n),AB.get(e.ID).parents.forEach((function(n){var t=r.get(n.ID);void 0!==t&&t.add(e)})),null===e.parent&&OB.add(e)})),this.bindSkeleton(e.skeletons,n,r),this.createAmbientLight(),OB.traverse((function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrix=e.parent.matrix,e.userData.transformData.parentMatrixWorld=e.parent.matrixWorld);var n=nN(e.userData.transformData);e.applyMatrix4(n),e.updateWorldMatrix()}}));var i=(new qB).parse();1===OB.children.length&&OB.children[0].isGroup&&(OB.children[0].animations=i,OB=OB.children[0]),OB.animations=i}},{key:"parseModels",value:function(e,n,t){var r=new Map,o=LB.Objects.Model;for(var a in o){var i=parseInt(a),v=o[a],s=AB.get(i),c=this.buildSkeleton(s,e,i,v.attrName);if(!c){switch(v.attrType){case"Camera":c=this.createCamera(s);break;case"Light":c=this.createLight(s);break;case"Mesh":c=this.createMesh(s,n,t);break;case"NurbsCurve":c=this.createCurve(s,n);break;case"LimbNode":case"Root":c=new mc;break;default:c=new ks}c.name=v.attrName?dp.sanitizeNodeName(v.attrName):"",c.ID=i}this.getTransformData(c,v),r.set(i,c)}return r}},{key:"buildSkeleton",value:function(e,n,t,r){var o=null;return e.parents.forEach((function(e){var a=function(a){var i=n[a];i.rawBones.forEach((function(n,a){if(n.ID===e.ID){var v=o;(o=new mc).matrixWorld.copy(n.transformLink),o.name=r?dp.sanitizeNodeName(r):"",o.ID=t,i.bones[a]=o,null!==v&&o.add(v)}}))};for(var i in n)a(i)})),o}},{key:"createCamera",value:function(e){var n,t;if(e.children.forEach((function(e){var n=LB.Objects.NodeAttribute[e.ID];void 0!==n&&(t=n)})),void 0===t)n=new Oo;else{var r=0;void 0!==t.CameraProjectionType&&1===t.CameraProjectionType.value&&(r=1);var o=1;void 0!==t.NearPlane&&(o=t.NearPlane.value/1e3);var a=1e3;void 0!==t.FarPlane&&(a=t.FarPlane.value/1e3);var i=window.innerWidth,v=window.innerHeight;void 0!==t.AspectWidth&&void 0!==t.AspectHeight&&(i=t.AspectWidth.value,v=t.AspectHeight.value);var s=i/v,c=45;void 0!==t.FieldOfView&&(c=t.FieldOfView.value);var l=t.FocalLength?t.FocalLength.value:null;switch(r){case 0:n=new Ha(c,s,o,a),null!==l&&n.setFocalLength(l);break;case 1:n=new hi(-i/2,i/2,v/2,-v/2,o,a);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+r+"."),n=new Oo}}return n}},{key:"createLight",value:function(e){var n,t;if(e.children.forEach((function(e){var n=LB.Objects.NodeAttribute[e.ID];void 0!==n&&(t=n)})),void 0===t)n=new Oo;else{var r;r=void 0===t.LightType?0:t.LightType.value;var o=16777215;void 0!==t.Color&&(o=(new wr).fromArray(t.Color.value));var a=void 0===t.Intensity?1:t.Intensity.value/100;void 0!==t.CastLightOnObject&&0===t.CastLightOnObject.value&&(a=0);var i=0;void 0!==t.FarAttenuationEnd&&(i=void 0!==t.EnableFarAttenuation&&0===t.EnableFarAttenuation.value?0:t.FarAttenuationEnd.value);switch(r){case 0:n=new wf(o,a,i,1);break;case 1:n=new Mf(o,a);break;case 2:var v=Math.PI/3;void 0!==t.InnerAngle&&(v=ar.degToRad(t.InnerAngle.value));var s=0;void 0!==t.OuterAngle&&(s=ar.degToRad(t.OuterAngle.value),s=Math.max(s,1)),n=new gf(o,a,i,v,s,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+t.LightType.value+", defaulting to a PointLight."),n=new wf(o,a)}void 0!==t.CastShadows&&1===t.CastShadows.value&&(n.castShadow=!0)}return n}},{key:"createMesh",value:function(e,n,t){var r,o=null,a=null,i=[];return e.children.forEach((function(e){n.has(e.ID)&&(o=n.get(e.ID)),t.has(e.ID)&&i.push(t.get(e.ID))})),i.length>1?a=i:i.length>0?a=i[0]:(a=new wu({color:13421772}),i.push(a)),"color"in o.attributes&&i.forEach((function(e){e.vertexColors=!0})),o.FBX_Deformer?(r=new pc(o,a)).normalizeSkinWeights():r=new Aa(o,a),r}},{key:"createCurve",value:function(e,n){var t=e.children.reduce((function(e,t){return n.has(t.ID)&&(e=n.get(t.ID)),e}),null),r=new jc({color:3342591,linewidth:1});return new Pc(t,r)}},{key:"getTransformData",value:function(e,n){var t={};"InheritType"in n&&(t.inheritType=parseInt(n.InheritType.value)),t.eulerOrder="RotationOrder"in n?tN(n.RotationOrder.value):"ZYX","Lcl_Translation"in n&&(t.translation=n.Lcl_Translation.value),"PreRotation"in n&&(t.preRotation=n.PreRotation.value),"Lcl_Rotation"in n&&(t.rotation=n.Lcl_Rotation.value),"PostRotation"in n&&(t.postRotation=n.PostRotation.value),"Lcl_Scaling"in n&&(t.scale=n.Lcl_Scaling.value),"ScalingOffset"in n&&(t.scalingOffset=n.ScalingOffset.value),"ScalingPivot"in n&&(t.scalingPivot=n.ScalingPivot.value),"RotationOffset"in n&&(t.rotationOffset=n.RotationOffset.value),"RotationPivot"in n&&(t.rotationPivot=n.RotationPivot.value),e.userData.transformData=t}},{key:"setLookAtProperties",value:function(e,n){"LookAtProperty"in n&&AB.get(e.ID).children.forEach((function(n){if("LookAtProperty"===n.relationship){var t=LB.Objects.Model[n.ID];if("Lcl_Translation"in t){var r=t.Lcl_Translation.value;void 0!==e.target?(e.target.position.fromArray(r),OB.add(e.target)):e.lookAt((new Lr).fromArray(r))}}}))}},{key:"bindSkeleton",value:function(e,n,t){var r=this.parsePoseNodes(),o=function(o){var a=e[o];AB.get(parseInt(a.ID)).parents.forEach((function(e){if(n.has(e.ID)){var o=e.ID;AB.get(o).parents.forEach((function(e){t.has(e.ID)&&t.get(e.ID).bind(new gc(a.bones),r[e.ID])}))}}))};for(var a in e)o(a)}},{key:"parsePoseNodes",value:function(){var e={};if("Pose"in LB.Objects){var n=LB.Objects.Pose;for(var t in n)if("BindPose"===n[t].attrType&&n[t].NbPoseNodes>0){var r=n[t].PoseNode;Array.isArray(r)?r.forEach((function(n){e[n.Node]=(new po).fromArray(n.Matrix.a)})):e[r.Node]=(new po).fromArray(r.Matrix.a)}}return e}},{key:"createAmbientLight",value:function(){if("GlobalSettings"in LB&&"AmbientColor"in LB.GlobalSettings){var e=LB.GlobalSettings.AmbientColor.value,n=e[0],t=e[1],r=e[2];if(0!==n||0!==t||0!==r){var o=new wr(n,t,r);OB.add(new jf(o,1))}}}}]),e}(),VB=function(){function e(){y(this,e)}return b(e,[{key:"parse",value:function(e){var n=new Map;if("Geometry"in LB.Objects){var t=LB.Objects.Geometry;for(var r in t){var o=AB.get(parseInt(r)),a=this.parseGeometry(o,t[r],e);n.set(parseInt(r),a)}}return n}},{key:"parseGeometry",value:function(e,n,t){switch(n.attrType){case"Mesh":return this.parseMeshGeometry(e,n,t);case"NurbsCurve":return this.parseNurbsGeometry(n)}}},{key:"parseMeshGeometry",value:function(e,n,t){var r=t.skeletons,o=[],a=e.parents.map((function(e){return LB.Objects.Model[e.ID]}));if(0!==a.length){var i=e.children.reduce((function(e,n){return void 0!==r[n.ID]&&(e=r[n.ID]),e}),null);e.children.forEach((function(e){void 0!==t.morphTargets[e.ID]&&o.push(t.morphTargets[e.ID])}));var v=a[0],s={};"RotationOrder"in v&&(s.eulerOrder=tN(v.RotationOrder.value)),"InheritType"in v&&(s.inheritType=parseInt(v.InheritType.value)),"GeometricTranslation"in v&&(s.translation=v.GeometricTranslation.value),"GeometricRotation"in v&&(s.rotation=v.GeometricRotation.value),"GeometricScaling"in v&&(s.scale=v.GeometricScaling.value);var c=nN(s);return this.genGeometry(n,i,o,c)}}},{key:"genGeometry",value:function(e,n,t,r){var o=new _a;e.attrName&&(o.name=e.attrName);var a=this.parseGeoNode(e,n),i=this.genBuffers(a),v=new ua(i.vertex,3);if(v.applyMatrix4(r),o.setAttribute("position",v),i.colors.length>0&&o.setAttribute("color",new ua(i.colors,3)),n&&(o.setAttribute("skinIndex",new va(i.weightsIndices,4)),o.setAttribute("skinWeight",new ua(i.vertexWeights,4)),o.FBX_Deformer=n),i.normal.length>0){var s=(new vr).getNormalMatrix(r),c=new ua(i.normal,3);c.applyNormalMatrix(s),o.setAttribute("normal",c)}if(i.uvs.forEach((function(e,n){var t="uv"+(n+1).toString();0===n&&(t="uv"),o.setAttribute(t,new ua(i.uvs[n],2))})),a.material&&"AllSame"!==a.material.mappingType){var l=i.materialIndex[0],u=0;if(i.materialIndex.forEach((function(e,n){e!==l&&(o.addGroup(u,n-u,l),l=e,u=n)})),o.groups.length>0){var f=o.groups[o.groups.length-1],p=f.start+f.count;p!==i.materialIndex.length&&o.addGroup(p,i.materialIndex.length-p,l)}0===o.groups.length&&o.addGroup(0,i.materialIndex.length,i.materialIndex[0])}return this.addMorphTargets(o,e,t,r),o}},{key:"parseGeoNode",value:function(e,n){var t={};if(t.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],t.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(t.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(t.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(t.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){t.uv=[];for(var r=0;e.LayerElementUV[r];)e.LayerElementUV[r].UV&&t.uv.push(this.parseUVs(e.LayerElementUV[r])),r++}return t.weightTable={},null!==n&&(t.skeleton=n,n.rawBones.forEach((function(e,n){e.indices.forEach((function(r,o){void 0===t.weightTable[r]&&(t.weightTable[r]=[]),t.weightTable[r].push({id:n,weight:e.weights[o]})}))}))),t}},{key:"genBuffers",value:function(e){var n={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},t=0,r=0,o=!1,a=[],i=[],v=[],s=[],c=[],l=[],u=this;return e.vertexIndices.forEach((function(f,p){var m,d=!1;f<0&&(f^=-1,d=!0);var h=[],x=[];if(a.push(3*f,3*f+1,3*f+2),e.color){var g=$B(p,t,f,e.color);v.push(g[0],g[1],g[2])}if(e.skeleton){if(void 0!==e.weightTable[f]&&e.weightTable[f].forEach((function(e){x.push(e.weight),h.push(e.id)})),x.length>4){o||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),o=!0);var y=[0,0,0,0],_=[0,0,0,0];x.forEach((function(e,n){var t=e,r=h[n];_.forEach((function(e,n,o){if(t>e){o[n]=t,t=e;var a=y[n];y[n]=r,r=a}}))})),h=y,x=_}for(;x.length<4;)x.push(0),h.push(0);for(var b=0;b<4;++b)c.push(x[b]),l.push(h[b])}if(e.normal){var U=$B(p,t,f,e.normal);i.push(U[0],U[1],U[2])}e.material&&"AllSame"!==e.material.mappingType&&(m=$B(p,t,f,e.material)[0]),e.uv&&e.uv.forEach((function(e,n){var r=$B(p,t,f,e);void 0===s[n]&&(s[n]=[]),s[n].push(r[0]),s[n].push(r[1])})),r++,d&&(u.genFace(n,e,a,m,i,v,s,c,l,r),t++,r=0,a=[],i=[],v=[],s=[],c=[],l=[])})),n}},{key:"genFace",value:function(e,n,t,r,o,a,i,v,s,c){for(var l=function(c){e.vertex.push(n.vertexPositions[t[0]]),e.vertex.push(n.vertexPositions[t[1]]),e.vertex.push(n.vertexPositions[t[2]]),e.vertex.push(n.vertexPositions[t[3*(c-1)]]),e.vertex.push(n.vertexPositions[t[3*(c-1)+1]]),e.vertex.push(n.vertexPositions[t[3*(c-1)+2]]),e.vertex.push(n.vertexPositions[t[3*c]]),e.vertex.push(n.vertexPositions[t[3*c+1]]),e.vertex.push(n.vertexPositions[t[3*c+2]]),n.skeleton&&(e.vertexWeights.push(v[0]),e.vertexWeights.push(v[1]),e.vertexWeights.push(v[2]),e.vertexWeights.push(v[3]),e.vertexWeights.push(v[4*(c-1)]),e.vertexWeights.push(v[4*(c-1)+1]),e.vertexWeights.push(v[4*(c-1)+2]),e.vertexWeights.push(v[4*(c-1)+3]),e.vertexWeights.push(v[4*c]),e.vertexWeights.push(v[4*c+1]),e.vertexWeights.push(v[4*c+2]),e.vertexWeights.push(v[4*c+3]),e.weightsIndices.push(s[0]),e.weightsIndices.push(s[1]),e.weightsIndices.push(s[2]),e.weightsIndices.push(s[3]),e.weightsIndices.push(s[4*(c-1)]),e.weightsIndices.push(s[4*(c-1)+1]),e.weightsIndices.push(s[4*(c-1)+2]),e.weightsIndices.push(s[4*(c-1)+3]),e.weightsIndices.push(s[4*c]),e.weightsIndices.push(s[4*c+1]),e.weightsIndices.push(s[4*c+2]),e.weightsIndices.push(s[4*c+3])),n.color&&(e.colors.push(a[0]),e.colors.push(a[1]),e.colors.push(a[2]),e.colors.push(a[3*(c-1)]),e.colors.push(a[3*(c-1)+1]),e.colors.push(a[3*(c-1)+2]),e.colors.push(a[3*c]),e.colors.push(a[3*c+1]),e.colors.push(a[3*c+2])),n.material&&"AllSame"!==n.material.mappingType&&(e.materialIndex.push(r),e.materialIndex.push(r),e.materialIndex.push(r)),n.normal&&(e.normal.push(o[0]),e.normal.push(o[1]),e.normal.push(o[2]),e.normal.push(o[3*(c-1)]),e.normal.push(o[3*(c-1)+1]),e.normal.push(o[3*(c-1)+2]),e.normal.push(o[3*c]),e.normal.push(o[3*c+1]),e.normal.push(o[3*c+2])),n.uv&&n.uv.forEach((function(n,t){void 0===e.uvs[t]&&(e.uvs[t]=[]),e.uvs[t].push(i[t][0]),e.uvs[t].push(i[t][1]),e.uvs[t].push(i[t][2*(c-1)]),e.uvs[t].push(i[t][2*(c-1)+1]),e.uvs[t].push(i[t][2*c]),e.uvs[t].push(i[t][2*c+1])}))},u=2;u<c;u++)l(u)}},{key:"addMorphTargets",value:function(e,n,t,r){if(0!==t.length){e.morphTargetsRelative=!0,e.morphAttributes.position=[];var o=this;t.forEach((function(t){t.rawTargets.forEach((function(t){var a=LB.Objects.Geometry[t.geoID];void 0!==a&&o.genMorphGeometry(e,n,a,r,t.name)}))}))}}},{key:"genMorphGeometry",value:function(e,n,t,r,o){for(var a=void 0!==n.PolygonVertexIndex?n.PolygonVertexIndex.a:[],i=void 0!==t.Vertices?t.Vertices.a:[],v=void 0!==t.Indexes?t.Indexes.a:[],s=3*e.attributes.position.count,c=new Float32Array(s),l=0;l<v.length;l++){var u=3*v[l];c[u]=i[3*l],c[u+1]=i[3*l+1],c[u+2]=i[3*l+2]}var f={vertexIndices:a,vertexPositions:c},p=this.genBuffers(f),m=new ua(p.vertex,3);m.name=o||t.attrName,m.applyMatrix4(r),e.morphAttributes.position.push(m)}},{key:"parseNormals",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType,r=e.Normals.a,o=[];return"IndexToDirect"===t&&("NormalIndex"in e?o=e.NormalIndex.a:"NormalsIndex"in e&&(o=e.NormalsIndex.a)),{dataSize:3,buffer:r,indices:o,mappingType:n,referenceType:t}}},{key:"parseUVs",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType,r=e.UV.a,o=[];return"IndexToDirect"===t&&(o=e.UVIndex.a),{dataSize:2,buffer:r,indices:o,mappingType:n,referenceType:t}}},{key:"parseVertexColors",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType,r=e.Colors.a,o=[];return"IndexToDirect"===t&&(o=e.ColorIndex.a),{dataSize:4,buffer:r,indices:o,mappingType:n,referenceType:t}}},{key:"parseMaterialIndices",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType;if("NoMappingInformation"===n)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:t};for(var r=e.Materials.a,o=[],a=0;a<r.length;++a)o.push(a);return{dataSize:1,buffer:r,indices:o,mappingType:n,referenceType:t}}},{key:"parseNurbsGeometry",value:function(e){if(void 0===BB)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new _a;var n=parseInt(e.Order);if(isNaN(n))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new _a;for(var t,r,o=n-1,a=e.KnotVector.a,i=[],v=e.Points.a,s=0,c=v.length;s<c;s+=4)i.push((new Tr).fromArray(v,s));if("Closed"===e.Form)i.push(i[0]);else if("Periodic"===e.Form){t=o,r=a.length-1-t;for(var l=0;l<o;++l)i.push(i[l])}var u=new BB(o,a,i,t,r).getPoints(12*i.length);return(new _a).setFromPoints(u)}}]),e}(),qB=function(){function e(){y(this,e)}return b(e,[{key:"parse",value:function(){var e=[],n=this.parseClips();if(void 0!==n)for(var t in n){var r=n[t],o=this.addClip(r);e.push(o)}return e}},{key:"parseClips",value:function(){if(void 0!==LB.Objects.AnimationCurve){var e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);var n=this.parseAnimationLayers(e);return this.parseAnimStacks(n)}}},{key:"parseAnimationCurveNodes",value:function(){var e=LB.Objects.AnimationCurveNode,n=new Map;for(var t in e){var r=e[t];if(null!==r.attrName.match(/S|R|T|DeformPercent/)){var o={id:r.id,attr:r.attrName,curves:{}};n.set(o.id,o)}}return n}},{key:"parseAnimationCurves",value:function(e){var n=LB.Objects.AnimationCurve;for(var t in n){var r={id:n[t].id,times:n[t].KeyTime.a.map(QB),values:n[t].KeyValueFloat.a},o=AB.get(r.id);if(void 0!==o){var a=o.parents[0].ID,i=o.parents[0].relationship;i.match(/X/)?e.get(a).curves.x=r:i.match(/Y/)?e.get(a).curves.y=r:i.match(/Z/)?e.get(a).curves.z=r:i.match(/d|DeformPercent/)&&e.has(a)&&(e.get(a).curves.morph=r)}}}},{key:"parseAnimationLayers",value:function(e){var n=LB.Objects.AnimationLayer,t=new Map,r=function(n){var r=[],o=AB.get(parseInt(n));void 0!==o&&(o.children.forEach((function(n,t){if(e.has(n.ID)){var o=e.get(n.ID);if(void 0!==o.curves.x||void 0!==o.curves.y||void 0!==o.curves.z){if(void 0===r[t]){var a=AB.get(n.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID;if(void 0!==a){var i=LB.Objects.Model[a.toString()];if(void 0===i)return void console.warn("THREE.FBXLoader: Encountered a unused curve.",n);var v={modelName:i.attrName?dp.sanitizeNodeName(i.attrName):"",ID:i.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};OB.traverse((function(e){e.ID===i.id&&(v.transform=e.matrix,e.userData.transformData&&(v.eulerOrder=e.userData.transformData.eulerOrder))})),v.transform||(v.transform=new po),"PreRotation"in i&&(v.preRotation=i.PreRotation.value),"PostRotation"in i&&(v.postRotation=i.PostRotation.value),r[t]=v}}r[t]&&(r[t][o.attr]=o)}else if(void 0!==o.curves.morph){if(void 0===r[t]){var s=AB.get(n.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID,c=AB.get(s).parents[0].ID,l=AB.get(c).parents[0].ID,u=AB.get(l).parents[0].ID,f=LB.Objects.Model[u],p={modelName:f.attrName?dp.sanitizeNodeName(f.attrName):"",morphName:LB.Objects.Deformer[s].attrName};r[t]=p}r[t][o.attr]=o}}})),t.set(parseInt(n),r))};for(var o in n)r(o);return t}},{key:"parseAnimStacks",value:function(e){var n=LB.Objects.AnimationStack,t={};for(var r in n){var o=AB.get(parseInt(r)).children;o.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var a=e.get(o[0].ID);t[r]={name:n[r].attrName,layer:a}}return t}},{key:"addClip",value:function(e){var n=[],t=this;return e.layer.forEach((function(e){n=n.concat(t.generateTracks(e))})),new Yu(e.name,-1,n)}},{key:"generateTracks",value:function(e){var n=[],t=new Lr,r=new Ir,o=new Lr;if(e.transform&&e.transform.decompose(t,r,o),t=t.toArray(),r=(new So).setFromQuaternion(r,e.eulerOrder).toArray(),o=o.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){var a=this.generateVectorTrack(e.modelName,e.T.curves,t,"position");void 0!==a&&n.push(a)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){var i=this.generateRotationTrack(e.modelName,e.R.curves,r,e.preRotation,e.postRotation,e.eulerOrder);void 0!==i&&n.push(i)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){var v=this.generateVectorTrack(e.modelName,e.S.curves,o,"scale");void 0!==v&&n.push(v)}if(void 0!==e.DeformPercent){var s=this.generateMorphTrack(e);void 0!==s&&n.push(s)}return n}},{key:"generateVectorTrack",value:function(e,n,t,r){var o=this.getTimesForAllAxes(n),a=this.getKeyframeTrackValues(o,n,t);return new Xu(e+"."+r,o,a)}},{key:"generateRotationTrack",value:function(e,n,t,r,o,a){void 0!==n.x&&(this.interpolateRotations(n.x),n.x.values=n.x.values.map(ar.degToRad)),void 0!==n.y&&(this.interpolateRotations(n.y),n.y.values=n.y.values.map(ar.degToRad)),void 0!==n.z&&(this.interpolateRotations(n.z),n.z.values=n.z.values.map(ar.degToRad));var i=this.getTimesForAllAxes(n),v=this.getKeyframeTrackValues(i,n,t);void 0!==r&&((r=r.map(ar.degToRad)).push(a),r=(new So).fromArray(r),r=(new Ir).setFromEuler(r)),void 0!==o&&((o=o.map(ar.degToRad)).push(a),o=(new So).fromArray(o),o=(new Ir).setFromEuler(o).invert());for(var s=new Ir,c=new So,l=[],u=0;u<v.length;u+=3)c.set(v[u],v[u+1],v[u+2],a),s.setFromEuler(c),void 0!==r&&s.premultiply(r),void 0!==o&&s.multiply(o),s.toArray(l,u/3*4);return new Wu(e+".quaternion",i,l)}},{key:"generateMorphTrack",value:function(e){var n=e.DeformPercent.curves.morph,t=n.values.map((function(e){return e/100})),r=OB.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Vu(e.modelName+".morphTargetInfluences["+r+"]",n.times,t)}},{key:"getTimesForAllAxes",value:function(e){var n=[];if(void 0!==e.x&&(n=n.concat(e.x.times)),void 0!==e.y&&(n=n.concat(e.y.times)),void 0!==e.z&&(n=n.concat(e.z.times)),(n=n.sort((function(e,n){return e-n}))).length>1){for(var t=1,r=n[0],o=1;o<n.length;o++){var a=n[o];a!==r&&(n[t]=a,r=a,t++)}n=n.slice(0,t)}return n}},{key:"getKeyframeTrackValues",value:function(e,n,t){var r=t,o=[],a=-1,i=-1,v=-1;return e.forEach((function(e){if(n.x&&(a=n.x.times.indexOf(e)),n.y&&(i=n.y.times.indexOf(e)),n.z&&(v=n.z.times.indexOf(e)),-1!==a){var t=n.x.values[a];o.push(t),r[0]=t}else o.push(r[0]);if(-1!==i){var s=n.y.values[i];o.push(s),r[1]=s}else o.push(r[1]);if(-1!==v){var c=n.z.values[v];o.push(c),r[2]=c}else o.push(r[2])})),o}},{key:"interpolateRotations",value:function(e){for(var n=1;n<e.values.length;n++){var t=e.values[n-1],r=e.values[n]-t,o=Math.abs(r);if(o>=180){for(var a=o/180,i=r/a,v=t+i,s=e.times[n-1],c=(e.times[n]-s)/a,l=s+c,u=[],f=[];l<e.times[n];)u.push(l),l+=c,f.push(v),v+=i;e.times=aN(e.times,n,u),e.values=aN(e.values,n,f)}}}}]),e}(),WB=function(){function e(){y(this,e)}return b(e,[{key:"getPrevNode",value:function(){return this.nodeStack[this.currentIndent-2]}},{key:"getCurrentNode",value:function(){return this.nodeStack[this.currentIndent-1]}},{key:"getCurrentProp",value:function(){return this.currentProp}},{key:"pushStack",value:function(e){this.nodeStack.push(e),this.currentIndent+=1}},{key:"popStack",value:function(){this.nodeStack.pop(),this.currentIndent-=1}},{key:"setCurrentProp",value:function(e,n){this.currentProp=e,this.currentPropName=n}},{key:"parse",value:function(e){this.currentIndent=0,this.allNodes=new YB,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var n=this,t=e.split(/[\r\n]+/);return t.forEach((function(e,r){var o=e.match(/^[\s\t]*;/),a=e.match(/^[\s\t]*$/);if(!o&&!a){var i=e.match("^\\t{"+n.currentIndent+"}(\\w+):(.*){",""),v=e.match("^\\t{"+n.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),s=e.match("^\\t{"+(n.currentIndent-1)+"}}");i?n.parseNodeBegin(e,i):v?n.parseNodeProperty(e,v,t[++r]):s?n.popStack():e.match(/^[^\s\t}]/)&&n.parseNodePropertyContinued(e)}})),this.allNodes}},{key:"parseNodeBegin",value:function(e,n){var t=n[1].trim().replace(/^"/,"").replace(/"$/,""),r=n[2].split(",").map((function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")})),o={name:t},a=this.parseNodeAttr(r),i=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(t,o):t in i?("PoseNode"===t?i.PoseNode.push(o):void 0!==i[t].id&&(i[t]={},i[t][i[t].id]=i[t]),""!==a.id&&(i[t][a.id]=o)):"number"===typeof a.id?(i[t]={},i[t][a.id]=o):"Properties70"!==t&&(i[t]="PoseNode"===t?[o]:o),"number"===typeof a.id&&(o.id=a.id),""!==a.name&&(o.attrName=a.name),""!==a.type&&(o.attrType=a.type),this.pushStack(o)}},{key:"parseNodeAttr",value:function(e){var n=e[0];""!==e[0]&&(n=parseInt(e[0]),isNaN(n)&&(n=e[0]));var t="",r="";return e.length>1&&(t=e[1].replace(/^(\w+)::/,""),r=e[2]),{id:n,name:t,type:r}}},{key:"parseNodeProperty",value:function(e,n,t){var r=n[1].replace(/^"/,"").replace(/"$/,"").trim(),o=n[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===r&&","===o&&(o=t.replace(/"/g,"").replace(/,$/,"").trim());var a=this.getCurrentNode();if("Properties70"!==a.name){if("C"===r){var i=o.split(",").slice(1),v=parseInt(i[0]),s=parseInt(i[1]),c=o.split(",").slice(3);r="connections",function(e,n){for(var t=0,r=e.length,o=n.length;t<o;t++,r++)e[r]=n[t]}(o=[v,s],c=c.map((function(e){return e.trim().replace(/^"/,"")}))),void 0===a[r]&&(a[r]=[])}"Node"===r&&(a.id=o),r in a&&Array.isArray(a[r])?a[r].push(o):"a"!==r?a[r]=o:a.a=o,this.setCurrentProp(a,r),"a"===r&&","!==o.slice(-1)&&(a.a=rN(o))}else this.parseNodeSpecialProperty(e,r,o)}},{key:"parseNodePropertyContinued",value:function(e){var n=this.getCurrentNode();n.a+=e,","!==e.slice(-1)&&(n.a=rN(n.a))}},{key:"parseNodeSpecialProperty",value:function(e,n,t){var r=t.split('",').map((function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")})),o=r[0],a=r[1],i=r[2],v=r[3],s=r[4];switch(a){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":s=parseFloat(s);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":s=rN(s)}this.getPrevNode()[o]={type:a,type2:i,flag:v,value:s},this.setCurrentProp(this.getPrevNode(),o)}}]),e}(),HB=function(){function e(){y(this,e)}return b(e,[{key:"parse",value:function(e){var n=new XB(e);n.skip(23);var t=n.getUint32();if(t<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+t);for(var r=new YB;!this.endOfContent(n);){var o=this.parseNode(n,t);null!==o&&r.add(o.name,o)}return r}},{key:"endOfContent",value:function(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}},{key:"parseNode",value:function(e,n){var t={},r=n>=7500?e.getUint64():e.getUint32(),o=n>=7500?e.getUint64():e.getUint32();n>=7500?e.getUint64():e.getUint32();var a=e.getUint8(),i=e.getString(a);if(0===r)return null;for(var v=[],s=0;s<o;s++)v.push(this.parseProperty(e));var c=v.length>0?v[0]:"",l=v.length>1?v[1]:"",u=v.length>2?v[2]:"";for(t.singleProperty=1===o&&e.getOffset()===r;r>e.getOffset();){var f=this.parseNode(e,n);null!==f&&this.parseSubNode(i,t,f)}return t.propertyList=v,"number"===typeof c&&(t.id=c),""!==l&&(t.attrName=l),""!==u&&(t.attrType=u),""!==i&&(t.name=i),t}},{key:"parseSubNode",value:function(e,n,t){if(!0===t.singleProperty){var r=t.propertyList[0];Array.isArray(r)?(n[t.name]=t,t.a=r):n[t.name]=r}else if("Connections"===e&&"C"===t.name){var o=[];t.propertyList.forEach((function(e,n){0!==n&&o.push(e)})),void 0===n.connections&&(n.connections=[]),n.connections.push(o)}else if("Properties70"===t.name){Object.keys(t).forEach((function(e){n[e]=t[e]}))}else if("Properties70"===e&&"P"===t.name){var a,i=t.propertyList[0],v=t.propertyList[1],s=t.propertyList[2],c=t.propertyList[3];0===i.indexOf("Lcl ")&&(i=i.replace("Lcl ","Lcl_")),0===v.indexOf("Lcl ")&&(v=v.replace("Lcl ","Lcl_")),a="Color"===v||"ColorRGB"===v||"Vector"===v||"Vector3D"===v||0===v.indexOf("Lcl_")?[t.propertyList[4],t.propertyList[5],t.propertyList[6]]:t.propertyList[4],n[i]={type:v,type2:s,flag:c,value:a}}else void 0===n[t.name]?"number"===typeof t.id?(n[t.name]={},n[t.name][t.id]=t):n[t.name]=t:"PoseNode"===t.name?(Array.isArray(n[t.name])||(n[t.name]=[n[t.name]]),n[t.name].push(t)):void 0===n[t.name][t.id]&&(n[t.name][t.id]=t)}},{key:"parseProperty",value:function(e){var n,t=e.getString(1);switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var r=e.getUint32(),o=e.getUint32(),a=e.getUint32();if(0===o)switch(t){case"b":case"c":return e.getBooleanArray(r);case"d":return e.getFloat64Array(r);case"f":return e.getFloat32Array(r);case"i":return e.getInt32Array(r);case"l":return e.getInt64Array(r)}var i=zB(new Uint8Array(e.getArrayBuffer(a))),v=new XB(i.buffer);switch(t){case"b":case"c":return v.getBooleanArray(r);case"d":return v.getFloat64Array(r);case"f":return v.getFloat32Array(r);case"i":return v.getInt32Array(r);case"l":return v.getInt64Array(r)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}]),e}(),XB=function(){function e(n,t){y(this,e),this.dv=new DataView(n),this.offset=0,this.littleEndian=void 0===t||t}return b(e,[{key:"getOffset",value:function(){return this.offset}},{key:"size",value:function(){return this.dv.buffer.byteLength}},{key:"skip",value:function(e){this.offset+=e}},{key:"getBoolean",value:function(){return 1===(1&this.getUint8())}},{key:"getBooleanArray",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getBoolean());return n}},{key:"getUint8",value:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e}},{key:"getInt16",value:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}},{key:"getInt32",value:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}},{key:"getInt32Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getInt32());return n}},{key:"getUint32",value:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}},{key:"getInt64",value:function(){var e,n;return this.littleEndian?(e=this.getUint32(),n=this.getUint32()):(n=this.getUint32(),e=this.getUint32()),2147483648&n?(n=4294967295&~n,4294967295===(e=4294967295&~e)&&(n=n+1&4294967295),-(4294967296*n+(e=e+1&4294967295))):4294967296*n+e}},{key:"getInt64Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getInt64());return n}},{key:"getUint64",value:function(){var e,n;return this.littleEndian?(e=this.getUint32(),n=this.getUint32()):(n=this.getUint32(),e=this.getUint32()),4294967296*n+e}},{key:"getFloat32",value:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}},{key:"getFloat32Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getFloat32());return n}},{key:"getFloat64",value:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}},{key:"getFloat64Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getFloat64());return n}},{key:"getArrayBuffer",value:function(e){var n=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,n}},{key:"getString",value:function(e){for(var n=[],t=0;t<e;t++)n[t]=this.getUint8();var r=n.indexOf(0);return r>=0&&(n=n.slice(0,r)),zf.decodeText(new Uint8Array(n))}}]),e}(),YB=function(){function e(){y(this,e)}return b(e,[{key:"add",value:function(e,n){this[e]=n}}]),e}();function ZB(e){var n=e.match(/FBXVersion: (\d+)/);if(n)return parseInt(n[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function QB(e){return e/46186158e3}var JB=[];function $B(e,n,t,r){var o;switch(r.mappingType){case"ByPolygonVertex":o=e;break;case"ByPolygon":o=n;break;case"ByVertice":o=t;break;case"AllSame":o=r.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+r.mappingType)}"IndexToDirect"===r.referenceType&&(o=r.indices[o]);var a=o*r.dataSize,i=a+r.dataSize;return function(e,n,t,r){for(var o=t,a=0;o<r;o++,a++)e[a]=n[o];return e}(JB,r.buffer,a,i)}var KB=new So,eN=new Lr;function nN(e){var n=new po,t=new po,r=new po,o=new po,a=new po,i=new po,v=new po,s=new po,c=new po,l=new po,u=new po,f=new po,p=e.inheritType?e.inheritType:0;if(e.translation&&n.setPosition(eN.fromArray(e.translation)),e.preRotation){var m=e.preRotation.map(ar.degToRad);m.push(e.eulerOrder),t.makeRotationFromEuler(KB.fromArray(m))}if(e.rotation){var d=e.rotation.map(ar.degToRad);d.push(e.eulerOrder),r.makeRotationFromEuler(KB.fromArray(d))}if(e.postRotation){var h=e.postRotation.map(ar.degToRad);h.push(e.eulerOrder),o.makeRotationFromEuler(KB.fromArray(h)),o.invert()}e.scale&&a.scale(eN.fromArray(e.scale)),e.scalingOffset&&v.setPosition(eN.fromArray(e.scalingOffset)),e.scalingPivot&&i.setPosition(eN.fromArray(e.scalingPivot)),e.rotationOffset&&s.setPosition(eN.fromArray(e.rotationOffset)),e.rotationPivot&&c.setPosition(eN.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(u.copy(e.parentMatrix),l.copy(e.parentMatrixWorld));var x=t.clone().multiply(r).multiply(o),g=new po;g.extractRotation(l);var y=new po;y.copyPosition(l);var _=y.clone().invert().multiply(l),b=g.clone().invert().multiply(_),U=a,w=new po;if(0===p)w.copy(g).multiply(x).multiply(b).multiply(U);else if(1===p)w.copy(g).multiply(b).multiply(x).multiply(U);else{var S=(new po).scale((new Lr).setFromMatrixScale(u)).clone().invert(),M=b.clone().multiply(S);w.copy(g).multiply(x).multiply(M).multiply(U)}var j=c.clone().invert(),k=i.clone().invert(),C=n.clone().multiply(s).multiply(c).multiply(t).multiply(r).multiply(o).multiply(j).multiply(v).multiply(i).multiply(a).multiply(k),T=(new po).copyPosition(C),R=l.clone().multiply(T);return f.copyPosition(R),(C=f.clone().multiply(w)).premultiply(l.invert()),C}function tN(e){var n=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(e=e||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),n[0]):n[e]}function rN(e){return e.split(",").map((function(e){return parseFloat(e)}))}function oN(e,n,t){return void 0===n&&(n=0),void 0===t&&(t=e.byteLength),zf.decodeText(new Uint8Array(e,n,t))}function aN(e,n,t){return e.slice(0,n).concat(t).concat(e.slice(n))}function iN(e){return Vd(NB,e)}iN.preload=function(e){return Vd.preload(NB,e)},iN.clear=function(e){return Vd.clear(NB,e)};var vN=function(e){return e===Object(e)&&!Array.isArray(e)&&"function"!==typeof e};function sN(e,n){var t=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(e){return e},n=arguments.length>1?arguments[1]:void 0;return Bd()(e,n)}((function(e){return e.gl})),r=Vd(lf,vN(e)?Object.values(e):e);if((0,Om.useLayoutEffect)((function(){null==n||n(r)}),[n]),(0,Om.useEffect)((function(){(Array.isArray(r)?r:[r]).forEach(t.initTexture)}),[t,r]),vN(e)){var o=Object.keys(e),a={};return o.forEach((function(e){return Object.assign(a,c({},e,r[o.indexOf(e)]))})),a}return r}function cN(e){var n=iN("./Models/warehouse2/source/WareHouse.fbx"),t=sN("./Models/warehouse2/textures/Bake.jpg"),r=sN("./Models/warehouse2/textures/Tx.jpg");t.flipY=!0,r.flipY=!1;new Mu;var o=new bu({map:t,aoMap:r});return(0,Nx.jsxs)("group",u(u({},e),{},{dispose:null,children:[(0,Nx.jsxs)("group",{position:[0,-27,80],children:[(0,Nx.jsx)("mesh",{geometry:n.children[0].children[1].geometry,material:o}),(0,Nx.jsx)("mesh",{geometry:n.children[0].children[0].children[1].geometry,material:o}),(0,Nx.jsx)("mesh",{geometry:n.children[0].children[0].children[0].children[0].geometry,material:o}),(0,Nx.jsx)("mesh",{geometry:n.children[1].geometry,material:o}),(0,Nx.jsx)("mesh",{geometry:n.children[2].geometry,material:o})]}),(0,Nx.jsx)("ambientLight",{intensity:.2}),(0,Nx.jsx)("rectAreaLight",{position:[0,0,-80],intensity:30})]}))}sN.preload=function(e){return Vd.preload(lf,e)},sN.clear=function(e){return Vd.clear(lf,e)},(0,Eh.s)(document.querySelector("#root")).render((0,Nx.jsx)(Om.StrictMode,{children:(0,Nx.jsxs)(Dh,{camera:{fov:50,aspect:window.innerWidth/window.innerHeight,near:.01,far:1e3,position:[0,0,5]},children:[(0,Nx.jsx)(tB,{}),(0,Nx.jsx)(cN,{})]})}))}()}();
//# sourceMappingURL=main.37d3eba0.js.map