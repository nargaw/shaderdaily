/*! For license information please see main.7b2bebcc.js.LICENSE.txt */
!function(){var e={345:function(e,n){"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<i(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var l=2*(r+1)-1,s=e[l],c=l+1,u=e[c];if(0>i(s,t))c<a&&0>i(u,s)?(e[r]=u,e[c]=t,r=c):(e[r]=s,e[l]=t,r=l);else{if(!(c<a&&0>i(u,t)))break e;e[r]=u,e[c]=t,r=c}}}return n}function i(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var l=Date,s=l.now();n.unstable_now=function(){return l.now()-s}}var c=[],u=[],v=1,f=null,p=3,m=!1,d=!1,h=!1,g="function"===typeof setTimeout?setTimeout:null,x="function"===typeof clearTimeout?clearTimeout:null,y="undefined"!==typeof setImmediate?setImmediate:null;function b(e){for(var n=r(u);null!==n;){if(null===n.callback)a(u);else{if(!(n.startTime<=e))break;a(u),n.sortIndex=n.expirationTime,t(c,n)}n=r(u)}}function _(e){if(h=!1,b(e),!d)if(null!==r(c))d=!0,D(w);else{var n=r(u);null!==n&&E(_,n.startTime-e)}}function w(e,t){d=!1,h&&(h=!1,x(j),j=-1),m=!0;var i=p;try{for(b(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!C());){var o=f.callback;if("function"===typeof o){f.callback=null,p=f.priorityLevel;var l=o(f.expirationTime<=t);t=n.unstable_now(),"function"===typeof l?f.callback=l:f===r(c)&&a(c),b(t)}else a(c);f=r(c)}if(null!==f)var s=!0;else{var v=r(u);null!==v&&E(_,v.startTime-t),s=!1}return s}finally{f=null,p=i,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,U=!1,M=null,j=-1,k=5,T=-1;function C(){return!(n.unstable_now()-T<k)}function R(){if(null!==M){var e=n.unstable_now();T=e;var t=!0;try{t=M(!0,e)}finally{t?S():(U=!1,M=null)}}else U=!1}if("function"===typeof y)S=function(){y(R)};else if("undefined"!==typeof MessageChannel){var F=new MessageChannel,P=F.port2;F.port1.onmessage=R,S=function(){P.postMessage(null)}}else S=function(){g(R,0)};function D(e){M=e,U||(U=!0,S())}function E(e,t){j=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){d||m||(d=!0,D(w))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,a,i){var o=n.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?o+i:o:i=o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:v++,callback:a,priorityLevel:e,startTime:i,expirationTime:l=i+l,sortIndex:-1},i>o?(e.sortIndex=i,t(u,e),null===r(c)&&e===r(u)&&(h?(x(j),j=-1):h=!0,E(_,i-o))):(e.sortIndex=l,t(c,e),d||m||(d=!0,D(w))),e},n.unstable_shouldYield=C,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},545:function(e,n,t){"use strict";e.exports=t(345)},494:function(e){function n(e,n,t){var r,a,i,o,l;function s(){var c=Date.now()-o;c<n&&c>=0?r=setTimeout(s,n-c):(r=null,t||(l=e.apply(i,a),i=a=null))}null==n&&(n=100);var c=function(){i=this,a=arguments,o=Date.now();var c=t&&!r;return r||(r=setTimeout(s,n)),c&&(l=e.apply(i,a),i=a=null),l};return c.clear=function(){r&&(clearTimeout(r),r=null)},c.flush=function(){r&&(l=e.apply(i,a),i=a=null,clearTimeout(r),r=null)},c}n.debounce=n,e.exports=n},463:function(e,n,t){"use strict";var r=t(791),a=t(296);function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,l={};function s(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(l[e]=n,e=0;e<n.length;e++)o.add(n[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),v=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},m={};function d(e,n,t,r,a,i,o){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=i,this.removeEmptyString=o}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){h[e]=new d(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];h[n]=new d(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){h[e]=new d(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){h[e]=new d(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){h[e]=new d(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){h[e]=new d(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){h[e]=new d(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){h[e]=new d(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){h[e]=new d(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function x(e){return e[1].toUpperCase()}function y(e,n,t,r){var a=h.hasOwnProperty(n)?h[n]:null;(null!==a?0!==a.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null===n||"undefined"===typeof n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!v.call(m,e)||!v.call(p,e)&&(f.test(e)?m[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(g,x);h[n]=new d(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(g,x);h[n]=new d(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(g,x);h[n]=new d(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){h[e]=new d(e,1,!1,e.toLowerCase(),null,!1,!1)})),h.xlinkHref=new d("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){h[e]=new d(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=Symbol.for("react.element"),w=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),U=Symbol.for("react.strict_mode"),M=Symbol.for("react.profiler"),j=Symbol.for("react.provider"),k=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),C=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),F=Symbol.for("react.memo"),P=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var E=Symbol.iterator;function z(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=E&&e[E]||e["@@iterator"])?e:null}var L,A=Object.assign;function I(e){if(void 0===L)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);L=n&&n[1]||""}return"\n"+L+e}var O=!1;function B(e,n){if(!e||O)return"";O=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(c){var r=c}Reflect.construct(e,[],n)}else{try{n.call()}catch(c){r=c}e.call(n.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"===typeof c.stack){for(var a=c.stack.split("\n"),i=r.stack.split("\n"),o=a.length-1,l=i.length-1;1<=o&&0<=l&&a[o]!==i[l];)l--;for(;1<=o&&0<=l;o--,l--)if(a[o]!==i[l]){if(1!==o||1!==l)do{if(o--,0>--l||a[o]!==i[l]){var s="\n"+a[o].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=o&&0<=l);break}}}finally{O=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?I(e):""}function N(e){switch(e.tag){case 5:return I(e.type);case 16:return I("Lazy");case 13:return I("Suspense");case 19:return I("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case w:return"Portal";case M:return"Profiler";case U:return"StrictMode";case C:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case k:return(e.displayName||"Context")+".Consumer";case j:return(e._context.displayName||"Context")+".Provider";case T:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case F:return null!==(n=e.displayName||null)?n:G(e.type)||"Memo";case P:n=e._payload,e=e._init;try{return G(e(n))}catch(t){}}return null}function V(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(n);case 8:return n===U?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof n)return n.displayName||n.name||null;if("string"===typeof n)return n}return null}function q(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function W(e){e._valueTracker||(e._valueTracker=function(e){var n=H(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&"undefined"!==typeof t&&"function"===typeof t.get&&"function"===typeof t.set){var a=t.get,i=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function X(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Y(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Z(e,n){var t=n.checked;return A({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function J(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=q(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Q(e,n){null!=(n=n.checked)&&y(e,"checked",n,!1)}function $(e,n){Q(e,n);var t=q(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,q(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function K(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&Y(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+q(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(i(91));return A({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(i(92));if(ne(t)){if(1<t.length)throw Error(i(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:q(t)}}function ie(e,n){var t=q(n.value),r=q(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function oe(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?le(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,ue,ve=(ue=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,n)}))}:ue);function fe(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function de(e,n,t){return null==n||"boolean"===typeof n||""===n?"":t||"number"!==typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function he(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=de(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(pe).forEach((function(e){me.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var ge=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,n){if(n){if(ge[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(i(60));if("object"!==typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=n.style&&"object"!==typeof n.style)throw Error(i(62))}}function ye(e,n){if(-1===e.indexOf("-"))return"string"===typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,Se=null,Ue=null;function Me(e){if(e=ya(e)){if("function"!==typeof we)throw Error(i(280));var n=e.stateNode;n&&(n=_a(n),we(e.stateNode,e.type,n))}}function je(e){Se?Ue?Ue.push(e):Ue=[e]:Se=e}function ke(){if(Se){var e=Se,n=Ue;if(Ue=Se=null,Me(e),n)for(e=0;e<n.length;e++)Me(n[e])}}function Te(e,n){return e(n)}function Ce(){}var Re=!1;function Fe(e,n,t){if(Re)return e(n,t);Re=!0;try{return Te(e,n,t)}finally{Re=!1,(null!==Se||null!==Ue)&&(Ce(),ke())}}function Pe(e,n){var t=e.stateNode;if(null===t)return null;var r=_a(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!==typeof t)throw Error(i(231,n,typeof t));return t}var De=!1;if(u)try{var Ee={};Object.defineProperty(Ee,"passive",{get:function(){De=!0}}),window.addEventListener("test",Ee,Ee),window.removeEventListener("test",Ee,Ee)}catch(ue){De=!1}function ze(e,n,t,r,a,i,o,l,s){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(u){this.onError(u)}}var Le=!1,Ae=null,Ie=!1,Oe=null,Be={onError:function(e){Le=!0,Ae=e}};function Ne(e,n,t,r,a,i,o,l,s){Le=!1,Ae=null,ze.apply(Be,arguments)}function Ge(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!==(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ve(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function qe(e){if(Ge(e)!==e)throw Error(i(188))}function He(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ge(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){t=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===t)return qe(a),e;if(o===r)return qe(a),n;o=o.sibling}throw Error(i(188))}if(t.return!==r.return)t=a,r=o;else{for(var l=!1,s=a.child;s;){if(s===t){l=!0,t=a,r=o;break}if(s===r){l=!0,r=a,t=o;break}s=s.sibling}if(!l){for(s=o.child;s;){if(s===t){l=!0,t=o,r=a;break}if(s===r){l=!0,r=o,t=a;break}s=s.sibling}if(!l)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}(e))?We(e):null}function We(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=We(e);if(null!==n)return n;e=e.sibling}return null}var Xe=a.unstable_scheduleCallback,Ye=a.unstable_cancelCallback,Ze=a.unstable_shouldYield,Je=a.unstable_requestPaint,Qe=a.unstable_now,$e=a.unstable_getCurrentPriorityLevel,Ke=a.unstable_ImmediatePriority,en=a.unstable_UserBlockingPriority,nn=a.unstable_NormalPriority,tn=a.unstable_LowPriority,rn=a.unstable_IdlePriority,an=null,on=null;var ln=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(sn(e)/cn|0)|0},sn=Math.log,cn=Math.LN2;var un=64,vn=4194304;function fn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,a=e.suspendedLanes,i=e.pingedLanes,o=268435455&t;if(0!==o){var l=o&~a;0!==l?r=fn(l):0!==(i&=o)&&(r=fn(i))}else 0!==(o=t&~a)?r=fn(o):0!==i&&(r=fn(i));if(0===r)return 0;if(0!==n&&n!==r&&0===(n&a)&&((a=r&-r)>=(i=n&-n)||16===a&&0!==(4194240&i)))return n;if(0!==(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-ln(n)),r|=e[t],n&=~a;return r}function mn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function dn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function hn(){var e=un;return 0===(4194240&(un<<=1))&&(un=64),e}function gn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function xn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-ln(n)]=t}function yn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-ln(t),a=1<<r;a&n|e[r]&n&&(e[r]|=n),t&=~a}}var bn=0;function _n(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wn,Sn,Un,Mn,jn,kn=!1,Tn=[],Cn=null,Rn=null,Fn=null,Pn=new Map,Dn=new Map,En=[],zn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ln(e,n){switch(e){case"focusin":case"focusout":Cn=null;break;case"dragenter":case"dragleave":Rn=null;break;case"mouseover":case"mouseout":Fn=null;break;case"pointerover":case"pointerout":Pn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Dn.delete(n.pointerId)}}function An(e,n,t,r,a,i){return null===e||e.nativeEvent!==i?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:i,targetContainers:[a]},null!==n&&(null!==(n=ya(n))&&Sn(n)),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function In(e){var n=xa(e.target);if(null!==n){var t=Ge(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ve(t)))return e.blockedOn=n,void jn(e.priority,(function(){Un(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function On(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Jn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=ya(t))&&Sn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);be=r,t.target.dispatchEvent(r),be=null,n.shift()}return!0}function Bn(e,n,t){On(e)&&t.delete(n)}function Nn(){kn=!1,null!==Cn&&On(Cn)&&(Cn=null),null!==Rn&&On(Rn)&&(Rn=null),null!==Fn&&On(Fn)&&(Fn=null),Pn.forEach(Bn),Dn.forEach(Bn)}function Gn(e,n){e.blockedOn===n&&(e.blockedOn=null,kn||(kn=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Nn)))}function Vn(e){function n(n){return Gn(n,e)}if(0<Tn.length){Gn(Tn[0],e);for(var t=1;t<Tn.length;t++){var r=Tn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Cn&&Gn(Cn,e),null!==Rn&&Gn(Rn,e),null!==Fn&&Gn(Fn,e),Pn.forEach(n),Dn.forEach(n),t=0;t<En.length;t++)(r=En[t]).blockedOn===e&&(r.blockedOn=null);for(;0<En.length&&null===(t=En[0]).blockedOn;)In(t),null===t.blockedOn&&En.shift()}var qn=b.ReactCurrentBatchConfig,Hn=!0;function Wn(e,n,t,r){var a=bn,i=qn.transition;qn.transition=null;try{bn=1,Yn(e,n,t,r)}finally{bn=a,qn.transition=i}}function Xn(e,n,t,r){var a=bn,i=qn.transition;qn.transition=null;try{bn=4,Yn(e,n,t,r)}finally{bn=a,qn.transition=i}}function Yn(e,n,t,r){if(Hn){var a=Jn(e,n,t,r);if(null===a)qr(e,n,r,Zn,t),Ln(e,r);else if(function(e,n,t,r,a){switch(n){case"focusin":return Cn=An(Cn,e,n,t,r,a),!0;case"dragenter":return Rn=An(Rn,e,n,t,r,a),!0;case"mouseover":return Fn=An(Fn,e,n,t,r,a),!0;case"pointerover":var i=a.pointerId;return Pn.set(i,An(Pn.get(i)||null,e,n,t,r,a)),!0;case"gotpointercapture":return i=a.pointerId,Dn.set(i,An(Dn.get(i)||null,e,n,t,r,a)),!0}return!1}(a,e,n,t,r))r.stopPropagation();else if(Ln(e,r),4&n&&-1<zn.indexOf(e)){for(;null!==a;){var i=ya(a);if(null!==i&&wn(i),null===(i=Jn(e,n,t,r))&&qr(e,n,r,Zn,t),i===a)break;a=i}null!==a&&r.stopPropagation()}else qr(e,n,r,null,t)}}var Zn=null;function Jn(e,n,t,r){if(Zn=null,null!==(e=xa(e=_e(r))))if(null===(n=Ge(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ve(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Zn=e,null}function Qn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($e()){case Ke:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var $n=null,Kn=null,et=null;function nt(){if(et)return et;var e,n,t=Kn,r=t.length,a="value"in $n?$n.value:$n.textContent,i=a.length;for(e=0;e<r&&t[e]===a[e];e++);var o=r-e;for(n=1;n<=o&&t[r-n]===a[i-n];n++);return et=a.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function at(){return!1}function it(e){function n(n,t,r,a,i){for(var o in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(o)&&(n=e[o],this[o]=n?n(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return A(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var ot,lt,st,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=it(ct),vt=A({},ct,{view:0,detail:0}),ft=it(vt),pt=A({},vt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Mt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(ot=e.screenX-st.screenX,lt=e.screenY-st.screenY):lt=ot=0,st=e),ot)},movementY:function(e){return"movementY"in e?e.movementY:lt}}),mt=it(pt),dt=it(A({},pt,{dataTransfer:0})),ht=it(A({},vt,{relatedTarget:0})),gt=it(A({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),xt=A({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yt=it(xt),bt=it(A({},ct,{data:0})),_t={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},St={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ut(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=St[e])&&!!n[e]}function Mt(){return Ut}var jt=A({},vt,{key:function(e){if(e.key){var n=_t[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Mt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),kt=it(jt),Tt=it(A({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ct=it(A({},vt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Mt})),Rt=it(A({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ft=A({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pt=it(Ft),Dt=[9,13,27,32],Et=u&&"CompositionEvent"in window,zt=null;u&&"documentMode"in document&&(zt=document.documentMode);var Lt=u&&"TextEvent"in window&&!zt,At=u&&(!Et||zt&&8<zt&&11>=zt),It=String.fromCharCode(32),Ot=!1;function Bt(e,n){switch(e){case"keyup":return-1!==Dt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Nt(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Gt=!1;var Vt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Vt[e.type]:"textarea"===n}function Ht(e,n,t,r){je(r),0<(n=Wr(n,"onChange")).length&&(t=new ut("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Wt=null,Xt=null;function Yt(e){Ir(e,0)}function Zt(e){if(X(ba(e)))return e}function Jt(e,n){if("change"===e)return n}var Qt=!1;if(u){var $t;if(u){var Kt="oninput"in document;if(!Kt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Kt="function"===typeof er.oninput}$t=Kt}else $t=!1;Qt=$t&&(!document.documentMode||9<document.documentMode)}function nr(){Wt&&(Wt.detachEvent("onpropertychange",tr),Xt=Wt=null)}function tr(e){if("value"===e.propertyName&&Zt(Xt)){var n=[];Ht(n,Xt,e,_e(e)),Fe(Yt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Xt=t,(Wt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zt(Xt)}function ir(e,n){if("click"===e)return Zt(n)}function or(e,n){if("input"===e||"change"===e)return Zt(n)}var lr="function"===typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e===1/n)||e!==e&&n!==n};function sr(e,n){if(lr(e,n))return!0;if("object"!==typeof e||null===e||"object"!==typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!v.call(n,a)||!lr(e[a],n[a]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function vr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?vr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function fr(){for(var e=window,n=Y();n instanceof e.HTMLIFrameElement;){try{var t="string"===typeof n.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=Y((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function mr(e){var n=fr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&vr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var a=t.textContent.length,i=Math.min(r.start,a);r=void 0===r.end?i:Math.min(r.end,a),!e.extend&&i>r&&(a=r,r=i,i=a),a=ur(t,i);var o=ur(t,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((n=n.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),i>r?(e.addRange(n),e.extend(o.node,o.offset)):(n.setEnd(o.node,o.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var dr=u&&"documentMode"in document&&11>=document.documentMode,hr=null,gr=null,xr=null,yr=!1;function br(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;yr||null==hr||hr!==Y(r)||("selectionStart"in(r=hr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},xr&&sr(xr,r)||(xr=r,0<(r=Wr(gr,"onSelect")).length&&(n=new ut("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=hr)))}function _r(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var wr={animationend:_r("Animation","AnimationEnd"),animationiteration:_r("Animation","AnimationIteration"),animationstart:_r("Animation","AnimationStart"),transitionend:_r("Transition","TransitionEnd")},Sr={},Ur={};function Mr(e){if(Sr[e])return Sr[e];if(!wr[e])return e;var n,t=wr[e];for(n in t)if(t.hasOwnProperty(n)&&n in Ur)return Sr[e]=t[n];return e}u&&(Ur=document.createElement("div").style,"AnimationEvent"in window||(delete wr.animationend.animation,delete wr.animationiteration.animation,delete wr.animationstart.animation),"TransitionEvent"in window||delete wr.transitionend.transition);var jr=Mr("animationend"),kr=Mr("animationiteration"),Tr=Mr("animationstart"),Cr=Mr("transitionend"),Rr=new Map,Fr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Pr(e,n){Rr.set(e,n),s(n,[e])}for(var Dr=0;Dr<Fr.length;Dr++){var Er=Fr[Dr];Pr(Er.toLowerCase(),"on"+(Er[0].toUpperCase()+Er.slice(1)))}Pr(jr,"onAnimationEnd"),Pr(kr,"onAnimationIteration"),Pr(Tr,"onAnimationStart"),Pr("dblclick","onDoubleClick"),Pr("focusin","onFocus"),Pr("focusout","onBlur"),Pr(Cr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var zr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Lr=new Set("cancel close invalid load scroll toggle".split(" ").concat(zr));function Ar(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,o,l,s,c){if(Ne.apply(this,arguments),Le){if(!Le)throw Error(i(198));var u=Ae;Le=!1,Ae=null,Ie||(Ie=!0,Oe=u)}}(r,n,void 0,e),e.currentTarget=null}function Ir(e,n){n=0!==(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var i=void 0;if(n)for(var o=r.length-1;0<=o;o--){var l=r[o],s=l.instance,c=l.currentTarget;if(l=l.listener,s!==i&&a.isPropagationStopped())break e;Ar(a,l,c),i=s}else for(o=0;o<r.length;o++){if(s=(l=r[o]).instance,c=l.currentTarget,l=l.listener,s!==i&&a.isPropagationStopped())break e;Ar(a,l,c),i=s}}}if(Ie)throw e=Oe,Ie=!1,Oe=null,e}function Or(e,n){var t=n[da];void 0===t&&(t=n[da]=new Set);var r=e+"__bubble";t.has(r)||(Vr(n,e,2,!1),t.add(r))}function Br(e,n,t){var r=0;n&&(r|=4),Vr(t,e,r,n)}var Nr="_reactListening"+Math.random().toString(36).slice(2);function Gr(e){if(!e[Nr]){e[Nr]=!0,o.forEach((function(n){"selectionchange"!==n&&(Lr.has(n)||Br(n,!1,e),Br(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Nr]||(n[Nr]=!0,Br("selectionchange",!1,n))}}function Vr(e,n,t,r){switch(Qn(n)){case 1:var a=Wn;break;case 4:a=Xn;break;default:a=Yn}t=a.bind(null,n,t,e),a=void 0,!De||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function qr(e,n,t,r,a){var i=r;if(0===(1&n)&&0===(2&n)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var s=o.tag;if((3===s||4===s)&&((s=o.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;o=o.return}for(;null!==l;){if(null===(o=xa(l)))return;if(5===(s=o.tag)||6===s){r=i=o;continue e}l=l.parentNode}}r=r.return}Fe((function(){var r=i,a=_e(t),o=[];e:{var l=Rr.get(e);if(void 0!==l){var s=ut,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":s=kt;break;case"focusin":c="focus",s=ht;break;case"focusout":c="blur",s=ht;break;case"beforeblur":case"afterblur":s=ht;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=mt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=dt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Ct;break;case jr:case kr:case Tr:s=gt;break;case Cr:s=Rt;break;case"scroll":s=ft;break;case"wheel":s=Pt;break;case"copy":case"cut":case"paste":s=yt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Tt}var u=0!==(4&n),v=!u&&"scroll"===e,f=u?null!==l?l+"Capture":null:l;u=[];for(var p,m=r;null!==m;){var d=(p=m).stateNode;if(5===p.tag&&null!==d&&(p=d,null!==f&&(null!=(d=Pe(m,f))&&u.push(Hr(m,d,p)))),v)break;m=m.return}0<u.length&&(l=new s(l,c,null,t,a),o.push({event:l,listeners:u}))}}if(0===(7&n)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||t===be||!(c=t.relatedTarget||t.fromElement)||!xa(c)&&!c[ma])&&(s||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=r,null!==(c=(c=t.relatedTarget||t.toElement)?xa(c):null)&&(c!==(v=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(s=null,c=r),s!==c)){if(u=mt,d="onMouseLeave",f="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(u=Tt,d="onPointerLeave",f="onPointerEnter",m="pointer"),v=null==s?l:ba(s),p=null==c?l:ba(c),(l=new u(d,m+"leave",s,t,a)).target=v,l.relatedTarget=p,d=null,xa(a)===r&&((u=new u(f,m+"enter",c,t,a)).target=p,u.relatedTarget=v,d=u),v=d,s&&c)e:{for(f=c,m=0,p=u=s;p;p=Xr(p))m++;for(p=0,d=f;d;d=Xr(d))p++;for(;0<m-p;)u=Xr(u),m--;for(;0<p-m;)f=Xr(f),p--;for(;m--;){if(u===f||null!==f&&u===f.alternate)break e;u=Xr(u),f=Xr(f)}u=null}else u=null;null!==s&&Yr(o,l,s,u,!1),null!==c&&null!==v&&Yr(o,v,c,u,!0)}if("select"===(s=(l=r?ba(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var h=Jt;else if(qt(l))if(Qt)h=or;else{h=ar;var g=rr}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(h=ir);switch(h&&(h=h(e,r))?Ht(o,h,t,a):(g&&g(e,l,r),"focusout"===e&&(g=l._wrapperState)&&g.controlled&&"number"===l.type&&ee(l,"number",l.value)),g=r?ba(r):window,e){case"focusin":(qt(g)||"true"===g.contentEditable)&&(hr=g,gr=r,xr=null);break;case"focusout":xr=gr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,br(o,t,a);break;case"selectionchange":if(dr)break;case"keydown":case"keyup":br(o,t,a)}var x;if(Et)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Gt?Bt(e,t)&&(y="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(y="onCompositionStart");y&&(At&&"ko"!==t.locale&&(Gt||"onCompositionStart"!==y?"onCompositionEnd"===y&&Gt&&(x=nt()):(Kn="value"in($n=a)?$n.value:$n.textContent,Gt=!0)),0<(g=Wr(r,y)).length&&(y=new bt(y,e,null,t,a),o.push({event:y,listeners:g}),x?y.data=x:null!==(x=Nt(t))&&(y.data=x))),(x=Lt?function(e,n){switch(e){case"compositionend":return Nt(n);case"keypress":return 32!==n.which?null:(Ot=!0,It);case"textInput":return(e=n.data)===It&&Ot?null:e;default:return null}}(e,t):function(e,n){if(Gt)return"compositionend"===e||!Et&&Bt(e,n)?(e=nt(),et=Kn=$n=null,Gt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return At&&"ko"!==n.locale?null:n.data}}(e,t))&&(0<(r=Wr(r,"onBeforeInput")).length&&(a=new bt("onBeforeInput","beforeinput",null,t,a),o.push({event:a,listeners:r}),a.data=x))}Ir(o,n)}))}function Hr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Wr(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,i=a.stateNode;5===a.tag&&null!==i&&(a=i,null!=(i=Pe(e,t))&&r.unshift(Hr(e,i,a)),null!=(i=Pe(e,n))&&r.push(Hr(e,i,a))),e=e.return}return r}function Xr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,n,t,r,a){for(var i=n._reactName,o=[];null!==t&&t!==r;){var l=t,s=l.alternate,c=l.stateNode;if(null!==s&&s===r)break;5===l.tag&&null!==c&&(l=c,a?null!=(s=Pe(t,i))&&o.unshift(Hr(t,s,l)):a||null!=(s=Pe(t,i))&&o.push(Hr(t,s,l))),t=t.return}0!==o.length&&e.push({event:n,listeners:o})}var Zr=/\r\n?/g,Jr=/\u0000|\uFFFD/g;function Qr(e){return("string"===typeof e?e:""+e).replace(Zr,"\n").replace(Jr,"")}function $r(e,n,t){if(n=Qr(n),Qr(e)!==n&&t)throw Error(i(425))}function Kr(){}var ea=null,na=null;function ta(e,n){return"textarea"===e||"noscript"===e||"string"===typeof n.children||"number"===typeof n.children||"object"===typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ra="function"===typeof setTimeout?setTimeout:void 0,aa="function"===typeof clearTimeout?clearTimeout:void 0,ia="function"===typeof Promise?Promise:void 0,oa="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ia?function(e){return ia.resolve(null).then(e).catch(la)}:ra;function la(e){setTimeout((function(){throw e}))}function sa(e,n){var t=n,r=0;do{var a=t.nextSibling;if(e.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return e.removeChild(a),void Vn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);Vn(n)}function ca(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ua(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var va=Math.random().toString(36).slice(2),fa="__reactFiber$"+va,pa="__reactProps$"+va,ma="__reactContainer$"+va,da="__reactEvents$"+va,ha="__reactListeners$"+va,ga="__reactHandles$"+va;function xa(e){var n=e[fa];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ma]||t[fa]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=ua(e);null!==e;){if(t=e[fa])return t;e=ua(e)}return n}t=(e=t).parentNode}return null}function ya(e){return!(e=e[fa]||e[ma])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ba(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function _a(e){return e[pa]||null}var wa=[],Sa=-1;function Ua(e){return{current:e}}function Ma(e){0>Sa||(e.current=wa[Sa],wa[Sa]=null,Sa--)}function ja(e,n){Sa++,wa[Sa]=e.current,e.current=n}var ka={},Ta=Ua(ka),Ca=Ua(!1),Ra=ka;function Fa(e,n){var t=e.type.contextTypes;if(!t)return ka;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in t)i[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=i),i}function Pa(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Da(){Ma(Ca),Ma(Ta)}function Ea(e,n,t){if(Ta.current!==ka)throw Error(i(168));ja(Ta,n),ja(Ca,t)}function za(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!==typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in n))throw Error(i(108,V(e)||"Unknown",a));return A({},t,r)}function La(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ka,Ra=Ta.current,ja(Ta,e),ja(Ca,Ca.current),!0}function Aa(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=za(e,n,Ra),r.__reactInternalMemoizedMergedChildContext=e,Ma(Ca),Ma(Ta),ja(Ta,e)):Ma(Ca),ja(Ca,t)}var Ia=null,Oa=!1,Ba=!1;function Na(e){null===Ia?Ia=[e]:Ia.push(e)}function Ga(){if(!Ba&&null!==Ia){Ba=!0;var e=0,n=bn;try{var t=Ia;for(bn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Ia=null,Oa=!1}catch(a){throw null!==Ia&&(Ia=Ia.slice(e+1)),Xe(Ke,Ga),a}finally{bn=n,Ba=!1}}return null}var Va=[],qa=0,Ha=null,Wa=0,Xa=[],Ya=0,Za=null,Ja=1,Qa="";function $a(e,n){Va[qa++]=Wa,Va[qa++]=Ha,Ha=e,Wa=n}function Ka(e,n,t){Xa[Ya++]=Ja,Xa[Ya++]=Qa,Xa[Ya++]=Za,Za=e;var r=Ja;e=Qa;var a=32-ln(r)-1;r&=~(1<<a),t+=1;var i=32-ln(n)+a;if(30<i){var o=a-a%5;i=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Ja=1<<32-ln(n)+a|t<<a|r,Qa=i+e}else Ja=1<<i|t<<a|r,Qa=e}function ei(e){null!==e.return&&($a(e,1),Ka(e,1,0))}function ni(e){for(;e===Ha;)Ha=Va[--qa],Va[qa]=null,Wa=Va[--qa],Va[qa]=null;for(;e===Za;)Za=Xa[--Ya],Xa[Ya]=null,Qa=Xa[--Ya],Xa[Ya]=null,Ja=Xa[--Ya],Xa[Ya]=null}var ti=null,ri=null,ai=!1,ii=null;function oi(e,n){var t=Fc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function li(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ti=e,ri=ca(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ti=e,ri=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Za?{id:Ja,overflow:Qa}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Fc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ti=e,ri=null,!0);default:return!1}}function si(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ci(e){if(ai){var n=ri;if(n){var t=n;if(!li(e,n)){if(si(e))throw Error(i(418));n=ca(t.nextSibling);var r=ti;n&&li(e,n)?oi(r,t):(e.flags=-4097&e.flags|2,ai=!1,ti=e)}}else{if(si(e))throw Error(i(418));e.flags=-4097&e.flags|2,ai=!1,ti=e}}}function ui(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ti=e}function vi(e){if(e!==ti)return!1;if(!ai)return ui(e),ai=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ta(e.type,e.memoizedProps)),n&&(n=ri)){if(si(e))throw fi(),Error(i(418));for(;n;)oi(e,n),n=ca(n.nextSibling)}if(ui(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){ri=ca(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}ri=null}}else ri=ti?ca(e.stateNode.nextSibling):null;return!0}function fi(){for(var e=ri;e;)e=ca(e.nextSibling)}function pi(){ri=ti=null,ai=!1}function mi(e){null===ii?ii=[e]:ii.push(e)}var di=b.ReactCurrentBatchConfig;function hi(e,n){if(e&&e.defaultProps){for(var t in n=A({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var gi=Ua(null),xi=null,yi=null,bi=null;function _i(){bi=yi=xi=null}function wi(e){var n=gi.current;Ma(gi),e._currentValue=n}function Si(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Ui(e,n){xi=e,bi=yi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(bl=!0),e.firstContext=null)}function Mi(e){var n=e._currentValue;if(bi!==e)if(e={context:e,memoizedValue:n,next:null},null===yi){if(null===xi)throw Error(i(308));yi=e,xi.dependencies={lanes:0,firstContext:e}}else yi=yi.next=e;return n}var ji=null;function ki(e){null===ji?ji=[e]:ji.push(e)}function Ti(e,n,t,r){var a=n.interleaved;return null===a?(t.next=t,ki(n)):(t.next=a.next,a.next=t),n.interleaved=t,Ci(e,r)}function Ci(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Ri=!1;function Fi(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Pi(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Di(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Ei(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&Ts)){var a=r.pending;return null===a?n.next=n:(n.next=a.next,a.next=n),r.pending=n,Ci(e,t)}return null===(a=r.interleaved)?(n.next=n,ki(r)):(n.next=a.next,a.next=n),r.interleaved=n,Ci(e,t)}function zi(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!==(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,yn(e,t)}}function Li(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,i=null;if(null!==(t=t.firstBaseUpdate)){do{var o={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===i?a=i=o:i=i.next=o,t=t.next}while(null!==t);null===i?a=i=n:i=i.next=n}else a=i=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Ai(e,n,t,r){var a=e.updateQueue;Ri=!1;var i=a.firstBaseUpdate,o=a.lastBaseUpdate,l=a.shared.pending;if(null!==l){a.shared.pending=null;var s=l,c=s.next;s.next=null,null===o?i=c:o.next=c,o=s;var u=e.alternate;null!==u&&((l=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===l?u.firstBaseUpdate=c:l.next=c,u.lastBaseUpdate=s))}if(null!==i){var v=a.baseState;for(o=0,u=c=s=null,l=i;;){var f=l.lane,p=l.eventTime;if((r&f)===f){null!==u&&(u=u.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var m=e,d=l;switch(f=n,p=t,d.tag){case 1:if("function"===typeof(m=d.payload)){v=m.call(p,v,f);break e}v=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null===(f="function"===typeof(m=d.payload)?m.call(p,v,f):m)||void 0===f)break e;v=A({},v,f);break e;case 2:Ri=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(f=a.effects)?a.effects=[l]:f.push(l))}else p={eventTime:p,lane:f,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===u?(c=u=p,s=v):u=u.next=p,o|=f;if(null===(l=l.next)){if(null===(l=a.shared.pending))break;l=(f=l).next,f.next=null,a.lastBaseUpdate=f,a.shared.pending=null}}if(null===u&&(s=v),a.baseState=s,a.firstBaseUpdate=c,a.lastBaseUpdate=u,null!==(n=a.shared.interleaved)){a=n;do{o|=a.lane,a=a.next}while(a!==n)}else null===i&&(a.shared.lanes=0);Ls|=o,e.lanes=o,e.memoizedState=v}}function Ii(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!==typeof a)throw Error(i(191,a));a.call(r)}}}var Oi=(new r.Component).refs;function Bi(e,n,t,r){t=null===(t=t(r,n=e.memoizedState))||void 0===t?n:A({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Ni={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ec(),a=nc(e),i=Di(r,a);i.payload=n,void 0!==t&&null!==t&&(i.callback=t),null!==(n=Ei(e,i,a))&&(tc(n,e,a,r),zi(n,e,a))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ec(),a=nc(e),i=Di(r,a);i.tag=1,i.payload=n,void 0!==t&&null!==t&&(i.callback=t),null!==(n=Ei(e,i,a))&&(tc(n,e,a,r),zi(n,e,a))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ec(),r=nc(e),a=Di(t,r);a.tag=2,void 0!==n&&null!==n&&(a.callback=n),null!==(n=Ei(e,a,r))&&(tc(n,e,r,t),zi(n,e,r))}};function Gi(e,n,t,r,a,i,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!n.prototype||!n.prototype.isPureReactComponent||(!sr(t,r)||!sr(a,i))}function Vi(e,n,t){var r=!1,a=ka,i=n.contextType;return"object"===typeof i&&null!==i?i=Mi(i):(a=Pa(n)?Ra:Ta.current,i=(r=null!==(r=n.contextTypes)&&void 0!==r)?Fa(e,a):ka),n=new n(t,i),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Ni,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),n}function qi(e,n,t,r){e=n.state,"function"===typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"===typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Ni.enqueueReplaceState(n,n.state,null)}function Hi(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs=Oi,Fi(e);var i=n.contextType;"object"===typeof i&&null!==i?a.context=Mi(i):(i=Pa(n)?Ra:Ta.current,a.context=Fa(e,i)),a.state=e.memoizedState,"function"===typeof(i=n.getDerivedStateFromProps)&&(Bi(e,n,i,t),a.state=e.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(n=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&Ni.enqueueReplaceState(a,a.state,null),Ai(e,t,a,r),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}function Wi(e,n,t){if(null!==(e=t.ref)&&"function"!==typeof e&&"object"!==typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var a=r,o=""+e;return null!==n&&null!==n.ref&&"function"===typeof n.ref&&n.ref._stringRef===o?n.ref:(n=function(e){var n=a.refs;n===Oi&&(n=a.refs={}),null===e?delete n[o]:n[o]=e},n._stringRef=o,n)}if("string"!==typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function Xi(e,n){throw e=Object.prototype.toString.call(n),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Yi(e){return(0,e._init)(e._payload)}function Zi(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Dc(e,n)).index=0,e.sibling=null,e}function o(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function l(n){return e&&null===n.alternate&&(n.flags|=2),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Ac(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function c(e,n,t,r){var i=t.type;return i===S?v(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===P&&Yi(i)===n.type)?((r=a(n,t.props)).ref=Wi(e,n,t),r.return=e,r):((r=Ec(t.type,t.key,t.props,null,e.mode,r)).ref=Wi(e,n,t),r.return=e,r)}function u(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Ic(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function v(e,n,t,r,i){return null===n||7!==n.tag?((n=zc(t,e.mode,r,i)).return=e,n):((n=a(n,t)).return=e,n)}function f(e,n,t){if("string"===typeof n&&""!==n||"number"===typeof n)return(n=Ac(""+n,e.mode,t)).return=e,n;if("object"===typeof n&&null!==n){switch(n.$$typeof){case _:return(t=Ec(n.type,n.key,n.props,null,e.mode,t)).ref=Wi(e,null,n),t.return=e,t;case w:return(n=Ic(n,e.mode,t)).return=e,n;case P:return f(e,(0,n._init)(n._payload),t)}if(ne(n)||z(n))return(n=zc(n,e.mode,t,null)).return=e,n;Xi(e,n)}return null}function p(e,n,t,r){var a=null!==n?n.key:null;if("string"===typeof t&&""!==t||"number"===typeof t)return null!==a?null:s(e,n,""+t,r);if("object"===typeof t&&null!==t){switch(t.$$typeof){case _:return t.key===a?c(e,n,t,r):null;case w:return t.key===a?u(e,n,t,r):null;case P:return p(e,n,(a=t._init)(t._payload),r)}if(ne(t)||z(t))return null!==a?null:v(e,n,t,r,null);Xi(e,t)}return null}function m(e,n,t,r,a){if("string"===typeof r&&""!==r||"number"===typeof r)return s(n,e=e.get(t)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case _:return c(n,e=e.get(null===r.key?t:r.key)||null,r,a);case w:return u(n,e=e.get(null===r.key?t:r.key)||null,r,a);case P:return m(e,n,t,(0,r._init)(r._payload),a)}if(ne(r)||z(r))return v(n,e=e.get(t)||null,r,a,null);Xi(n,r)}return null}function d(a,i,l,s){for(var c=null,u=null,v=i,d=i=0,h=null;null!==v&&d<l.length;d++){v.index>d?(h=v,v=null):h=v.sibling;var g=p(a,v,l[d],s);if(null===g){null===v&&(v=h);break}e&&v&&null===g.alternate&&n(a,v),i=o(g,i,d),null===u?c=g:u.sibling=g,u=g,v=h}if(d===l.length)return t(a,v),ai&&$a(a,d),c;if(null===v){for(;d<l.length;d++)null!==(v=f(a,l[d],s))&&(i=o(v,i,d),null===u?c=v:u.sibling=v,u=v);return ai&&$a(a,d),c}for(v=r(a,v);d<l.length;d++)null!==(h=m(v,a,d,l[d],s))&&(e&&null!==h.alternate&&v.delete(null===h.key?d:h.key),i=o(h,i,d),null===u?c=h:u.sibling=h,u=h);return e&&v.forEach((function(e){return n(a,e)})),ai&&$a(a,d),c}function h(a,l,s,c){var u=z(s);if("function"!==typeof u)throw Error(i(150));if(null==(s=u.call(s)))throw Error(i(151));for(var v=u=null,d=l,h=l=0,g=null,x=s.next();null!==d&&!x.done;h++,x=s.next()){d.index>h?(g=d,d=null):g=d.sibling;var y=p(a,d,x.value,c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&n(a,d),l=o(y,l,h),null===v?u=y:v.sibling=y,v=y,d=g}if(x.done)return t(a,d),ai&&$a(a,h),u;if(null===d){for(;!x.done;h++,x=s.next())null!==(x=f(a,x.value,c))&&(l=o(x,l,h),null===v?u=x:v.sibling=x,v=x);return ai&&$a(a,h),u}for(d=r(a,d);!x.done;h++,x=s.next())null!==(x=m(d,a,h,x.value,c))&&(e&&null!==x.alternate&&d.delete(null===x.key?h:x.key),l=o(x,l,h),null===v?u=x:v.sibling=x,v=x);return e&&d.forEach((function(e){return n(a,e)})),ai&&$a(a,h),u}return function e(r,i,o,s){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case _:e:{for(var c=o.key,u=i;null!==u;){if(u.key===c){if((c=o.type)===S){if(7===u.tag){t(r,u.sibling),(i=a(u,o.props.children)).return=r,r=i;break e}}else if(u.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===P&&Yi(c)===u.type){t(r,u.sibling),(i=a(u,o.props)).ref=Wi(r,u,o),i.return=r,r=i;break e}t(r,u);break}n(r,u),u=u.sibling}o.type===S?((i=zc(o.props.children,r.mode,s,o.key)).return=r,r=i):((s=Ec(o.type,o.key,o.props,null,r.mode,s)).ref=Wi(r,i,o),s.return=r,r=s)}return l(r);case w:e:{for(u=o.key;null!==i;){if(i.key===u){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){t(r,i.sibling),(i=a(i,o.children||[])).return=r,r=i;break e}t(r,i);break}n(r,i),i=i.sibling}(i=Ic(o,r.mode,s)).return=r,r=i}return l(r);case P:return e(r,i,(u=o._init)(o._payload),s)}if(ne(o))return d(r,i,o,s);if(z(o))return h(r,i,o,s);Xi(r,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==i&&6===i.tag?(t(r,i.sibling),(i=a(i,o)).return=r,r=i):(t(r,i),(i=Ac(o,r.mode,s)).return=r,r=i),l(r)):t(r,i)}}var Ji=Zi(!0),Qi=Zi(!1),$i={},Ki=Ua($i),eo=Ua($i),no=Ua($i);function to(e){if(e===$i)throw Error(i(174));return e}function ro(e,n){switch(ja(no,n),ja(eo,e),ja(Ki,$i),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:se(null,"");break;default:n=se(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Ma(Ki),ja(Ki,n)}function ao(){Ma(Ki),Ma(eo),Ma(no)}function io(e){to(no.current);var n=to(Ki.current),t=se(n,e.type);n!==t&&(ja(eo,e),ja(Ki,t))}function oo(e){eo.current===e&&(Ma(Ki),Ma(eo))}var lo=Ua(0);function so(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!==(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var co=[];function uo(){for(var e=0;e<co.length;e++)co[e]._workInProgressVersionPrimary=null;co.length=0}var vo=b.ReactCurrentDispatcher,fo=b.ReactCurrentBatchConfig,po=0,mo=null,ho=null,go=null,xo=!1,yo=!1,bo=0,_o=0;function wo(){throw Error(i(321))}function So(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!lr(e[t],n[t]))return!1;return!0}function Uo(e,n,t,r,a,o){if(po=o,mo=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,vo.current=null===e||null===e.memoizedState?ll:sl,e=t(r,a),yo){o=0;do{if(yo=!1,bo=0,25<=o)throw Error(i(301));o+=1,go=ho=null,n.updateQueue=null,vo.current=cl,e=t(r,a)}while(yo)}if(vo.current=ol,n=null!==ho&&null!==ho.next,po=0,go=ho=mo=null,xo=!1,n)throw Error(i(300));return e}function Mo(){var e=0!==bo;return bo=0,e}function jo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===go?mo.memoizedState=go=e:go=go.next=e,go}function ko(){if(null===ho){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=ho.next;var n=null===go?mo.memoizedState:go.next;if(null!==n)go=n,ho=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ho=e).memoizedState,baseState:ho.baseState,baseQueue:ho.baseQueue,queue:ho.queue,next:null},null===go?mo.memoizedState=go=e:go=go.next=e}return go}function To(e,n){return"function"===typeof n?n(e):n}function Co(e){var n=ko(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=ho,a=r.baseQueue,o=t.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,t.pending=null}if(null!==a){o=a.next,r=r.baseState;var s=l=null,c=null,u=o;do{var v=u.lane;if((po&v)===v)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var f={lane:v,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(s=c=f,l=r):c=c.next=f,mo.lanes|=v,Ls|=v}u=u.next}while(null!==u&&u!==o);null===c?l=r:c.next=s,lr(r,n.memoizedState)||(bl=!0),n.memoizedState=r,n.baseState=l,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){a=e;do{o=a.lane,mo.lanes|=o,Ls|=o,a=a.next}while(a!==e)}else null===a&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ro(e){var n=ko(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,o=n.memoizedState;if(null!==a){t.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);lr(o,n.memoizedState)||(bl=!0),n.memoizedState=o,null===n.baseQueue&&(n.baseState=o),t.lastRenderedState=o}return[o,r]}function Fo(){}function Po(e,n){var t=mo,r=ko(),a=n(),o=!lr(r.memoizedState,a);if(o&&(r.memoizedState=a,bl=!0),r=r.queue,qo(zo.bind(null,t,r,e),[e]),r.getSnapshot!==n||o||null!==go&&1&go.memoizedState.tag){if(t.flags|=2048,Oo(9,Eo.bind(null,t,r,a,n),void 0,null),null===Cs)throw Error(i(349));0!==(30&po)||Do(t,n,a)}return a}function Do(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=mo.updateQueue)?(n={lastEffect:null,stores:null},mo.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Eo(e,n,t,r){n.value=t,n.getSnapshot=r,Lo(n)&&Ao(e)}function zo(e,n,t){return t((function(){Lo(n)&&Ao(e)}))}function Lo(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!lr(e,t)}catch(r){return!0}}function Ao(e){var n=Ci(e,1);null!==n&&tc(n,e,1,-1)}function Io(e){var n=jo();return"function"===typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:To,lastRenderedState:e},n.queue=e,e=e.dispatch=tl.bind(null,mo,e),[n.memoizedState,e]}function Oo(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=mo.updateQueue)?(n={lastEffect:null,stores:null},mo.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Bo(){return ko().memoizedState}function No(e,n,t,r){var a=jo();mo.flags|=e,a.memoizedState=Oo(1|n,t,void 0,void 0===r?null:r)}function Go(e,n,t,r){var a=ko();r=void 0===r?null:r;var i=void 0;if(null!==ho){var o=ho.memoizedState;if(i=o.destroy,null!==r&&So(r,o.deps))return void(a.memoizedState=Oo(n,t,i,r))}mo.flags|=e,a.memoizedState=Oo(1|n,t,i,r)}function Vo(e,n){return No(8390656,8,e,n)}function qo(e,n){return Go(2048,8,e,n)}function Ho(e,n){return Go(4,2,e,n)}function Wo(e,n){return Go(4,4,e,n)}function Xo(e,n){return"function"===typeof n?(e=e(),n(e),function(){n(null)}):null!==n&&void 0!==n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Yo(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Go(4,4,Xo.bind(null,n,e),t)}function Zo(){}function Jo(e,n){var t=ko();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&So(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Qo(e,n){var t=ko();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&So(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function $o(e,n,t){return 0===(21&po)?(e.baseState&&(e.baseState=!1,bl=!0),e.memoizedState=t):(lr(t,n)||(t=hn(),mo.lanes|=t,Ls|=t,e.baseState=!0),n)}function Ko(e,n){var t=bn;bn=0!==t&&4>t?t:4,e(!0);var r=fo.transition;fo.transition={};try{e(!1),n()}finally{bn=t,fo.transition=r}}function el(){return ko().memoizedState}function nl(e,n,t){var r=nc(e);if(t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},rl(e))al(n,t);else if(null!==(t=Ti(e,n,t,r))){tc(t,e,r,ec()),il(t,n,r)}}function tl(e,n,t){var r=nc(e),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(rl(e))al(n,a);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=n.lastRenderedReducer))try{var o=n.lastRenderedState,l=i(o,t);if(a.hasEagerState=!0,a.eagerState=l,lr(l,o)){var s=n.interleaved;return null===s?(a.next=a,ki(n)):(a.next=s.next,s.next=a),void(n.interleaved=a)}}catch(c){}null!==(t=Ti(e,n,a,r))&&(tc(t,e,r,a=ec()),il(t,n,r))}}function rl(e){var n=e.alternate;return e===mo||null!==n&&n===mo}function al(e,n){yo=xo=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function il(e,n,t){if(0!==(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,yn(e,t)}}var ol={readContext:Mi,useCallback:wo,useContext:wo,useEffect:wo,useImperativeHandle:wo,useInsertionEffect:wo,useLayoutEffect:wo,useMemo:wo,useReducer:wo,useRef:wo,useState:wo,useDebugValue:wo,useDeferredValue:wo,useTransition:wo,useMutableSource:wo,useSyncExternalStore:wo,useId:wo,unstable_isNewReconciler:!1},ll={readContext:Mi,useCallback:function(e,n){return jo().memoizedState=[e,void 0===n?null:n],e},useContext:Mi,useEffect:Vo,useImperativeHandle:function(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,No(4194308,4,Xo.bind(null,n,e),t)},useLayoutEffect:function(e,n){return No(4194308,4,e,n)},useInsertionEffect:function(e,n){return No(4,2,e,n)},useMemo:function(e,n){var t=jo();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=jo();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=nl.bind(null,mo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},jo().memoizedState=e},useState:Io,useDebugValue:Zo,useDeferredValue:function(e){return jo().memoizedState=e},useTransition:function(){var e=Io(!1),n=e[0];return e=Ko.bind(null,e[1]),jo().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=mo,a=jo();if(ai){if(void 0===t)throw Error(i(407));t=t()}else{if(t=n(),null===Cs)throw Error(i(349));0!==(30&po)||Do(r,n,t)}a.memoizedState=t;var o={value:t,getSnapshot:n};return a.queue=o,Vo(zo.bind(null,r,o,e),[e]),r.flags|=2048,Oo(9,Eo.bind(null,r,o,t,n),void 0,null),t},useId:function(){var e=jo(),n=Cs.identifierPrefix;if(ai){var t=Qa;n=":"+n+"R"+(t=(Ja&~(1<<32-ln(Ja)-1)).toString(32)+t),0<(t=bo++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=_o++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},sl={readContext:Mi,useCallback:Jo,useContext:Mi,useEffect:qo,useImperativeHandle:Yo,useInsertionEffect:Ho,useLayoutEffect:Wo,useMemo:Qo,useReducer:Co,useRef:Bo,useState:function(){return Co(To)},useDebugValue:Zo,useDeferredValue:function(e){return $o(ko(),ho.memoizedState,e)},useTransition:function(){return[Co(To)[0],ko().memoizedState]},useMutableSource:Fo,useSyncExternalStore:Po,useId:el,unstable_isNewReconciler:!1},cl={readContext:Mi,useCallback:Jo,useContext:Mi,useEffect:qo,useImperativeHandle:Yo,useInsertionEffect:Ho,useLayoutEffect:Wo,useMemo:Qo,useReducer:Ro,useRef:Bo,useState:function(){return Ro(To)},useDebugValue:Zo,useDeferredValue:function(e){var n=ko();return null===ho?n.memoizedState=e:$o(n,ho.memoizedState,e)},useTransition:function(){return[Ro(To)[0],ko().memoizedState]},useMutableSource:Fo,useSyncExternalStore:Po,useId:el,unstable_isNewReconciler:!1};function ul(e,n){try{var t="",r=n;do{t+=N(r),r=r.return}while(r);var a=t}catch(i){a="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:n,stack:a,digest:null}}function vl(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function fl(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}var pl="function"===typeof WeakMap?WeakMap:Map;function ml(e,n,t){(t=Di(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){qs||(qs=!0,Hs=r),fl(0,n)},t}function dl(e,n,t){(t=Di(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var a=n.value;t.payload=function(){return r(a)},t.callback=function(){fl(0,n)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(t.callback=function(){fl(0,n),"function"!==typeof r&&(null===Ws?Ws=new Set([this]):Ws.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function hl(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new pl;var a=new Set;r.set(n,a)}else void 0===(a=r.get(n))&&(a=new Set,r.set(n,a));a.has(t)||(a.add(t),e=Mc.bind(null,e,n,t),n.then(e,e))}function gl(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function xl(e,n,t,r,a){return 0===(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Di(-1,1)).tag=2,Ei(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var yl=b.ReactCurrentOwner,bl=!1;function _l(e,n,t,r){n.child=null===e?Qi(n,null,t,r):Ji(n,e.child,t,r)}function wl(e,n,t,r,a){t=t.render;var i=n.ref;return Ui(n,a),r=Uo(e,n,t,r,i,a),t=Mo(),null===e||bl?(ai&&t&&ei(n),n.flags|=1,_l(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,ql(e,n,a))}function Sl(e,n,t,r,a){if(null===e){var i=t.type;return"function"!==typeof i||Pc(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Ec(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,Ul(e,n,i,r,a))}if(i=e.child,0===(e.lanes&a)){var o=i.memoizedProps;if((t=null!==(t=t.compare)?t:sr)(o,r)&&e.ref===n.ref)return ql(e,n,a)}return n.flags|=1,(e=Dc(i,r)).ref=n.ref,e.return=n,n.child=e}function Ul(e,n,t,r,a){if(null!==e){var i=e.memoizedProps;if(sr(i,r)&&e.ref===n.ref){if(bl=!1,n.pendingProps=r=i,0===(e.lanes&a))return n.lanes=e.lanes,ql(e,n,a);0!==(131072&e.flags)&&(bl=!0)}}return kl(e,n,t,r,a)}function Ml(e,n,t){var r=n.pendingProps,a=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},ja(Ds,Ps),Ps|=t;else{if(0===(1073741824&t))return e=null!==i?i.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,ja(Ds,Ps),Ps|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==i?i.baseLanes:t,ja(Ds,Ps),Ps|=r}else null!==i?(r=i.baseLanes|t,n.memoizedState=null):r=t,ja(Ds,Ps),Ps|=r;return _l(e,n,a,t),n.child}function jl(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function kl(e,n,t,r,a){var i=Pa(t)?Ra:Ta.current;return i=Fa(n,i),Ui(n,a),t=Uo(e,n,t,r,i,a),r=Mo(),null===e||bl?(ai&&r&&ei(n),n.flags|=1,_l(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,ql(e,n,a))}function Tl(e,n,t,r,a){if(Pa(t)){var i=!0;La(n)}else i=!1;if(Ui(n,a),null===n.stateNode)Vl(e,n),Vi(n,t,r),Hi(n,t,r,a),r=!0;else if(null===e){var o=n.stateNode,l=n.memoizedProps;o.props=l;var s=o.context,c=t.contextType;"object"===typeof c&&null!==c?c=Mi(c):c=Fa(n,c=Pa(t)?Ra:Ta.current);var u=t.getDerivedStateFromProps,v="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;v||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(l!==r||s!==c)&&qi(n,o,r,c),Ri=!1;var f=n.memoizedState;o.state=f,Ai(n,r,o,a),s=n.memoizedState,l!==r||f!==s||Ca.current||Ri?("function"===typeof u&&(Bi(n,t,u,r),s=n.memoizedState),(l=Ri||Gi(n,t,l,r,f,s,c))?(v||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(n.flags|=4194308)):("function"===typeof o.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=s),o.props=r,o.state=s,o.context=c,r=l):("function"===typeof o.componentDidMount&&(n.flags|=4194308),r=!1)}else{o=n.stateNode,Pi(e,n),l=n.memoizedProps,c=n.type===n.elementType?l:hi(n.type,l),o.props=c,v=n.pendingProps,f=o.context,"object"===typeof(s=t.contextType)&&null!==s?s=Mi(s):s=Fa(n,s=Pa(t)?Ra:Ta.current);var p=t.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(l!==v||f!==s)&&qi(n,o,r,s),Ri=!1,f=n.memoizedState,o.state=f,Ai(n,r,o,a);var m=n.memoizedState;l!==v||f!==m||Ca.current||Ri?("function"===typeof p&&(Bi(n,t,p,r),m=n.memoizedState),(c=Ri||Gi(n,t,c,r,f,m,s)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(r,m,s),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,m,s)),"function"===typeof o.componentDidUpdate&&(n.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!==typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=m),o.props=r,o.state=m,o.context=s,r=c):("function"!==typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),r=!1)}return Cl(e,n,t,r,i,a)}function Cl(e,n,t,r,a,i){jl(e,n);var o=0!==(128&n.flags);if(!r&&!o)return a&&Aa(n,t,!1),ql(e,n,i);r=n.stateNode,yl.current=n;var l=o&&"function"!==typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&o?(n.child=Ji(n,e.child,null,i),n.child=Ji(n,null,l,i)):_l(e,n,l,i),n.memoizedState=r.state,a&&Aa(n,t,!0),n.child}function Rl(e){var n=e.stateNode;n.pendingContext?Ea(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Ea(0,n.context,!1),ro(e,n.containerInfo)}function Fl(e,n,t,r,a){return pi(),mi(a),n.flags|=256,_l(e,n,t,r),n.child}var Pl,Dl,El,zl={dehydrated:null,treeContext:null,retryLane:0};function Ll(e){return{baseLanes:e,cachePool:null,transitions:null}}function Al(e,n,t){var r,a=n.pendingProps,o=lo.current,l=!1,s=0!==(128&n.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&0!==(2&o)),r?(l=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),ja(lo,1&o),null===e)return ci(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(s=a.children,e=a.fallback,l?(a=n.mode,l=n.child,s={mode:"hidden",children:s},0===(1&a)&&null!==l?(l.childLanes=0,l.pendingProps=s):l=Lc(s,a,0,null),e=zc(e,a,t,null),l.return=n,e.return=n,l.sibling=e,n.child=l,n.child.memoizedState=Ll(t),n.memoizedState=zl,e):Il(n,s));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,n,t,r,a,o,l){if(t)return 256&n.flags?(n.flags&=-257,Ol(e,n,l,r=vl(Error(i(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(o=r.fallback,a=n.mode,r=Lc({mode:"visible",children:r.children},a,0,null),(o=zc(o,a,l,null)).flags|=2,r.return=n,o.return=n,r.sibling=o,n.child=r,0!==(1&n.mode)&&Ji(n,e.child,null,l),n.child.memoizedState=Ll(l),n.memoizedState=zl,o);if(0===(1&n.mode))return Ol(e,n,l,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var s=r.dgst;return r=s,Ol(e,n,l,r=vl(o=Error(i(419)),r,void 0))}if(s=0!==(l&e.childLanes),bl||s){if(null!==(r=Cs)){switch(l&-l){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|l))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Ci(e,a),tc(r,e,a,-1))}return dc(),Ol(e,n,l,r=vl(Error(i(421))))}return"$?"===a.data?(n.flags|=128,n.child=e.child,n=kc.bind(null,e),a._reactRetry=n,null):(e=o.treeContext,ri=ca(a.nextSibling),ti=n,ai=!0,ii=null,null!==e&&(Xa[Ya++]=Ja,Xa[Ya++]=Qa,Xa[Ya++]=Za,Ja=e.id,Qa=e.overflow,Za=n),(n=Il(n,r.children)).flags|=4096,n)}(e,n,s,a,r,o,t);if(l){l=a.fallback,s=n.mode,r=(o=e.child).sibling;var c={mode:"hidden",children:a.children};return 0===(1&s)&&n.child!==o?((a=n.child).childLanes=0,a.pendingProps=c,n.deletions=null):(a=Dc(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==r?l=Dc(r,l):(l=zc(l,s,t,null)).flags|=2,l.return=n,a.return=n,a.sibling=l,n.child=a,a=l,l=n.child,s=null===(s=e.child.memoizedState)?Ll(t):{baseLanes:s.baseLanes|t,cachePool:null,transitions:s.transitions},l.memoizedState=s,l.childLanes=e.childLanes&~t,n.memoizedState=zl,a}return e=(l=e.child).sibling,a=Dc(l,{mode:"visible",children:a.children}),0===(1&n.mode)&&(a.lanes=t),a.return=n,a.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=a,n.memoizedState=null,a}function Il(e,n){return(n=Lc({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Ol(e,n,t,r){return null!==r&&mi(r),Ji(n,e.child,null,t),(e=Il(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Bl(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Si(e.return,n,t)}function Nl(e,n,t,r,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=a)}function Gl(e,n,t){var r=n.pendingProps,a=r.revealOrder,i=r.tail;if(_l(e,n,r.children,t),0!==(2&(r=lo.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bl(e,t,n);else if(19===e.tag)Bl(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ja(lo,r),0===(1&n.mode))n.memoizedState=null;else switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===so(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Nl(n,!1,a,t,i);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===so(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Nl(n,!0,t,null,i);break;case"together":Nl(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Vl(e,n){0===(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function ql(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Ls|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=Dc(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Dc(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Hl(e,n){if(!ai)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Wl(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Xl(e,n,t){var r=n.pendingProps;switch(ni(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Wl(n),null;case 1:case 17:return Pa(n.type)&&Da(),Wl(n),null;case 3:return r=n.stateNode,ao(),Ma(Ca),Ma(Ta),uo(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(vi(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&n.flags)||(n.flags|=1024,null!==ii&&(oc(ii),ii=null))),Wl(n),null;case 5:oo(n);var a=to(no.current);if(t=n.type,null!==e&&null!=n.stateNode)Dl(e,n,t,r),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(i(166));return Wl(n),null}if(e=to(Ki.current),vi(n)){r=n.stateNode,t=n.type;var o=n.memoizedProps;switch(r[fa]=n,r[pa]=o,e=0!==(1&n.mode),t){case"dialog":Or("cancel",r),Or("close",r);break;case"iframe":case"object":case"embed":Or("load",r);break;case"video":case"audio":for(a=0;a<zr.length;a++)Or(zr[a],r);break;case"source":Or("error",r);break;case"img":case"image":case"link":Or("error",r),Or("load",r);break;case"details":Or("toggle",r);break;case"input":J(r,o),Or("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Or("invalid",r);break;case"textarea":ae(r,o),Or("invalid",r)}for(var s in xe(t,o),a=null,o)if(o.hasOwnProperty(s)){var c=o[s];"children"===s?"string"===typeof c?r.textContent!==c&&(!0!==o.suppressHydrationWarning&&$r(r.textContent,c,e),a=["children",c]):"number"===typeof c&&r.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&$r(r.textContent,c,e),a=["children",""+c]):l.hasOwnProperty(s)&&null!=c&&"onScroll"===s&&Or("scroll",r)}switch(t){case"input":W(r),K(r,o,!0);break;case"textarea":W(r),oe(r);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(r.onclick=Kr)}r=a,n.updateQueue=r,null!==r&&(n.flags|=4)}else{s=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=s.createElement(t,{is:r.is}):(e=s.createElement(t),"select"===t&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,t),e[fa]=n,e[pa]=r,Pl(e,n),n.stateNode=e;e:{switch(s=ye(t,r),t){case"dialog":Or("cancel",e),Or("close",e),a=r;break;case"iframe":case"object":case"embed":Or("load",e),a=r;break;case"video":case"audio":for(a=0;a<zr.length;a++)Or(zr[a],e);a=r;break;case"source":Or("error",e),a=r;break;case"img":case"image":case"link":Or("error",e),Or("load",e),a=r;break;case"details":Or("toggle",e),a=r;break;case"input":J(e,r),a=Z(e,r),Or("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=A({},r,{value:void 0}),Or("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Or("invalid",e)}for(o in xe(t,a),c=a)if(c.hasOwnProperty(o)){var u=c[o];"style"===o?he(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&ve(e,u):"children"===o?"string"===typeof u?("textarea"!==t||""!==u)&&fe(e,u):"number"===typeof u&&fe(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(l.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Or("scroll",e):null!=u&&y(e,o,u,s))}switch(t){case"input":W(e),K(e,r,!1);break;case"textarea":W(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?te(e,!!r.multiple,o,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Kr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Wl(n),null;case 6:if(e&&null!=n.stateNode)El(0,n,e.memoizedProps,r);else{if("string"!==typeof r&&null===n.stateNode)throw Error(i(166));if(t=to(no.current),to(Ki.current),vi(n)){if(r=n.stateNode,t=n.memoizedProps,r[fa]=n,(o=r.nodeValue!==t)&&null!==(e=ti))switch(e.tag){case 3:$r(r.nodeValue,t,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&$r(r.nodeValue,t,0!==(1&e.mode))}o&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[fa]=n,n.stateNode=r}return Wl(n),null;case 13:if(Ma(lo),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ai&&null!==ri&&0!==(1&n.mode)&&0===(128&n.flags))fi(),pi(),n.flags|=98560,o=!1;else if(o=vi(n),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(i(318));if(!(o=null!==(o=n.memoizedState)?o.dehydrated:null))throw Error(i(317));o[fa]=n}else pi(),0===(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Wl(n),o=!1}else null!==ii&&(oc(ii),ii=null),o=!0;if(!o)return 65536&n.flags?n:null}return 0!==(128&n.flags)?(n.lanes=t,n):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!==(1&n.mode)&&(null===e||0!==(1&lo.current)?0===Es&&(Es=3):dc())),null!==n.updateQueue&&(n.flags|=4),Wl(n),null);case 4:return ao(),null===e&&Gr(n.stateNode.containerInfo),Wl(n),null;case 10:return wi(n.type._context),Wl(n),null;case 19:if(Ma(lo),null===(o=n.memoizedState))return Wl(n),null;if(r=0!==(128&n.flags),null===(s=o.rendering))if(r)Hl(o,!1);else{if(0!==Es||null!==e&&0!==(128&e.flags))for(e=n.child;null!==e;){if(null!==(s=so(e))){for(n.flags|=128,Hl(o,!1),null!==(r=s.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(o=t).flags&=14680066,null===(s=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,e=s.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ja(lo,1&lo.current|2),n.child}e=e.sibling}null!==o.tail&&Qe()>Gs&&(n.flags|=128,r=!0,Hl(o,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=so(s))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Hl(o,!0),null===o.tail&&"hidden"===o.tailMode&&!s.alternate&&!ai)return Wl(n),null}else 2*Qe()-o.renderingStartTime>Gs&&1073741824!==t&&(n.flags|=128,r=!0,Hl(o,!1),n.lanes=4194304);o.isBackwards?(s.sibling=n.child,n.child=s):(null!==(t=o.last)?t.sibling=s:n.child=s,o.last=s)}return null!==o.tail?(n=o.tail,o.rendering=n,o.tail=n.sibling,o.renderingStartTime=Qe(),n.sibling=null,t=lo.current,ja(lo,r?1&t|2:1&t),n):(Wl(n),null);case 22:case 23:return vc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!==(1&n.mode)?0!==(1073741824&Ps)&&(Wl(n),6&n.subtreeFlags&&(n.flags|=8192)):Wl(n),null;case 24:case 25:return null}throw Error(i(156,n.tag))}function Yl(e,n){switch(ni(n),n.tag){case 1:return Pa(n.type)&&Da(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return ao(),Ma(Ca),Ma(Ta),uo(),0!==(65536&(e=n.flags))&&0===(128&e)?(n.flags=-65537&e|128,n):null;case 5:return oo(n),null;case 13:if(Ma(lo),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(i(340));pi()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Ma(lo),null;case 4:return ao(),null;case 10:return wi(n.type._context),null;case 22:case 23:return vc(),null;default:return null}}Pl=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Dl=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,to(Ki.current);var i,o=null;switch(t){case"input":a=Z(e,a),r=Z(e,r),o=[];break;case"select":a=A({},a,{value:void 0}),r=A({},r,{value:void 0}),o=[];break;case"textarea":a=re(e,a),r=re(e,r),o=[];break;default:"function"!==typeof a.onClick&&"function"===typeof r.onClick&&(e.onclick=Kr)}for(u in xe(t,r),t=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var s=a[u];for(i in s)s.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(l.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(t||(t={}),t[i]=c[i])}else t||(o||(o=[]),o.push(u,t)),t=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(o=o||[]).push(u,c)):"children"===u?"string"!==typeof c&&"number"!==typeof c||(o=o||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(l.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Or("scroll",e),o||s===c||(o=[])):(o=o||[]).push(u,c))}t&&(o=o||[]).push("style",t);var u=o;(n.updateQueue=u)&&(n.flags|=4)}},El=function(e,n,t,r){t!==r&&(n.flags|=4)};var Zl=!1,Jl=!1,Ql="function"===typeof WeakSet?WeakSet:Set,$l=null;function Kl(e,n){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(r){Uc(e,n,r)}else t.current=null}function es(e,n,t){try{t()}catch(r){Uc(e,n,r)}}var ns=!1;function ts(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var i=a.destroy;a.destroy=void 0,void 0!==i&&es(n,t,i)}a=a.next}while(a!==r)}}function rs(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function as(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"===typeof n?n(e):n.current=e}}function is(e){var n=e.alternate;null!==n&&(e.alternate=null,is(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(n=e.stateNode)&&(delete n[fa],delete n[pa],delete n[da],delete n[ha],delete n[ga])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function os(e){return 5===e.tag||3===e.tag||4===e.tag}function ls(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||os(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!==(t=t._reactRootContainer)&&void 0!==t||null!==n.onclick||(n.onclick=Kr));else if(4!==r&&null!==(e=e.child))for(ss(e,n,t),e=e.sibling;null!==e;)ss(e,n,t),e=e.sibling}function cs(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cs(e,n,t),e=e.sibling;null!==e;)cs(e,n,t),e=e.sibling}var us=null,vs=!1;function fs(e,n,t){for(t=t.child;null!==t;)ps(e,n,t),t=t.sibling}function ps(e,n,t){if(on&&"function"===typeof on.onCommitFiberUnmount)try{on.onCommitFiberUnmount(an,t)}catch(l){}switch(t.tag){case 5:Jl||Kl(t,n);case 6:var r=us,a=vs;us=null,fs(e,n,t),vs=a,null!==(us=r)&&(vs?(e=us,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):us.removeChild(t.stateNode));break;case 18:null!==us&&(vs?(e=us,t=t.stateNode,8===e.nodeType?sa(e.parentNode,t):1===e.nodeType&&sa(e,t),Vn(e)):sa(us,t.stateNode));break;case 4:r=us,a=vs,us=t.stateNode.containerInfo,vs=!0,fs(e,n,t),us=r,vs=a;break;case 0:case 11:case 14:case 15:if(!Jl&&(null!==(r=t.updateQueue)&&null!==(r=r.lastEffect))){a=r=r.next;do{var i=a,o=i.destroy;i=i.tag,void 0!==o&&(0!==(2&i)||0!==(4&i))&&es(t,n,o),a=a.next}while(a!==r)}fs(e,n,t);break;case 1:if(!Jl&&(Kl(t,n),"function"===typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(l){Uc(t,n,l)}fs(e,n,t);break;case 21:fs(e,n,t);break;case 22:1&t.mode?(Jl=(r=Jl)||null!==t.memoizedState,fs(e,n,t),Jl=r):fs(e,n,t);break;default:fs(e,n,t)}}function ms(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Ql),n.forEach((function(n){var r=Tc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function ds(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var o=e,l=n,s=l;e:for(;null!==s;){switch(s.tag){case 5:us=s.stateNode,vs=!1;break e;case 3:case 4:us=s.stateNode.containerInfo,vs=!0;break e}s=s.return}if(null===us)throw Error(i(160));ps(o,l,a),us=null,vs=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(u){Uc(a,n,u)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)hs(n,e),n=n.sibling}function hs(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ds(n,e),gs(e),4&r){try{ts(3,e,e.return),rs(3,e)}catch(h){Uc(e,e.return,h)}try{ts(5,e,e.return)}catch(h){Uc(e,e.return,h)}}break;case 1:ds(n,e),gs(e),512&r&&null!==t&&Kl(t,t.return);break;case 5:if(ds(n,e),gs(e),512&r&&null!==t&&Kl(t,t.return),32&e.flags){var a=e.stateNode;try{fe(a,"")}catch(h){Uc(e,e.return,h)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,l=null!==t?t.memoizedProps:o,s=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===s&&"radio"===o.type&&null!=o.name&&Q(a,o),ye(s,l);var u=ye(s,o);for(l=0;l<c.length;l+=2){var v=c[l],f=c[l+1];"style"===v?he(a,f):"dangerouslySetInnerHTML"===v?ve(a,f):"children"===v?fe(a,f):y(a,v,f,u)}switch(s){case"input":$(a,o);break;case"textarea":ie(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var m=o.value;null!=m?te(a,!!o.multiple,m,!1):p!==!!o.multiple&&(null!=o.defaultValue?te(a,!!o.multiple,o.defaultValue,!0):te(a,!!o.multiple,o.multiple?[]:"",!1))}a[pa]=o}catch(h){Uc(e,e.return,h)}}break;case 6:if(ds(n,e),gs(e),4&r){if(null===e.stateNode)throw Error(i(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(h){Uc(e,e.return,h)}}break;case 3:if(ds(n,e),gs(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Vn(n.containerInfo)}catch(h){Uc(e,e.return,h)}break;case 4:default:ds(n,e),gs(e);break;case 13:ds(n,e),gs(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Ns=Qe())),4&r&&ms(e);break;case 22:if(v=null!==t&&null!==t.memoizedState,1&e.mode?(Jl=(u=Jl)||v,ds(n,e),Jl=u):ds(n,e),gs(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!v&&0!==(1&e.mode))for($l=e,v=e.child;null!==v;){for(f=$l=v;null!==$l;){switch(m=(p=$l).child,p.tag){case 0:case 11:case 14:case 15:ts(4,p,p.return);break;case 1:Kl(p,p.return);var d=p.stateNode;if("function"===typeof d.componentWillUnmount){r=p,t=p.return;try{n=r,d.props=n.memoizedProps,d.state=n.memoizedState,d.componentWillUnmount()}catch(h){Uc(r,t,h)}}break;case 5:Kl(p,p.return);break;case 22:if(null!==p.memoizedState){_s(f);continue}}null!==m?(m.return=p,$l=m):_s(f)}v=v.sibling}e:for(v=null,f=e;;){if(5===f.tag){if(null===v){v=f;try{a=f.stateNode,u?"function"===typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(s=f.stateNode,l=void 0!==(c=f.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,s.style.display=de("display",l))}catch(h){Uc(e,e.return,h)}}}else if(6===f.tag){if(null===v)try{f.stateNode.nodeValue=u?"":f.memoizedProps}catch(h){Uc(e,e.return,h)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;v===f&&(v=null),f=f.return}v===f&&(v=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:ds(n,e),gs(e),4&r&&ms(e);case 21:}}function gs(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(os(t)){var r=t;break e}t=t.return}throw Error(i(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(fe(a,""),r.flags&=-33),cs(e,ls(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;ss(e,ls(e),o);break;default:throw Error(i(161))}}catch(l){Uc(e,e.return,l)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function xs(e,n,t){$l=e,ys(e,n,t)}function ys(e,n,t){for(var r=0!==(1&e.mode);null!==$l;){var a=$l,i=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Zl;if(!o){var l=a.alternate,s=null!==l&&null!==l.memoizedState||Jl;l=Zl;var c=Jl;if(Zl=o,(Jl=s)&&!c)for($l=a;null!==$l;)s=(o=$l).child,22===o.tag&&null!==o.memoizedState?ws(a):null!==s?(s.return=o,$l=s):ws(a);for(;null!==i;)$l=i,ys(i,n,t),i=i.sibling;$l=a,Zl=l,Jl=c}bs(e)}else 0!==(8772&a.subtreeFlags)&&null!==i?(i.return=a,$l=i):bs(e)}}function bs(e){for(;null!==$l;){var n=$l;if(0!==(8772&n.flags)){var t=n.alternate;try{if(0!==(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Jl||rs(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Jl)if(null===t)r.componentDidMount();else{var a=n.elementType===n.type?t.memoizedProps:hi(n.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=n.updateQueue;null!==o&&Ii(n,o,r);break;case 3:var l=n.updateQueue;if(null!==l){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Ii(n,l,t)}break;case 5:var s=n.stateNode;if(null===t&&4&n.flags){t=s;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var u=n.alternate;if(null!==u){var v=u.memoizedState;if(null!==v){var f=v.dehydrated;null!==f&&Vn(f)}}}break;default:throw Error(i(163))}Jl||512&n.flags&&as(n)}catch(p){Uc(n,n.return,p)}}if(n===e){$l=null;break}if(null!==(t=n.sibling)){t.return=n.return,$l=t;break}$l=n.return}}function _s(e){for(;null!==$l;){var n=$l;if(n===e){$l=null;break}var t=n.sibling;if(null!==t){t.return=n.return,$l=t;break}$l=n.return}}function ws(e){for(;null!==$l;){var n=$l;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rs(4,n)}catch(s){Uc(n,t,s)}break;case 1:var r=n.stateNode;if("function"===typeof r.componentDidMount){var a=n.return;try{r.componentDidMount()}catch(s){Uc(n,a,s)}}var i=n.return;try{as(n)}catch(s){Uc(n,i,s)}break;case 5:var o=n.return;try{as(n)}catch(s){Uc(n,o,s)}}}catch(s){Uc(n,n.return,s)}if(n===e){$l=null;break}var l=n.sibling;if(null!==l){l.return=n.return,$l=l;break}$l=n.return}}var Ss,Us=Math.ceil,Ms=b.ReactCurrentDispatcher,js=b.ReactCurrentOwner,ks=b.ReactCurrentBatchConfig,Ts=0,Cs=null,Rs=null,Fs=0,Ps=0,Ds=Ua(0),Es=0,zs=null,Ls=0,As=0,Is=0,Os=null,Bs=null,Ns=0,Gs=1/0,Vs=null,qs=!1,Hs=null,Ws=null,Xs=!1,Ys=null,Zs=0,Js=0,Qs=null,$s=-1,Ks=0;function ec(){return 0!==(6&Ts)?Qe():-1!==$s?$s:$s=Qe()}function nc(e){return 0===(1&e.mode)?1:0!==(2&Ts)&&0!==Fs?Fs&-Fs:null!==di.transition?(0===Ks&&(Ks=hn()),Ks):0!==(e=bn)?e:e=void 0===(e=window.event)?16:Qn(e.type)}function tc(e,n,t,r){if(50<Js)throw Js=0,Qs=null,Error(i(185));xn(e,t,r),0!==(2&Ts)&&e===Cs||(e===Cs&&(0===(2&Ts)&&(As|=t),4===Es&&lc(e,Fs)),rc(e,r),1===t&&0===Ts&&0===(1&n.mode)&&(Gs=Qe()+500,Oa&&Ga()))}function rc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-ln(i),l=1<<o,s=a[o];-1===s?0!==(l&t)&&0===(l&r)||(a[o]=mn(l,n)):s<=n&&(e.expiredLanes|=l),i&=~l}}(e,n);var r=pn(e,e===Cs?Fs:0);if(0===r)null!==t&&Ye(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ye(t),1===n)0===e.tag?function(e){Oa=!0,Na(e)}(sc.bind(null,e)):Na(sc.bind(null,e)),oa((function(){0===(6&Ts)&&Ga()})),t=null;else{switch(_n(r)){case 1:t=Ke;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=Cc(t,ac.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function ac(e,n){if($s=-1,Ks=0,0!==(6&Ts))throw Error(i(327));var t=e.callbackNode;if(wc()&&e.callbackNode!==t)return null;var r=pn(e,e===Cs?Fs:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||n)n=hc(e,r);else{n=r;var a=Ts;Ts|=2;var o=mc();for(Cs===e&&Fs===n||(Vs=null,Gs=Qe()+500,fc(e,n));;)try{xc();break}catch(s){pc(e,s)}_i(),Ms.current=o,Ts=a,null!==Rs?n=0:(Cs=null,Fs=0,n=Es)}if(0!==n){if(2===n&&(0!==(a=dn(e))&&(r=a,n=ic(e,a))),1===n)throw t=zs,fc(e,0),lc(e,r),rc(e,Qe()),t;if(6===n)lc(e,r);else{if(a=e.current.alternate,0===(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],i=a.getSnapshot;a=a.value;try{if(!lr(i(),a))return!1}catch(l){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(a)&&(2===(n=hc(e,r))&&(0!==(o=dn(e))&&(r=o,n=ic(e,o))),1===n))throw t=zs,fc(e,0),lc(e,r),rc(e,Qe()),t;switch(e.finishedWork=a,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:case 5:_c(e,Bs,Vs);break;case 3:if(lc(e,r),(130023424&r)===r&&10<(n=Ns+500-Qe())){if(0!==pn(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(_c.bind(null,e,Bs,Vs),n);break}_c(e,Bs,Vs);break;case 4:if(lc(e,r),(4194240&r)===r)break;for(n=e.eventTimes,a=-1;0<r;){var l=31-ln(r);o=1<<l,(l=n[l])>a&&(a=l),r&=~o}if(r=a,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Us(r/1960))-r)){e.timeoutHandle=ra(_c.bind(null,e,Bs,Vs),r);break}_c(e,Bs,Vs);break;default:throw Error(i(329))}}}return rc(e,Qe()),e.callbackNode===t?ac.bind(null,e):null}function ic(e,n){var t=Os;return e.current.memoizedState.isDehydrated&&(fc(e,n).flags|=256),2!==(e=hc(e,n))&&(n=Bs,Bs=t,null!==n&&oc(n)),e}function oc(e){null===Bs?Bs=e:Bs.push.apply(Bs,e)}function lc(e,n){for(n&=~Is,n&=~As,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-ln(n),r=1<<t;e[t]=-1,n&=~r}}function sc(e){if(0!==(6&Ts))throw Error(i(327));wc();var n=pn(e,0);if(0===(1&n))return rc(e,Qe()),null;var t=hc(e,n);if(0!==e.tag&&2===t){var r=dn(e);0!==r&&(n=r,t=ic(e,r))}if(1===t)throw t=zs,fc(e,0),lc(e,n),rc(e,Qe()),t;if(6===t)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,_c(e,Bs,Vs),rc(e,Qe()),null}function cc(e,n){var t=Ts;Ts|=1;try{return e(n)}finally{0===(Ts=t)&&(Gs=Qe()+500,Oa&&Ga())}}function uc(e){null!==Ys&&0===Ys.tag&&0===(6&Ts)&&wc();var n=Ts;Ts|=1;var t=ks.transition,r=bn;try{if(ks.transition=null,bn=1,e)return e()}finally{bn=r,ks.transition=t,0===(6&(Ts=n))&&Ga()}}function vc(){Ps=Ds.current,Ma(Ds)}function fc(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,aa(t)),null!==Rs)for(t=Rs.return;null!==t;){var r=t;switch(ni(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Da();break;case 3:ao(),Ma(Ca),Ma(Ta),uo();break;case 5:oo(r);break;case 4:ao();break;case 13:case 19:Ma(lo);break;case 10:wi(r.type._context);break;case 22:case 23:vc()}t=t.return}if(Cs=e,Rs=e=Dc(e.current,null),Fs=Ps=n,Es=0,zs=null,Is=As=Ls=0,Bs=Os=null,null!==ji){for(n=0;n<ji.length;n++)if(null!==(r=(t=ji[n]).interleaved)){t.interleaved=null;var a=r.next,i=t.pending;if(null!==i){var o=i.next;i.next=a,r.next=o}t.pending=r}ji=null}return e}function pc(e,n){for(;;){var t=Rs;try{if(_i(),vo.current=ol,xo){for(var r=mo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}xo=!1}if(po=0,go=ho=mo=null,yo=!1,bo=0,js.current=null,null===t||null===t.return){Es=1,zs=n,Rs=null;break}e:{var o=e,l=t.return,s=t,c=n;if(n=Fs,s.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var u=c,v=s,f=v.tag;if(0===(1&v.mode)&&(0===f||11===f||15===f)){var p=v.alternate;p?(v.updateQueue=p.updateQueue,v.memoizedState=p.memoizedState,v.lanes=p.lanes):(v.updateQueue=null,v.memoizedState=null)}var m=gl(l);if(null!==m){m.flags&=-257,xl(m,l,s,0,n),1&m.mode&&hl(o,u,n),c=u;var d=(n=m).updateQueue;if(null===d){var h=new Set;h.add(c),n.updateQueue=h}else d.add(c);break e}if(0===(1&n)){hl(o,u,n),dc();break e}c=Error(i(426))}else if(ai&&1&s.mode){var g=gl(l);if(null!==g){0===(65536&g.flags)&&(g.flags|=256),xl(g,l,s,0,n),mi(ul(c,s));break e}}o=c=ul(c,s),4!==Es&&(Es=2),null===Os?Os=[o]:Os.push(o),o=l;do{switch(o.tag){case 3:o.flags|=65536,n&=-n,o.lanes|=n,Li(o,ml(0,c,n));break e;case 1:s=c;var x=o.type,y=o.stateNode;if(0===(128&o.flags)&&("function"===typeof x.getDerivedStateFromError||null!==y&&"function"===typeof y.componentDidCatch&&(null===Ws||!Ws.has(y)))){o.flags|=65536,n&=-n,o.lanes|=n,Li(o,dl(o,s,n));break e}}o=o.return}while(null!==o)}bc(t)}catch(b){n=b,Rs===t&&null!==t&&(Rs=t=t.return);continue}break}}function mc(){var e=Ms.current;return Ms.current=ol,null===e?ol:e}function dc(){0!==Es&&3!==Es&&2!==Es||(Es=4),null===Cs||0===(268435455&Ls)&&0===(268435455&As)||lc(Cs,Fs)}function hc(e,n){var t=Ts;Ts|=2;var r=mc();for(Cs===e&&Fs===n||(Vs=null,fc(e,n));;)try{gc();break}catch(a){pc(e,a)}if(_i(),Ts=t,Ms.current=r,null!==Rs)throw Error(i(261));return Cs=null,Fs=0,Es}function gc(){for(;null!==Rs;)yc(Rs)}function xc(){for(;null!==Rs&&!Ze();)yc(Rs)}function yc(e){var n=Ss(e.alternate,e,Ps);e.memoizedProps=e.pendingProps,null===n?bc(e):Rs=n,js.current=null}function bc(e){var n=e;do{var t=n.alternate;if(e=n.return,0===(32768&n.flags)){if(null!==(t=Xl(t,n,Ps)))return void(Rs=t)}else{if(null!==(t=Yl(t,n)))return t.flags&=32767,void(Rs=t);if(null===e)return Es=6,void(Rs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Rs=n);Rs=n=e}while(null!==n);0===Es&&(Es=5)}function _c(e,n,t){var r=bn,a=ks.transition;try{ks.transition=null,bn=1,function(e,n,t,r){do{wc()}while(null!==Ys);if(0!==(6&Ts))throw Error(i(327));t=e.finishedWork;var a=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var o=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var a=31-ln(t),i=1<<a;n[a]=0,r[a]=-1,e[a]=-1,t&=~i}}(e,o),e===Cs&&(Rs=Cs=null,Fs=0),0===(2064&t.subtreeFlags)&&0===(2064&t.flags)||Xs||(Xs=!0,Cc(nn,(function(){return wc(),null}))),o=0!==(15990&t.flags),0!==(15990&t.subtreeFlags)||o){o=ks.transition,ks.transition=null;var l=bn;bn=1;var s=Ts;Ts|=4,js.current=null,function(e,n){if(ea=Hn,pr(e=fr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{t.nodeType,o.nodeType}catch(_){t=null;break e}var l=0,s=-1,c=-1,u=0,v=0,f=e,p=null;n:for(;;){for(var m;f!==t||0!==a&&3!==f.nodeType||(s=l+a),f!==o||0!==r&&3!==f.nodeType||(c=l+r),3===f.nodeType&&(l+=f.nodeValue.length),null!==(m=f.firstChild);)p=f,f=m;for(;;){if(f===e)break n;if(p===t&&++u===a&&(s=l),p===o&&++v===r&&(c=l),null!==(m=f.nextSibling))break;p=(f=p).parentNode}f=m}t=-1===s||-1===c?null:{start:s,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(na={focusedElem:e,selectionRange:t},Hn=!1,$l=n;null!==$l;)if(e=(n=$l).child,0!==(1028&n.subtreeFlags)&&null!==e)e.return=n,$l=e;else for(;null!==$l;){n=$l;try{var d=n.alternate;if(0!==(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==d){var h=d.memoizedProps,g=d.memoizedState,x=n.stateNode,y=x.getSnapshotBeforeUpdate(n.elementType===n.type?h:hi(n.type,h),g);x.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var b=n.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(i(163))}}catch(_){Uc(n,n.return,_)}if(null!==(e=n.sibling)){e.return=n.return,$l=e;break}$l=n.return}d=ns,ns=!1}(e,t),hs(t,e),mr(na),Hn=!!ea,na=ea=null,e.current=t,xs(t,e,a),Je(),Ts=s,bn=l,ks.transition=o}else e.current=t;if(Xs&&(Xs=!1,Ys=e,Zs=a),0===(o=e.pendingLanes)&&(Ws=null),function(e){if(on&&"function"===typeof on.onCommitFiberRoot)try{on.onCommitFiberRoot(an,e,void 0,128===(128&e.current.flags))}catch(n){}}(t.stateNode),rc(e,Qe()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((a=n[t]).value,{componentStack:a.stack,digest:a.digest});if(qs)throw qs=!1,e=Hs,Hs=null,e;0!==(1&Zs)&&0!==e.tag&&wc(),0!==(1&(o=e.pendingLanes))?e===Qs?Js++:(Js=0,Qs=e):Js=0,Ga()}(e,n,t,r)}finally{ks.transition=a,bn=r}return null}function wc(){if(null!==Ys){var e=_n(Zs),n=ks.transition,t=bn;try{if(ks.transition=null,bn=16>e?16:e,null===Ys)var r=!1;else{if(e=Ys,Ys=null,Zs=0,0!==(6&Ts))throw Error(i(331));var a=Ts;for(Ts|=4,$l=e.current;null!==$l;){var o=$l,l=o.child;if(0!==(16&$l.flags)){var s=o.deletions;if(null!==s){for(var c=0;c<s.length;c++){var u=s[c];for($l=u;null!==$l;){var v=$l;switch(v.tag){case 0:case 11:case 15:ts(8,v,o)}var f=v.child;if(null!==f)f.return=v,$l=f;else for(;null!==$l;){var p=(v=$l).sibling,m=v.return;if(is(v),v===u){$l=null;break}if(null!==p){p.return=m,$l=p;break}$l=m}}}var d=o.alternate;if(null!==d){var h=d.child;if(null!==h){d.child=null;do{var g=h.sibling;h.sibling=null,h=g}while(null!==h)}}$l=o}}if(0!==(2064&o.subtreeFlags)&&null!==l)l.return=o,$l=l;else e:for(;null!==$l;){if(0!==(2048&(o=$l).flags))switch(o.tag){case 0:case 11:case 15:ts(9,o,o.return)}var x=o.sibling;if(null!==x){x.return=o.return,$l=x;break e}$l=o.return}}var y=e.current;for($l=y;null!==$l;){var b=(l=$l).child;if(0!==(2064&l.subtreeFlags)&&null!==b)b.return=l,$l=b;else e:for(l=y;null!==$l;){if(0!==(2048&(s=$l).flags))try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(w){Uc(s,s.return,w)}if(s===l){$l=null;break e}var _=s.sibling;if(null!==_){_.return=s.return,$l=_;break e}$l=s.return}}if(Ts=a,Ga(),on&&"function"===typeof on.onPostCommitFiberRoot)try{on.onPostCommitFiberRoot(an,e)}catch(w){}r=!0}return r}finally{bn=t,ks.transition=n}}return!1}function Sc(e,n,t){e=Ei(e,n=ml(0,n=ul(t,n),1),1),n=ec(),null!==e&&(xn(e,1,n),rc(e,n))}function Uc(e,n,t){if(3===e.tag)Sc(e,e,t);else for(;null!==n;){if(3===n.tag){Sc(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Ws||!Ws.has(r))){n=Ei(n,e=dl(n,e=ul(t,e),1),1),e=ec(),null!==n&&(xn(n,1,e),rc(n,e));break}}n=n.return}}function Mc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ec(),e.pingedLanes|=e.suspendedLanes&t,Cs===e&&(Fs&t)===t&&(4===Es||3===Es&&(130023424&Fs)===Fs&&500>Qe()-Ns?fc(e,0):Is|=t),rc(e,n)}function jc(e,n){0===n&&(0===(1&e.mode)?n=1:(n=vn,0===(130023424&(vn<<=1))&&(vn=4194304)));var t=ec();null!==(e=Ci(e,n))&&(xn(e,n,t),rc(e,t))}function kc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),jc(e,t)}function Tc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(n),jc(e,t)}function Cc(e,n){return Xe(e,n)}function Rc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Fc(e,n,t,r){return new Rc(e,n,t,r)}function Pc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dc(e,n){var t=e.alternate;return null===t?((t=Fc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Ec(e,n,t,r,a,o){var l=2;if(r=e,"function"===typeof e)Pc(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return zc(t.children,a,o,n);case U:l=8,a|=8;break;case M:return(e=Fc(12,t,n,2|a)).elementType=M,e.lanes=o,e;case C:return(e=Fc(13,t,n,a)).elementType=C,e.lanes=o,e;case R:return(e=Fc(19,t,n,a)).elementType=R,e.lanes=o,e;case D:return Lc(t,a,o,n);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case j:l=10;break e;case k:l=9;break e;case T:l=11;break e;case F:l=14;break e;case P:l=16,r=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=Fc(l,t,n,a)).elementType=e,n.type=r,n.lanes=o,n}function zc(e,n,t,r){return(e=Fc(7,e,r,n)).lanes=t,e}function Lc(e,n,t,r){return(e=Fc(22,e,r,n)).elementType=D,e.lanes=t,e.stateNode={isHidden:!1},e}function Ac(e,n,t){return(e=Fc(6,e,null,n)).lanes=t,e}function Ic(e,n,t){return(n=Fc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Oc(e,n,t,r,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gn(0),this.expirationTimes=gn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gn(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Bc(e,n,t,r,a,i,o,l,s){return e=new Oc(e,n,t,l,s),1===n?(n=1,!0===i&&(n|=8)):n=0,i=Fc(3,null,null,n),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Fi(i),e}function Nc(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Gc(e){if(!e)return ka;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Pa(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(i(171))}if(1===e.tag){var t=e.type;if(Pa(t))return za(e,t,n)}return n}function Vc(e,n,t,r,a,i,o,l,s){return(e=Bc(t,r,!0,e,0,i,0,l,s)).context=Gc(null),t=e.current,(i=Di(r=ec(),a=nc(t))).callback=void 0!==n&&null!==n?n:null,Ei(t,i,a),e.current.lanes=a,xn(e,a,r),rc(e,r),e}function qc(e,n,t,r){var a=n.current,i=ec(),o=nc(a);return t=Gc(t),null===n.context?n.context=t:n.pendingContext=t,(n=Di(i,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Ei(a,n,o))&&(tc(e,a,o,i),zi(e,a,o)),o}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Wc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Xc(e,n){Wc(e,n),(e=e.alternate)&&Wc(e,n)}Ss=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||Ca.current)bl=!0;else{if(0===(e.lanes&t)&&0===(128&n.flags))return bl=!1,function(e,n,t){switch(n.tag){case 3:Rl(n),pi();break;case 5:io(n);break;case 1:Pa(n.type)&&La(n);break;case 4:ro(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,a=n.memoizedProps.value;ja(gi,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(ja(lo,1&lo.current),n.flags|=128,null):0!==(t&n.child.childLanes)?Al(e,n,t):(ja(lo,1&lo.current),null!==(e=ql(e,n,t))?e.sibling:null);ja(lo,1&lo.current);break;case 19:if(r=0!==(t&n.childLanes),0!==(128&e.flags)){if(r)return Gl(e,n,t);n.flags|=128}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ja(lo,lo.current),r)break;return null;case 22:case 23:return n.lanes=0,Ml(e,n,t)}return ql(e,n,t)}(e,n,t);bl=0!==(131072&e.flags)}else bl=!1,ai&&0!==(1048576&n.flags)&&Ka(n,Wa,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Vl(e,n),e=n.pendingProps;var a=Fa(n,Ta.current);Ui(n,t),a=Uo(null,n,r,e,a,t);var o=Mo();return n.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Pa(r)?(o=!0,La(n)):o=!1,n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Fi(n),a.updater=Ni,n.stateNode=a,a._reactInternals=n,Hi(n,r,e,t),n=Cl(null,n,r,!0,o,t)):(n.tag=0,ai&&o&&ei(n),_l(null,n,a,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Vl(e,n),e=n.pendingProps,r=(a=r._init)(r._payload),n.type=r,a=n.tag=function(e){if("function"===typeof e)return Pc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===T)return 11;if(e===F)return 14}return 2}(r),e=hi(r,e),a){case 0:n=kl(null,n,r,e,t);break e;case 1:n=Tl(null,n,r,e,t);break e;case 11:n=wl(null,n,r,e,t);break e;case 14:n=Sl(null,n,r,hi(r.type,e),t);break e}throw Error(i(306,r,""))}return n;case 0:return r=n.type,a=n.pendingProps,kl(e,n,r,a=n.elementType===r?a:hi(r,a),t);case 1:return r=n.type,a=n.pendingProps,Tl(e,n,r,a=n.elementType===r?a:hi(r,a),t);case 3:e:{if(Rl(n),null===e)throw Error(i(387));r=n.pendingProps,a=(o=n.memoizedState).element,Pi(e,n),Ai(n,r,null,t);var l=n.memoizedState;if(r=l.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},n.updateQueue.baseState=o,n.memoizedState=o,256&n.flags){n=Fl(e,n,r,t,a=ul(Error(i(423)),n));break e}if(r!==a){n=Fl(e,n,r,t,a=ul(Error(i(424)),n));break e}for(ri=ca(n.stateNode.containerInfo.firstChild),ti=n,ai=!0,ii=null,t=Qi(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(pi(),r===a){n=ql(e,n,t);break e}_l(e,n,r,t)}n=n.child}return n;case 5:return io(n),null===e&&ci(n),r=n.type,a=n.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,ta(r,a)?l=null:null!==o&&ta(r,o)&&(n.flags|=32),jl(e,n),_l(e,n,l,t),n.child;case 6:return null===e&&ci(n),null;case 13:return Al(e,n,t);case 4:return ro(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Ji(n,null,r,t):_l(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,wl(e,n,r,a=n.elementType===r?a:hi(r,a),t);case 7:return _l(e,n,n.pendingProps,t),n.child;case 8:case 12:return _l(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,a=n.pendingProps,o=n.memoizedProps,l=a.value,ja(gi,r._currentValue),r._currentValue=l,null!==o)if(lr(o.value,l)){if(o.children===a.children&&!Ca.current){n=ql(e,n,t);break e}}else for(null!==(o=n.child)&&(o.return=n);null!==o;){var s=o.dependencies;if(null!==s){l=o.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===o.tag){(c=Di(-1,t&-t)).tag=2;var u=o.updateQueue;if(null!==u){var v=(u=u.shared).pending;null===v?c.next=c:(c.next=v.next,v.next=c),u.pending=c}}o.lanes|=t,null!==(c=o.alternate)&&(c.lanes|=t),Si(o.return,t,n),s.lanes|=t;break}c=c.next}}else if(10===o.tag)l=o.type===n.type?null:o.child;else if(18===o.tag){if(null===(l=o.return))throw Error(i(341));l.lanes|=t,null!==(s=l.alternate)&&(s.lanes|=t),Si(l,t,n),l=o.sibling}else l=o.child;if(null!==l)l.return=o;else for(l=o;null!==l;){if(l===n){l=null;break}if(null!==(o=l.sibling)){o.return=l.return,l=o;break}l=l.return}o=l}_l(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=n.pendingProps.children,Ui(n,t),r=r(a=Mi(a)),n.flags|=1,_l(e,n,r,t),n.child;case 14:return a=hi(r=n.type,n.pendingProps),Sl(e,n,r,a=hi(r.type,a),t);case 15:return Ul(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:hi(r,a),Vl(e,n),n.tag=1,Pa(r)?(e=!0,La(n)):e=!1,Ui(n,t),Vi(n,r,a),Hi(n,r,a,t),Cl(null,n,r,!0,e,t);case 19:return Gl(e,n,t);case 22:return Ml(e,n,t)}throw Error(i(156,n.tag))};var Yc="function"===typeof reportError?reportError:function(e){console.error(e)};function Zc(e){this._internalRoot=e}function Jc(e){this._internalRoot=e}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function $c(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Kc(){}function eu(e,n,t,r,a){var i=t._reactRootContainer;if(i){var o=i;if("function"===typeof a){var l=a;a=function(){var e=Hc(o);l.call(e)}}qc(n,o,e,a)}else o=function(e,n,t,r,a){if(a){if("function"===typeof r){var i=r;r=function(){var e=Hc(o);i.call(e)}}var o=Vc(n,r,e,0,null,!1,0,"",Kc);return e._reactRootContainer=o,e[ma]=o.current,Gr(8===e.nodeType?e.parentNode:e),uc(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"===typeof r){var l=r;r=function(){var e=Hc(s);l.call(e)}}var s=Bc(e,0,!1,null,0,!1,0,"",Kc);return e._reactRootContainer=s,e[ma]=s.current,Gr(8===e.nodeType?e.parentNode:e),uc((function(){qc(n,s,t,r)})),s}(t,n,e,a,r);return Hc(o)}Jc.prototype.render=Zc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(i(409));qc(e,n,null,null)},Jc.prototype.unmount=Zc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;uc((function(){qc(null,e,null,null)})),n[ma]=null}},Jc.prototype.unstable_scheduleHydration=function(e){if(e){var n=Mn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<En.length&&0!==n&&n<En[t].priority;t++);En.splice(t,0,e),0===t&&In(e)}},wn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=fn(n.pendingLanes);0!==t&&(yn(n,1|t),rc(n,Qe()),0===(6&Ts)&&(Gs=Qe()+500,Ga()))}break;case 13:uc((function(){var n=Ci(e,1);if(null!==n){var t=ec();tc(n,e,1,t)}})),Xc(e,1)}},Sn=function(e){if(13===e.tag){var n=Ci(e,134217728);if(null!==n)tc(n,e,134217728,ec());Xc(e,134217728)}},Un=function(e){if(13===e.tag){var n=nc(e),t=Ci(e,n);if(null!==t)tc(t,e,n,ec());Xc(e,n)}},Mn=function(){return bn},jn=function(e,n){var t=bn;try{return bn=e,n()}finally{bn=t}},we=function(e,n,t){switch(n){case"input":if($(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=_a(r);if(!a)throw Error(i(90));X(r),$(r,a)}}}break;case"textarea":ie(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Te=cc,Ce=uc;var nu={usingClientEntryPoint:!1,Events:[ya,ba,_a,je,ke,cc]},tu={findFiberByHostInstance:xa,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ru={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{an=au.inject(ru),on=au}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(n))throw Error(i(200));return Nc(e,n,null,t)},n.createRoot=function(e,n){if(!Qc(e))throw Error(i(299));var t=!1,r="",a=Yc;return null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(a=n.onRecoverableError)),n=Bc(e,1,!1,null,0,t,0,r,a),e[ma]=n.current,Gr(8===e.nodeType?e.parentNode:e),new Zc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return e=null===(e=He(n))?null:e.stateNode},n.flushSync=function(e){return uc(e)},n.hydrate=function(e,n,t){if(!$c(n))throw Error(i(200));return eu(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Qc(e))throw Error(i(405));var r=null!=t&&t.hydratedSources||null,a=!1,o="",l=Yc;if(null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(o=t.identifierPrefix),void 0!==t.onRecoverableError&&(l=t.onRecoverableError)),n=Vc(n,null,e,1,null!=t?t:null,a,0,o,l),e[ma]=n.current,Gr(e),r)for(e=0;e<r.length;e++)a=(a=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a);return new Jc(n)},n.render=function(e,n,t){if(!$c(n))throw Error(i(200));return eu(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!$c(e))throw Error(i(40));return!!e._reactRootContainer&&(uc((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[ma]=null}))})),!0)},n.unstable_batchedUpdates=cc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!$c(t))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return eu(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},250:function(e,n,t){"use strict";var r=t(164);n.s=r.createRoot,r.hydrateRoot},164:function(e,n,t){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(463)},976:function(e,n){"use strict";n.ConcurrentRoot=1,n.ContinuousEventPriority=4,n.DefaultEventPriority=16,n.DiscreteEventPriority=1},721:function(e,n,t){e.exports=function(e){var n={},r=t(791),a=t(100),i=Object.assign;function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,s=Symbol.for("react.element"),c=Symbol.for("react.portal"),u=Symbol.for("react.fragment"),v=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),m=Symbol.for("react.context"),d=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),g=Symbol.for("react.suspense_list"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var b=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var _=Symbol.iterator;function w(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=_&&e[_]||e["@@iterator"])?e:null}function S(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case u:return"Fragment";case c:return"Portal";case f:return"Profiler";case v:return"StrictMode";case h:return"Suspense";case g:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case m:return(e.displayName||"Context")+".Consumer";case p:return(e._context.displayName||"Context")+".Provider";case d:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case x:return null!==(n=e.displayName||null)?n:S(e.type)||"Memo";case y:n=e._payload,e=e._init;try{return S(e(n))}catch(t){}}return null}function U(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return S(n);case 8:return n===v?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof n)return n.displayName||n.name||null;if("string"===typeof n)return n}return null}function M(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!==(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function j(e){if(M(e)!==e)throw Error(o(188))}function k(e){var n=e.alternate;if(!n){if(null===(n=M(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){t=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===t)return j(a),e;if(i===r)return j(a),n;i=i.sibling}throw Error(o(188))}if(t.return!==r.return)t=a,r=i;else{for(var l=!1,s=a.child;s;){if(s===t){l=!0,t=a,r=i;break}if(s===r){l=!0,r=a,t=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===t){l=!0,t=i,r=a;break}if(s===r){l=!0,r=i,t=a;break}s=s.sibling}if(!l)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}function T(e){return null!==(e=k(e))?C(e):null}function C(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=C(e);if(null!==n)return n;e=e.sibling}return null}function R(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){if(4!==e.tag){var n=R(e);if(null!==n)return n}e=e.sibling}return null}var F,P=Array.isArray,D=e.getPublicInstance,E=e.getRootHostContext,z=e.getChildHostContext,L=e.prepareForCommit,A=e.resetAfterCommit,I=e.createInstance,O=e.appendInitialChild,B=e.finalizeInitialChildren,N=e.prepareUpdate,G=e.shouldSetTextContent,V=e.createTextInstance,q=e.scheduleTimeout,H=e.cancelTimeout,W=e.noTimeout,X=e.isPrimaryRenderer,Y=e.supportsMutation,Z=e.supportsPersistence,J=e.supportsHydration,Q=e.getInstanceFromNode,$=e.preparePortalMount,K=e.getCurrentEventPriority,ee=e.detachDeletedInstance,ne=e.supportsMicrotasks,te=e.scheduleMicrotask,re=e.supportsTestSelectors,ae=e.findFiberRoot,ie=e.getBoundingRect,oe=e.getTextContent,le=e.isHiddenSubtree,se=e.matchAccessibilityRole,ce=e.setFocusIfFocusable,ue=e.setupIntersectionObserver,ve=e.appendChild,fe=e.appendChildToContainer,pe=e.commitTextUpdate,me=e.commitMount,de=e.commitUpdate,he=e.insertBefore,ge=e.insertInContainerBefore,xe=e.removeChild,ye=e.removeChildFromContainer,be=e.resetTextContent,_e=e.hideInstance,we=e.hideTextInstance,Se=e.unhideInstance,Ue=e.unhideTextInstance,Me=e.clearContainer,je=e.cloneInstance,ke=e.createContainerChildSet,Te=e.appendChildToContainerChildSet,Ce=e.finalizeContainerChildren,Re=e.replaceContainerChildren,Fe=e.cloneHiddenInstance,Pe=e.cloneHiddenTextInstance,De=e.canHydrateInstance,Ee=e.canHydrateTextInstance,ze=e.canHydrateSuspenseInstance,Le=e.isSuspenseInstancePending,Ae=e.isSuspenseInstanceFallback,Ie=e.registerSuspenseInstanceRetry,Oe=e.getNextHydratableSibling,Be=e.getFirstHydratableChild,Ne=e.getFirstHydratableChildWithinContainer,Ge=e.getFirstHydratableChildWithinSuspenseInstance,Ve=e.hydrateInstance,qe=e.hydrateTextInstance,He=e.hydrateSuspenseInstance,We=e.getNextHydratableInstanceAfterSuspenseInstance,Xe=e.commitHydratedContainer,Ye=e.commitHydratedSuspenseInstance,Ze=e.clearSuspenseBoundary,Je=e.clearSuspenseBoundaryFromContainer,Qe=e.shouldDeleteUnhydratedTailInstances,$e=e.didNotMatchHydratedContainerTextInstance,Ke=e.didNotMatchHydratedTextInstance;function en(e){if(void 0===F)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);F=n&&n[1]||""}return"\n"+F+e}var nn=!1;function tn(e,n){if(!e||nn)return"";nn=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(c){var r=c}Reflect.construct(e,[],n)}else{try{n.call()}catch(c){r=c}e.call(n.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"===typeof c.stack){for(var a=c.stack.split("\n"),i=r.stack.split("\n"),o=a.length-1,l=i.length-1;1<=o&&0<=l&&a[o]!==i[l];)l--;for(;1<=o&&0<=l;o--,l--)if(a[o]!==i[l]){if(1!==o||1!==l)do{if(o--,0>--l||a[o]!==i[l]){var s="\n"+a[o].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=o&&0<=l);break}}}finally{nn=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?en(e):""}var rn=Object.prototype.hasOwnProperty,an=[],on=-1;function ln(e){return{current:e}}function sn(e){0>on||(e.current=an[on],an[on]=null,on--)}function cn(e,n){on++,an[on]=e.current,e.current=n}var un={},vn=ln(un),fn=ln(!1),pn=un;function mn(e,n){var t=e.type.contextTypes;if(!t)return un;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in t)i[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=i),i}function dn(e){return null!==(e=e.childContextTypes)&&void 0!==e}function hn(){sn(fn),sn(vn)}function gn(e,n,t){if(vn.current!==un)throw Error(o(168));cn(vn,n),cn(fn,t)}function xn(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!==typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in n))throw Error(o(108,U(e)||"Unknown",a));return i({},t,r)}function yn(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||un,pn=vn.current,cn(vn,e),cn(fn,fn.current),!0}function bn(e,n,t){var r=e.stateNode;if(!r)throw Error(o(169));t?(e=xn(e,n,pn),r.__reactInternalMemoizedMergedChildContext=e,sn(fn),sn(vn),cn(vn,e)):sn(fn),cn(fn,t)}var _n=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(wn(e)/Sn|0)|0},wn=Math.log,Sn=Math.LN2;var Un=64,Mn=4194304;function jn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function kn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,a=e.suspendedLanes,i=e.pingedLanes,o=268435455&t;if(0!==o){var l=o&~a;0!==l?r=jn(l):0!==(i&=o)&&(r=jn(i))}else 0!==(o=t&~a)?r=jn(o):0!==i&&(r=jn(i));if(0===r)return 0;if(0!==n&&n!==r&&0===(n&a)&&((a=r&-r)>=(i=n&-n)||16===a&&0!==(4194240&i)))return n;if(0!==(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-_n(n)),r|=e[t],n&=~a;return r}function Tn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function Cn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Rn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function Fn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-_n(n)]=t}function Pn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-_n(t),a=1<<r;a&n|e[r]&n&&(e[r]|=n),t&=~a}}var Dn=0;function En(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var zn=a.unstable_scheduleCallback,Ln=a.unstable_cancelCallback,An=a.unstable_shouldYield,In=a.unstable_requestPaint,On=a.unstable_now,Bn=a.unstable_ImmediatePriority,Nn=a.unstable_UserBlockingPriority,Gn=a.unstable_NormalPriority,Vn=a.unstable_IdlePriority,qn=null,Hn=null;var Wn="function"===typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e===1/n)||e!==e&&n!==n},Xn=null,Yn=!1,Zn=!1;function Jn(e){null===Xn?Xn=[e]:Xn.push(e)}function Qn(){if(!Zn&&null!==Xn){Zn=!0;var e=0,n=Dn;try{var t=Xn;for(Dn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Xn=null,Yn=!1}catch(a){throw null!==Xn&&(Xn=Xn.slice(e+1)),zn(Bn,Qn),a}finally{Dn=n,Zn=!1}}return null}var $n=l.ReactCurrentBatchConfig;function Kn(e,n){if(Wn(e,n))return!0;if("object"!==typeof e||null===e||"object"!==typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!rn.call(n,a)||!Wn(e[a],n[a]))return!1}return!0}function et(e){switch(e.tag){case 5:return en(e.type);case 16:return en("Lazy");case 13:return en("Suspense");case 19:return en("SuspenseList");case 0:case 2:case 15:return e=tn(e.type,!1);case 11:return e=tn(e.type.render,!1);case 1:return e=tn(e.type,!0);default:return""}}function nt(e,n){if(e&&e.defaultProps){for(var t in n=i({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var tt=ln(null),rt=null,at=null,it=null;function ot(){it=at=rt=null}function lt(e,n,t){X?(cn(tt,n._currentValue),n._currentValue=t):(cn(tt,n._currentValue2),n._currentValue2=t)}function st(e){var n=tt.current;sn(tt),X?e._currentValue=n:e._currentValue2=n}function ct(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function ut(e,n){rt=e,it=at=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(La=!0),e.firstContext=null)}function vt(e){var n=X?e._currentValue:e._currentValue2;if(it!==e)if(e={context:e,memoizedValue:n,next:null},null===at){if(null===rt)throw Error(o(308));at=e,rt.dependencies={lanes:0,firstContext:e}}else at=at.next=e;return n}var ft=null,pt=!1;function mt(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function dt(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ht(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function gt(e,n){var t=e.updateQueue;null!==t&&(t=t.shared,null!==Yi&&0!==(1&e.mode)&&0===(2&Xi)?(null===(e=t.interleaved)?(n.next=n,null===ft?ft=[t]:ft.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n))}function xt(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!==(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,Pn(e,t)}}function yt(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,i=null;if(null!==(t=t.firstBaseUpdate)){do{var o={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===i?a=i=o:i=i.next=o,t=t.next}while(null!==t);null===i?a=i=n:i=i.next=n}else a=i=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function bt(e,n,t,r){var a=e.updateQueue;pt=!1;var o=a.firstBaseUpdate,l=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var c=s,u=c.next;c.next=null,null===l?o=u:l.next=u,l=c;var v=e.alternate;null!==v&&((s=(v=v.updateQueue).lastBaseUpdate)!==l&&(null===s?v.firstBaseUpdate=u:s.next=u,v.lastBaseUpdate=c))}if(null!==o){var f=a.baseState;for(l=0,v=u=c=null,s=o;;){var p=s.lane,m=s.eventTime;if((r&p)===p){null!==v&&(v=v.next={eventTime:m,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var d=e,h=s;switch(p=n,m=t,h.tag){case 1:if("function"===typeof(d=h.payload)){f=d.call(m,f,p);break e}f=d;break e;case 3:d.flags=-65537&d.flags|128;case 0:if(null===(p="function"===typeof(d=h.payload)?d.call(m,f,p):d)||void 0===p)break e;f=i({},f,p);break e;case 2:pt=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[s]:p.push(s))}else m={eventTime:m,lane:p,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===v?(u=v=m,c=f):v=v.next=m,l|=p;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(p=s).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===v&&(c=f),a.baseState=c,a.firstBaseUpdate=u,a.lastBaseUpdate=v,null!==(n=a.shared.interleaved)){a=n;do{l|=a.lane,a=a.next}while(a!==n)}else null===o&&(a.shared.lanes=0);no|=l,e.lanes=l,e.memoizedState=f}}function _t(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!==typeof a)throw Error(o(191,a));a.call(r)}}}var wt=(new r.Component).refs;function St(e,n,t,r){t=null===(t=t(r,n=e.memoizedState))||void 0===t?n:i({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Ut={isMounted:function(e){return!!(e=e._reactInternals)&&M(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=_o(),a=wo(e),i=ht(r,a);i.payload=n,void 0!==t&&null!==t&&(i.callback=t),gt(e,i),null!==(n=So(e,a,r))&&xt(n,e,a)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=_o(),a=wo(e),i=ht(r,a);i.tag=1,i.payload=n,void 0!==t&&null!==t&&(i.callback=t),gt(e,i),null!==(n=So(e,a,r))&&xt(n,e,a)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=_o(),r=wo(e),a=ht(t,r);a.tag=2,void 0!==n&&null!==n&&(a.callback=n),gt(e,a),null!==(n=So(e,r,t))&&xt(n,e,r)}};function Mt(e,n,t,r,a,i,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!n.prototype||!n.prototype.isPureReactComponent||(!Kn(t,r)||!Kn(a,i))}function jt(e,n,t){var r=!1,a=un,i=n.contextType;return"object"===typeof i&&null!==i?i=vt(i):(a=dn(n)?pn:vn.current,i=(r=null!==(r=n.contextTypes)&&void 0!==r)?mn(e,a):un),n=new n(t,i),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Ut,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),n}function kt(e,n,t,r){e=n.state,"function"===typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"===typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Ut.enqueueReplaceState(n,n.state,null)}function Tt(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs=wt,mt(e);var i=n.contextType;"object"===typeof i&&null!==i?a.context=vt(i):(i=dn(n)?pn:vn.current,a.context=mn(e,i)),a.state=e.memoizedState,"function"===typeof(i=n.getDerivedStateFromProps)&&(St(e,n,i,t),a.state=e.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(n=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&Ut.enqueueReplaceState(a,a.state,null),bt(e,t,a,r),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}var Ct=[],Rt=0,Ft=null,Pt=0,Dt=[],Et=0,zt=null,Lt=1,At="";function It(e,n){Ct[Rt++]=Pt,Ct[Rt++]=Ft,Ft=e,Pt=n}function Ot(e,n,t){Dt[Et++]=Lt,Dt[Et++]=At,Dt[Et++]=zt,zt=e;var r=Lt;e=At;var a=32-_n(r)-1;r&=~(1<<a),t+=1;var i=32-_n(n)+a;if(30<i){var o=a-a%5;i=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Lt=1<<32-_n(n)+a|t<<a|r,At=i+e}else Lt=1<<i|t<<a|r,At=e}function Bt(e){null!==e.return&&(It(e,1),Ot(e,1,0))}function Nt(e){for(;e===Ft;)Ft=Ct[--Rt],Ct[Rt]=null,Pt=Ct[--Rt],Ct[Rt]=null;for(;e===zt;)zt=Dt[--Et],Dt[Et]=null,At=Dt[--Et],Dt[Et]=null,Lt=Dt[--Et],Dt[Et]=null}var Gt=null,Vt=null,qt=!1,Ht=!1,Wt=null;function Xt(e,n){var t=$o(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function Yt(e,n){switch(e.tag){case 5:return null!==(n=De(n,e.type,e.pendingProps))&&(e.stateNode=n,Gt=e,Vt=Be(n),!0);case 6:return null!==(n=Ee(n,e.pendingProps))&&(e.stateNode=n,Gt=e,Vt=null,!0);case 13:if(null!==(n=ze(n))){var t=null!==zt?{id:Lt,overflow:At}:null;return e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=$o(18,null,null,0)).stateNode=n,t.return=e,e.child=t,Gt=e,Vt=null,!0}return!1;default:return!1}}function Zt(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function Jt(e){if(qt){var n=Vt;if(n){var t=n;if(!Yt(e,n)){if(Zt(e))throw Error(o(418));n=Oe(t);var r=Gt;n&&Yt(e,n)?Xt(r,t):(e.flags=-4097&e.flags|2,qt=!1,Gt=e)}}else{if(Zt(e))throw Error(o(418));e.flags=-4097&e.flags|2,qt=!1,Gt=e}}}function Qt(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Gt=e}function $t(e){if(!J||e!==Gt)return!1;if(!qt)return Qt(e),qt=!0,!1;if(3!==e.tag&&(5!==e.tag||Qe(e.type)&&!G(e.type,e.memoizedProps))){var n=Vt;if(n){if(Zt(e)){for(e=Vt;e;)e=Oe(e);throw Error(o(418))}for(;n;)Xt(e,n),n=Oe(n)}}if(Qt(e),13===e.tag){if(!J)throw Error(o(316));if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));Vt=We(e)}else Vt=Gt?Oe(e.stateNode):null;return!0}function Kt(){J&&(Vt=Gt=null,Ht=qt=!1)}function er(e){null===Wt?Wt=[e]:Wt.push(e)}function nr(e,n,t){if(null!==(e=t.ref)&&"function"!==typeof e&&"object"!==typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==n&&null!==n.ref&&"function"===typeof n.ref&&n.ref._stringRef===i?n.ref:(n=function(e){var n=a.refs;n===wt&&(n=a.refs={}),null===e?delete n[i]:n[i]=e},n._stringRef=i,n)}if("string"!==typeof e)throw Error(o(284));if(!t._owner)throw Error(o(290,e))}return e}function tr(e,n){throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function rr(e){return(0,e._init)(e._payload)}function ar(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=el(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function l(n){return e&&null===n.alternate&&(n.flags|=2),n}function v(e,n,t,r){return null===n||6!==n.tag?((n=al(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function f(e,n,t,r){var i=t.type;return i===u?m(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===y&&rr(i)===n.type)?((r=a(n,t.props)).ref=nr(e,n,t),r.return=e,r):((r=nl(t.type,t.key,t.props,null,e.mode,r)).ref=nr(e,n,t),r.return=e,r)}function p(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=il(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function m(e,n,t,r,i){return null===n||7!==n.tag?((n=tl(t,e.mode,r,i)).return=e,n):((n=a(n,t)).return=e,n)}function d(e,n,t){if("string"===typeof n&&""!==n||"number"===typeof n)return(n=al(""+n,e.mode,t)).return=e,n;if("object"===typeof n&&null!==n){switch(n.$$typeof){case s:return(t=nl(n.type,n.key,n.props,null,e.mode,t)).ref=nr(e,null,n),t.return=e,t;case c:return(n=il(n,e.mode,t)).return=e,n;case y:return d(e,(0,n._init)(n._payload),t)}if(P(n)||w(n))return(n=tl(n,e.mode,t,null)).return=e,n;tr(e,n)}return null}function h(e,n,t,r){var a=null!==n?n.key:null;if("string"===typeof t&&""!==t||"number"===typeof t)return null!==a?null:v(e,n,""+t,r);if("object"===typeof t&&null!==t){switch(t.$$typeof){case s:return t.key===a?f(e,n,t,r):null;case c:return t.key===a?p(e,n,t,r):null;case y:return h(e,n,(a=t._init)(t._payload),r)}if(P(t)||w(t))return null!==a?null:m(e,n,t,r,null);tr(e,t)}return null}function g(e,n,t,r,a){if("string"===typeof r&&""!==r||"number"===typeof r)return v(n,e=e.get(t)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case s:return f(n,e=e.get(null===r.key?t:r.key)||null,r,a);case c:return p(n,e=e.get(null===r.key?t:r.key)||null,r,a);case y:return g(e,n,t,(0,r._init)(r._payload),a)}if(P(r)||w(r))return m(n,e=e.get(t)||null,r,a,null);tr(n,r)}return null}function x(a,o,l,s){for(var c=null,u=null,v=o,f=o=0,p=null;null!==v&&f<l.length;f++){v.index>f?(p=v,v=null):p=v.sibling;var m=h(a,v,l[f],s);if(null===m){null===v&&(v=p);break}e&&v&&null===m.alternate&&n(a,v),o=i(m,o,f),null===u?c=m:u.sibling=m,u=m,v=p}if(f===l.length)return t(a,v),qt&&It(a,f),c;if(null===v){for(;f<l.length;f++)null!==(v=d(a,l[f],s))&&(o=i(v,o,f),null===u?c=v:u.sibling=v,u=v);return qt&&It(a,f),c}for(v=r(a,v);f<l.length;f++)null!==(p=g(v,a,f,l[f],s))&&(e&&null!==p.alternate&&v.delete(null===p.key?f:p.key),o=i(p,o,f),null===u?c=p:u.sibling=p,u=p);return e&&v.forEach((function(e){return n(a,e)})),qt&&It(a,f),c}function b(a,l,s,c){var u=w(s);if("function"!==typeof u)throw Error(o(150));if(null==(s=u.call(s)))throw Error(o(151));for(var v=u=null,f=l,p=l=0,m=null,x=s.next();null!==f&&!x.done;p++,x=s.next()){f.index>p?(m=f,f=null):m=f.sibling;var y=h(a,f,x.value,c);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&n(a,f),l=i(y,l,p),null===v?u=y:v.sibling=y,v=y,f=m}if(x.done)return t(a,f),qt&&It(a,p),u;if(null===f){for(;!x.done;p++,x=s.next())null!==(x=d(a,x.value,c))&&(l=i(x,l,p),null===v?u=x:v.sibling=x,v=x);return qt&&It(a,p),u}for(f=r(a,f);!x.done;p++,x=s.next())null!==(x=g(f,a,p,x.value,c))&&(e&&null!==x.alternate&&f.delete(null===x.key?p:x.key),l=i(x,l,p),null===v?u=x:v.sibling=x,v=x);return e&&f.forEach((function(e){return n(a,e)})),qt&&It(a,p),u}return function e(r,i,o,v){if("object"===typeof o&&null!==o&&o.type===u&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case s:e:{for(var f=o.key,p=i;null!==p;){if(p.key===f){if((f=o.type)===u){if(7===p.tag){t(r,p.sibling),(i=a(p,o.props.children)).return=r,r=i;break e}}else if(p.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===y&&rr(f)===p.type){t(r,p.sibling),(i=a(p,o.props)).ref=nr(r,p,o),i.return=r,r=i;break e}t(r,p);break}n(r,p),p=p.sibling}o.type===u?((i=tl(o.props.children,r.mode,v,o.key)).return=r,r=i):((v=nl(o.type,o.key,o.props,null,r.mode,v)).ref=nr(r,i,o),v.return=r,r=v)}return l(r);case c:e:{for(p=o.key;null!==i;){if(i.key===p){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){t(r,i.sibling),(i=a(i,o.children||[])).return=r,r=i;break e}t(r,i);break}n(r,i),i=i.sibling}(i=il(o,r.mode,v)).return=r,r=i}return l(r);case y:return e(r,i,(p=o._init)(o._payload),v)}if(P(o))return x(r,i,o,v);if(w(o))return b(r,i,o,v);tr(r,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==i&&6===i.tag?(t(r,i.sibling),(i=a(i,o)).return=r,r=i):(t(r,i),(i=al(o,r.mode,v)).return=r,r=i),l(r)):t(r,i)}}var ir=ar(!0),or=ar(!1),lr={},sr=ln(lr),cr=ln(lr),ur=ln(lr);function vr(e){if(e===lr)throw Error(o(174));return e}function fr(e,n){cn(ur,n),cn(cr,e),cn(sr,lr),e=E(n),sn(sr),cn(sr,e)}function pr(){sn(sr),sn(cr),sn(ur)}function mr(e){var n=vr(ur.current),t=vr(sr.current);t!==(n=z(t,e.type,n))&&(cn(cr,e),cn(sr,n))}function dr(e){cr.current===e&&(sn(sr),sn(cr))}var hr=ln(0);function gr(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||Le(t)||Ae(t)))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!==(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var xr=[];function yr(){for(var e=0;e<xr.length;e++){var n=xr[e];X?n._workInProgressVersionPrimary=null:n._workInProgressVersionSecondary=null}xr.length=0}var br=l.ReactCurrentDispatcher,_r=l.ReactCurrentBatchConfig,wr=0,Sr=null,Ur=null,Mr=null,jr=!1,kr=!1,Tr=0,Cr=0;function Rr(){throw Error(o(321))}function Fr(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!Wn(e[t],n[t]))return!1;return!0}function Pr(e,n,t,r,a,i){if(wr=i,Sr=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,br.current=null===e||null===e.memoizedState?ma:da,e=t(r,a),kr){i=0;do{if(kr=!1,Tr=0,25<=i)throw Error(o(301));i+=1,Mr=Ur=null,n.updateQueue=null,br.current=ha,e=t(r,a)}while(kr)}if(br.current=pa,n=null!==Ur&&null!==Ur.next,wr=0,Mr=Ur=Sr=null,jr=!1,n)throw Error(o(300));return e}function Dr(){var e=0!==Tr;return Tr=0,e}function Er(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Mr?Sr.memoizedState=Mr=e:Mr=Mr.next=e,Mr}function zr(){if(null===Ur){var e=Sr.alternate;e=null!==e?e.memoizedState:null}else e=Ur.next;var n=null===Mr?Sr.memoizedState:Mr.next;if(null!==n)Mr=n,Ur=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Ur=e).memoizedState,baseState:Ur.baseState,baseQueue:Ur.baseQueue,queue:Ur.queue,next:null},null===Mr?Sr.memoizedState=Mr=e:Mr=Mr.next=e}return Mr}function Lr(e,n){return"function"===typeof n?n(e):n}function Ar(e){var n=zr(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=Ur,a=r.baseQueue,i=t.pending;if(null!==i){if(null!==a){var l=a.next;a.next=i.next,i.next=l}r.baseQueue=a=i,t.pending=null}if(null!==a){i=a.next,r=r.baseState;var s=l=null,c=null,u=i;do{var v=u.lane;if((wr&v)===v)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var f={lane:v,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(s=c=f,l=r):c=c.next=f,Sr.lanes|=v,no|=v}u=u.next}while(null!==u&&u!==i);null===c?l=r:c.next=s,Wn(r,n.memoizedState)||(La=!0),n.memoizedState=r,n.baseState=l,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){a=e;do{i=a.lane,Sr.lanes|=i,no|=i,a=a.next}while(a!==e)}else null===a&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ir(e){var n=zr(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,i=n.memoizedState;if(null!==a){t.pending=null;var l=a=a.next;do{i=e(i,l.action),l=l.next}while(l!==a);Wn(i,n.memoizedState)||(La=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function Or(){}function Br(e,n){var t=Sr,r=zr(),a=n(),i=!Wn(r.memoizedState,a);if(i&&(r.memoizedState=a,La=!0),r=r.queue,Qr(Vr.bind(null,t,r,e),[e]),r.getSnapshot!==n||i||null!==Mr&&1&Mr.memoizedState.tag){if(t.flags|=2048,Wr(9,Gr.bind(null,t,r,a,n),void 0,null),null===Yi)throw Error(o(349));0!==(30&wr)||Nr(t,n,a)}return a}function Nr(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=Sr.updateQueue)?(n={lastEffect:null,stores:null},Sr.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Gr(e,n,t,r){n.value=t,n.getSnapshot=r,qr(n)&&So(e,1,-1)}function Vr(e,n,t){return t((function(){qr(n)&&So(e,1,-1)}))}function qr(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!Wn(e,t)}catch(r){return!0}}function Hr(e){var n=Er();return"function"===typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Lr,lastRenderedState:e},n.queue=e,e=e.dispatch=sa.bind(null,Sr,e),[n.memoizedState,e]}function Wr(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Sr.updateQueue)?(n={lastEffect:null,stores:null},Sr.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Xr(){return zr().memoizedState}function Yr(e,n,t,r){var a=Er();Sr.flags|=e,a.memoizedState=Wr(1|n,t,void 0,void 0===r?null:r)}function Zr(e,n,t,r){var a=zr();r=void 0===r?null:r;var i=void 0;if(null!==Ur){var o=Ur.memoizedState;if(i=o.destroy,null!==r&&Fr(r,o.deps))return void(a.memoizedState=Wr(n,t,i,r))}Sr.flags|=e,a.memoizedState=Wr(1|n,t,i,r)}function Jr(e,n){return Yr(8390656,8,e,n)}function Qr(e,n){return Zr(2048,8,e,n)}function $r(e,n){return Zr(4,2,e,n)}function Kr(e,n){return Zr(4,4,e,n)}function ea(e,n){return"function"===typeof n?(e=e(),n(e),function(){n(null)}):null!==n&&void 0!==n?(e=e(),n.current=e,function(){n.current=null}):void 0}function na(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Zr(4,4,ea.bind(null,n,e),t)}function ta(){}function ra(e,n){var t=zr();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Fr(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function aa(e,n){var t=zr();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Fr(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function ia(e,n){var t=Dn;Dn=0!==t&&4>t?t:4,e(!0);var r=_r.transition;_r.transition={};try{e(!1),n()}finally{Dn=t,_r.transition=r}}function oa(){return zr().memoizedState}function la(e,n,t){var r=wo(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},ca(e)?ua(n,t):(va(e,n,t),null!==(e=So(e,r,t=_o()))&&fa(e,n,r))}function sa(e,n,t){var r=wo(e),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(ca(e))ua(n,a);else{va(e,n,a);var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=n.lastRenderedReducer))try{var o=n.lastRenderedState,l=i(o,t);if(a.hasEagerState=!0,a.eagerState=l,Wn(l,o))return}catch(s){}null!==(e=So(e,r,t=_o()))&&fa(e,n,r)}}function ca(e){var n=e.alternate;return e===Sr||null!==n&&n===Sr}function ua(e,n){kr=jr=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function va(e,n,t){null!==Yi&&0!==(1&e.mode)&&0===(2&Xi)?(null===(e=n.interleaved)?(t.next=t,null===ft?ft=[n]:ft.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t)}function fa(e,n,t){if(0!==(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,Pn(e,t)}}var pa={readContext:vt,useCallback:Rr,useContext:Rr,useEffect:Rr,useImperativeHandle:Rr,useInsertionEffect:Rr,useLayoutEffect:Rr,useMemo:Rr,useReducer:Rr,useRef:Rr,useState:Rr,useDebugValue:Rr,useDeferredValue:Rr,useTransition:Rr,useMutableSource:Rr,useSyncExternalStore:Rr,useId:Rr,unstable_isNewReconciler:!1},ma={readContext:vt,useCallback:function(e,n){return Er().memoizedState=[e,void 0===n?null:n],e},useContext:vt,useEffect:Jr,useImperativeHandle:function(e,n,t){return t=null!==t&&void 0!==t?t.concat([e]):null,Yr(4194308,4,ea.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Yr(4194308,4,e,n)},useInsertionEffect:function(e,n){return Yr(4,2,e,n)},useMemo:function(e,n){var t=Er();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Er();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=la.bind(null,Sr,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Er().memoizedState=e},useState:Hr,useDebugValue:ta,useDeferredValue:function(e){var n=Hr(e),t=n[0],r=n[1];return Jr((function(){var n=_r.transition;_r.transition={};try{r(e)}finally{_r.transition=n}}),[e]),t},useTransition:function(){var e=Hr(!1),n=e[0];return e=ia.bind(null,e[1]),Er().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=Sr,a=Er();if(qt){if(void 0===t)throw Error(o(407));t=t()}else{if(t=n(),null===Yi)throw Error(o(349));0!==(30&wr)||Nr(r,n,t)}a.memoizedState=t;var i={value:t,getSnapshot:n};return a.queue=i,Jr(Vr.bind(null,r,i,e),[e]),r.flags|=2048,Wr(9,Gr.bind(null,r,i,t,n),void 0,null),t},useId:function(){var e=Er(),n=Yi.identifierPrefix;if(qt){var t=At;n=":"+n+"R"+(t=(Lt&~(1<<32-_n(Lt)-1)).toString(32)+t),0<(t=Tr++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=Cr++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},da={readContext:vt,useCallback:ra,useContext:vt,useEffect:Qr,useImperativeHandle:na,useInsertionEffect:$r,useLayoutEffect:Kr,useMemo:aa,useReducer:Ar,useRef:Xr,useState:function(){return Ar(Lr)},useDebugValue:ta,useDeferredValue:function(e){var n=Ar(Lr),t=n[0],r=n[1];return Qr((function(){var n=_r.transition;_r.transition={};try{r(e)}finally{_r.transition=n}}),[e]),t},useTransition:function(){return[Ar(Lr)[0],zr().memoizedState]},useMutableSource:Or,useSyncExternalStore:Br,useId:oa,unstable_isNewReconciler:!1},ha={readContext:vt,useCallback:ra,useContext:vt,useEffect:Qr,useImperativeHandle:na,useInsertionEffect:$r,useLayoutEffect:Kr,useMemo:aa,useReducer:Ir,useRef:Xr,useState:function(){return Ir(Lr)},useDebugValue:ta,useDeferredValue:function(e){var n=Ir(Lr),t=n[0],r=n[1];return Qr((function(){var n=_r.transition;_r.transition={};try{r(e)}finally{_r.transition=n}}),[e]),t},useTransition:function(){return[Ir(Lr)[0],zr().memoizedState]},useMutableSource:Or,useSyncExternalStore:Br,useId:oa,unstable_isNewReconciler:!1};function ga(e,n){try{var t="",r=n;do{t+=et(r),r=r.return}while(r);var a=t}catch(i){a="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:n,stack:a}}function xa(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}var ya,ba,_a,wa,Sa="function"===typeof WeakMap?WeakMap:Map;function Ua(e,n,t){(t=ht(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){uo||(uo=!0,vo=r),xa(0,n)},t}function Ma(e,n,t){(t=ht(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var a=n.value;t.payload=function(){return r(a)},t.callback=function(){xa(0,n)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(t.callback=function(){xa(0,n),"function"!==typeof r&&(null===fo?fo=new Set([this]):fo.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function ja(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new Sa;var a=new Set;r.set(n,a)}else void 0===(a=r.get(n))&&(a=new Set,r.set(n,a));a.has(t)||(a.add(t),e=Wo.bind(null,e,n,t),n.then(e,e))}function ka(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function Ta(e,n,t,r,a){return 0===(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=ht(-1,1)).tag=2,gt(t,n))),t.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}function Ca(e){e.flags|=4}function Ra(e,n){if(null!==e&&e.child===n.child)return!0;if(0!==(16&n.flags))return!1;for(e=n.child;null!==e;){if(0!==(12854&e.flags)||0!==(12854&e.subtreeFlags))return!1;e=e.sibling}return!0}if(Y)ya=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)O(e,t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},ba=function(){},_a=function(e,n,t,r,a){if((e=e.memoizedProps)!==r){var i=n.stateNode,o=vr(sr.current);t=N(i,t,e,r,a,o),(n.updateQueue=t)&&Ca(n)}},wa=function(e,n,t,r){t!==r&&Ca(n)};else if(Z){ya=function(e,n,t,r){for(var a=n.child;null!==a;){if(5===a.tag){var i=a.stateNode;t&&r&&(i=Fe(i,a.type,a.memoizedProps,a)),O(e,i)}else if(6===a.tag)i=a.stateNode,t&&r&&(i=Pe(i,a.memoizedProps,a)),O(e,i);else if(4!==a.tag)if(22===a.tag&&null!==a.memoizedState)null!==(i=a.child)&&(i.return=a),ya(e,a,!0,!0);else if(null!==a.child){a.child.return=a,a=a.child;continue}if(a===n)break;for(;null===a.sibling;){if(null===a.return||a.return===n)return;a=a.return}a.sibling.return=a.return,a=a.sibling}};var Fa=function e(n,t,r,a){for(var i=t.child;null!==i;){if(5===i.tag){var o=i.stateNode;r&&a&&(o=Fe(o,i.type,i.memoizedProps,i)),Te(n,o)}else if(6===i.tag)o=i.stateNode,r&&a&&(o=Pe(o,i.memoizedProps,i)),Te(n,o);else if(4!==i.tag)if(22===i.tag&&null!==i.memoizedState)null!==(o=i.child)&&(o.return=i),e(n,i,!0,!0);else if(null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;i=i.return}i.sibling.return=i.return,i=i.sibling}};ba=function(e,n){var t=n.stateNode;if(!Ra(e,n)){e=t.containerInfo;var r=ke(e);Fa(r,n,!1,!1),t.pendingChildren=r,Ca(n),Ce(e,r)}},_a=function(e,n,t,r,a){var i=e.stateNode,o=e.memoizedProps;if((e=Ra(e,n))&&o===r)n.stateNode=i;else{var l=n.stateNode,s=vr(sr.current),c=null;o!==r&&(c=N(l,t,o,r,a,s)),e&&null===c?n.stateNode=i:(i=je(i,c,t,o,r,n,e,l),B(i,t,r,a,s)&&Ca(n),n.stateNode=i,e?Ca(n):ya(i,n,!1,!1))}},wa=function(e,n,t,r){t!==r?(e=vr(ur.current),t=vr(sr.current),n.stateNode=V(r,e,t,n),Ca(n)):n.stateNode=e.stateNode}}else ba=function(){},_a=function(){},wa=function(){};function Pa(e,n){if(!qt)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Da(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Ea(e,n,t){var r=n.pendingProps;switch(Nt(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Da(n),null;case 1:case 17:return dn(n.type)&&hn(),Da(n),null;case 3:return r=n.stateNode,pr(),sn(fn),sn(vn),yr(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($t(n)?Ca(n):null===e||e.memoizedState.isDehydrated&&0===(256&n.flags)||(n.flags|=1024,null!==Wt&&(To(Wt),Wt=null))),ba(e,n),Da(n),null;case 5:dr(n),t=vr(ur.current);var a=n.type;if(null!==e&&null!=n.stateNode)_a(e,n,a,r,t),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(o(166));return Da(n),null}if(e=vr(sr.current),$t(n)){if(!J)throw Error(o(175));e=Ve(n.stateNode,n.type,n.memoizedProps,t,e,n,!Ht),n.updateQueue=e,null!==e&&Ca(n)}else{var i=I(a,r,t,e,n);ya(i,n,!1,!1),n.stateNode=i,B(i,a,r,t,e)&&Ca(n)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Da(n),null;case 6:if(e&&null!=n.stateNode)wa(e,n,e.memoizedProps,r);else{if("string"!==typeof r&&null===n.stateNode)throw Error(o(166));if(e=vr(ur.current),t=vr(sr.current),$t(n)){if(!J)throw Error(o(176));if(e=n.stateNode,r=n.memoizedProps,(t=qe(e,r,n,!Ht))&&null!==(a=Gt))switch(i=0!==(1&a.mode),a.tag){case 3:$e(a.stateNode.containerInfo,e,r,i);break;case 5:Ke(a.type,a.memoizedProps,a.stateNode,e,r,i)}t&&Ca(n)}else n.stateNode=V(r,e,t,n)}return Da(n),null;case 13:if(sn(hr),r=n.memoizedState,qt&&null!==Vt&&0!==(1&n.mode)&&0===(128&n.flags)){for(e=Vt;e;)e=Oe(e);return Kt(),n.flags|=98560,n}if(null!==r&&null!==r.dehydrated){if(r=$t(n),null===e){if(!r)throw Error(o(318));if(!J)throw Error(o(344));if(!(e=null!==(e=n.memoizedState)?e.dehydrated:null))throw Error(o(317));He(e,n)}else Kt(),0===(128&n.flags)&&(n.memoizedState=null),n.flags|=4;return Da(n),null}return null!==Wt&&(To(Wt),Wt=null),0!==(128&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?$t(n):t=null!==e.memoizedState,r&&!t&&(n.child.flags|=8192,0!==(1&n.mode)&&(null===e||0!==(1&hr.current)?0===Ki&&(Ki=3):Lo())),null!==n.updateQueue&&(n.flags|=4),Da(n),null);case 4:return pr(),ba(e,n),null===e&&$(n.stateNode.containerInfo),Da(n),null;case 10:return st(n.type._context),Da(n),null;case 19:if(sn(hr),null===(a=n.memoizedState))return Da(n),null;if(r=0!==(128&n.flags),null===(i=a.rendering))if(r)Pa(a,!1);else{if(0!==Ki||null!==e&&0!==(128&e.flags))for(e=n.child;null!==e;){if(null!==(i=gr(e))){for(n.flags|=128,Pa(a,!1),null!==(e=i.updateQueue)&&(n.updateQueue=e,n.flags|=4),n.subtreeFlags=0,e=t,r=n.child;null!==r;)a=e,(t=r).flags&=14680066,null===(i=t.alternate)?(t.childLanes=0,t.lanes=a,t.child=null,t.subtreeFlags=0,t.memoizedProps=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.stateNode=null):(t.childLanes=i.childLanes,t.lanes=i.lanes,t.child=i.child,t.subtreeFlags=0,t.deletions=null,t.memoizedProps=i.memoizedProps,t.memoizedState=i.memoizedState,t.updateQueue=i.updateQueue,t.type=i.type,a=i.dependencies,t.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),r=r.sibling;return cn(hr,1&hr.current|2),n.child}e=e.sibling}null!==a.tail&&On()>lo&&(n.flags|=128,r=!0,Pa(a,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=gr(i))){if(n.flags|=128,r=!0,null!==(e=e.updateQueue)&&(n.updateQueue=e,n.flags|=4),Pa(a,!0),null===a.tail&&"hidden"===a.tailMode&&!i.alternate&&!qt)return Da(n),null}else 2*On()-a.renderingStartTime>lo&&1073741824!==t&&(n.flags|=128,r=!0,Pa(a,!1),n.lanes=4194304);a.isBackwards?(i.sibling=n.child,n.child=i):(null!==(e=a.last)?e.sibling=i:n.child=i,a.last=i)}return null!==a.tail?(n=a.tail,a.rendering=n,a.tail=n.sibling,a.renderingStartTime=On(),n.sibling=null,e=hr.current,cn(hr,r?1&e|2:1&e),n):(Da(n),null);case 22:case 23:return Po(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!==(1&n.mode)?0!==(1073741824&Qi)&&(Da(n),Y&&6&n.subtreeFlags&&(n.flags|=8192)):Da(n),null;case 24:case 25:return null}throw Error(o(156,n.tag))}var za=l.ReactCurrentOwner,La=!1;function Aa(e,n,t,r){n.child=null===e?or(n,null,t,r):ir(n,e.child,t,r)}function Ia(e,n,t,r,a){t=t.render;var i=n.ref;return ut(n,a),r=Pr(e,n,t,r,i,a),t=Dr(),null===e||La?(qt&&t&&Bt(n),n.flags|=1,Aa(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,ai(e,n,a))}function Oa(e,n,t,r,a){if(null===e){var i=t.type;return"function"!==typeof i||Ko(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=nl(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,Ba(e,n,i,r,a))}if(i=e.child,0===(e.lanes&a)){var o=i.memoizedProps;if((t=null!==(t=t.compare)?t:Kn)(o,r)&&e.ref===n.ref)return ai(e,n,a)}return n.flags|=1,(e=el(i,r)).ref=n.ref,e.return=n,n.child=e}function Ba(e,n,t,r,a){if(null!==e&&Kn(e.memoizedProps,r)&&e.ref===n.ref){if(La=!1,0===(e.lanes&a))return n.lanes=e.lanes,ai(e,n,a);0!==(131072&e.flags)&&(La=!0)}return Va(e,n,t,r,a)}function Na(e,n,t){var r=n.pendingProps,a=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null},cn($i,Qi),Qi|=t;else{if(0===(1073741824&t))return e=null!==i?i.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null},n.updateQueue=null,cn($i,Qi),Qi|=e,null;n.memoizedState={baseLanes:0,cachePool:null},r=null!==i?i.baseLanes:t,cn($i,Qi),Qi|=r}else null!==i?(r=i.baseLanes|t,n.memoizedState=null):r=t,cn($i,Qi),Qi|=r;return Aa(e,n,a,t),n.child}function Ga(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function Va(e,n,t,r,a){var i=dn(t)?pn:vn.current;return i=mn(n,i),ut(n,a),t=Pr(e,n,t,r,i,a),r=Dr(),null===e||La?(qt&&r&&Bt(n),n.flags|=1,Aa(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,ai(e,n,a))}function qa(e,n,t,r,a){if(dn(t)){var i=!0;yn(n)}else i=!1;if(ut(n,a),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),jt(n,t,r),Tt(n,t,r,a),r=!0;else if(null===e){var o=n.stateNode,l=n.memoizedProps;o.props=l;var s=o.context,c=t.contextType;"object"===typeof c&&null!==c?c=vt(c):c=mn(n,c=dn(t)?pn:vn.current);var u=t.getDerivedStateFromProps,v="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;v||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(l!==r||s!==c)&&kt(n,o,r,c),pt=!1;var f=n.memoizedState;o.state=f,bt(n,r,o,a),s=n.memoizedState,l!==r||f!==s||fn.current||pt?("function"===typeof u&&(St(n,t,u,r),s=n.memoizedState),(l=pt||Mt(n,t,l,r,f,s,c))?(v||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(n.flags|=4194308)):("function"===typeof o.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=s),o.props=r,o.state=s,o.context=c,r=l):("function"===typeof o.componentDidMount&&(n.flags|=4194308),r=!1)}else{o=n.stateNode,dt(e,n),l=n.memoizedProps,c=n.type===n.elementType?l:nt(n.type,l),o.props=c,v=n.pendingProps,f=o.context,"object"===typeof(s=t.contextType)&&null!==s?s=vt(s):s=mn(n,s=dn(t)?pn:vn.current);var p=t.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(l!==v||f!==s)&&kt(n,o,r,s),pt=!1,f=n.memoizedState,o.state=f,bt(n,r,o,a);var m=n.memoizedState;l!==v||f!==m||fn.current||pt?("function"===typeof p&&(St(n,t,p,r),m=n.memoizedState),(c=pt||Mt(n,t,c,r,f,m,s)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(r,m,s),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,m,s)),"function"===typeof o.componentDidUpdate&&(n.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!==typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=m),o.props=r,o.state=m,o.context=s,r=c):("function"!==typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),r=!1)}return Ha(e,n,t,r,i,a)}function Ha(e,n,t,r,a,i){Ga(e,n);var o=0!==(128&n.flags);if(!r&&!o)return a&&bn(n,t,!1),ai(e,n,i);r=n.stateNode,za.current=n;var l=o&&"function"!==typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&o?(n.child=ir(n,e.child,null,i),n.child=ir(n,null,l,i)):Aa(e,n,l,i),n.memoizedState=r.state,a&&bn(n,t,!0),n.child}function Wa(e){var n=e.stateNode;n.pendingContext?gn(0,n.pendingContext,n.pendingContext!==n.context):n.context&&gn(0,n.context,!1),fr(e,n.containerInfo)}function Xa(e,n,t,r,a){return Kt(),er(a),n.flags|=256,Aa(e,n,t,r),n.child}var Ya={dehydrated:null,treeContext:null,retryLane:0};function Za(e){return{baseLanes:e,cachePool:null}}function Ja(e,n,t){var r,a=n.pendingProps,i=hr.current,l=!1,s=0!==(128&n.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(l=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),cn(hr,1&i),null===e)return Jt(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&n.mode)?n.lanes=1:Ae(e)?n.lanes=8:n.lanes=1073741824,null):(i=a.children,e=a.fallback,l?(a=n.mode,l=n.child,i={mode:"hidden",children:i},0===(1&a)&&null!==l?(l.childLanes=0,l.pendingProps=i):l=rl(i,a,0,null),e=tl(e,a,t,null),l.return=n,e.return=n,l.sibling=e,n.child=l,n.child.memoizedState=Za(t),n.memoizedState=Ya,e):Qa(n,i));if(null!==(i=e.memoizedState)){if(null!==(r=i.dehydrated)){if(s)return 256&n.flags?(n.flags&=-257,ei(e,n,t,Error(o(422)))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(l=a.fallback,i=n.mode,a=rl({mode:"visible",children:a.children},i,0,null),(l=tl(l,i,t,null)).flags|=2,a.return=n,l.return=n,a.sibling=l,n.child=a,0!==(1&n.mode)&&ir(n,e.child,null,t),n.child.memoizedState=Za(t),n.memoizedState=Ya,l);if(0===(1&n.mode))n=ei(e,n,t,null);else if(Ae(r))n=ei(e,n,t,Error(o(419)));else if(a=0!==(t&e.childLanes),La||a){if(null!==(a=Yi)){switch(t&-t){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}0!==(a=0!==(l&(a.suspendedLanes|t))?0:l)&&a!==i.retryLane&&(i.retryLane=a,So(e,a,-1))}Lo(),n=ei(e,n,t,Error(o(421)))}else Le(r)?(n.flags|=128,n.child=e.child,n=Yo.bind(null,e),Ie(r,n),n=null):(t=i.treeContext,J&&(Vt=Ge(r),Gt=n,qt=!0,Wt=null,Ht=!1,null!==t&&(Dt[Et++]=Lt,Dt[Et++]=At,Dt[Et++]=zt,Lt=t.id,At=t.overflow,zt=n)),(n=Qa(n,n.pendingProps.children)).flags|=4096);return n}return l?(a=Ka(e,n,a.children,a.fallback,t),l=n.child,i=e.child.memoizedState,l.memoizedState=null===i?Za(t):{baseLanes:i.baseLanes|t,cachePool:null},l.childLanes=e.childLanes&~t,n.memoizedState=Ya,a):(t=$a(e,n,a.children,t),n.memoizedState=null,t)}return l?(a=Ka(e,n,a.children,a.fallback,t),l=n.child,i=e.child.memoizedState,l.memoizedState=null===i?Za(t):{baseLanes:i.baseLanes|t,cachePool:null},l.childLanes=e.childLanes&~t,n.memoizedState=Ya,a):(t=$a(e,n,a.children,t),n.memoizedState=null,t)}function Qa(e,n){return(n=rl({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function $a(e,n,t,r){var a=e.child;return e=a.sibling,t=el(a,{mode:"visible",children:t}),0===(1&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(null===(r=n.deletions)?(n.deletions=[e],n.flags|=16):r.push(e)),n.child=t}function Ka(e,n,t,r,a){var i=n.mode,o=(e=e.child).sibling,l={mode:"hidden",children:t};return 0===(1&i)&&n.child!==e?((t=n.child).childLanes=0,t.pendingProps=l,n.deletions=null):(t=el(e,l)).subtreeFlags=14680064&e.subtreeFlags,null!==o?r=el(o,r):(r=tl(r,i,a,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}function ei(e,n,t,r){return null!==r&&er(r),ir(n,e.child,null,t),(e=Qa(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function ni(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),ct(e.return,n,t)}function ti(e,n,t,r,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=a)}function ri(e,n,t){var r=n.pendingProps,a=r.revealOrder,i=r.tail;if(Aa(e,n,r.children,t),0!==(2&(r=hr.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ni(e,t,n);else if(19===e.tag)ni(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(cn(hr,r),0===(1&n.mode))n.memoizedState=null;else switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===gr(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),ti(n,!1,a,t,i);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===gr(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}ti(n,!0,t,null,i);break;case"together":ti(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function ai(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),no|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=el(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=el(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function ii(e,n){switch(Nt(n),n.tag){case 1:return dn(n.type)&&hn(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return pr(),sn(fn),sn(vn),yr(),0!==(65536&(e=n.flags))&&0===(128&e)?(n.flags=-65537&e|128,n):null;case 5:return dr(n),null;case 13:if(sn(hr),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));Kt()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return sn(hr),null;case 4:return pr(),null;case 10:return st(n.type._context),null;case 22:case 23:return Po(),null;default:return null}}var oi=!1,li=!1,si="function"===typeof WeakSet?WeakSet:Set,ci=null;function ui(e,n){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(r){Ho(e,n,r)}else t.current=null}function vi(e,n,t){try{t()}catch(r){Ho(e,n,r)}}var fi=!1;function pi(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var i=a.destroy;a.destroy=void 0,void 0!==i&&vi(n,t,i)}a=a.next}while(a!==r)}}function mi(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function di(e){var n=e.ref;if(null!==n){var t=e.stateNode;if(5===e.tag)e=D(t);else e=t;"function"===typeof n?n(e):n.current=e}}function hi(e,n,t){if(Hn&&"function"===typeof Hn.onCommitFiberUnmount)try{Hn.onCommitFiberUnmount(qn,n)}catch(o){}switch(n.tag){case 0:case 11:case 14:case 15:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var a=r,i=a.destroy;a=a.tag,void 0!==i&&(0!==(2&a)||0!==(4&a))&&vi(n,t,i),r=r.next}while(r!==e)}break;case 1:if(ui(n,t),"function"===typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(o){Ho(n,t,o)}break;case 5:ui(n,t);break;case 4:Y?Ui(e,n,t):Z&&Z&&(n=n.stateNode.containerInfo,t=ke(n),Re(n,t))}}function gi(e,n,t){for(var r=n;;)if(hi(e,r,t),null===r.child||Y&&4===r.tag){if(r===n)break;for(;null===r.sibling;){if(null===r.return||r.return===n)return;r=r.return}r.sibling.return=r.return,r=r.sibling}else r.child.return=r,r=r.child}function xi(e){var n=e.alternate;null!==n&&(e.alternate=null,xi(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(n=e.stateNode)&&ee(n)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function yi(e){return 5===e.tag||3===e.tag||4===e.tag}function bi(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||yi(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function _i(e){if(Y){e:{for(var n=e.return;null!==n;){if(yi(n))break e;n=n.return}throw Error(o(160))}var t=n;switch(t.tag){case 5:n=t.stateNode,32&t.flags&&(be(n),t.flags&=-33),Si(e,t=bi(e),n);break;case 3:case 4:n=t.stateNode.containerInfo,wi(e,t=bi(e),n);break;default:throw Error(o(161))}}}function wi(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?ge(t,e,n):fe(t,e);else if(4!==r&&null!==(e=e.child))for(wi(e,n,t),e=e.sibling;null!==e;)wi(e,n,t),e=e.sibling}function Si(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?he(t,e,n):ve(t,e);else if(4!==r&&null!==(e=e.child))for(Si(e,n,t),e=e.sibling;null!==e;)Si(e,n,t),e=e.sibling}function Ui(e,n,t){for(var r,a,i=n,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(o(160));switch(r=l.stateNode,l.tag){case 5:a=!1;break e;case 3:case 4:r=r.containerInfo,a=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag)gi(e,i,t),a?ye(r,i.stateNode):xe(r,i.stateNode);else if(18===i.tag)a?Je(r,i.stateNode):Ze(r,i.stateNode);else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,a=!0,i.child.return=i,i=i.child;continue}}else if(hi(e,i,t),null!==i.child){i.child.return=i,i=i.child;continue}if(i===n)break;for(;null===i.sibling;){if(null===i.return||i.return===n)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function Mi(e,n){if(Y){switch(n.tag){case 0:case 11:case 14:case 15:return pi(3,n,n.return),mi(3,n),void pi(5,n,n.return);case 1:case 12:case 17:return;case 5:var t=n.stateNode;if(null!=t){var r=n.memoizedProps;e=null!==e?e.memoizedProps:r;var a=n.type,i=n.updateQueue;n.updateQueue=null,null!==i&&de(t,i,a,e,r,n)}return;case 6:if(null===n.stateNode)throw Error(o(162));return t=n.memoizedProps,void pe(n.stateNode,null!==e?e.memoizedProps:t,t);case 3:return void(J&&null!==e&&e.memoizedState.isDehydrated&&Xe(n.stateNode.containerInfo));case 13:case 19:return void ji(n)}throw Error(o(163))}switch(n.tag){case 0:case 11:case 14:case 15:return pi(3,n,n.return),mi(3,n),void pi(5,n,n.return);case 12:case 22:case 23:return;case 13:case 19:return void ji(n);case 3:J&&null!==e&&e.memoizedState.isDehydrated&&Xe(n.stateNode.containerInfo)}e:if(Z){switch(n.tag){case 1:case 5:case 6:break e;case 3:case 4:n=n.stateNode,Re(n.containerInfo,n.pendingChildren);break e}throw Error(o(163))}}function ji(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new si),n.forEach((function(n){var r=Zo.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function ki(e,n,t){ci=e,Ti(e,n,t)}function Ti(e,n,t){for(var r=0!==(1&e.mode);null!==ci;){var a=ci,i=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||oi;if(!o){var l=a.alternate,s=null!==l&&null!==l.memoizedState||li;l=oi;var c=li;if(oi=o,(li=s)&&!c)for(ci=a;null!==ci;)s=(o=ci).child,22===o.tag&&null!==o.memoizedState?Fi(a):null!==s?(s.return=o,ci=s):Fi(a);for(;null!==i;)ci=i,Ti(i,n,t),i=i.sibling;ci=a,oi=l,li=c}Ci(e)}else 0!==(8772&a.subtreeFlags)&&null!==i?(i.return=a,ci=i):Ci(e)}}function Ci(e){for(;null!==ci;){var n=ci;if(0!==(8772&n.flags)){var t=n.alternate;try{if(0!==(8772&n.flags))switch(n.tag){case 0:case 11:case 15:li||mi(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!li)if(null===t)r.componentDidMount();else{var a=n.elementType===n.type?t.memoizedProps:nt(n.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;null!==i&&_t(n,i,r);break;case 3:var l=n.updateQueue;if(null!==l){if(t=null,null!==n.child)switch(n.child.tag){case 5:t=D(n.child.stateNode);break;case 1:t=n.child.stateNode}_t(n,l,t)}break;case 5:var s=n.stateNode;null===t&&4&n.flags&&me(s,n.type,n.memoizedProps,n);break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(J&&null===n.memoizedState){var c=n.alternate;if(null!==c){var u=c.memoizedState;if(null!==u){var v=u.dehydrated;null!==v&&Ye(v)}}}break;default:throw Error(o(163))}li||512&n.flags&&di(n)}catch(f){Ho(n,n.return,f)}}if(n===e){ci=null;break}if(null!==(t=n.sibling)){t.return=n.return,ci=t;break}ci=n.return}}function Ri(e){for(;null!==ci;){var n=ci;if(n===e){ci=null;break}var t=n.sibling;if(null!==t){t.return=n.return,ci=t;break}ci=n.return}}function Fi(e){for(;null!==ci;){var n=ci;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{mi(4,n)}catch(s){Ho(n,t,s)}break;case 1:var r=n.stateNode;if("function"===typeof r.componentDidMount){var a=n.return;try{r.componentDidMount()}catch(s){Ho(n,a,s)}}var i=n.return;try{di(n)}catch(s){Ho(n,i,s)}break;case 5:var o=n.return;try{di(n)}catch(s){Ho(n,o,s)}}}catch(s){Ho(n,n.return,s)}if(n===e){ci=null;break}var l=n.sibling;if(null!==l){l.return=n.return,ci=l;break}ci=n.return}}var Pi=0,Di=1,Ei=2,zi=3,Li=4;if("function"===typeof Symbol&&Symbol.for){var Ai=Symbol.for;Pi=Ai("selector.component"),Di=Ai("selector.has_pseudo_class"),Ei=Ai("selector.role"),zi=Ai("selector.test_id"),Li=Ai("selector.text")}function Ii(e){var n=Q(e);if(null!=n){if("string"!==typeof n.memoizedProps["data-testname"])throw Error(o(364));return n}if(null===(e=ae(e)))throw Error(o(362));return e.stateNode.current}function Oi(e,n){switch(n.$$typeof){case Pi:if(e.type===n.value)return!0;break;case Di:e:{n=n.value,e=[e,0];for(var t=0;t<e.length;){var r=e[t++],a=e[t++],i=n[a];if(5!==r.tag||!le(r)){for(;null!=i&&Oi(r,i);)i=n[++a];if(a===n.length){n=!0;break e}for(r=r.child;null!==r;)e.push(r,a),r=r.sibling}}n=!1}return n;case Ei:if(5===e.tag&&se(e.stateNode,n.value))return!0;break;case Li:if((5===e.tag||6===e.tag)&&(null!==(e=oe(e))&&0<=e.indexOf(n.value)))return!0;break;case zi:if(5===e.tag&&("string"===typeof(e=e.memoizedProps["data-testname"])&&e.toLowerCase()===n.value.toLowerCase()))return!0;break;default:throw Error(o(365))}return!1}function Bi(e){switch(e.$$typeof){case Pi:return"<"+(S(e.value)||"Unknown")+">";case Di:return":has("+(Bi(e)||"")+")";case Ei:return'[role="'+e.value+'"]';case Li:return'"'+e.value+'"';case zi:return'[data-testname="'+e.value+'"]';default:throw Error(o(365))}}function Ni(e,n){var t=[];e=[e,0];for(var r=0;r<e.length;){var a=e[r++],i=e[r++],o=n[i];if(5!==a.tag||!le(a)){for(;null!=o&&Oi(a,o);)o=n[++i];if(i===n.length)t.push(a);else for(a=a.child;null!==a;)e.push(a,i),a=a.sibling}}return t}function Gi(e,n){if(!re)throw Error(o(363));e=Ni(e=Ii(e),n),n=[],e=Array.from(e);for(var t=0;t<e.length;){var r=e[t++];if(5===r.tag)le(r)||n.push(r.stateNode);else for(r=r.child;null!==r;)e.push(r),r=r.sibling}return n}var Vi=Math.ceil,qi=l.ReactCurrentDispatcher,Hi=l.ReactCurrentOwner,Wi=l.ReactCurrentBatchConfig,Xi=0,Yi=null,Zi=null,Ji=0,Qi=0,$i=ln(0),Ki=0,eo=null,no=0,to=0,ro=0,ao=null,io=null,oo=0,lo=1/0;function so(){lo=On()+500}var co,uo=!1,vo=null,fo=null,po=!1,mo=null,ho=0,go=0,xo=null,yo=-1,bo=0;function _o(){return 0!==(6&Xi)?On():-1!==yo?yo:yo=On()}function wo(e){return 0===(1&e.mode)?1:0!==(2&Xi)&&0!==Ji?Ji&-Ji:null!==$n.transition?(0===bo&&(e=Un,0===(4194240&(Un<<=1))&&(Un=64),bo=e),bo):0!==(e=Dn)?e:K()}function So(e,n,t){if(50<go)throw go=0,xo=null,Error(o(185));var r=Uo(e,n);return null===r?null:(Fn(r,n,t),0!==(2&Xi)&&r===Yi||(r===Yi&&(0===(2&Xi)&&(to|=n),4===Ki&&Co(r,Ji)),Mo(r,t),1===n&&0===Xi&&0===(1&e.mode)&&(so(),Yn&&Qn())),r)}function Uo(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function Mo(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-_n(i),l=1<<o,s=a[o];-1===s?0!==(l&t)&&0===(l&r)||(a[o]=Tn(l,n)):s<=n&&(e.expiredLanes|=l),i&=~l}}(e,n);var r=kn(e,e===Yi?Ji:0);if(0===r)null!==t&&Ln(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ln(t),1===n)0===e.tag?function(e){Yn=!0,Jn(e)}(Ro.bind(null,e)):Jn(Ro.bind(null,e)),ne?te((function(){0===Xi&&Qn()})):zn(Bn,Qn),t=null;else{switch(En(r)){case 1:t=Bn;break;case 4:t=Nn;break;case 16:default:t=Gn;break;case 536870912:t=Vn}t=Jo(t,jo.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function jo(e,n){if(yo=-1,bo=0,0!==(6&Xi))throw Error(o(327));var t=e.callbackNode;if(Vo()&&e.callbackNode!==t)return null;var r=kn(e,e===Yi?Ji:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||n)n=Ao(e,r);else{n=r;var a=Xi;Xi|=2;var i=zo();for(Yi===e&&Ji===n||(so(),Do(e,n));;)try{Oo();break}catch(s){Eo(e,s)}ot(),qi.current=i,Xi=a,null!==Zi?n=0:(Yi=null,Ji=0,n=Ki)}if(0!==n){if(2===n&&(0!==(a=Cn(e))&&(r=a,n=ko(e,a))),1===n)throw t=eo,Do(e,0),Co(e,r),Mo(e,On()),t;if(6===n)Co(e,r);else{if(a=e.current.alternate,0===(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],i=a.getSnapshot;a=a.value;try{if(!Wn(i(),a))return!1}catch(l){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(a)&&(2===(n=Ao(e,r))&&(0!==(i=Cn(e))&&(r=i,n=ko(e,i))),1===n))throw t=eo,Do(e,0),Co(e,r),Mo(e,On()),t;switch(e.finishedWork=a,e.finishedLanes=r,n){case 0:case 1:throw Error(o(345));case 2:case 5:Go(e,io);break;case 3:if(Co(e,r),(130023424&r)===r&&10<(n=oo+500-On())){if(0!==kn(e,0))break;if(((a=e.suspendedLanes)&r)!==r){_o(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=q(Go.bind(null,e,io),n);break}Go(e,io);break;case 4:if(Co(e,r),(4194240&r)===r)break;for(n=e.eventTimes,a=-1;0<r;){var l=31-_n(r);i=1<<l,(l=n[l])>a&&(a=l),r&=~i}if(r=a,10<(r=(120>(r=On()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Vi(r/1960))-r)){e.timeoutHandle=q(Go.bind(null,e,io),r);break}Go(e,io);break;default:throw Error(o(329))}}}return Mo(e,On()),e.callbackNode===t?jo.bind(null,e):null}function ko(e,n){var t=ao;return e.current.memoizedState.isDehydrated&&(Do(e,n).flags|=256),2!==(e=Ao(e,n))&&(n=io,io=t,null!==n&&To(n)),e}function To(e){null===io?io=e:io.push.apply(io,e)}function Co(e,n){for(n&=~ro,n&=~to,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-_n(n),r=1<<t;e[t]=-1,n&=~r}}function Ro(e){if(0!==(6&Xi))throw Error(o(327));Vo();var n=kn(e,0);if(0===(1&n))return Mo(e,On()),null;var t=Ao(e,n);if(0!==e.tag&&2===t){var r=Cn(e);0!==r&&(n=r,t=ko(e,r))}if(1===t)throw t=eo,Do(e,0),Co(e,n),Mo(e,On()),t;if(6===t)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,Go(e,io),Mo(e,On()),null}function Fo(e){null!==mo&&0===mo.tag&&0===(6&Xi)&&Vo();var n=Xi;Xi|=1;var t=Wi.transition,r=Dn;try{if(Wi.transition=null,Dn=1,e)return e()}finally{Dn=r,Wi.transition=t,0===(6&(Xi=n))&&Qn()}}function Po(){Qi=$i.current,sn($i)}function Do(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(t!==W&&(e.timeoutHandle=W,H(t)),null!==Zi)for(t=Zi.return;null!==t;){var r=t;switch(Nt(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&hn();break;case 3:pr(),sn(fn),sn(vn),yr();break;case 5:dr(r);break;case 4:pr();break;case 13:case 19:sn(hr);break;case 10:st(r.type._context);break;case 22:case 23:Po()}t=t.return}if(Yi=e,Zi=e=el(e.current,null),Ji=Qi=n,Ki=0,eo=null,ro=to=no=0,io=ao=null,null!==ft){for(n=0;n<ft.length;n++)if(null!==(r=(t=ft[n]).interleaved)){t.interleaved=null;var a=r.next,i=t.pending;if(null!==i){var o=i.next;i.next=a,r.next=o}t.pending=r}ft=null}return e}function Eo(e,n){for(;;){var t=Zi;try{if(ot(),br.current=pa,jr){for(var r=Sr.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}jr=!1}if(wr=0,Mr=Ur=Sr=null,kr=!1,Tr=0,Hi.current=null,null===t||null===t.return){Ki=1,eo=n,Zi=null;break}e:{var i=e,l=t.return,s=t,c=n;if(n=Ji,s.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var u=c,v=s,f=v.tag;if(0===(1&v.mode)&&(0===f||11===f||15===f)){var p=v.alternate;p?(v.updateQueue=p.updateQueue,v.memoizedState=p.memoizedState,v.lanes=p.lanes):(v.updateQueue=null,v.memoizedState=null)}var m=ka(l);if(null!==m){m.flags&=-257,Ta(m,l,s,0,n),1&m.mode&&ja(i,u,n),c=u;var d=(n=m).updateQueue;if(null===d){var h=new Set;h.add(c),n.updateQueue=h}else d.add(c);break e}if(0===(1&n)){ja(i,u,n),Lo();break e}c=Error(o(426))}else if(qt&&1&s.mode){var g=ka(l);if(null!==g){0===(65536&g.flags)&&(g.flags|=256),Ta(g,l,s,0,n),er(c);break e}}i=c,4!==Ki&&(Ki=2),null===ao?ao=[i]:ao.push(i),c=ga(c,s),s=l;do{switch(s.tag){case 3:s.flags|=65536,n&=-n,s.lanes|=n,yt(s,Ua(0,c,n));break e;case 1:i=c;var x=s.type,y=s.stateNode;if(0===(128&s.flags)&&("function"===typeof x.getDerivedStateFromError||null!==y&&"function"===typeof y.componentDidCatch&&(null===fo||!fo.has(y)))){s.flags|=65536,n&=-n,s.lanes|=n,yt(s,Ma(s,i,n));break e}}s=s.return}while(null!==s)}No(t)}catch(b){n=b,Zi===t&&null!==t&&(Zi=t=t.return);continue}break}}function zo(){var e=qi.current;return qi.current=pa,null===e?pa:e}function Lo(){0!==Ki&&3!==Ki&&2!==Ki||(Ki=4),null===Yi||0===(268435455&no)&&0===(268435455&to)||Co(Yi,Ji)}function Ao(e,n){var t=Xi;Xi|=2;var r=zo();for(Yi===e&&Ji===n||Do(e,n);;)try{Io();break}catch(a){Eo(e,a)}if(ot(),Xi=t,qi.current=r,null!==Zi)throw Error(o(261));return Yi=null,Ji=0,Ki}function Io(){for(;null!==Zi;)Bo(Zi)}function Oo(){for(;null!==Zi&&!An();)Bo(Zi)}function Bo(e){var n=co(e.alternate,e,Qi);e.memoizedProps=e.pendingProps,null===n?No(e):Zi=n,Hi.current=null}function No(e){var n=e;do{var t=n.alternate;if(e=n.return,0===(32768&n.flags)){if(null!==(t=Ea(t,n,Qi)))return void(Zi=t)}else{if(null!==(t=ii(t,n)))return t.flags&=32767,void(Zi=t);if(null===e)return Ki=6,void(Zi=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Zi=n);Zi=n=e}while(null!==n);0===Ki&&(Ki=5)}function Go(e,n){var t=Dn,r=Wi.transition;try{Wi.transition=null,Dn=1,function(e,n,t){do{Vo()}while(null!==mo);if(0!==(6&Xi))throw Error(o(327));var r=e.finishedWork,a=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=r.lanes|r.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var a=31-_n(t),i=1<<a;n[a]=0,r[a]=-1,e[a]=-1,t&=~i}}(e,i),e===Yi&&(Zi=Yi=null,Ji=0),0===(2064&r.subtreeFlags)&&0===(2064&r.flags)||po||(po=!0,Jo(Gn,(function(){return Vo(),null}))),i=0!==(15990&r.flags),0!==(15990&r.subtreeFlags)||i){i=Wi.transition,Wi.transition=null;var l=Dn;Dn=1;var s=Xi;Xi|=4,Hi.current=null,function(e,n){for(L(e.containerInfo),ci=n;null!==ci;)if(n=(e=ci).child,0!==(1028&e.subtreeFlags)&&null!==n)n.return=e,ci=n;else for(;null!==ci;){e=ci;try{var t=e.alternate;if(0!==(1024&e.flags))switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==t){var r=t.memoizedProps,a=t.memoizedState,i=e.stateNode,l=i.getSnapshotBeforeUpdate(e.elementType===e.type?r:nt(e.type,r),a);i.__reactInternalSnapshotBeforeUpdate=l}break;case 3:Y&&Me(e.stateNode.containerInfo);break;default:throw Error(o(163))}}catch(s){Ho(e,e.return,s)}if(null!==(n=e.sibling)){n.return=e.return,ci=n;break}ci=e.return}t=fi,fi=!1}(e,r),function(e,n){for(ci=n;null!==ci;){var t=(n=ci).deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var i=e;Y?Ui(i,a,n):gi(i,a,n);var o=a.alternate;null!==o&&(o.return=null),a.return=null}catch(_){Ho(a,n,_)}}if(t=n.child,0!==(12854&n.subtreeFlags)&&null!==t)t.return=n,ci=t;else for(;null!==ci;){n=ci;try{var l=n.flags;if(32&l&&Y&&be(n.stateNode),512&l){var s=n.alternate;if(null!==s){var c=s.ref;null!==c&&("function"===typeof c?c(null):c.current=null)}}if(8192&l)switch(n.tag){case 13:if(null!==n.memoizedState){var u=n.alternate;null!==u&&null!==u.memoizedState||(oo=On())}break;case 22:var v=null!==n.memoizedState,f=n.alternate,p=null!==f&&null!==f.memoizedState;if(t=n,Y)e:if(r=t,a=v,i=null,Y)for(var m=r;;){if(5===m.tag){if(null===i){i=m;var d=m.stateNode;a?_e(d):Se(m.stateNode,m.memoizedProps)}}else if(6===m.tag){if(null===i){var h=m.stateNode;a?we(h):Ue(h,m.memoizedProps)}}else if((22!==m.tag&&23!==m.tag||null===m.memoizedState||m===r)&&null!==m.child){m.child.return=m,m=m.child;continue}if(m===r)break;for(;null===m.sibling;){if(null===m.return||m.return===r)break e;i===m&&(i=null),m=m.return}i===m&&(i=null),m.sibling.return=m.return,m=m.sibling}if(v&&!p&&0!==(1&t.mode)){ci=t;for(var g=t.child;null!==g;){for(t=ci=g;null!==ci;){var x=(r=ci).child;switch(r.tag){case 0:case 11:case 14:case 15:pi(4,r,r.return);break;case 1:ui(r,r.return);var y=r.stateNode;if("function"===typeof y.componentWillUnmount){var b=r.return;try{y.props=r.memoizedProps,y.state=r.memoizedState,y.componentWillUnmount()}catch(_){Ho(r,b,_)}}break;case 5:ui(r,r.return);break;case 22:if(null!==r.memoizedState){Ri(t);continue}}null!==x?(x.return=r,ci=x):Ri(t)}g=g.sibling}}}switch(4102&l){case 2:_i(n),n.flags&=-3;break;case 6:_i(n),n.flags&=-3,Mi(n.alternate,n);break;case 4096:n.flags&=-4097;break;case 4100:n.flags&=-4097,Mi(n.alternate,n);break;case 4:Mi(n.alternate,n)}}catch(_){Ho(n,n.return,_)}if(null!==(t=n.sibling)){t.return=n.return,ci=t;break}ci=n.return}}}(e,r),A(e.containerInfo),e.current=r,ki(r,e,a),In(),Xi=s,Dn=l,Wi.transition=i}else e.current=r;if(po&&(po=!1,mo=e,ho=a),0===(i=e.pendingLanes)&&(fo=null),function(e){if(Hn&&"function"===typeof Hn.onCommitFiberRoot)try{Hn.onCommitFiberRoot(qn,e,void 0,128===(128&e.current.flags))}catch(n){}}(r.stateNode),Mo(e,On()),null!==n)for(t=e.onRecoverableError,r=0;r<n.length;r++)t(n[r]);if(uo)throw uo=!1,e=vo,vo=null,e;0!==(1&ho)&&0!==e.tag&&Vo(),0!==(1&(i=e.pendingLanes))?e===xo?go++:(go=0,xo=e):go=0,Qn()}(e,n,t)}finally{Wi.transition=r,Dn=t}return null}function Vo(){if(null!==mo){var e=En(ho),n=Wi.transition,t=Dn;try{if(Wi.transition=null,Dn=16>e?16:e,null===mo)var r=!1;else{if(e=mo,mo=null,ho=0,0!==(6&Xi))throw Error(o(331));var a=Xi;for(Xi|=4,ci=e.current;null!==ci;){var i=ci,l=i.child;if(0!==(16&ci.flags)){var s=i.deletions;if(null!==s){for(var c=0;c<s.length;c++){var u=s[c];for(ci=u;null!==ci;){var v=ci;switch(v.tag){case 0:case 11:case 15:pi(8,v,i)}var f=v.child;if(null!==f)f.return=v,ci=f;else for(;null!==ci;){var p=(v=ci).sibling,m=v.return;if(xi(v),v===u){ci=null;break}if(null!==p){p.return=m,ci=p;break}ci=m}}}var d=i.alternate;if(null!==d){var h=d.child;if(null!==h){d.child=null;do{var g=h.sibling;h.sibling=null,h=g}while(null!==h)}}ci=i}}if(0!==(2064&i.subtreeFlags)&&null!==l)l.return=i,ci=l;else e:for(;null!==ci;){if(0!==(2048&(i=ci).flags))switch(i.tag){case 0:case 11:case 15:pi(9,i,i.return)}var x=i.sibling;if(null!==x){x.return=i.return,ci=x;break e}ci=i.return}}var y=e.current;for(ci=y;null!==ci;){var b=(l=ci).child;if(0!==(2064&l.subtreeFlags)&&null!==b)b.return=l,ci=b;else e:for(l=y;null!==ci;){if(0!==(2048&(s=ci).flags))try{switch(s.tag){case 0:case 11:case 15:mi(9,s)}}catch(w){Ho(s,s.return,w)}if(s===l){ci=null;break e}var _=s.sibling;if(null!==_){_.return=s.return,ci=_;break e}ci=s.return}}if(Xi=a,Qn(),Hn&&"function"===typeof Hn.onPostCommitFiberRoot)try{Hn.onPostCommitFiberRoot(qn,e)}catch(w){}r=!0}return r}finally{Dn=t,Wi.transition=n}}return!1}function qo(e,n,t){gt(e,n=Ua(0,n=ga(t,n),1)),n=_o(),null!==(e=Uo(e,1))&&(Fn(e,1,n),Mo(e,n))}function Ho(e,n,t){if(3===e.tag)qo(e,e,t);else for(;null!==n;){if(3===n.tag){qo(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===fo||!fo.has(r))){gt(n,e=Ma(n,e=ga(t,e),1)),e=_o(),null!==(n=Uo(n,1))&&(Fn(n,1,e),Mo(n,e));break}}n=n.return}}function Wo(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=_o(),e.pingedLanes|=e.suspendedLanes&t,Yi===e&&(Ji&t)===t&&(4===Ki||3===Ki&&(130023424&Ji)===Ji&&500>On()-oo?Do(e,0):ro|=t),Mo(e,n)}function Xo(e,n){0===n&&(0===(1&e.mode)?n=1:(n=Mn,0===(130023424&(Mn<<=1))&&(Mn=4194304)));var t=_o();null!==(e=Uo(e,n))&&(Fn(e,n,t),Mo(e,t))}function Yo(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),Xo(e,t)}function Zo(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(n),Xo(e,t)}function Jo(e,n){return zn(e,n)}function Qo(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function $o(e,n,t,r){return new Qo(e,n,t,r)}function Ko(e){return!(!(e=e.prototype)||!e.isReactComponent)}function el(e,n){var t=e.alternate;return null===t?((t=$o(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function nl(e,n,t,r,a,i){var l=2;if(r=e,"function"===typeof e)Ko(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case u:return tl(t.children,a,i,n);case v:l=8,a|=8;break;case f:return(e=$o(12,t,n,2|a)).elementType=f,e.lanes=i,e;case h:return(e=$o(13,t,n,a)).elementType=h,e.lanes=i,e;case g:return(e=$o(19,t,n,a)).elementType=g,e.lanes=i,e;case b:return rl(t,a,i,n);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case p:l=10;break e;case m:l=9;break e;case d:l=11;break e;case x:l=14;break e;case y:l=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=$o(l,t,n,a)).elementType=e,n.type=r,n.lanes=i,n}function tl(e,n,t,r){return(e=$o(7,e,r,n)).lanes=t,e}function rl(e,n,t,r){return(e=$o(22,e,r,n)).elementType=b,e.lanes=t,e.stateNode={},e}function al(e,n,t){return(e=$o(6,e,null,n)).lanes=t,e}function il(e,n,t){return(n=$o(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function ol(e,n,t,r,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=W,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Rn(0),this.expirationTimes=Rn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Rn(0),this.identifierPrefix=r,this.onRecoverableError=a,J&&(this.mutableSourceEagerHydrationData=null)}function ll(e,n,t,r,a,i,o,l,s){return e=new ol(e,n,t,l,s),1===n?(n=1,!0===i&&(n|=8)):n=0,i=$o(3,null,null,n),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null},mt(i),e}function sl(e){if(!e)return un;e:{if(M(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(dn(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(o(171))}if(1===e.tag){var t=e.type;if(dn(t))return xn(e,t,n)}return n}function cl(e){var n=e._reactInternals;if(void 0===n){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=T(n))?null:e.stateNode}function ul(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function vl(e,n){ul(e,n),(e=e.alternate)&&ul(e,n)}function fl(e){return null===(e=T(e))?null:e.stateNode}function pl(){return null}return co=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||fn.current)La=!0;else{if(0===(e.lanes&t)&&0===(128&n.flags))return La=!1,function(e,n,t){switch(n.tag){case 3:Wa(n),Kt();break;case 5:mr(n);break;case 1:dn(n.type)&&yn(n);break;case 4:fr(n,n.stateNode.containerInfo);break;case 10:lt(0,n.type._context,n.memoizedProps.value);break;case 13:var r=n.memoizedState;if(null!==r)return null!==r.dehydrated?(cn(hr,1&hr.current),n.flags|=128,null):0!==(t&n.child.childLanes)?Ja(e,n,t):(cn(hr,1&hr.current),null!==(e=ai(e,n,t))?e.sibling:null);cn(hr,1&hr.current);break;case 19:if(r=0!==(t&n.childLanes),0!==(128&e.flags)){if(r)return ri(e,n,t);n.flags|=128}var a=n.memoizedState;if(null!==a&&(a.rendering=null,a.tail=null,a.lastEffect=null),cn(hr,hr.current),r)break;return null;case 22:case 23:return n.lanes=0,Na(e,n,t)}return ai(e,n,t)}(e,n,t);La=0!==(131072&e.flags)}else La=!1,qt&&0!==(1048576&n.flags)&&Ot(n,Pt,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps;var a=mn(n,vn.current);ut(n,t),a=Pr(null,n,r,e,a,t);var i=Dr();return n.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,dn(r)?(i=!0,yn(n)):i=!1,n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,mt(n),a.updater=Ut,n.stateNode=a,a._reactInternals=n,Tt(n,r,e,t),n=Ha(null,n,r,!0,i,t)):(n.tag=0,qt&&i&&Bt(n),Aa(null,n,a,t),n=n.child),n;case 16:r=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,r=(a=r._init)(r._payload),n.type=r,a=n.tag=function(e){if("function"===typeof e)return Ko(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===d)return 11;if(e===x)return 14}return 2}(r),e=nt(r,e),a){case 0:n=Va(null,n,r,e,t);break e;case 1:n=qa(null,n,r,e,t);break e;case 11:n=Ia(null,n,r,e,t);break e;case 14:n=Oa(null,n,r,nt(r.type,e),t);break e}throw Error(o(306,r,""))}return n;case 0:return r=n.type,a=n.pendingProps,Va(e,n,r,a=n.elementType===r?a:nt(r,a),t);case 1:return r=n.type,a=n.pendingProps,qa(e,n,r,a=n.elementType===r?a:nt(r,a),t);case 3:e:{if(Wa(n),null===e)throw Error(o(387));r=n.pendingProps,a=(i=n.memoizedState).element,dt(e,n),bt(n,r,null,t);var l=n.memoizedState;if(r=l.element,J&&i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:l.cache,transitions:l.transitions},n.updateQueue.baseState=i,n.memoizedState=i,256&n.flags){n=Xa(e,n,r,t,a=Error(o(423)));break e}if(r!==a){n=Xa(e,n,r,t,a=Error(o(424)));break e}for(J&&(Vt=Ne(n.stateNode.containerInfo),Gt=n,qt=!0,Wt=null,Ht=!1),t=or(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(Kt(),r===a){n=ai(e,n,t);break e}Aa(e,n,r,t)}n=n.child}return n;case 5:return mr(n),null===e&&Jt(n),r=n.type,a=n.pendingProps,i=null!==e?e.memoizedProps:null,l=a.children,G(r,a)?l=null:null!==i&&G(r,i)&&(n.flags|=32),Ga(e,n),Aa(e,n,l,t),n.child;case 6:return null===e&&Jt(n),null;case 13:return Ja(e,n,t);case 4:return fr(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=ir(n,null,r,t):Aa(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,Ia(e,n,r,a=n.elementType===r?a:nt(r,a),t);case 7:return Aa(e,n,n.pendingProps,t),n.child;case 8:case 12:return Aa(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,a=n.pendingProps,i=n.memoizedProps,lt(0,r,l=a.value),null!==i)if(Wn(i.value,l)){if(i.children===a.children&&!fn.current){n=ai(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var s=i.dependencies;if(null!==s){l=i.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=ht(-1,t&-t)).tag=2;var u=i.updateQueue;if(null!==u){var v=(u=u.shared).pending;null===v?c.next=c:(c.next=v.next,v.next=c),u.pending=c}}i.lanes|=t,null!==(c=i.alternate)&&(c.lanes|=t),ct(i.return,t,n),s.lanes|=t;break}c=c.next}}else if(10===i.tag)l=i.type===n.type?null:i.child;else if(18===i.tag){if(null===(l=i.return))throw Error(o(341));l.lanes|=t,null!==(s=l.alternate)&&(s.lanes|=t),ct(l,t,n),l=i.sibling}else l=i.child;if(null!==l)l.return=i;else for(l=i;null!==l;){if(l===n){l=null;break}if(null!==(i=l.sibling)){i.return=l.return,l=i;break}l=l.return}i=l}Aa(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=n.pendingProps.children,ut(n,t),r=r(a=vt(a)),n.flags|=1,Aa(e,n,r,t),n.child;case 14:return a=nt(r=n.type,n.pendingProps),Oa(e,n,r,a=nt(r.type,a),t);case 15:return Ba(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:nt(r,a),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,dn(r)?(e=!0,yn(n)):e=!1,ut(n,t),jt(n,r,a),Tt(n,r,a,t),Ha(null,n,r,!0,e,t);case 19:return ri(e,n,t);case 22:return Na(e,n,t)}throw Error(o(156,n.tag))},n.attemptContinuousHydration=function(e){13===e.tag&&(So(e,134217728,_o()),vl(e,134217728))},n.attemptHydrationAtCurrentPriority=function(e){if(13===e.tag){var n=_o(),t=wo(e);So(e,t,n),vl(e,t)}},n.attemptSynchronousHydration=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=jn(n.pendingLanes);0!==t&&(Pn(n,1|t),Mo(n,On()),0===(6&Xi)&&(so(),Qn()))}break;case 13:var r=_o();Fo((function(){return So(e,1,r)})),vl(e,1)}},n.batchedUpdates=function(e,n){var t=Xi;Xi|=1;try{return e(n)}finally{0===(Xi=t)&&(so(),Yn&&Qn())}},n.createComponentSelector=function(e){return{$$typeof:Pi,value:e}},n.createContainer=function(e,n,t,r,a,i,o){return ll(e,n,!1,null,0,r,0,i,o)},n.createHasPseudoClassSelector=function(e){return{$$typeof:Di,value:e}},n.createHydrationContainer=function(e,n,t,r,a,i,o,l,s){return(e=ll(t,r,!0,e,0,i,0,l,s)).context=sl(null),t=e.current,(i=ht(r=_o(),a=wo(t))).callback=void 0!==n&&null!==n?n:null,gt(t,i),e.current.lanes=a,Fn(e,a,r),Mo(e,r),e},n.createPortal=function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:c,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}},n.createRoleSelector=function(e){return{$$typeof:Ei,value:e}},n.createTestNameSelector=function(e){return{$$typeof:zi,value:e}},n.createTextSelector=function(e){return{$$typeof:Li,value:e}},n.deferredUpdates=function(e){var n=Dn,t=Wi.transition;try{return Wi.transition=null,Dn=16,e()}finally{Dn=n,Wi.transition=t}},n.discreteUpdates=function(e,n,t,r,a){var i=Dn,o=Wi.transition;try{return Wi.transition=null,Dn=1,e(n,t,r,a)}finally{Dn=i,Wi.transition=o,0===Xi&&so()}},n.findAllNodes=Gi,n.findBoundingRects=function(e,n){if(!re)throw Error(o(363));n=Gi(e,n),e=[];for(var t=0;t<n.length;t++)e.push(ie(n[t]));for(n=e.length-1;0<n;n--)for(var r=(t=e[n]).x,a=r+t.width,i=t.y,l=i+t.height,s=n-1;0<=s;s--)if(n!==s){var c=e[s],u=c.x,v=u+c.width,f=c.y,p=f+c.height;if(r>=u&&i>=f&&a<=v&&l<=p){e.splice(n,1);break}if(!(r!==u||t.width!==c.width||p<i||f>l)){f>i&&(c.height+=f-i,c.y=i),p<l&&(c.height=l-f),e.splice(n,1);break}if(!(i!==f||t.height!==c.height||v<r||u>a)){u>r&&(c.width+=u-r,c.x=r),v<a&&(c.width=a-u),e.splice(n,1);break}}return e},n.findHostInstance=cl,n.findHostInstanceWithNoPortals=function(e){return null===(e=null!==(e=k(e))?R(e):null)?null:e.stateNode},n.findHostInstanceWithWarning=function(e){return cl(e)},n.flushControlled=function(e){var n=Xi;Xi|=1;var t=Wi.transition,r=Dn;try{Wi.transition=null,Dn=1,e()}finally{Dn=r,Wi.transition=t,0===(Xi=n)&&(so(),Qn())}},n.flushPassiveEffects=Vo,n.flushSync=Fo,n.focusWithin=function(e,n){if(!re)throw Error(o(363));for(n=Ni(e=Ii(e),n),n=Array.from(n),e=0;e<n.length;){var t=n[e++];if(!le(t)){if(5===t.tag&&ce(t.stateNode))return!0;for(t=t.child;null!==t;)n.push(t),t=t.sibling}}return!1},n.getCurrentUpdatePriority=function(){return Dn},n.getFindAllNodesFailureDescription=function(e,n){if(!re)throw Error(o(363));var t=0,r=[];e=[Ii(e),0];for(var a=0;a<e.length;){var i=e[a++],l=e[a++],s=n[l];if((5!==i.tag||!le(i))&&(Oi(i,s)&&(r.push(Bi(s)),++l>t&&(t=l)),l<n.length))for(i=i.child;null!==i;)e.push(i,l),i=i.sibling}if(t<n.length){for(e=[];t<n.length;t++)e.push(Bi(n[t]));return"findAllNodes was able to match part of the selector:\n  "+r.join(" > ")+"\n\nNo matching component was found for:\n  "+e.join(" > ")}return null},n.getPublicRootInstance=function(e){return(e=e.current).child?5===e.child.tag?D(e.child.stateNode):e.child.stateNode:null},n.injectIntoDevTools=function(e){if(e={bundleType:e.bundleType,version:e.version,rendererPackageName:e.rendererPackageName,rendererConfig:e.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:l.ReactCurrentDispatcher,findHostInstanceByFiber:fl,findFiberByHostInstance:e.findFiberByHostInstance||pl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},"undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)e=!1;else{var n=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(n.isDisabled||!n.supportsFiber)e=!0;else{try{qn=n.inject(e),Hn=n}catch(t){}e=!!n.checkDCE}}return e},n.isAlreadyRendering=function(){return!1},n.observeVisibleRects=function(e,n,t,r){if(!re)throw Error(o(363));e=Gi(e,n);var a=ue(e,t,r).disconnect;return{disconnect:function(){a()}}},n.registerMutableSourceForHydration=function(e,n){var t=n._getVersion;t=t(n._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[n,t]:e.mutableSourceEagerHydrationData.push(n,t)},n.runWithPriority=function(e,n){var t=Dn;try{return Dn=e,n()}finally{Dn=t}},n.shouldError=function(){return null},n.shouldSuspend=function(){return!1},n.updateContainer=function(e,n,t,r){var a=n.current,i=_o(),o=wo(a);return t=sl(t),null===n.context?n.context=t:n.pendingContext=t,(n=ht(i,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),gt(a,n),null!==(e=So(a,o,i))&&xt(e,a,o),o},n}},585:function(e,n,t){"use strict";e.exports=t(976)},258:function(e,n,t){"use strict";e.exports=t(721)},783:function(e,n){"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<i(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var l=2*(r+1)-1,s=e[l],c=l+1,u=e[c];if(0>i(s,t))c<a&&0>i(u,s)?(e[r]=u,e[c]=t,r=c):(e[r]=s,e[l]=t,r=l);else{if(!(c<a&&0>i(u,t)))break e;e[r]=u,e[c]=t,r=c}}}return n}function i(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var l=Date,s=l.now();n.unstable_now=function(){return l.now()-s}}var c=[],u=[],v=1,f=null,p=3,m=!1,d=!1,h=!1,g="function"===typeof setTimeout?setTimeout:null,x="function"===typeof clearTimeout?clearTimeout:null,y="undefined"!==typeof setImmediate?setImmediate:null;function b(e){for(var n=r(u);null!==n;){if(null===n.callback)a(u);else{if(!(n.startTime<=e))break;a(u),n.sortIndex=n.expirationTime,t(c,n)}n=r(u)}}function _(e){if(h=!1,b(e),!d)if(null!==r(c))d=!0,D(w);else{var n=r(u);null!==n&&E(_,n.startTime-e)}}function w(e,t){d=!1,h&&(h=!1,x(j),j=-1),m=!0;var i=p;try{for(b(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!C());){var o=f.callback;if("function"===typeof o){f.callback=null,p=f.priorityLevel;var l=o(f.expirationTime<=t);t=n.unstable_now(),"function"===typeof l?f.callback=l:f===r(c)&&a(c),b(t)}else a(c);f=r(c)}if(null!==f)var s=!0;else{var v=r(u);null!==v&&E(_,v.startTime-t),s=!1}return s}finally{f=null,p=i,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,U=!1,M=null,j=-1,k=5,T=-1;function C(){return!(n.unstable_now()-T<k)}function R(){if(null!==M){var e=n.unstable_now();T=e;var t=!0;try{t=M(!0,e)}finally{t?S():(U=!1,M=null)}}else U=!1}if("function"===typeof y)S=function(){y(R)};else if("undefined"!==typeof MessageChannel){var F=new MessageChannel,P=F.port2;F.port1.onmessage=R,S=function(){P.postMessage(null)}}else S=function(){g(R,0)};function D(e){M=e,U||(U=!0,S())}function E(e,t){j=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){d||m||(d=!0,D(w))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,a,i){var o=n.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?o+i:o:i=o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:v++,callback:a,priorityLevel:e,startTime:i,expirationTime:l=i+l,sortIndex:-1},i>o?(e.sortIndex=i,t(u,e),null===r(c)&&e===r(u)&&(h?(x(j),j=-1):h=!0,E(_,i-o))):(e.sortIndex=l,t(c,e),d||m||(d=!0,D(w))),e},n.unstable_shouldYield=C,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},100:function(e,n,t){"use strict";e.exports=t(783)},374:function(e,n,t){"use strict";var r=t(791),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,l=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var r,i={},c=null,u=null;for(r in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(u=n.ref),n)o.call(n,r)&&!s.hasOwnProperty(r)&&(i[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===i[r]&&(i[r]=n[r]);return{$$typeof:a,type:e,key:c,ref:u,props:i,_owner:l.current}}n.Fragment=i,n.jsx=c,n.jsxs=c},117:function(e,n){"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),s=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),v=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},d=Object.assign,h={};function g(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||m}function x(){}function y(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=g.prototype;var b=y.prototype=new x;b.constructor=y,d(b,g.prototype),b.isPureReactComponent=!0;var _=Array.isArray,w=Object.prototype.hasOwnProperty,S={current:null},U={key:!0,ref:!0,__self:!0,__source:!0};function M(e,n,r){var a,i={},o=null,l=null;if(null!=n)for(a in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(o=""+n.key),n)w.call(n,a)&&!U.hasOwnProperty(a)&&(i[a]=n[a]);var s=arguments.length-2;if(1===s)i.children=r;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];i.children=c}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===i[a]&&(i[a]=s[a]);return{$$typeof:t,type:e,key:o,ref:l,props:i,_owner:S.current}}function j(e){return"object"===typeof e&&null!==e&&e.$$typeof===t}var k=/\/+/g;function T(e,n){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function C(e,n,a,i,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case t:case r:s=!0}}if(s)return o=o(s=e),e=""===i?"."+T(s,0):i,_(o)?(a="",null!=e&&(a=e.replace(k,"$&/")+"/"),C(o,n,a,"",(function(e){return e}))):null!=o&&(j(o)&&(o=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||s&&s.key===o.key?"":(""+o.key).replace(k,"$&/")+"/")+e)),n.push(o)),1;if(s=0,i=""===i?".":i+":",_(e))for(var c=0;c<e.length;c++){var u=i+T(l=e[c],c);s+=C(l,n,a,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),c=0;!(l=e.next()).done;)s+=C(l=l.value,n,a,u=i+T(l,c++),o);else if("object"===l)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return s}function R(e,n,t){if(null==e)return e;var r=[],a=0;return C(e,r,"","",(function(e){return n.call(t,e,a++)})),r}function F(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var P={current:null},D={transition:null},E={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};n.Children={map:R,forEach:function(e,n,t){R(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return R(e,(function(){n++})),n},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!j(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=a,n.Profiler=o,n.PureComponent=y,n.StrictMode=i,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=E,n.cloneElement=function(e,n,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=d({},e.props),i=e.key,o=e.ref,l=e._owner;if(null!=n){if(void 0!==n.ref&&(o=n.ref,l=S.current),void 0!==n.key&&(i=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in n)w.call(n,c)&&!U.hasOwnProperty(c)&&(a[c]=void 0===n[c]&&void 0!==s?s[c]:n[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){s=Array(c);for(var u=0;u<c;u++)s[u]=arguments[u+2];a.children=s}return{$$typeof:t,type:e.type,key:i,ref:o,props:a,_owner:l}},n.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},n.createElement=M,n.createFactory=function(e){var n=M.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=j,n.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:F}},n.memo=function(e,n){return{$$typeof:v,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=D.transition;D.transition={};try{e()}finally{D.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return P.current.useCallback(e,n)},n.useContext=function(e){return P.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return P.current.useDeferredValue(e)},n.useEffect=function(e,n){return P.current.useEffect(e,n)},n.useId=function(){return P.current.useId()},n.useImperativeHandle=function(e,n,t){return P.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return P.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return P.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return P.current.useMemo(e,n)},n.useReducer=function(e,n,t){return P.current.useReducer(e,n,t)},n.useRef=function(e){return P.current.useRef(e)},n.useState=function(e){return P.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return P.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return P.current.useTransition()},n.version="18.2.0"},791:function(e,n,t){"use strict";e.exports=t(117)},184:function(e,n,t){"use strict";e.exports=t(374)},813:function(e,n){"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<i(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var l=2*(r+1)-1,s=e[l],c=l+1,u=e[c];if(0>i(s,t))c<a&&0>i(u,s)?(e[r]=u,e[c]=t,r=c):(e[r]=s,e[l]=t,r=l);else{if(!(c<a&&0>i(u,t)))break e;e[r]=u,e[c]=t,r=c}}}return n}function i(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var l=Date,s=l.now();n.unstable_now=function(){return l.now()-s}}var c=[],u=[],v=1,f=null,p=3,m=!1,d=!1,h=!1,g="function"===typeof setTimeout?setTimeout:null,x="function"===typeof clearTimeout?clearTimeout:null,y="undefined"!==typeof setImmediate?setImmediate:null;function b(e){for(var n=r(u);null!==n;){if(null===n.callback)a(u);else{if(!(n.startTime<=e))break;a(u),n.sortIndex=n.expirationTime,t(c,n)}n=r(u)}}function _(e){if(h=!1,b(e),!d)if(null!==r(c))d=!0,D(w);else{var n=r(u);null!==n&&E(_,n.startTime-e)}}function w(e,t){d=!1,h&&(h=!1,x(j),j=-1),m=!0;var i=p;try{for(b(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!C());){var o=f.callback;if("function"===typeof o){f.callback=null,p=f.priorityLevel;var l=o(f.expirationTime<=t);t=n.unstable_now(),"function"===typeof l?f.callback=l:f===r(c)&&a(c),b(t)}else a(c);f=r(c)}if(null!==f)var s=!0;else{var v=r(u);null!==v&&E(_,v.startTime-t),s=!1}return s}finally{f=null,p=i,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,U=!1,M=null,j=-1,k=5,T=-1;function C(){return!(n.unstable_now()-T<k)}function R(){if(null!==M){var e=n.unstable_now();T=e;var t=!0;try{t=M(!0,e)}finally{t?S():(U=!1,M=null)}}else U=!1}if("function"===typeof y)S=function(){y(R)};else if("undefined"!==typeof MessageChannel){var F=new MessageChannel,P=F.port2;F.port1.onmessage=R,S=function(){P.postMessage(null)}}else S=function(){g(R,0)};function D(e){M=e,U||(U=!0,S())}function E(e,t){j=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){d||m||(d=!0,D(w))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,a,i){var o=n.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?o+i:o:i=o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:v++,callback:a,priorityLevel:e,startTime:i,expirationTime:l=i+l,sortIndex:-1},i>o?(e.sortIndex=i,t(u,e),null===r(c)&&e===r(u)&&(h?(x(j),j=-1):h=!0,E(_,i-o))):(e.sortIndex=l,t(c,e),d||m||(d=!0,D(w))),e},n.unstable_shouldYield=C,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},296:function(e,n,t){"use strict";e.exports=t(813)}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var i=n[r]={exports:{}};return e[r](i,i.exports,t),i.exports}t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,{a:n}),n},function(){var e,n=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};t.t=function(r,a){if(1&a&&(r=this(r)),8&a)return r;if("object"===typeof r&&r){if(4&a&&r.__esModule)return r;if(16&a&&"function"===typeof r.then)return r}var i=Object.create(null);t.r(i);var o={};e=e||[null,n({}),n([]),n(n)];for(var l=2&a&&r;"object"==typeof l&&!~e.indexOf(l);l=n(l))Object.getOwnPropertyNames(l).forEach((function(e){o[e]=function(){return r[e]}}));return o.default=function(){return r},t.d(i,o),i}}(),t.d=function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){"use strict";var e,n={};function r(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function a(e){if(Array.isArray(e))return e}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function o(e,n){if(e){if("string"===typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?i(e,n):void 0}}function l(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,n){return a(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i=[],o=!0,l=!1;try{for(t=t.call(e);!(o=(r=t.next()).done)&&(i.push(r.value),!n||i.length!==n);o=!0);}catch(s){l=!0,a=s}finally{try{o||null==t.return||t.return()}finally{if(l)throw a}}return i}}(e,n)||o(e,n)||l()}function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function v(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function f(e,n){var t="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=o(e))||n&&e&&"number"===typeof e.length){t&&(e=t);var r=0,a=function(){};return{s:a,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,s=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return l=e.done,e},e:function(e){s=!0,i=e},f:function(){try{l||null==t.return||t.return()}finally{if(s)throw i}}}}function p(e,n){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},p(e,n)}function m(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function d(e,n,t){return d=m()?Reflect.construct.bind():function(e,n,t){var r=[null];r.push.apply(r,n);var a=new(Function.bind.apply(e,r));return t&&p(a,t.prototype),a},d.apply(null,arguments)}function h(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function g(e){return function(e){if(Array.isArray(e))return i(e)}(e)||h(e)||o(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(e){return a(e)||h(e)||o(e)||l()}function y(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function b(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,n,t){return n&&b(e.prototype,n),t&&b(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function w(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&p(e,n)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function M(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function j(e,n){if(n&&("object"===U(n)||"function"===typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return M(e)}function k(e){var n=m();return function(){var t,r=S(e);if(n){var a=S(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return j(this,t)}}function T(e){var n="function"===typeof Map?new Map:void 0;return T=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof n){if(n.has(e))return n.get(e);n.set(e,r)}function r(){return d(e,arguments,S(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),p(r,e)},T(e)}function C(e,n,t,r,a,i,o){try{var l=e[i](o),s=l.value}catch(c){return void t(c)}l.done?n(s):Promise.resolve(s).then(r,a)}function R(e){return function(){var n=this,t=arguments;return new Promise((function(r,a){var i=e.apply(n,t);function o(e){C(i,r,a,o,l,"next",e)}function l(e){C(i,r,a,o,l,"throw",e)}o(void 0)}))}}function F(e,n){for(;!Object.prototype.hasOwnProperty.call(e,n)&&null!==(e=S(e)););return e}function P(){return P="undefined"!==typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,n,t){var r=F(e,n);if(r){var a=Object.getOwnPropertyDescriptor(r,n);return a.get?a.get.call(arguments.length<3?e:t):a.value}},P.apply(this,arguments)}function D(){D=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,r=Object.defineProperty||function(e,n,t){e[n]=t.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function s(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{s({},"")}catch(C){s=function(e,n,t){return e[n]=t}}function c(e,n,t,a){var i=n&&n.prototype instanceof f?n:f,o=Object.create(i.prototype),l=new j(a||[]);return r(o,"_invoke",{value:_(e,t,l)}),o}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(C){return{type:"throw",arg:C}}}e.wrap=c;var v={};function f(){}function p(){}function m(){}var d={};s(d,i,(function(){return this}));var h=Object.getPrototypeOf,g=h&&h(h(k([])));g&&g!==n&&t.call(g,i)&&(d=g);var x=m.prototype=f.prototype=Object.create(d);function y(e){["next","throw","return"].forEach((function(n){s(e,n,(function(e){return this._invoke(n,e)}))}))}function b(e,n){function a(r,i,o,l){var s=u(e[r],e,i);if("throw"!==s.type){var c=s.arg,v=c.value;return v&&"object"==U(v)&&t.call(v,"__await")?n.resolve(v.__await).then((function(e){a("next",e,o,l)}),(function(e){a("throw",e,o,l)})):n.resolve(v).then((function(e){c.value=e,o(c)}),(function(e){return a("throw",e,o,l)}))}l(s.arg)}var i;r(this,"_invoke",{value:function(e,t){function r(){return new n((function(n,r){a(e,t,n,r)}))}return i=i?i.then(r,r):r()}})}function _(e,n,t){var r="suspendedStart";return function(a,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw i;return T()}for(t.method=a,t.arg=i;;){var o=t.delegate;if(o){var l=w(o,t);if(l){if(l===v)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var s=u(e,n,t);if("normal"===s.type){if(r=t.done?"completed":"suspendedYield",s.arg===v)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(r="completed",t.method="throw",t.arg=s.arg)}}}function w(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,w(e,n),"throw"===n.method))return v;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return v}var r=u(t,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,v;var a=r.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,v):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,v)}function S(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function M(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function k(e){if(e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,a=function n(){for(;++r<e.length;)if(t.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=void 0,n.done=!0,n};return a.next=a}}return{next:T}}function T(){return{value:void 0,done:!0}}return p.prototype=m,r(x,"constructor",{value:m,configurable:!0}),r(m,"constructor",{value:p,configurable:!0}),p.displayName=s(m,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===p||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,l,"GeneratorFunction")),e.prototype=Object.create(x),e},e.awrap=function(e){return{__await:e}},y(b.prototype),s(b.prototype,o,(function(){return this})),e.AsyncIterator=b,e.async=function(n,t,r,a,i){void 0===i&&(i=Promise);var o=new b(c(n,t,r,a),i);return e.isGeneratorFunction(t)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},y(x),s(x,l,"Generator"),s(x,i,(function(){return this})),s(x,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var r in n)t.push(r);return t.reverse(),function e(){for(;t.length;){var r=t.pop();if(r in n)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=k,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(M),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(t,r){return o.type="throw",o.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=t.call(i,"catchLoc"),s=t.call(i,"finallyLoc");if(l&&s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,n){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&t.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=n&&n<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=n,i?(this.method="next",this.next=i.finallyLoc,v):this.complete(o)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),v},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),M(t),v}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var a=r.arg;M(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:k(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),v}},e}t.r(n),t.d(n,{ACESFilmicToneMapping:function(){return Fe},AddEquation:function(){return ee},AddOperation:function(){return je},AdditiveAnimationBlendMode:function(){return at},AdditiveBlending:function(){return J},AlphaFormat:function(){return un},AlwaysDepth:function(){return ge},AlwaysStencilFunc:function(){return Pt},AmbientLight:function(){return jf},AmbientLightProbe:function(){return Gf},AnimationClip:function(){return Yv},AnimationLoader:function(){return af},AnimationMixer:function(){return yp},AnimationObjectGroup:function(){return hp},AnimationUtils:function(){return zv},ArcCurve:function(){return Qc},ArrayCamera:function(){return js},ArrowHelper:function(){return um},Audio:function(){return ep},AudioAnalyser:function(){return op},AudioContext:function(){return Of},AudioListener:function(){return Kf},AudioLoader:function(){return Bf},AxesHelper:function(){return vm},BackSide:function(){return W},BasicDepthPacking:function(){return ut},BasicShadowMap:function(){return N},Bone:function(){return mc},BooleanKeyframeTrack:function(){return Nv},Box2:function(){return Fp},Box3:function(){return Br},Box3Helper:function(){return lm},BoxBufferGeometry:function(){return bm},BoxGeometry:function(){return Oi},BoxHelper:function(){return om},BufferAttribute:function(){return ni},BufferGeometry:function(){return yi},BufferGeometryLoader:function(){return Df},ByteType:function(){return Ke},Cache:function(){return Qv},Camera:function(){return qi},CameraHelper:function(){return nm},CanvasTexture:function(){return Yc},CapsuleBufferGeometry:function(){return _m},CapsuleGeometry:function(){return xu},CatmullRomCurve3:function(){return ru},CineonToneMapping:function(){return Re},CircleBufferGeometry:function(){return wm},CircleGeometry:function(){return yu},ClampToEdgeWrapping:function(){return Be},Clock:function(){return Xf},Color:function(){return Sr},ColorKeyframeTrack:function(){return Gv},ColorManagement:function(){return dr},CompressedArrayTexture:function(){return Xc},CompressedTexture:function(){return Wc},CompressedTextureLoader:function(){return of},ConeBufferGeometry:function(){return Sm},ConeGeometry:function(){return _u},CubeCamera:function(){return Xi},CubeReflectionMapping:function(){return Ee},CubeRefractionMapping:function(){return ze},CubeTexture:function(){return Yi},CubeTextureLoader:function(){return sf},CubeUVReflectionMapping:function(){return Ie},CubicBezierCurve:function(){return lu},CubicBezierCurve3:function(){return su},CubicInterpolant:function(){return Av},CullFaceBack:function(){return I},CullFaceFront:function(){return O},CullFaceFrontBack:function(){return B},CullFaceNone:function(){return A},Curve:function(){return Zc},CurvePath:function(){return du},CustomBlending:function(){return K},CustomToneMapping:function(){return Pe},CylinderBufferGeometry:function(){return Um},CylinderGeometry:function(){return bu},Cylindrical:function(){return Cp},Data3DTexture:function(){return Dr},DataArrayTexture:function(){return Fr},DataTexture:function(){return dc},DataTexture2DArray:function(){return xm},DataTexture3D:function(){return ym},DataTextureLoader:function(){return cf},DataUtils:function(){return dm},DecrementStencilOp:function(){return _t},DecrementWrapStencilOp:function(){return St},DefaultLoadingManager:function(){return Kv},DepthFormat:function(){return dn},DepthStencilFormat:function(){return hn},DepthTexture:function(){return Rs},DirectionalLight:function(){return Mf},DirectionalLightHelper:function(){return $p},DiscreteInterpolant:function(){return Ov},DodecahedronBufferGeometry:function(){return Mm},DodecahedronGeometry:function(){return Su},DoubleSide:function(){return X},DstAlphaFactor:function(){return ve},DstColorFactor:function(){return pe},DynamicCopyUsage:function(){return Bt},DynamicDrawUsage:function(){return Et},DynamicReadUsage:function(){return At},EdgesGeometry:function(){return Tu},EllipseCurve:function(){return Jc},EqualDepth:function(){return be},EqualStencilFunc:function(){return kt},EquirectangularReflectionMapping:function(){return Le},EquirectangularRefractionMapping:function(){return Ae},Euler:function(){return Sa},EventDispatcher:function(){return Ht},ExtrudeBufferGeometry:function(){return jm},ExtrudeGeometry:function(){return iv},FileLoader:function(){return rf},Float16BufferAttribute:function(){return ci},Float32BufferAttribute:function(){return ui},Float64BufferAttribute:function(){return vi},FloatType:function(){return an},Fog:function(){return Os},FogExp2:function(){return Is},FramebufferTexture:function(){return Hc},FrontSide:function(){return H},Frustum:function(){return to},GLBufferAttribute:function(){return Up},GLSL1:function(){return Gt},GLSL3:function(){return Vt},GreaterDepth:function(){return we},GreaterEqualDepth:function(){return _e},GreaterEqualStencilFunc:function(){return Ft},GreaterStencilFunc:function(){return Ct},GridHelper:function(){return Xp},Group:function(){return ks},HalfFloatType:function(){return on},HemisphereLight:function(){return ff},HemisphereLightHelper:function(){return Wp},HemisphereLightProbe:function(){return Nf},IcosahedronBufferGeometry:function(){return km},IcosahedronGeometry:function(){return lv},ImageBitmapLoader:function(){return If},ImageLoader:function(){return lf},ImageUtils:function(){return Ur},ImmediateRenderObject:function(){return hm},IncrementStencilOp:function(){return bt},IncrementWrapStencilOp:function(){return wt},InstancedBufferAttribute:function(){return yc},InstancedBufferGeometry:function(){return Pf},InstancedInterleavedBuffer:function(){return Sp},InstancedMesh:function(){return Mc},Int16BufferAttribute:function(){return ii},Int32BufferAttribute:function(){return li},Int8BufferAttribute:function(){return ti},IntType:function(){return tn},InterleavedBuffer:function(){return Ns},InterleavedBufferAttribute:function(){return Vs},Interpolant:function(){return Lv},InterpolateDiscrete:function(){return Qn},InterpolateLinear:function(){return $n},InterpolateSmooth:function(){return Kn},InvertStencilOp:function(){return Ut},KeepStencilOp:function(){return xt},KeyframeTrack:function(){return Bv},LOD:function(){return lc},LatheBufferGeometry:function(){return Tm},LatheGeometry:function(){return gu},Layers:function(){return Ua},LessDepth:function(){return xe},LessEqualDepth:function(){return ye},LessEqualStencilFunc:function(){return Tt},LessStencilFunc:function(){return jt},Light:function(){return vf},LightProbe:function(){return Cf},Line:function(){return Pc},Line3:function(){return Ep},LineBasicMaterial:function(){return jc},LineCurve:function(){return cu},LineCurve3:function(){return uu},LineDashedMaterial:function(){return Tv},LineLoop:function(){return Lc},LineSegments:function(){return zc},LinearEncoding:function(){return st},LinearFilter:function(){return Xe},LinearInterpolant:function(){return Iv},LinearMipMapLinearFilter:function(){return Qe},LinearMipMapNearestFilter:function(){return Ze},LinearMipmapLinearFilter:function(){return Je},LinearMipmapNearestFilter:function(){return Ye},LinearSRGBColorSpace:function(){return ht},LinearToneMapping:function(){return Te},Loader:function(){return ef},LoaderUtils:function(){return Ff},LoadingManager:function(){return $v},LoopOnce:function(){return Yn},LoopPingPong:function(){return Jn},LoopRepeat:function(){return Zn},LuminanceAlphaFormat:function(){return mn},LuminanceFormat:function(){return pn},MOUSE:function(){return z},Material:function(){return Qa},MaterialLoader:function(){return Rf},MathUtils:function(){return ir},Matrix3:function(){return lr},Matrix4:function(){return pa},MaxEquation:function(){return ae},Mesh:function(){return Ai},MeshBasicMaterial:function(){return $a},MeshDepthMaterial:function(){return bs},MeshDistanceMaterial:function(){return _s},MeshLambertMaterial:function(){return jv},MeshMatcapMaterial:function(){return kv},MeshNormalMaterial:function(){return Mv},MeshPhongMaterial:function(){return Sv},MeshPhysicalMaterial:function(){return wv},MeshStandardMaterial:function(){return _v},MeshToonMaterial:function(){return Uv},MinEquation:function(){return re},MirroredRepeatWrapping:function(){return Ne},MixOperation:function(){return Me},MultiplyBlending:function(){return $},MultiplyOperation:function(){return Ue},NearestFilter:function(){return Ge},NearestMipMapLinearFilter:function(){return We},NearestMipMapNearestFilter:function(){return qe},NearestMipmapLinearFilter:function(){return He},NearestMipmapNearestFilter:function(){return Ve},NeverDepth:function(){return he},NeverStencilFunc:function(){return Mt},NoBlending:function(){return Y},NoColorSpace:function(){return mt},NoToneMapping:function(){return ke},NormalAnimationBlendMode:function(){return rt},NormalBlending:function(){return Z},NotEqualDepth:function(){return Se},NotEqualStencilFunc:function(){return Rt},NumberKeyframeTrack:function(){return Vv},Object3D:function(){return Ia},ObjectLoader:function(){return Ef},ObjectSpaceNormalMap:function(){return pt},OctahedronBufferGeometry:function(){return Cm},OctahedronGeometry:function(){return sv},OneFactor:function(){return oe},OneMinusDstAlphaFactor:function(){return fe},OneMinusDstColorFactor:function(){return me},OneMinusSrcAlphaFactor:function(){return ue},OneMinusSrcColorFactor:function(){return se},OrthographicCamera:function(){return ho},PCFShadowMap:function(){return G},PCFSoftShadowMap:function(){return V},PMREMGenerator:function(){return Mo},Path:function(){return hu},PerspectiveCamera:function(){return Hi},Plane:function(){return Ki},PlaneBufferGeometry:function(){return Rm},PlaneGeometry:function(){return io},PlaneHelper:function(){return sm},PointLight:function(){return Sf},PointLightHelper:function(){return Gp},Points:function(){return Gc},PointsMaterial:function(){return Ac},PolarGridHelper:function(){return Yp},PolyhedronBufferGeometry:function(){return Fm},PolyhedronGeometry:function(){return wu},PositionalAudio:function(){return ip},PropertyBinding:function(){return dp},PropertyMixer:function(){return lp},QuadraticBezierCurve:function(){return vu},QuadraticBezierCurve3:function(){return fu},Quaternion:function(){return Lr},QuaternionKeyframeTrack:function(){return Hv},QuaternionLinearInterpolant:function(){return qv},REVISION:function(){return E},RGBADepthPacking:function(){return vt},RGBAFormat:function(){return fn},RGBAIntegerFormat:function(){return _n},RGBA_ASTC_10x10_Format:function(){return qn},RGBA_ASTC_10x5_Format:function(){return Nn},RGBA_ASTC_10x6_Format:function(){return Gn},RGBA_ASTC_10x8_Format:function(){return Vn},RGBA_ASTC_12x10_Format:function(){return Hn},RGBA_ASTC_12x12_Format:function(){return Wn},RGBA_ASTC_4x4_Format:function(){return Dn},RGBA_ASTC_5x4_Format:function(){return En},RGBA_ASTC_5x5_Format:function(){return zn},RGBA_ASTC_6x5_Format:function(){return Ln},RGBA_ASTC_6x6_Format:function(){return An},RGBA_ASTC_8x5_Format:function(){return In},RGBA_ASTC_8x6_Format:function(){return On},RGBA_ASTC_8x8_Format:function(){return Bn},RGBA_BPTC_Format:function(){return Xn},RGBA_ETC2_EAC_Format:function(){return Pn},RGBA_PVRTC_2BPPV1_Format:function(){return Cn},RGBA_PVRTC_4BPPV1_Format:function(){return Tn},RGBA_S3TC_DXT1_Format:function(){return Sn},RGBA_S3TC_DXT3_Format:function(){return Un},RGBA_S3TC_DXT5_Format:function(){return Mn},RGBFormat:function(){return vn},RGB_ETC1_Format:function(){return Rn},RGB_ETC2_Format:function(){return Fn},RGB_PVRTC_2BPPV1_Format:function(){return kn},RGB_PVRTC_4BPPV1_Format:function(){return jn},RGB_S3TC_DXT1_Format:function(){return wn},RGFormat:function(){return yn},RGIntegerFormat:function(){return bn},RawShaderMaterial:function(){return bv},Ray:function(){return fa},Raycaster:function(){return Mp},RectAreaLight:function(){return kf},RedFormat:function(){return gn},RedIntegerFormat:function(){return xn},ReinhardToneMapping:function(){return Ce},RepeatWrapping:function(){return Oe},ReplaceStencilOp:function(){return yt},ReverseSubtractEquation:function(){return te},RingBufferGeometry:function(){return Pm},RingGeometry:function(){return cv},SRGBColorSpace:function(){return dt},Scene:function(){return Bs},ShaderChunk:function(){return oo},ShaderLib:function(){return so},ShaderMaterial:function(){return Vi},ShadowMaterial:function(){return yv},Shape:function(){return Cu},ShapeBufferGeometry:function(){return Dm},ShapeGeometry:function(){return uv},ShapePath:function(){return fm},ShapeUtils:function(){return tv},ShortType:function(){return en},Skeleton:function(){return xc},SkeletonHelper:function(){return Bp},SkinnedMesh:function(){return pc},Source:function(){return Mr},Sphere:function(){return aa},SphereBufferGeometry:function(){return Em},SphereGeometry:function(){return vv},Spherical:function(){return Tp},SphericalHarmonics3:function(){return Tf},SplineCurve:function(){return pu},SpotLight:function(){return xf},SpotLightHelper:function(){return Lp},Sprite:function(){return rc},SpriteMaterial:function(){return qs},SrcAlphaFactor:function(){return ce},SrcAlphaSaturateFactor:function(){return de},SrcColorFactor:function(){return le},StaticCopyUsage:function(){return Ot},StaticDrawUsage:function(){return Dt},StaticReadUsage:function(){return Lt},StereoCamera:function(){return Wf},StreamCopyUsage:function(){return Nt},StreamDrawUsage:function(){return zt},StreamReadUsage:function(){return It},StringKeyframeTrack:function(){return Wv},SubtractEquation:function(){return ne},SubtractiveBlending:function(){return Q},TOUCH:function(){return L},TangentSpaceNormalMap:function(){return ft},TetrahedronBufferGeometry:function(){return zm},TetrahedronGeometry:function(){return fv},Texture:function(){return Tr},TextureLoader:function(){return uf},TorusBufferGeometry:function(){return Lm},TorusGeometry:function(){return pv},TorusKnotBufferGeometry:function(){return Am},TorusKnotGeometry:function(){return mv},Triangle:function(){return Za},TriangleFanDrawMode:function(){return lt},TriangleStripDrawMode:function(){return ot},TrianglesDrawMode:function(){return it},TubeBufferGeometry:function(){return Im},TubeGeometry:function(){return dv},UVMapping:function(){return De},Uint16BufferAttribute:function(){return oi},Uint32BufferAttribute:function(){return si},Uint8BufferAttribute:function(){return ri},Uint8ClampedBufferAttribute:function(){return ai},Uniform:function(){return bp},UniformsGroup:function(){return wp},UniformsLib:function(){return lo},UniformsUtils:function(){return Gi},UnsignedByteType:function(){return $e},UnsignedInt248Type:function(){return cn},UnsignedIntType:function(){return rn},UnsignedShort4444Type:function(){return ln},UnsignedShort5551Type:function(){return sn},UnsignedShortType:function(){return nn},VSMShadowMap:function(){return q},Vector2:function(){return or},Vector3:function(){return Ar},Vector4:function(){return Cr},VectorKeyframeTrack:function(){return Xv},VideoTexture:function(){return qc},WebGL1Renderer:function(){return Ls},WebGL3DRenderTarget:function(){return Er},WebGLArrayRenderTarget:function(){return Pr},WebGLCubeRenderTarget:function(){return Zi},WebGLMultipleRenderTargets:function(){return zr},WebGLMultisampleRenderTarget:function(){return gm},WebGLRenderTarget:function(){return Rr},WebGLRenderer:function(){return zs},WebGLUtils:function(){return Ms},WireframeGeometry:function(){return hv},WrapAroundEnding:function(){return tt},ZeroCurvatureEnding:function(){return et},ZeroFactor:function(){return ie},ZeroSlopeEnding:function(){return nt},ZeroStencilOp:function(){return gt},_SRGBAFormat:function(){return qt},sRGBEncoding:function(){return ct}});var E="146",z={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},L={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},A=0,I=1,O=2,B=3,N=0,G=1,V=2,q=3,H=0,W=1,X=2,Y=0,Z=1,J=2,Q=3,$=4,K=5,ee=100,ne=101,te=102,re=103,ae=104,ie=200,oe=201,le=202,se=203,ce=204,ue=205,ve=206,fe=207,pe=208,me=209,de=210,he=0,ge=1,xe=2,ye=3,be=4,_e=5,we=6,Se=7,Ue=0,Me=1,je=2,ke=0,Te=1,Ce=2,Re=3,Fe=4,Pe=5,De=300,Ee=301,ze=302,Le=303,Ae=304,Ie=306,Oe=1e3,Be=1001,Ne=1002,Ge=1003,Ve=1004,qe=1004,He=1005,We=1005,Xe=1006,Ye=1007,Ze=1007,Je=1008,Qe=1008,$e=1009,Ke=1010,en=1011,nn=1012,tn=1013,rn=1014,an=1015,on=1016,ln=1017,sn=1018,cn=1020,un=1021,vn=1022,fn=1023,pn=1024,mn=1025,dn=1026,hn=1027,gn=1028,xn=1029,yn=1030,bn=1031,_n=1033,wn=33776,Sn=33777,Un=33778,Mn=33779,jn=35840,kn=35841,Tn=35842,Cn=35843,Rn=36196,Fn=37492,Pn=37496,Dn=37808,En=37809,zn=37810,Ln=37811,An=37812,In=37813,On=37814,Bn=37815,Nn=37816,Gn=37817,Vn=37818,qn=37819,Hn=37820,Wn=37821,Xn=36492,Yn=2200,Zn=2201,Jn=2202,Qn=2300,$n=2301,Kn=2302,et=2400,nt=2401,tt=2402,rt=2500,at=2501,it=0,ot=1,lt=2,st=3e3,ct=3001,ut=3200,vt=3201,ft=0,pt=1,mt="",dt="srgb",ht="srgb-linear",gt=0,xt=7680,yt=7681,bt=7682,_t=7683,wt=34055,St=34056,Ut=5386,Mt=512,jt=513,kt=514,Tt=515,Ct=516,Rt=517,Ft=518,Pt=519,Dt=35044,Et=35048,zt=35040,Lt=35045,At=35049,It=35041,Ot=35046,Bt=35050,Nt=35042,Gt="100",Vt="300 es",qt=1035,Ht=function(){function e(){y(this,e)}return _(e,[{key:"addEventListener",value:function(e,n){void 0===this._listeners&&(this._listeners={});var t=this._listeners;void 0===t[e]&&(t[e]=[]),-1===t[e].indexOf(n)&&t[e].push(n)}},{key:"hasEventListener",value:function(e,n){if(void 0===this._listeners)return!1;var t=this._listeners;return void 0!==t[e]&&-1!==t[e].indexOf(n)}},{key:"removeEventListener",value:function(e,n){if(void 0!==this._listeners){var t=this._listeners[e];if(void 0!==t){var r=t.indexOf(n);-1!==r&&t.splice(r,1)}}}},{key:"dispatchEvent",value:function(e){if(void 0!==this._listeners){var n=this._listeners[e.type];if(void 0!==n){e.target=this;for(var t=n.slice(0),r=0,a=t.length;r<a;r++)t[r].call(this,e);e.target=null}}}}]),e}(),Wt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Xt=1234567,Yt=Math.PI/180,Zt=180/Math.PI;function Jt(){var e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Wt[255&e]+Wt[e>>8&255]+Wt[e>>16&255]+Wt[e>>24&255]+"-"+Wt[255&n]+Wt[n>>8&255]+"-"+Wt[n>>16&15|64]+Wt[n>>24&255]+"-"+Wt[63&t|128]+Wt[t>>8&255]+"-"+Wt[t>>16&255]+Wt[t>>24&255]+Wt[255&r]+Wt[r>>8&255]+Wt[r>>16&255]+Wt[r>>24&255]).toLowerCase()}function Qt(e,n,t){return Math.max(n,Math.min(t,e))}function $t(e,n){return(e%n+n)%n}function Kt(e,n,t){return(1-t)*e+t*n}function er(e){return 0===(e&e-1)&&0!==e}function nr(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function tr(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function rr(e,n){switch(n.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function ar(e,n){switch(n.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var ir=Object.freeze({__proto__:null,DEG2RAD:Yt,RAD2DEG:Zt,generateUUID:Jt,clamp:Qt,euclideanModulo:$t,mapLinear:function(e,n,t,r,a){return r+(e-n)*(a-r)/(t-n)},inverseLerp:function(e,n,t){return e!==n?(t-e)/(n-e):0},lerp:Kt,damp:function(e,n,t,r){return Kt(e,n,1-Math.exp(-t*r))},pingpong:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return n-Math.abs($t(e,2*n)-n)},smoothstep:function(e,n,t){return e<=n?0:e>=t?1:(e=(e-n)/(t-n))*e*(3-2*e)},smootherstep:function(e,n,t){return e<=n?0:e>=t?1:(e=(e-n)/(t-n))*e*e*(e*(6*e-15)+10)},randInt:function(e,n){return e+Math.floor(Math.random()*(n-e+1))},randFloat:function(e,n){return e+Math.random()*(n-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(Xt=e);var n=Xt+=1831565813;return n=Math.imul(n^n>>>15,1|n),(((n^=n+Math.imul(n^n>>>7,61|n))^n>>>14)>>>0)/4294967296},degToRad:function(e){return e*Yt},radToDeg:function(e){return e*Zt},isPowerOfTwo:er,ceilPowerOfTwo:nr,floorPowerOfTwo:tr,setQuaternionFromProperEuler:function(e,n,t,r,a){var i=Math.cos,o=Math.sin,l=i(t/2),s=o(t/2),c=i((n+r)/2),u=o((n+r)/2),v=i((n-r)/2),f=o((n-r)/2),p=i((r-n)/2),m=o((r-n)/2);switch(a){case"XYX":e.set(l*u,s*v,s*f,l*c);break;case"YZY":e.set(s*f,l*u,s*v,l*c);break;case"ZXZ":e.set(s*v,s*f,l*u,l*c);break;case"XZX":e.set(l*u,s*m,s*p,l*c);break;case"YXY":e.set(s*p,l*u,s*m,l*c);break;case"ZYZ":e.set(s*m,s*p,l*u,l*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+a)}},normalize:ar,denormalize:rr}),or=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,n),n.prototype.isVector2=!0,this.x=e,this.y=t}return _(n,[{key:"width",get:function(){return this.x},set:function(e){this.x=e}},{key:"height",get:function(){return this.y},set:function(e){this.y=e}},{key:"set",value:function(e,n){return this.x=e,this.y=n,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setComponent",value:function(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}},{key:"addScaledVector",value:function(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"applyMatrix3",value:function(e){var n=this.x,t=this.y,r=e.elements;return this.x=r[0]*n+r[3]*t+r[6],this.y=r[1]*n+r[4]*t+r[7],this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}},{key:"clamp",value:function(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}},{key:"clampScalar",value:function(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}},{key:"clampLength",value:function(e,n){var t=this.length();return this.divideScalar(t||1).multiplyScalar(Math.max(e,Math.min(n,t)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"angle",value:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var n=this.x-e.x,t=this.y-e.y;return n*n+t*t}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}},{key:"lerpVectors",value:function(e,n,t){return this.x=e.x+(n.x-e.x)*t,this.y=e.y+(n.y-e.y)*t,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[n],this.y=e[n+1],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.x,e[n+1]=this.y,e}},{key:"fromBufferAttribute",value:function(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}},{key:"rotateAround",value:function(e,n){var t=Math.cos(n),r=Math.sin(n),a=this.x-e.x,i=this.y-e.y;return this.x=a*t-i*r+e.x,this.y=a*r+i*t+e.y,this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this}},{key:Symbol.iterator,value:D().mark((function e(){return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:case"end":return e.stop()}}),e,this)}))}]),n}(),lr=function(){function e(){y(this,e),e.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}return _(e,[{key:"set",value:function(e,n,t,r,a,i,o,l,s){var c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=n,c[4]=a,c[5]=l,c[6]=t,c[7]=i,c[8]=s,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var n=this.elements,t=e.elements;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],this}},{key:"extractBasis",value:function(e,n,t){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),t.setFromMatrix3Column(this,2),this}},{key:"setFromMatrix4",value:function(e){var n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,n){var t=e.elements,r=n.elements,a=this.elements,i=t[0],o=t[3],l=t[6],s=t[1],c=t[4],u=t[7],v=t[2],f=t[5],p=t[8],m=r[0],d=r[3],h=r[6],g=r[1],x=r[4],y=r[7],b=r[2],_=r[5],w=r[8];return a[0]=i*m+o*g+l*b,a[3]=i*d+o*x+l*_,a[6]=i*h+o*y+l*w,a[1]=s*m+c*g+u*b,a[4]=s*d+c*x+u*_,a[7]=s*h+c*y+u*w,a[2]=v*m+f*g+p*b,a[5]=v*d+f*x+p*_,a[8]=v*h+f*y+p*w,this}},{key:"multiplyScalar",value:function(e){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}},{key:"determinant",value:function(){var e=this.elements,n=e[0],t=e[1],r=e[2],a=e[3],i=e[4],o=e[5],l=e[6],s=e[7],c=e[8];return n*i*c-n*o*s-t*a*c+t*o*l+r*a*s-r*i*l}},{key:"invert",value:function(){var e=this.elements,n=e[0],t=e[1],r=e[2],a=e[3],i=e[4],o=e[5],l=e[6],s=e[7],c=e[8],u=c*i-o*s,v=o*l-c*a,f=s*a-i*l,p=n*u+t*v+r*f;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);var m=1/p;return e[0]=u*m,e[1]=(r*s-c*t)*m,e[2]=(o*t-r*i)*m,e[3]=v*m,e[4]=(c*n-r*l)*m,e[5]=(r*a-o*n)*m,e[6]=f*m,e[7]=(t*l-s*n)*m,e[8]=(i*n-t*a)*m,this}},{key:"transpose",value:function(){var e,n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}},{key:"getNormalMatrix",value:function(e){return this.setFromMatrix4(e).invert().transpose()}},{key:"transposeIntoArray",value:function(e){var n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}},{key:"setUvTransform",value:function(e,n,t,r,a,i,o){var l=Math.cos(a),s=Math.sin(a);return this.set(t*l,t*s,-t*(l*i+s*o)+i+e,-r*s,r*l,-r*(-s*i+l*o)+o+n,0,0,1),this}},{key:"scale",value:function(e,n){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=n,t[4]*=n,t[7]*=n,this}},{key:"rotate",value:function(e){var n=Math.cos(e),t=Math.sin(e),r=this.elements,a=r[0],i=r[3],o=r[6],l=r[1],s=r[4],c=r[7];return r[0]=n*a+t*l,r[3]=n*i+t*s,r[6]=n*o+t*c,r[1]=-t*a+n*l,r[4]=-t*i+n*s,r[7]=-t*o+n*c,this}},{key:"translate",value:function(e,n){var t=this.elements;return t[0]+=e*t[2],t[3]+=e*t[5],t[6]+=e*t[8],t[1]+=n*t[2],t[4]+=n*t[5],t[7]+=n*t[8],this}},{key:"equals",value:function(e){for(var n=this.elements,t=e.elements,r=0;r<9;r++)if(n[r]!==t[r])return!1;return!0}},{key:"fromArray",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=0;t<9;t++)this.elements[t]=e[t+n];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.elements;return e[n]=t[0],e[n+1]=t[1],e[n+2]=t[2],e[n+3]=t[3],e[n+4]=t[4],e[n+5]=t[5],e[n+6]=t[6],e[n+7]=t[7],e[n+8]=t[8],e}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}}]),e}();function sr(e){for(var n=e.length-1;n>=0;--n)if(e[n]>=65535)return!0;return!1}var cr={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ur(e,n){return new cr[e](n)}function vr(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function fr(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function pr(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}var mr=(c(e={},dt,c({},ht,fr)),c(e,ht,c({},dt,pr)),e),dr={legacyMode:!0,get workingColorSpace(){return ht},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,n,t){if(this.legacyMode||n===t||!n||!t)return e;if(mr[n]&&void 0!==mr[n][t]){var r=mr[n][t];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,n){return this.convert(e,this.workingColorSpace,n)},toWorkingColorSpace:function(e,n){return this.convert(e,n,this.workingColorSpace)}},hr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},gr={r:0,g:0,b:0},xr={h:0,s:0,l:0},yr={h:0,s:0,l:0};function br(e,n,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?e+6*(n-e)*t:t<.5?n:t<2/3?e+6*(n-e)*(2/3-t):e}function _r(e,n){return n.r=e.r,n.g=e.g,n.b=e.b,n}var wr,Sr=function(e){function n(e,t,r){return y(this,n),this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}return _(n,[{key:"set",value:function(e){return e&&e.isColor?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e),this}},{key:"setScalar",value:function(e){return this.r=e,this.g=e,this.b=e,this}},{key:"setHex",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dt;return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,dr.toWorkingColorSpace(this,n),this}},{key:"setRGB",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ht;return this.r=e,this.g=n,this.b=t,dr.toWorkingColorSpace(this,r),this}},{key:"setHSL",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ht;if(e=$t(e,1),n=Qt(n,0,1),t=Qt(t,0,1),0===n)this.r=this.g=this.b=t;else{var a=t<=.5?t*(1+n):t+n-t*n,i=2*t-a;this.r=br(i,a,e+1/3),this.g=br(i,a,e),this.b=br(i,a,e-1/3)}return dr.toWorkingColorSpace(this,r),this}},{key:"setStyle",value:function(e){var n,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dt;function r(n){void 0!==n&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var a,i=n[1],o=n[2];switch(i){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,dr.toWorkingColorSpace(this,t),r(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,dr.toWorkingColorSpace(this,t),r(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){var l=parseFloat(a[1])/360,s=parseFloat(a[2])/100,c=parseFloat(a[3])/100;return r(a[4]),this.setHSL(l,s,c,t)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){var u=n[1],v=u.length;if(3===v)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,dr.toWorkingColorSpace(this,t),this;if(6===v)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,dr.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}},{key:"setColorName",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dt,t=hr[e.toLowerCase()];return void 0!==t?this.setHex(t,n):console.warn("THREE.Color: Unknown color "+e),this}},{key:"clone",value:function(){return new this.constructor(this.r,this.g,this.b)}},{key:"copy",value:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}},{key:"copySRGBToLinear",value:function(e){return this.r=fr(e.r),this.g=fr(e.g),this.b=fr(e.b),this}},{key:"copyLinearToSRGB",value:function(e){return this.r=pr(e.r),this.g=pr(e.g),this.b=pr(e.b),this}},{key:"convertSRGBToLinear",value:function(){return this.copySRGBToLinear(this),this}},{key:"convertLinearToSRGB",value:function(){return this.copyLinearToSRGB(this),this}},{key:"getHex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:dt;return dr.fromWorkingColorSpace(_r(this,gr),e),Qt(255*gr.r,0,255)<<16^Qt(255*gr.g,0,255)<<8^Qt(255*gr.b,0,255)<<0}},{key:"getHexString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:dt;return("000000"+this.getHex(e).toString(16)).slice(-6)}},{key:"getHSL",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ht;dr.fromWorkingColorSpace(_r(this,gr),n);var t,r,a=gr.r,i=gr.g,o=gr.b,l=Math.max(a,i,o),s=Math.min(a,i,o),c=(s+l)/2;if(s===l)t=0,r=0;else{var u=l-s;switch(r=c<=.5?u/(l+s):u/(2-l-s),l){case a:t=(i-o)/u+(i<o?6:0);break;case i:t=(o-a)/u+2;break;case o:t=(a-i)/u+4}t/=6}return e.h=t,e.s=r,e.l=c,e}},{key:"getRGB",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ht;return dr.fromWorkingColorSpace(_r(this,gr),n),e.r=gr.r,e.g=gr.g,e.b=gr.b,e}},{key:"getStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:dt;return dr.fromWorkingColorSpace(_r(this,gr),e),e!==dt?"color(".concat(e," ").concat(gr.r," ").concat(gr.g," ").concat(gr.b,")"):"rgb(".concat(255*gr.r|0,",").concat(255*gr.g|0,",").concat(255*gr.b|0,")")}},{key:"offsetHSL",value:function(e,n,t){return this.getHSL(xr),xr.h+=e,xr.s+=n,xr.l+=t,this.setHSL(xr.h,xr.s,xr.l),this}},{key:"add",value:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}},{key:"addColors",value:function(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}},{key:"addScalar",value:function(e){return this.r+=e,this.g+=e,this.b+=e,this}},{key:"sub",value:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}},{key:"multiply",value:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}},{key:"multiplyScalar",value:function(e){return this.r*=e,this.g*=e,this.b*=e,this}},{key:"lerp",value:function(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}},{key:"lerpColors",value:function(e,n,t){return this.r=e.r+(n.r-e.r)*t,this.g=e.g+(n.g-e.g)*t,this.b=e.b+(n.b-e.b)*t,this}},{key:"lerpHSL",value:function(e,n){this.getHSL(xr),e.getHSL(yr);var t=Kt(xr.h,yr.h,n),r=Kt(xr.s,yr.s,n),a=Kt(xr.l,yr.l,n);return this.setHSL(t,r,a),this}},{key:"equals",value:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}},{key:"fromBufferAttribute",value:function(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}},{key:"toJSON",value:function(){return this.getHex()}},{key:Symbol.iterator,value:D().mark((function e(){return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.r;case 2:return e.next=4,this.g;case 4:return e.next=6,this.b;case 6:case"end":return e.stop()}}),e,this)}))}]),n}();Sr.NAMES=hr;var Ur=function(){function e(){y(this,e)}return _(e,null,[{key:"getDataURL",value:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;var n;if(e instanceof HTMLCanvasElement)n=e;else{void 0===wr&&(wr=vr("canvas")),wr.width=e.width,wr.height=e.height;var t=wr.getContext("2d");e instanceof ImageData?t.putImageData(e,0,0):t.drawImage(e,0,0,e.width,e.height),n=wr}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}},{key:"sRGBToLinear",value:function(e){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var n=vr("canvas");n.width=e.width,n.height=e.height;var t=n.getContext("2d");t.drawImage(e,0,0,e.width,e.height);for(var r=t.getImageData(0,0,e.width,e.height),a=r.data,i=0;i<a.length;i++)a[i]=255*fr(a[i]/255);return t.putImageData(r,0,0),n}if(e.data){for(var o=e.data.slice(0),l=0;l<o.length;l++)o instanceof Uint8Array||o instanceof Uint8ClampedArray?o[l]=Math.floor(255*fr(o[l]/255)):o[l]=fr(o[l]);return{data:o,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}]),e}(),Mr=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;y(this,e),this.isSource=!0,this.uuid=Jt(),this.data=n,this.version=0}return _(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e;if(!n&&void 0!==e.images[this.uuid])return e.images[this.uuid];var t={uuid:this.uuid,url:""},r=this.data;if(null!==r){var a;if(Array.isArray(r)){a=[];for(var i=0,o=r.length;i<o;i++)r[i].isDataTexture?a.push(jr(r[i].image)):a.push(jr(r[i]))}else a=jr(r);t.url=a}return n||(e.images[this.uuid]=t),t}}]),e}();function jr(e){return"undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap?Ur.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var kr=0,Tr=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.DEFAULT_IMAGE,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.DEFAULT_MAPPING,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Be,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Be,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xe,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:Je,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:fn,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:$e,v=arguments.length>8&&void 0!==arguments[8]?arguments[8]:1,f=arguments.length>9&&void 0!==arguments[9]?arguments[9]:st;return y(this,t),(e=n.call(this)).isTexture=!0,Object.defineProperty(M(e),"id",{value:kr++}),e.uuid=Jt(),e.name="",e.source=new Mr(r),e.mipmaps=[],e.mapping=a,e.wrapS=i,e.wrapT=o,e.magFilter=l,e.minFilter=s,e.anisotropy=v,e.format=c,e.internalFormat=null,e.type=u,e.offset=new or(0,0),e.repeat=new or(1,1),e.center=new or(0,0),e.rotation=0,e.matrixAutoUpdate=!0,e.matrix=new lr,e.generateMipmaps=!0,e.premultiplyAlpha=!1,e.flipY=!0,e.unpackAlignment=4,e.encoding=f,e.userData={},e.version=0,e.onUpdate=null,e.isRenderTargetTexture=!1,e.needsPMREMUpdate=!1,e}return _(t,[{key:"image",get:function(){return this.source.data},set:function(e){this.source.data=e}},{key:"updateMatrix",value:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e;if(!n&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),n||(e.textures[this.uuid]=t),t}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"transformUv",value:function(e){if(this.mapping!==De)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Oe:e.x=e.x-Math.floor(e.x);break;case Be:e.x=e.x<0?0:1;break;case Ne:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case Oe:e.y=e.y-Math.floor(e.y);break;case Be:e.y=e.y<0?0:1;break;case Ne:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}},{key:"needsUpdate",set:function(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}]),t}(Ht);Tr.DEFAULT_IMAGE=null,Tr.DEFAULT_MAPPING=De;var Cr=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;y(this,n),n.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=a}return _(n,[{key:"width",get:function(){return this.z},set:function(e){this.z=e}},{key:"height",get:function(){return this.w},set:function(e){this.w=e}},{key:"set",value:function(e,n,t,r){return this.x=e,this.y=n,this.z=t,this.w=r,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setW",value:function(e){return this.w=e,this}},{key:"setComponent",value:function(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}},{key:"addScaledVector",value:function(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"applyMatrix4",value:function(e){var n=this.x,t=this.y,r=this.z,a=this.w,i=e.elements;return this.x=i[0]*n+i[4]*t+i[8]*r+i[12]*a,this.y=i[1]*n+i[5]*t+i[9]*r+i[13]*a,this.z=i[2]*n+i[6]*t+i[10]*r+i[14]*a,this.w=i[3]*n+i[7]*t+i[11]*r+i[15]*a,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*Math.acos(e.w);var n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var n,t,r,a,i=.01,o=.1,l=e.elements,s=l[0],c=l[4],u=l[8],v=l[1],f=l[5],p=l[9],m=l[2],d=l[6],h=l[10];if(Math.abs(c-v)<i&&Math.abs(u-m)<i&&Math.abs(p-d)<i){if(Math.abs(c+v)<o&&Math.abs(u+m)<o&&Math.abs(p+d)<o&&Math.abs(s+f+h-3)<o)return this.set(1,0,0,0),this;n=Math.PI;var g=(s+1)/2,x=(f+1)/2,y=(h+1)/2,b=(c+v)/4,_=(u+m)/4,w=(p+d)/4;return g>x&&g>y?g<i?(t=0,r=.707106781,a=.707106781):(r=b/(t=Math.sqrt(g)),a=_/t):x>y?x<i?(t=.707106781,r=0,a=.707106781):(t=b/(r=Math.sqrt(x)),a=w/r):y<i?(t=.707106781,r=.707106781,a=0):(t=_/(a=Math.sqrt(y)),r=w/a),this.set(t,r,a,n),this}var S=Math.sqrt((d-p)*(d-p)+(u-m)*(u-m)+(v-c)*(v-c));return Math.abs(S)<.001&&(S=1),this.x=(d-p)/S,this.y=(u-m)/S,this.z=(v-c)/S,this.w=Math.acos((s+f+h-1)/2),this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}},{key:"clamp",value:function(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}},{key:"clampScalar",value:function(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}},{key:"clampLength",value:function(e,n){var t=this.length();return this.divideScalar(t||1).multiplyScalar(Math.max(e,Math.min(n,t)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}},{key:"lerpVectors",value:function(e,n,t){return this.x=e.x+(n.x-e.x)*t,this.y=e.y+(n.y-e.y)*t,this.z=e.z+(n.z-e.z)*t,this.w=e.w+(n.w-e.w)*t,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}},{key:"fromBufferAttribute",value:function(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}},{key:Symbol.iterator,value:D().mark((function e(){return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:return e.next=8,this.w;case 8:case"end":return e.stop()}}),e,this)}))}]),n}(),Rr=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};y(this,t),(e=n.call(this)).isWebGLRenderTarget=!0,e.width=r,e.height=a,e.depth=1,e.scissor=new Cr(0,0,r,a),e.scissorTest=!1,e.viewport=new Cr(0,0,r,a);var o={width:r,height:a,depth:1};return e.texture=new Tr(o,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),e.texture.isRenderTargetTexture=!0,e.texture.flipY=!1,e.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,e.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,e.texture.minFilter=void 0!==i.minFilter?i.minFilter:Xe,e.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,e.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,e.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,e.samples=void 0!==i.samples?i.samples:0,e}return _(t,[{key:"setSize",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.width===e&&this.height===n&&this.depth===t||(this.width=e,this.height=n,this.depth=t,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=t,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;var n=Object.assign({},e.texture.image);return this.texture.source=new Mr(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),t}(Ht),Fr=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(e=n.call(this,null)).isDataArrayTexture=!0,e.image={data:r,width:a,height:i,depth:o},e.magFilter=Ge,e.minFilter=Ge,e.wrapR=Be,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return _(t)}(Tr),Pr=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return y(this,t),(e=n.call(this,r,a)).isWebGLArrayRenderTarget=!0,e.depth=i,e.texture=new Fr(null,r,a,i),e.texture.isRenderTargetTexture=!0,e}return _(t)}(Rr),Dr=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(e=n.call(this,null)).isData3DTexture=!0,e.image={data:r,width:a,height:i,depth:o},e.magFilter=Ge,e.minFilter=Ge,e.wrapR=Be,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return _(t)}(Tr),Er=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return y(this,t),(e=n.call(this,r,a)).isWebGL3DRenderTarget=!0,e.depth=i,e.texture=new Dr(null,r,a,i),e.texture.isRenderTargetTexture=!0,e}return _(t)}(Rr),zr=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};y(this,t),(e=n.call(this,r,a,o)).isWebGLMultipleRenderTargets=!0;var l=e.texture;e.texture=[];for(var s=0;s<i;s++)e.texture[s]=l.clone(),e.texture[s].isRenderTargetTexture=!0;return e}return _(t,[{key:"setSize",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(this.width!==e||this.height!==n||this.depth!==t){this.width=e,this.height=n,this.depth=t;for(var r=0,a=this.texture.length;r<a;r++)this.texture[r].image.width=e,this.texture[r].image.height=n,this.texture[r].image.depth=t;this.dispose()}return this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n),this}},{key:"copy",value:function(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(var n=0,t=e.texture.length;n<t;n++)this.texture[n]=e.texture[n].clone(),this.texture[n].isRenderTargetTexture=!0;return this}}]),t}(Rr),Lr=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;y(this,n),this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=a}return _(n,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"w",get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}},{key:"set",value:function(e,n,t,r){return this._x=e,this._y=n,this._z=t,this._w=r,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._w)}},{key:"copy",value:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}},{key:"setFromEuler",value:function(e,n){var t=e._x,r=e._y,a=e._z,i=e._order,o=Math.cos,l=Math.sin,s=o(t/2),c=o(r/2),u=o(a/2),v=l(t/2),f=l(r/2),p=l(a/2);switch(i){case"XYZ":this._x=v*c*u+s*f*p,this._y=s*f*u-v*c*p,this._z=s*c*p+v*f*u,this._w=s*c*u-v*f*p;break;case"YXZ":this._x=v*c*u+s*f*p,this._y=s*f*u-v*c*p,this._z=s*c*p-v*f*u,this._w=s*c*u+v*f*p;break;case"ZXY":this._x=v*c*u-s*f*p,this._y=s*f*u+v*c*p,this._z=s*c*p+v*f*u,this._w=s*c*u-v*f*p;break;case"ZYX":this._x=v*c*u-s*f*p,this._y=s*f*u+v*c*p,this._z=s*c*p-v*f*u,this._w=s*c*u+v*f*p;break;case"YZX":this._x=v*c*u+s*f*p,this._y=s*f*u+v*c*p,this._z=s*c*p-v*f*u,this._w=s*c*u-v*f*p;break;case"XZY":this._x=v*c*u-s*f*p,this._y=s*f*u-v*c*p,this._z=s*c*p+v*f*u,this._w=s*c*u+v*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+i)}return!1!==n&&this._onChangeCallback(),this}},{key:"setFromAxisAngle",value:function(e,n){var t=n/2,r=Math.sin(t);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(t),this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var n=e.elements,t=n[0],r=n[4],a=n[8],i=n[1],o=n[5],l=n[9],s=n[2],c=n[6],u=n[10],v=t+o+u;if(v>0){var f=.5/Math.sqrt(v+1);this._w=.25/f,this._x=(c-l)*f,this._y=(a-s)*f,this._z=(i-r)*f}else if(t>o&&t>u){var p=2*Math.sqrt(1+t-o-u);this._w=(c-l)/p,this._x=.25*p,this._y=(r+i)/p,this._z=(a+s)/p}else if(o>u){var m=2*Math.sqrt(1+o-t-u);this._w=(a-s)/m,this._x=(r+i)/m,this._y=.25*m,this._z=(l+c)/m}else{var d=2*Math.sqrt(1+u-t-o);this._w=(i-r)/d,this._x=(a+s)/d,this._y=(l+c)/d,this._z=.25*d}return this._onChangeCallback(),this}},{key:"setFromUnitVectors",value:function(e,n){var t=e.dot(n)+1;return t<Number.EPSILON?(t=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=t):(this._x=0,this._y=-e.z,this._z=e.y,this._w=t)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=t),this.normalize()}},{key:"angleTo",value:function(e){return 2*Math.acos(Math.abs(Qt(this.dot(e),-1,1)))}},{key:"rotateTowards",value:function(e,n){var t=this.angleTo(e);if(0===t)return this;var r=Math.min(1,n/t);return this.slerp(e,r),this}},{key:"identity",value:function(){return this.set(0,0,0,1)}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}},{key:"dot",value:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}},{key:"lengthSq",value:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}},{key:"length",value:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}},{key:"normalize",value:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}},{key:"multiply",value:function(e){return this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"multiplyQuaternions",value:function(e,n){var t=e._x,r=e._y,a=e._z,i=e._w,o=n._x,l=n._y,s=n._z,c=n._w;return this._x=t*c+i*o+r*s-a*l,this._y=r*c+i*l+a*o-t*s,this._z=a*c+i*s+t*l-r*o,this._w=i*c-t*o-r*l-a*s,this._onChangeCallback(),this}},{key:"slerp",value:function(e,n){if(0===n)return this;if(1===n)return this.copy(e);var t=this._x,r=this._y,a=this._z,i=this._w,o=i*e._w+t*e._x+r*e._y+a*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=i,this._x=t,this._y=r,this._z=a,this;var l=1-o*o;if(l<=Number.EPSILON){var s=1-n;return this._w=s*i+n*this._w,this._x=s*t+n*this._x,this._y=s*r+n*this._y,this._z=s*a+n*this._z,this.normalize(),this._onChangeCallback(),this}var c=Math.sqrt(l),u=Math.atan2(c,o),v=Math.sin((1-n)*u)/c,f=Math.sin(n*u)/c;return this._w=i*v+this._w*f,this._x=t*v+this._x*f,this._y=r*v+this._y*f,this._z=a*v+this._z*f,this._onChangeCallback(),this}},{key:"slerpQuaternions",value:function(e,n,t){return this.copy(e).slerp(n,t)}},{key:"random",value:function(){var e=Math.random(),n=Math.sqrt(1-e),t=Math.sqrt(e),r=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(n*Math.cos(r),t*Math.sin(a),t*Math.cos(a),n*Math.sin(r))}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}},{key:"fromBufferAttribute",value:function(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:D().mark((function e(){return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._x;case 2:return e.next=4,this._y;case 4:return e.next=6,this._z;case 6:return e.next=8,this._w;case 8:case"end":return e.stop()}}),e,this)}))}],[{key:"slerpFlat",value:function(e,n,t,r,a,i,o){var l=t[r+0],s=t[r+1],c=t[r+2],u=t[r+3],v=a[i+0],f=a[i+1],p=a[i+2],m=a[i+3];if(0===o)return e[n+0]=l,e[n+1]=s,e[n+2]=c,void(e[n+3]=u);if(1===o)return e[n+0]=v,e[n+1]=f,e[n+2]=p,void(e[n+3]=m);if(u!==m||l!==v||s!==f||c!==p){var d=1-o,h=l*v+s*f+c*p+u*m,g=h>=0?1:-1,x=1-h*h;if(x>Number.EPSILON){var y=Math.sqrt(x),b=Math.atan2(y,h*g);d=Math.sin(d*b)/y,o=Math.sin(o*b)/y}var _=o*g;if(l=l*d+v*_,s=s*d+f*_,c=c*d+p*_,u=u*d+m*_,d===1-o){var w=1/Math.sqrt(l*l+s*s+c*c+u*u);l*=w,s*=w,c*=w,u*=w}}e[n]=l,e[n+1]=s,e[n+2]=c,e[n+3]=u}},{key:"multiplyQuaternionsFlat",value:function(e,n,t,r,a,i){var o=t[r],l=t[r+1],s=t[r+2],c=t[r+3],u=a[i],v=a[i+1],f=a[i+2],p=a[i+3];return e[n]=o*p+c*u+l*f-s*v,e[n+1]=l*p+c*v+s*u-o*f,e[n+2]=s*p+c*f+o*v-l*u,e[n+3]=c*p-o*u-l*v-s*f,e}}]),n}(),Ar=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;y(this,n),n.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}return _(n,[{key:"set",value:function(e,n,t){return void 0===t&&(t=this.z),this.x=e,this.y=n,this.z=t,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setComponent",value:function(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}},{key:"addScaledVector",value:function(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}},{key:"applyEuler",value:function(e){return this.applyQuaternion(Or.setFromEuler(e))}},{key:"applyAxisAngle",value:function(e,n){return this.applyQuaternion(Or.setFromAxisAngle(e,n))}},{key:"applyMatrix3",value:function(e){var n=this.x,t=this.y,r=this.z,a=e.elements;return this.x=a[0]*n+a[3]*t+a[6]*r,this.y=a[1]*n+a[4]*t+a[7]*r,this.z=a[2]*n+a[5]*t+a[8]*r,this}},{key:"applyNormalMatrix",value:function(e){return this.applyMatrix3(e).normalize()}},{key:"applyMatrix4",value:function(e){var n=this.x,t=this.y,r=this.z,a=e.elements,i=1/(a[3]*n+a[7]*t+a[11]*r+a[15]);return this.x=(a[0]*n+a[4]*t+a[8]*r+a[12])*i,this.y=(a[1]*n+a[5]*t+a[9]*r+a[13])*i,this.z=(a[2]*n+a[6]*t+a[10]*r+a[14])*i,this}},{key:"applyQuaternion",value:function(e){var n=this.x,t=this.y,r=this.z,a=e.x,i=e.y,o=e.z,l=e.w,s=l*n+i*r-o*t,c=l*t+o*n-a*r,u=l*r+a*t-i*n,v=-a*n-i*t-o*r;return this.x=s*l+v*-a+c*-o-u*-i,this.y=c*l+v*-i+u*-a-s*-o,this.z=u*l+v*-o+s*-i-c*-a,this}},{key:"project",value:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}},{key:"unproject",value:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}},{key:"transformDirection",value:function(e){var n=this.x,t=this.y,r=this.z,a=e.elements;return this.x=a[0]*n+a[4]*t+a[8]*r,this.y=a[1]*n+a[5]*t+a[9]*r,this.z=a[2]*n+a[6]*t+a[10]*r,this.normalize()}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}},{key:"clamp",value:function(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}},{key:"clampScalar",value:function(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}},{key:"clampLength",value:function(e,n){var t=this.length();return this.divideScalar(t||1).multiplyScalar(Math.max(e,Math.min(n,t)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}},{key:"lerpVectors",value:function(e,n,t){return this.x=e.x+(n.x-e.x)*t,this.y=e.y+(n.y-e.y)*t,this.z=e.z+(n.z-e.z)*t,this}},{key:"cross",value:function(e){return this.crossVectors(this,e)}},{key:"crossVectors",value:function(e,n){var t=e.x,r=e.y,a=e.z,i=n.x,o=n.y,l=n.z;return this.x=r*l-a*o,this.y=a*i-t*l,this.z=t*o-r*i,this}},{key:"projectOnVector",value:function(e){var n=e.lengthSq();if(0===n)return this.set(0,0,0);var t=e.dot(this)/n;return this.copy(e).multiplyScalar(t)}},{key:"projectOnPlane",value:function(e){return Ir.copy(this).projectOnVector(e),this.sub(Ir)}},{key:"reflect",value:function(e){return this.sub(Ir.copy(e).multiplyScalar(2*this.dot(e)))}},{key:"angleTo",value:function(e){var n=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===n)return Math.PI/2;var t=this.dot(e)/n;return Math.acos(Qt(t,-1,1))}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var n=this.x-e.x,t=this.y-e.y,r=this.z-e.z;return n*n+t*t+r*r}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}},{key:"setFromSpherical",value:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,n,t){var r=Math.sin(n)*e;return this.x=r*Math.sin(t),this.y=Math.cos(n)*e,this.z=r*Math.cos(t),this}},{key:"setFromCylindrical",value:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,n,t){return this.x=e*Math.sin(n),this.y=t,this.z=e*Math.cos(n),this}},{key:"setFromMatrixPosition",value:function(e){var n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}},{key:"setFromMatrixScale",value:function(e){var n=this.setFromMatrixColumn(e,0).length(),t=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=t,this.z=r,this}},{key:"setFromMatrixColumn",value:function(e,n){return this.fromArray(e.elements,4*n)}},{key:"setFromMatrix3Column",value:function(e,n){return this.fromArray(e.elements,3*n)}},{key:"setFromEuler",value:function(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}},{key:"fromArray",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}},{key:"fromBufferAttribute",value:function(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}},{key:"randomDirection",value:function(){var e=2*(Math.random()-.5),n=Math.random()*Math.PI*2,t=Math.sqrt(1-Math.pow(e,2));return this.x=t*Math.cos(n),this.y=t*Math.sin(n),this.z=e,this}},{key:Symbol.iterator,value:D().mark((function e(){return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:case"end":return e.stop()}}),e,this)}))}]),n}(),Ir=new Ar,Or=new Lr,Br=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar(1/0,1/0,1/0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar(-1/0,-1/0,-1/0);y(this,e),this.isBox3=!0,this.min=n,this.max=t}return _(e,[{key:"set",value:function(e,n){return this.min.copy(e),this.max.copy(n),this}},{key:"setFromArray",value:function(e){for(var n=1/0,t=1/0,r=1/0,a=-1/0,i=-1/0,o=-1/0,l=0,s=e.length;l<s;l+=3){var c=e[l],u=e[l+1],v=e[l+2];c<n&&(n=c),u<t&&(t=u),v<r&&(r=v),c>a&&(a=c),u>i&&(i=u),v>o&&(o=v)}return this.min.set(n,t,r),this.max.set(a,i,o),this}},{key:"setFromBufferAttribute",value:function(e){for(var n=1/0,t=1/0,r=1/0,a=-1/0,i=-1/0,o=-1/0,l=0,s=e.count;l<s;l++){var c=e.getX(l),u=e.getY(l),v=e.getZ(l);c<n&&(n=c),u<t&&(t=u),v<r&&(r=v),c>a&&(a=c),u>i&&(i=u),v>o&&(o=v)}return this.min.set(n,t,r),this.max.set(a,i,o),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var n=0,t=e.length;n<t;n++)this.expandByPoint(e[n]);return this}},{key:"setFromCenterAndSize",value:function(e,n){var t=Gr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:"setFromObject",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.makeEmpty(),this.expandByObject(e,n)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"expandByObject",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e.updateWorldMatrix(!1,!1);var t=e.geometry;if(void 0!==t)if(n&&void 0!=t.attributes&&void 0!==t.attributes.position)for(var r=t.attributes.position,a=0,i=r.count;a<i;a++)Gr.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Gr);else null===t.boundingBox&&t.computeBoundingBox(),Vr.copy(t.boundingBox),Vr.applyMatrix4(e.matrixWorld),this.union(Vr);for(var o=e.children,l=0,s=o.length;l<s;l++)this.expandByObject(o[l],n);return this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}},{key:"getParameter",value:function(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}},{key:"intersectsSphere",value:function(e){return this.clampPoint(e.center,Gr),Gr.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var n,t;return e.normal.x>0?(n=e.normal.x*this.min.x,t=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,t=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,t+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,t+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,t+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,t+=e.normal.z*this.min.z),n<=-e.constant&&t>=-e.constant}},{key:"intersectsTriangle",value:function(e){if(this.isEmpty())return!1;this.getCenter(Jr),Qr.subVectors(this.max,Jr),qr.subVectors(e.a,Jr),Hr.subVectors(e.b,Jr),Wr.subVectors(e.c,Jr),Xr.subVectors(Hr,qr),Yr.subVectors(Wr,Hr),Zr.subVectors(qr,Wr);var n=[0,-Xr.z,Xr.y,0,-Yr.z,Yr.y,0,-Zr.z,Zr.y,Xr.z,0,-Xr.x,Yr.z,0,-Yr.x,Zr.z,0,-Zr.x,-Xr.y,Xr.x,0,-Yr.y,Yr.x,0,-Zr.y,Zr.x,0];return!!ea(n,qr,Hr,Wr,Qr)&&(!!ea(n=[1,0,0,0,1,0,0,0,1],qr,Hr,Wr,Qr)&&($r.crossVectors(Xr,Yr),ea(n=[$r.x,$r.y,$r.z],qr,Hr,Wr,Qr)))}},{key:"clampPoint",value:function(e,n){return n.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return Gr.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"getBoundingSphere",value:function(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Gr).length(),e}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"applyMatrix4",value:function(e){return this.isEmpty()||(Nr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Nr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Nr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Nr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Nr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Nr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Nr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Nr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Nr)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),Nr=[new Ar,new Ar,new Ar,new Ar,new Ar,new Ar,new Ar,new Ar],Gr=new Ar,Vr=new Br,qr=new Ar,Hr=new Ar,Wr=new Ar,Xr=new Ar,Yr=new Ar,Zr=new Ar,Jr=new Ar,Qr=new Ar,$r=new Ar,Kr=new Ar;function ea(e,n,t,r,a){for(var i=0,o=e.length-3;i<=o;i+=3){Kr.fromArray(e,i);var l=a.x*Math.abs(Kr.x)+a.y*Math.abs(Kr.y)+a.z*Math.abs(Kr.z),s=n.dot(Kr),c=t.dot(Kr),u=r.dot(Kr);if(Math.max(-Math.max(s,c,u),Math.min(s,c,u))>l)return!1}return!0}var na=new Br,ta=new Ar,ra=new Ar,aa=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;y(this,e),this.center=n,this.radius=t}return _(e,[{key:"set",value:function(e,n){return this.center.copy(e),this.radius=n,this}},{key:"setFromPoints",value:function(e,n){var t=this.center;void 0!==n?t.copy(n):na.setFromPoints(e).getCenter(t);for(var r=0,a=0,i=e.length;a<i;a++)r=Math.max(r,t.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"isEmpty",value:function(){return this.radius<0}},{key:"makeEmpty",value:function(){return this.center.set(0,0,0),this.radius=-1,this}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"intersectsSphere",value:function(e){var n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}},{key:"clampPoint",value:function(e,n){var t=this.center.distanceToSquared(e);return n.copy(e),t>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}},{key:"getBoundingBox",value:function(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}},{key:"applyMatrix4",value:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"expandByPoint",value:function(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ta.subVectors(e,this.center);var n=ta.lengthSq();if(n>this.radius*this.radius){var t=Math.sqrt(n),r=.5*(t-this.radius);this.center.addScaledVector(ta,r/t),this.radius+=r}return this}},{key:"union",value:function(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(ra.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ta.copy(e.center).add(ra)),this.expandByPoint(ta.copy(e.center).sub(ra))),this)}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),ia=new Ar,oa=new Ar,la=new Ar,sa=new Ar,ca=new Ar,ua=new Ar,va=new Ar,fa=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar(0,0,-1);y(this,e),this.origin=n,this.direction=t}return _(e,[{key:"set",value:function(e,n){return this.origin.copy(e),this.direction.copy(n),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"at",value:function(e,n){return n.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,ia)),this}},{key:"closestPointToPoint",value:function(e,n){n.subVectors(e,this.origin);var t=n.dot(this.direction);return t<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(t).add(this.origin)}},{key:"distanceToPoint",value:function(e){return Math.sqrt(this.distanceSqToPoint(e))}},{key:"distanceSqToPoint",value:function(e){var n=ia.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(ia.copy(this.direction).multiplyScalar(n).add(this.origin),ia.distanceToSquared(e))}},{key:"distanceSqToSegment",value:function(e,n,t,r){oa.copy(e).add(n).multiplyScalar(.5),la.copy(n).sub(e).normalize(),sa.copy(this.origin).sub(oa);var a,i,o,l,s=.5*e.distanceTo(n),c=-this.direction.dot(la),u=sa.dot(this.direction),v=-sa.dot(la),f=sa.lengthSq(),p=Math.abs(1-c*c);if(p>0)if(i=c*u-v,l=s*p,(a=c*v-u)>=0)if(i>=-l)if(i<=l){var m=1/p;o=(a*=m)*(a+c*(i*=m)+2*u)+i*(c*a+i+2*v)+f}else i=s,o=-(a=Math.max(0,-(c*i+u)))*a+i*(i+2*v)+f;else i=-s,o=-(a=Math.max(0,-(c*i+u)))*a+i*(i+2*v)+f;else i<=-l?o=-(a=Math.max(0,-(-c*s+u)))*a+(i=a>0?-s:Math.min(Math.max(-s,-v),s))*(i+2*v)+f:i<=l?(a=0,o=(i=Math.min(Math.max(-s,-v),s))*(i+2*v)+f):o=-(a=Math.max(0,-(c*s+u)))*a+(i=a>0?s:Math.min(Math.max(-s,-v),s))*(i+2*v)+f;else i=c>0?-s:s,o=-(a=Math.max(0,-(c*i+u)))*a+i*(i+2*v)+f;return t&&t.copy(this.direction).multiplyScalar(a).add(this.origin),r&&r.copy(la).multiplyScalar(i).add(oa),o}},{key:"intersectSphere",value:function(e,n){ia.subVectors(e.center,this.origin);var t=ia.dot(this.direction),r=ia.dot(ia)-t*t,a=e.radius*e.radius;if(r>a)return null;var i=Math.sqrt(a-r),o=t-i,l=t+i;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"distanceToPlane",value:function(e){var n=e.normal.dot(this.direction);if(0===n)return 0===e.distanceToPoint(this.origin)?0:null;var t=-(this.origin.dot(e.normal)+e.constant)/n;return t>=0?t:null}},{key:"intersectPlane",value:function(e,n){var t=this.distanceToPlane(e);return null===t?null:this.at(t,n)}},{key:"intersectsPlane",value:function(e){var n=e.distanceToPoint(this.origin);return 0===n||e.normal.dot(this.direction)*n<0}},{key:"intersectBox",value:function(e,n){var t,r,a,i,o,l,s=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,v=this.origin;return s>=0?(t=(e.min.x-v.x)*s,r=(e.max.x-v.x)*s):(t=(e.max.x-v.x)*s,r=(e.min.x-v.x)*s),c>=0?(a=(e.min.y-v.y)*c,i=(e.max.y-v.y)*c):(a=(e.max.y-v.y)*c,i=(e.min.y-v.y)*c),t>i||a>r?null:((a>t||isNaN(t))&&(t=a),(i<r||isNaN(r))&&(r=i),u>=0?(o=(e.min.z-v.z)*u,l=(e.max.z-v.z)*u):(o=(e.max.z-v.z)*u,l=(e.min.z-v.z)*u),t>l||o>r?null:((o>t||t!==t)&&(t=o),(l<r||r!==r)&&(r=l),r<0?null:this.at(t>=0?t:r,n)))}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,ia)}},{key:"intersectTriangle",value:function(e,n,t,r,a){ca.subVectors(n,e),ua.subVectors(t,e),va.crossVectors(ca,ua);var i,o=this.direction.dot(va);if(o>0){if(r)return null;i=1}else{if(!(o<0))return null;i=-1,o=-o}sa.subVectors(this.origin,e);var l=i*this.direction.dot(ua.crossVectors(sa,ua));if(l<0)return null;var s=i*this.direction.dot(ca.cross(sa));if(s<0)return null;if(l+s>o)return null;var c=-i*sa.dot(va);return c<0?null:this.at(c/o,a)}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),pa=function(){function e(){y(this,e),e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}return _(e,[{key:"set",value:function(e,n,t,r,a,i,o,l,s,c,u,v,f,p,m,d){var h=this.elements;return h[0]=e,h[4]=n,h[8]=t,h[12]=r,h[1]=a,h[5]=i,h[9]=o,h[13]=l,h[2]=s,h[6]=c,h[10]=u,h[14]=v,h[3]=f,h[7]=p,h[11]=m,h[15]=d,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"clone",value:function(){return(new e).fromArray(this.elements)}},{key:"copy",value:function(e){var n=this.elements,t=e.elements;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],this}},{key:"copyPosition",value:function(e){var n=this.elements,t=e.elements;return n[12]=t[12],n[13]=t[13],n[14]=t[14],this}},{key:"setFromMatrix3",value:function(e){var n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}},{key:"extractBasis",value:function(e,n,t){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),t.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,n,t){return this.set(e.x,n.x,t.x,0,e.y,n.y,t.y,0,e.z,n.z,t.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var n=this.elements,t=e.elements,r=1/ma.setFromMatrixColumn(e,0).length(),a=1/ma.setFromMatrixColumn(e,1).length(),i=1/ma.setFromMatrixColumn(e,2).length();return n[0]=t[0]*r,n[1]=t[1]*r,n[2]=t[2]*r,n[3]=0,n[4]=t[4]*a,n[5]=t[5]*a,n[6]=t[6]*a,n[7]=0,n[8]=t[8]*i,n[9]=t[9]*i,n[10]=t[10]*i,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}},{key:"makeRotationFromEuler",value:function(e){var n=this.elements,t=e.x,r=e.y,a=e.z,i=Math.cos(t),o=Math.sin(t),l=Math.cos(r),s=Math.sin(r),c=Math.cos(a),u=Math.sin(a);if("XYZ"===e.order){var v=i*c,f=i*u,p=o*c,m=o*u;n[0]=l*c,n[4]=-l*u,n[8]=s,n[1]=f+p*s,n[5]=v-m*s,n[9]=-o*l,n[2]=m-v*s,n[6]=p+f*s,n[10]=i*l}else if("YXZ"===e.order){var d=l*c,h=l*u,g=s*c,x=s*u;n[0]=d+x*o,n[4]=g*o-h,n[8]=i*s,n[1]=i*u,n[5]=i*c,n[9]=-o,n[2]=h*o-g,n[6]=x+d*o,n[10]=i*l}else if("ZXY"===e.order){var y=l*c,b=l*u,_=s*c,w=s*u;n[0]=y-w*o,n[4]=-i*u,n[8]=_+b*o,n[1]=b+_*o,n[5]=i*c,n[9]=w-y*o,n[2]=-i*s,n[6]=o,n[10]=i*l}else if("ZYX"===e.order){var S=i*c,U=i*u,M=o*c,j=o*u;n[0]=l*c,n[4]=M*s-U,n[8]=S*s+j,n[1]=l*u,n[5]=j*s+S,n[9]=U*s-M,n[2]=-s,n[6]=o*l,n[10]=i*l}else if("YZX"===e.order){var k=i*l,T=i*s,C=o*l,R=o*s;n[0]=l*c,n[4]=R-k*u,n[8]=C*u+T,n[1]=u,n[5]=i*c,n[9]=-o*c,n[2]=-s*c,n[6]=T*u+C,n[10]=k-R*u}else if("XZY"===e.order){var F=i*l,P=i*s,D=o*l,E=o*s;n[0]=l*c,n[4]=-u,n[8]=s*c,n[1]=F*u+E,n[5]=i*c,n[9]=P*u-D,n[2]=D*u-P,n[6]=o*c,n[10]=E*u+F}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(ha,e,ga)}},{key:"lookAt",value:function(e,n,t){var r=this.elements;return ba.subVectors(e,n),0===ba.lengthSq()&&(ba.z=1),ba.normalize(),xa.crossVectors(t,ba),0===xa.lengthSq()&&(1===Math.abs(t.z)?ba.x+=1e-4:ba.z+=1e-4,ba.normalize(),xa.crossVectors(t,ba)),xa.normalize(),ya.crossVectors(ba,xa),r[0]=xa.x,r[4]=ya.x,r[8]=ba.x,r[1]=xa.y,r[5]=ya.y,r[9]=ba.y,r[2]=xa.z,r[6]=ya.z,r[10]=ba.z,this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,n){var t=e.elements,r=n.elements,a=this.elements,i=t[0],o=t[4],l=t[8],s=t[12],c=t[1],u=t[5],v=t[9],f=t[13],p=t[2],m=t[6],d=t[10],h=t[14],g=t[3],x=t[7],y=t[11],b=t[15],_=r[0],w=r[4],S=r[8],U=r[12],M=r[1],j=r[5],k=r[9],T=r[13],C=r[2],R=r[6],F=r[10],P=r[14],D=r[3],E=r[7],z=r[11],L=r[15];return a[0]=i*_+o*M+l*C+s*D,a[4]=i*w+o*j+l*R+s*E,a[8]=i*S+o*k+l*F+s*z,a[12]=i*U+o*T+l*P+s*L,a[1]=c*_+u*M+v*C+f*D,a[5]=c*w+u*j+v*R+f*E,a[9]=c*S+u*k+v*F+f*z,a[13]=c*U+u*T+v*P+f*L,a[2]=p*_+m*M+d*C+h*D,a[6]=p*w+m*j+d*R+h*E,a[10]=p*S+m*k+d*F+h*z,a[14]=p*U+m*T+d*P+h*L,a[3]=g*_+x*M+y*C+b*D,a[7]=g*w+x*j+y*R+b*E,a[11]=g*S+x*k+y*F+b*z,a[15]=g*U+x*T+y*P+b*L,this}},{key:"multiplyScalar",value:function(e){var n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,n=e[0],t=e[4],r=e[8],a=e[12],i=e[1],o=e[5],l=e[9],s=e[13],c=e[2],u=e[6],v=e[10],f=e[14];return e[3]*(+a*l*u-r*s*u-a*o*v+t*s*v+r*o*f-t*l*f)+e[7]*(+n*l*f-n*s*v+a*i*v-r*i*f+r*s*c-a*l*c)+e[11]*(+n*s*u-n*o*f-a*i*u+t*i*f+a*o*c-t*s*c)+e[15]*(-r*o*c-n*l*u+n*o*v+r*i*u-t*i*v+t*l*c)}},{key:"transpose",value:function(){var e,n=this.elements;return e=n[1],n[1]=n[4],n[4]=e,e=n[2],n[2]=n[8],n[8]=e,e=n[6],n[6]=n[9],n[9]=e,e=n[3],n[3]=n[12],n[12]=e,e=n[7],n[7]=n[13],n[13]=e,e=n[11],n[11]=n[14],n[14]=e,this}},{key:"setPosition",value:function(e,n,t){var r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=t),this}},{key:"invert",value:function(){var e=this.elements,n=e[0],t=e[1],r=e[2],a=e[3],i=e[4],o=e[5],l=e[6],s=e[7],c=e[8],u=e[9],v=e[10],f=e[11],p=e[12],m=e[13],d=e[14],h=e[15],g=u*d*s-m*v*s+m*l*f-o*d*f-u*l*h+o*v*h,x=p*v*s-c*d*s-p*l*f+i*d*f+c*l*h-i*v*h,y=c*m*s-p*u*s+p*o*f-i*m*f-c*o*h+i*u*h,b=p*u*l-c*m*l-p*o*v+i*m*v+c*o*d-i*u*d,_=n*g+t*x+r*y+a*b;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var w=1/_;return e[0]=g*w,e[1]=(m*v*a-u*d*a-m*r*f+t*d*f+u*r*h-t*v*h)*w,e[2]=(o*d*a-m*l*a+m*r*s-t*d*s-o*r*h+t*l*h)*w,e[3]=(u*l*a-o*v*a-u*r*s+t*v*s+o*r*f-t*l*f)*w,e[4]=x*w,e[5]=(c*d*a-p*v*a+p*r*f-n*d*f-c*r*h+n*v*h)*w,e[6]=(p*l*a-i*d*a-p*r*s+n*d*s+i*r*h-n*l*h)*w,e[7]=(i*v*a-c*l*a+c*r*s-n*v*s-i*r*f+n*l*f)*w,e[8]=y*w,e[9]=(p*u*a-c*m*a-p*t*f+n*m*f+c*t*h-n*u*h)*w,e[10]=(i*m*a-p*o*a+p*t*s-n*m*s-i*t*h+n*o*h)*w,e[11]=(c*o*a-i*u*a-c*t*s+n*u*s+i*t*f-n*o*f)*w,e[12]=b*w,e[13]=(c*m*r-p*u*r+p*t*v-n*m*v-c*t*d+n*u*d)*w,e[14]=(p*o*r-i*m*r-p*t*l+n*m*l+i*t*d-n*o*d)*w,e[15]=(i*u*r-c*o*r+c*t*l-n*u*l-i*t*v+n*o*v)*w,this}},{key:"scale",value:function(e){var n=this.elements,t=e.x,r=e.y,a=e.z;return n[0]*=t,n[4]*=r,n[8]*=a,n[1]*=t,n[5]*=r,n[9]*=a,n[2]*=t,n[6]*=r,n[10]*=a,n[3]*=t,n[7]*=r,n[11]*=a,this}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],t=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,t,r))}},{key:"makeTranslation",value:function(e,n,t){return this.set(1,0,0,e,0,1,0,n,0,0,1,t,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var n=Math.cos(e),t=Math.sin(e);return this.set(1,0,0,0,0,n,-t,0,0,t,n,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var n=Math.cos(e),t=Math.sin(e);return this.set(n,0,t,0,0,1,0,0,-t,0,n,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var n=Math.cos(e),t=Math.sin(e);return this.set(n,-t,0,0,t,n,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,n){var t=Math.cos(n),r=Math.sin(n),a=1-t,i=e.x,o=e.y,l=e.z,s=a*i,c=a*o;return this.set(s*i+t,s*o-r*l,s*l+r*o,0,s*o+r*l,c*o+t,c*l-r*i,0,s*l-r*o,c*l+r*i,a*l*l+t,0,0,0,0,1),this}},{key:"makeScale",value:function(e,n,t){return this.set(e,0,0,0,0,n,0,0,0,0,t,0,0,0,0,1),this}},{key:"makeShear",value:function(e,n,t,r,a,i){return this.set(1,t,a,0,e,1,i,0,n,r,1,0,0,0,0,1),this}},{key:"compose",value:function(e,n,t){var r=this.elements,a=n._x,i=n._y,o=n._z,l=n._w,s=a+a,c=i+i,u=o+o,v=a*s,f=a*c,p=a*u,m=i*c,d=i*u,h=o*u,g=l*s,x=l*c,y=l*u,b=t.x,_=t.y,w=t.z;return r[0]=(1-(m+h))*b,r[1]=(f+y)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(f-y)*_,r[5]=(1-(v+h))*_,r[6]=(d+g)*_,r[7]=0,r[8]=(p+x)*w,r[9]=(d-g)*w,r[10]=(1-(v+m))*w,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}},{key:"decompose",value:function(e,n,t){var r=this.elements,a=ma.set(r[0],r[1],r[2]).length(),i=ma.set(r[4],r[5],r[6]).length(),o=ma.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),e.x=r[12],e.y=r[13],e.z=r[14],da.copy(this);var l=1/a,s=1/i,c=1/o;return da.elements[0]*=l,da.elements[1]*=l,da.elements[2]*=l,da.elements[4]*=s,da.elements[5]*=s,da.elements[6]*=s,da.elements[8]*=c,da.elements[9]*=c,da.elements[10]*=c,n.setFromRotationMatrix(da),t.x=a,t.y=i,t.z=o,this}},{key:"makePerspective",value:function(e,n,t,r,a,i){var o=this.elements,l=2*a/(n-e),s=2*a/(t-r),c=(n+e)/(n-e),u=(t+r)/(t-r),v=-(i+a)/(i-a),f=-2*i*a/(i-a);return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=s,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=v,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}},{key:"makeOrthographic",value:function(e,n,t,r,a,i){var o=this.elements,l=1/(n-e),s=1/(t-r),c=1/(i-a),u=(n+e)*l,v=(t+r)*s,f=(i+a)*c;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*s,o[9]=0,o[13]=-v,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}},{key:"equals",value:function(e){for(var n=this.elements,t=e.elements,r=0;r<16;r++)if(n[r]!==t[r])return!1;return!0}},{key:"fromArray",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=0;t<16;t++)this.elements[t]=e[t+n];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.elements;return e[n]=t[0],e[n+1]=t[1],e[n+2]=t[2],e[n+3]=t[3],e[n+4]=t[4],e[n+5]=t[5],e[n+6]=t[6],e[n+7]=t[7],e[n+8]=t[8],e[n+9]=t[9],e[n+10]=t[10],e[n+11]=t[11],e[n+12]=t[12],e[n+13]=t[13],e[n+14]=t[14],e[n+15]=t[15],e}}]),e}(),ma=new Ar,da=new pa,ha=new Ar(0,0,0),ga=new Ar(1,1,1),xa=new Ar,ya=new Ar,ba=new Ar,_a=new pa,wa=new Lr,Sa=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n.DefaultOrder;y(this,n),this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=a}return _(n,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"order",get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}},{key:"set",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=n,this._z=t,this._order=r,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._order)}},{key:"copy",value:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=e.elements,a=r[0],i=r[4],o=r[8],l=r[1],s=r[5],c=r[9],u=r[2],v=r[6],f=r[10];switch(n){case"XYZ":this._y=Math.asin(Qt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-i,a)):(this._x=Math.atan2(v,s),this._z=0);break;case"YXZ":this._x=Math.asin(-Qt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(l,s)):(this._y=Math.atan2(-u,a),this._z=0);break;case"ZXY":this._x=Math.asin(Qt(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-i,s)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-Qt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(v,f),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-i,s));break;case"YZX":this._z=Math.asin(Qt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,s),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-Qt(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(v,s),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,!0===t&&this._onChangeCallback(),this}},{key:"setFromQuaternion",value:function(e,n,t){return _a.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_a,n,t)}},{key:"setFromVector3",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,n)}},{key:"reorder",value:function(e){return wa.setFromEuler(this),this.setFromQuaternion(wa,e)}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}},{key:"fromArray",value:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:D().mark((function e(){return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._x;case 2:return e.next=4,this._y;case 4:return e.next=6,this._z;case 6:return e.next=8,this._order;case 8:case"end":return e.stop()}}),e,this)}))},{key:"toVector3",value:function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}]),n}();Sa.DefaultOrder="XYZ",Sa.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var Ua=function(){function e(){y(this,e),this.mask=1}return _(e,[{key:"set",value:function(e){this.mask=(1<<e|0)>>>0}},{key:"enable",value:function(e){this.mask|=1<<e|0}},{key:"enableAll",value:function(){this.mask=-1}},{key:"toggle",value:function(e){this.mask^=1<<e|0}},{key:"disable",value:function(e){this.mask&=~(1<<e|0)}},{key:"disableAll",value:function(){this.mask=0}},{key:"test",value:function(e){return 0!==(this.mask&e.mask)}},{key:"isEnabled",value:function(e){return 0!==(this.mask&(1<<e|0))}}]),e}(),Ma=0,ja=new Ar,ka=new Lr,Ta=new pa,Ca=new Ar,Ra=new Ar,Fa=new Ar,Pa=new Lr,Da=new Ar(1,0,0),Ea=new Ar(0,1,0),za=new Ar(0,0,1),La={type:"added"},Aa={type:"removed"},Ia=function(e){w(t,e);var n=k(t);function t(){var e;y(this,t),(e=n.call(this)).isObject3D=!0,Object.defineProperty(M(e),"id",{value:Ma++}),e.uuid=Jt(),e.name="",e.type="Object3D",e.parent=null,e.children=[],e.up=t.DefaultUp.clone();var r=new Ar,a=new Sa,i=new Lr,o=new Ar(1,1,1);return a._onChange((function(){i.setFromEuler(a,!1)})),i._onChange((function(){a.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(M(e),{position:{configurable:!0,enumerable:!0,value:r},rotation:{configurable:!0,enumerable:!0,value:a},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new pa},normalMatrix:{value:new lr}}),e.matrix=new pa,e.matrixWorld=new pa,e.matrixAutoUpdate=t.DefaultMatrixAutoUpdate,e.matrixWorldNeedsUpdate=!1,e.matrixWorldAutoUpdate=t.DefaultMatrixWorldAutoUpdate,e.layers=new Ua,e.visible=!0,e.castShadow=!1,e.receiveShadow=!1,e.frustumCulled=!0,e.renderOrder=0,e.animations=[],e.userData={},e}return _(t,[{key:"onBeforeRender",value:function(){}},{key:"onAfterRender",value:function(){}},{key:"applyMatrix4",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}},{key:"applyQuaternion",value:function(e){return this.quaternion.premultiply(e),this}},{key:"setRotationFromAxisAngle",value:function(e,n){this.quaternion.setFromAxisAngle(e,n)}},{key:"setRotationFromEuler",value:function(e){this.quaternion.setFromEuler(e,!0)}},{key:"setRotationFromMatrix",value:function(e){this.quaternion.setFromRotationMatrix(e)}},{key:"setRotationFromQuaternion",value:function(e){this.quaternion.copy(e)}},{key:"rotateOnAxis",value:function(e,n){return ka.setFromAxisAngle(e,n),this.quaternion.multiply(ka),this}},{key:"rotateOnWorldAxis",value:function(e,n){return ka.setFromAxisAngle(e,n),this.quaternion.premultiply(ka),this}},{key:"rotateX",value:function(e){return this.rotateOnAxis(Da,e)}},{key:"rotateY",value:function(e){return this.rotateOnAxis(Ea,e)}},{key:"rotateZ",value:function(e){return this.rotateOnAxis(za,e)}},{key:"translateOnAxis",value:function(e,n){return ja.copy(e).applyQuaternion(this.quaternion),this.position.add(ja.multiplyScalar(n)),this}},{key:"translateX",value:function(e){return this.translateOnAxis(Da,e)}},{key:"translateY",value:function(e){return this.translateOnAxis(Ea,e)}},{key:"translateZ",value:function(e){return this.translateOnAxis(za,e)}},{key:"localToWorld",value:function(e){return e.applyMatrix4(this.matrixWorld)}},{key:"worldToLocal",value:function(e){return e.applyMatrix4(Ta.copy(this.matrixWorld).invert())}},{key:"lookAt",value:function(e,n,t){e.isVector3?Ca.copy(e):Ca.set(e,n,t);var r=this.parent;this.updateWorldMatrix(!0,!1),Ra.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ta.lookAt(Ra,Ca,this.up):Ta.lookAt(Ca,Ra,this.up),this.quaternion.setFromRotationMatrix(Ta),r&&(Ta.extractRotation(r.matrixWorld),ka.setFromRotationMatrix(Ta),this.quaternion.premultiply(ka.invert()))}},{key:"add",value:function(e){if(arguments.length>1){for(var n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(La)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}},{key:"remove",value:function(e){if(arguments.length>1){for(var n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Aa)),this}},{key:"removeFromParent",value:function(){var e=this.parent;return null!==e&&e.remove(this),this}},{key:"clear",value:function(){for(var e=0;e<this.children.length;e++){var n=this.children[e];n.parent=null,n.dispatchEvent(Aa)}return this.children.length=0,this}},{key:"attach",value:function(e){return this.updateWorldMatrix(!0,!1),Ta.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Ta.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ta),this.add(e),e.updateWorldMatrix(!1,!0),this}},{key:"getObjectById",value:function(e){return this.getObjectByProperty("id",e)}},{key:"getObjectByName",value:function(e){return this.getObjectByProperty("name",e)}},{key:"getObjectByProperty",value:function(e,n){if(this[e]===n)return this;for(var t=0,r=this.children.length;t<r;t++){var a=this.children[t].getObjectByProperty(e,n);if(void 0!==a)return a}}},{key:"getWorldPosition",value:function(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}},{key:"getWorldQuaternion",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ra,e,Fa),e}},{key:"getWorldScale",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ra,Pa,e),e}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}},{key:"raycast",value:function(){}},{key:"traverse",value:function(e){e(this);for(var n=this.children,t=0,r=n.length;t<r;t++)n[t].traverse(e)}},{key:"traverseVisible",value:function(e){if(!1!==this.visible){e(this);for(var n=this.children,t=0,r=n.length;t<r;t++)n[t].traverseVisible(e)}}},{key:"traverseAncestors",value:function(e){var n=this.parent;null!==n&&(e(n),n.traverseAncestors(e))}},{key:"updateMatrix",value:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}},{key:"updateMatrixWorld",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var n=this.children,t=0,r=n.length;t<r;t++){var a=n[t];!0!==a.matrixWorldAutoUpdate&&!0!==e||a.updateMatrixWorld(e)}}},{key:"updateWorldMatrix",value:function(e,n){var t=this.parent;if(!0===e&&null!==t&&!0===t.matrixWorldAutoUpdate&&t.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===n)for(var r=this.children,a=0,i=r.length;a<i;a++){var o=r[a];!0===o.matrixWorldAutoUpdate&&o.updateWorldMatrix(!1,!0)}}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e,t={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},t.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var r={};function a(n,t){return void 0===n[t.uuid]&&(n[t.uuid]=t.toJSON(e)),t.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(e.geometries,this.geometry);var i=this.geometry.parameters;if(void 0!==i&&void 0!==i.shapes){var o=i.shapes;if(Array.isArray(o))for(var l=0,s=o.length;l<s;l++){var c=o[l];a(e.shapes,c)}else a(e.shapes,o)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){for(var u=[],v=0,f=this.material.length;v<f;v++)u.push(a(e.materials,this.material[v]));r.material=u}else r.material=a(e.materials,this.material);if(this.children.length>0){r.children=[];for(var p=0;p<this.children.length;p++)r.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(var m=0;m<this.animations.length;m++){var d=this.animations[m];r.animations.push(a(e.animations,d))}}if(n){var h=U(e.geometries),g=U(e.materials),x=U(e.textures),y=U(e.images),b=U(e.shapes),_=U(e.skeletons),w=U(e.animations),S=U(e.nodes);h.length>0&&(t.geometries=h),g.length>0&&(t.materials=g),x.length>0&&(t.textures=x),y.length>0&&(t.images=y),b.length>0&&(t.shapes=b),_.length>0&&(t.skeletons=_),w.length>0&&(t.animations=w),S.length>0&&(t.nodes=S)}return t.object=r,t;function U(e){var n=[];for(var t in e){var r=e[t];delete r.metadata,n.push(r)}return n}}},{key:"clone",value:function(e){return(new this.constructor).copy(this,e)}},{key:"copy",value:function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===n)for(var t=0;t<e.children.length;t++){var r=e.children[t];this.add(r.clone())}return this}}]),t}(Ht);Ia.DefaultUp=new Ar(0,1,0),Ia.DefaultMatrixAutoUpdate=!0,Ia.DefaultMatrixWorldAutoUpdate=!0;var Oa=new Ar,Ba=new Ar,Na=new Ar,Ga=new Ar,Va=new Ar,qa=new Ar,Ha=new Ar,Wa=new Ar,Xa=new Ar,Ya=new Ar,Za=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ar;y(this,e),this.a=n,this.b=t,this.c=r}return _(e,[{key:"set",value:function(e,n,t){return this.a.copy(e),this.b.copy(n),this.c.copy(t),this}},{key:"setFromPointsAndIndices",value:function(e,n,t,r){return this.a.copy(e[n]),this.b.copy(e[t]),this.c.copy(e[r]),this}},{key:"setFromAttributeAndIndices",value:function(e,n,t,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,t),this.c.fromBufferAttribute(e,r),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}},{key:"getArea",value:function(){return Oa.subVectors(this.c,this.b),Ba.subVectors(this.a,this.b),.5*Oa.cross(Ba).length()}},{key:"getMidpoint",value:function(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}},{key:"getNormal",value:function(n){return e.getNormal(this.a,this.b,this.c,n)}},{key:"getPlane",value:function(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}},{key:"getBarycoord",value:function(n,t){return e.getBarycoord(n,this.a,this.b,this.c,t)}},{key:"getUV",value:function(n,t,r,a,i){return e.getUV(n,this.a,this.b,this.c,t,r,a,i)}},{key:"containsPoint",value:function(n){return e.containsPoint(n,this.a,this.b,this.c)}},{key:"isFrontFacing",value:function(n){return e.isFrontFacing(this.a,this.b,this.c,n)}},{key:"intersectsBox",value:function(e){return e.intersectsTriangle(this)}},{key:"closestPointToPoint",value:function(e,n){var t,r,a=this.a,i=this.b,o=this.c;Va.subVectors(i,a),qa.subVectors(o,a),Wa.subVectors(e,a);var l=Va.dot(Wa),s=qa.dot(Wa);if(l<=0&&s<=0)return n.copy(a);Xa.subVectors(e,i);var c=Va.dot(Xa),u=qa.dot(Xa);if(c>=0&&u<=c)return n.copy(i);var v=l*u-c*s;if(v<=0&&l>=0&&c<=0)return t=l/(l-c),n.copy(a).addScaledVector(Va,t);Ya.subVectors(e,o);var f=Va.dot(Ya),p=qa.dot(Ya);if(p>=0&&f<=p)return n.copy(o);var m=f*s-l*p;if(m<=0&&s>=0&&p<=0)return r=s/(s-p),n.copy(a).addScaledVector(qa,r);var d=c*p-f*u;if(d<=0&&u-c>=0&&f-p>=0)return Ha.subVectors(o,i),r=(u-c)/(u-c+(f-p)),n.copy(i).addScaledVector(Ha,r);var h=1/(d+m+v);return t=m*h,r=v*h,n.copy(a).addScaledVector(Va,t).addScaledVector(qa,r)}},{key:"equals",value:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}],[{key:"getNormal",value:function(e,n,t,r){r.subVectors(t,n),Oa.subVectors(e,n),r.cross(Oa);var a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}},{key:"getBarycoord",value:function(e,n,t,r,a){Oa.subVectors(r,n),Ba.subVectors(t,n),Na.subVectors(e,n);var i=Oa.dot(Oa),o=Oa.dot(Ba),l=Oa.dot(Na),s=Ba.dot(Ba),c=Ba.dot(Na),u=i*s-o*o;if(0===u)return a.set(-2,-1,-1);var v=1/u,f=(s*l-o*c)*v,p=(i*c-o*l)*v;return a.set(1-f-p,p,f)}},{key:"containsPoint",value:function(e,n,t,r){return this.getBarycoord(e,n,t,r,Ga),Ga.x>=0&&Ga.y>=0&&Ga.x+Ga.y<=1}},{key:"getUV",value:function(e,n,t,r,a,i,o,l){return this.getBarycoord(e,n,t,r,Ga),l.set(0,0),l.addScaledVector(a,Ga.x),l.addScaledVector(i,Ga.y),l.addScaledVector(o,Ga.z),l}},{key:"isFrontFacing",value:function(e,n,t,r){return Oa.subVectors(t,n),Ba.subVectors(e,n),Oa.cross(Ba).dot(r)<0}}]),e}(),Ja=0,Qa=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isMaterial=!0,Object.defineProperty(M(e),"id",{value:Ja++}),e.uuid=Jt(),e.name="",e.type="Material",e.blending=Z,e.side=H,e.vertexColors=!1,e.opacity=1,e.transparent=!1,e.blendSrc=ce,e.blendDst=ue,e.blendEquation=ee,e.blendSrcAlpha=null,e.blendDstAlpha=null,e.blendEquationAlpha=null,e.depthFunc=ye,e.depthTest=!0,e.depthWrite=!0,e.stencilWriteMask=255,e.stencilFunc=Pt,e.stencilRef=0,e.stencilFuncMask=255,e.stencilFail=xt,e.stencilZFail=xt,e.stencilZPass=xt,e.stencilWrite=!1,e.clippingPlanes=null,e.clipIntersection=!1,e.clipShadows=!1,e.shadowSide=null,e.colorWrite=!0,e.precision=null,e.polygonOffset=!1,e.polygonOffsetFactor=0,e.polygonOffsetUnits=0,e.dithering=!1,e.alphaToCoverage=!1,e.premultipliedAlpha=!1,e.visible=!0,e.toneMapped=!0,e.userData={},e.version=0,e._alphaTest=0,e}return _(t,[{key:"alphaTest",get:function(){return this._alphaTest},set:function(e){this._alphaTest>0!==e>0&&this.version++,this._alphaTest=e}},{key:"onBuild",value:function(){}},{key:"onBeforeRender",value:function(){}},{key:"onBeforeCompile",value:function(){}},{key:"customProgramCacheKey",value:function(){return this.onBeforeCompile.toString()}},{key:"setValues",value:function(e){if(void 0!==e)for(var n in e){var t=e[n];if(void 0!==t){var r=this[n];void 0!==r?r&&r.isColor?r.set(t):r&&r.isVector3&&t&&t.isVector3?r.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}else console.warn("THREE.Material: '"+n+"' parameter is undefined.")}}},{key:"toJSON",value:function(e){var n=void 0===e||"string"===typeof e;n&&(e={textures:{},images:{}});var t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){var n=[];for(var t in e){var r=e[t];delete r.metadata,n.push(r)}return n}if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),void 0!==this.roughness&&(t.roughness=this.roughness),void 0!==this.metalness&&(t.metalness=this.metalness),void 0!==this.sheen&&(t.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(t.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(t.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(t.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(t.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(t.shininess=this.shininess),void 0!==this.clearcoat&&(t.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(t.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(t.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(t.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(t.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(t.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(e).uuid,t.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(e).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(e).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(e).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(e).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(t.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(t.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(t.combine=this.combine)),void 0!==this.envMapIntensity&&(t.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(t.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(t.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(t.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(t.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(t.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(t.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(t.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(t.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(t.size=this.size),null!==this.shadowSide&&(t.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==Z&&(t.blending=this.blending),this.side!==H&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),!0===this.transparent&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.colorWrite=this.colorWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(t.rotation=this.rotation),!0===this.polygonOffset&&(t.polygonOffset=!0),0!==this.polygonOffsetFactor&&(t.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(t.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(t.linewidth=this.linewidth),void 0!==this.dashSize&&(t.dashSize=this.dashSize),void 0!==this.gapSize&&(t.gapSize=this.gapSize),void 0!==this.scale&&(t.scale=this.scale),!0===this.dithering&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(t.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(t.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(t.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(t.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(t.flatShading=this.flatShading),!1===this.visible&&(t.visible=!1),!1===this.toneMapped&&(t.toneMapped=!1),!1===this.fog&&(t.fog=!1),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),n){var a=r(e.textures),i=r(e.images);a.length>0&&(t.textures=a),i.length>0&&(t.images=i)}return t}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var n=e.clippingPlanes,t=null;if(null!==n){var r=n.length;t=new Array(r);for(var a=0;a!==r;++a)t[a]=n[a].clone()}return this.clippingPlanes=t,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),t}(Ht),$a=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshBasicMaterial=!0,r.type="MeshBasicMaterial",r.color=new Sr(16777215),r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=Ue,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}]),t}(Qa),Ka=new Ar,ei=new or,ni=function(){function e(n,t,r){if(y(this,e),Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=n,this.itemSize=t,this.count=void 0!==n?n.length/t:0,this.normalized=!0===r,this.usage=Dt,this.updateRange={offset:0,count:-1},this.version=0}return _(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}},{key:"copyAt",value:function(e,n,t){e*=this.itemSize,t*=n.itemSize;for(var r=0,a=this.itemSize;r<a;r++)this.array[e+r]=n.array[t+r];return this}},{key:"copyArray",value:function(e){return this.array.set(e),this}},{key:"applyMatrix3",value:function(e){if(2===this.itemSize)for(var n=0,t=this.count;n<t;n++)ei.fromBufferAttribute(this,n),ei.applyMatrix3(e),this.setXY(n,ei.x,ei.y);else if(3===this.itemSize)for(var r=0,a=this.count;r<a;r++)Ka.fromBufferAttribute(this,r),Ka.applyMatrix3(e),this.setXYZ(r,Ka.x,Ka.y,Ka.z);return this}},{key:"applyMatrix4",value:function(e){for(var n=0,t=this.count;n<t;n++)Ka.fromBufferAttribute(this,n),Ka.applyMatrix4(e),this.setXYZ(n,Ka.x,Ka.y,Ka.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var n=0,t=this.count;n<t;n++)Ka.fromBufferAttribute(this,n),Ka.applyNormalMatrix(e),this.setXYZ(n,Ka.x,Ka.y,Ka.z);return this}},{key:"transformDirection",value:function(e){for(var n=0,t=this.count;n<t;n++)Ka.fromBufferAttribute(this,n),Ka.transformDirection(e),this.setXYZ(n,Ka.x,Ka.y,Ka.z);return this}},{key:"set",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,n),this}},{key:"getX",value:function(e){var n=this.array[e*this.itemSize];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setX",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.array[e*this.itemSize]=n,this}},{key:"getY",value:function(e){var n=this.array[e*this.itemSize+1];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setY",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.array[e*this.itemSize+1]=n,this}},{key:"getZ",value:function(e){var n=this.array[e*this.itemSize+2];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setZ",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.array[e*this.itemSize+2]=n,this}},{key:"getW",value:function(e){var n=this.array[e*this.itemSize+3];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setW",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.array[e*this.itemSize+3]=n,this}},{key:"setXY",value:function(e,n,t){return e*=this.itemSize,this.normalized&&(n=ar(n,this.array),t=ar(t,this.array)),this.array[e+0]=n,this.array[e+1]=t,this}},{key:"setXYZ",value:function(e,n,t,r){return e*=this.itemSize,this.normalized&&(n=ar(n,this.array),t=ar(t,this.array),r=ar(r,this.array)),this.array[e+0]=n,this.array[e+1]=t,this.array[e+2]=r,this}},{key:"setXYZW",value:function(e,n,t,r,a){return e*=this.itemSize,this.normalized&&(n=ar(n,this.array),t=ar(t,this.array),r=ar(r,this.array),a=ar(a,this.array)),this.array[e+0]=n,this.array[e+1]=t,this.array[e+2]=r,this.array[e+3]=a,this}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"clone",value:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},{key:"toJSON",value:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Dt&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}},{key:"copyColorsArray",value:function(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}},{key:"copyVector2sArray",value:function(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}},{key:"copyVector3sArray",value:function(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}},{key:"copyVector4sArray",value:function(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}]),e}(),ti=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Int8Array(e),r,a)}return _(t)}(ni),ri=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Uint8Array(e),r,a)}return _(t)}(ni),ai=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Uint8ClampedArray(e),r,a)}return _(t)}(ni),ii=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Int16Array(e),r,a)}return _(t)}(ni),oi=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Uint16Array(e),r,a)}return _(t)}(ni),li=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Int32Array(e),r,a)}return _(t)}(ni),si=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Uint32Array(e),r,a)}return _(t)}(ni),ci=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;return y(this,t),(i=n.call(this,new Uint16Array(e),r,a)).isFloat16BufferAttribute=!0,i}return _(t)}(ni),ui=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Float32Array(e),r,a)}return _(t)}(ni),vi=function(e){w(t,e);var n=k(t);function t(e,r,a){return y(this,t),n.call(this,new Float64Array(e),r,a)}return _(t)}(ni),fi=0,pi=new pa,mi=new Ia,di=new Ar,hi=new Br,gi=new Br,xi=new Ar,yi=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isBufferGeometry=!0,Object.defineProperty(M(e),"id",{value:fi++}),e.uuid=Jt(),e.name="",e.type="BufferGeometry",e.index=null,e.attributes={},e.morphAttributes={},e.morphTargetsRelative=!1,e.groups=[],e.boundingBox=null,e.boundingSphere=null,e.drawRange={start:0,count:1/0},e.userData={},e}return _(t,[{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(e){return Array.isArray(e)?this.index=new(sr(e)?si:oi)(e,1):this.index=e,this}},{key:"getAttribute",value:function(e){return this.attributes[e]}},{key:"setAttribute",value:function(e,n){return this.attributes[e]=n,this}},{key:"deleteAttribute",value:function(e){return delete this.attributes[e],this}},{key:"hasAttribute",value:function(e){return void 0!==this.attributes[e]}},{key:"addGroup",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:n,materialIndex:t})}},{key:"clearGroups",value:function(){this.groups=[]}},{key:"setDrawRange",value:function(e,n){this.drawRange.start=e,this.drawRange.count=n}},{key:"applyMatrix4",value:function(e){var n=this.attributes.position;void 0!==n&&(n.applyMatrix4(e),n.needsUpdate=!0);var t=this.attributes.normal;if(void 0!==t){var r=(new lr).getNormalMatrix(e);t.applyNormalMatrix(r),t.needsUpdate=!0}var a=this.attributes.tangent;return void 0!==a&&(a.transformDirection(e),a.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"applyQuaternion",value:function(e){return pi.makeRotationFromQuaternion(e),this.applyMatrix4(pi),this}},{key:"rotateX",value:function(e){return pi.makeRotationX(e),this.applyMatrix4(pi),this}},{key:"rotateY",value:function(e){return pi.makeRotationY(e),this.applyMatrix4(pi),this}},{key:"rotateZ",value:function(e){return pi.makeRotationZ(e),this.applyMatrix4(pi),this}},{key:"translate",value:function(e,n,t){return pi.makeTranslation(e,n,t),this.applyMatrix4(pi),this}},{key:"scale",value:function(e,n,t){return pi.makeScale(e,n,t),this.applyMatrix4(pi),this}},{key:"lookAt",value:function(e){return mi.lookAt(e),mi.updateMatrix(),this.applyMatrix4(mi.matrix),this}},{key:"center",value:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(di).negate(),this.translate(di.x,di.y,di.z),this}},{key:"setFromPoints",value:function(e){for(var n=[],t=0,r=e.length;t<r;t++){var a=e[t];n.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new ui(n,3)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new Br);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ar(-1/0,-1/0,-1/0),new Ar(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(var t=0,r=n.length;t<r;t++){var a=n[t];hi.setFromBufferAttribute(a),this.morphTargetsRelative?(xi.addVectors(this.boundingBox.min,hi.min),this.boundingBox.expandByPoint(xi),xi.addVectors(this.boundingBox.max,hi.max),this.boundingBox.expandByPoint(xi)):(this.boundingBox.expandByPoint(hi.min),this.boundingBox.expandByPoint(hi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new aa);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ar,1/0);if(e){var t=this.boundingSphere.center;if(hi.setFromBufferAttribute(e),n)for(var r=0,a=n.length;r<a;r++){var i=n[r];gi.setFromBufferAttribute(i),this.morphTargetsRelative?(xi.addVectors(hi.min,gi.min),hi.expandByPoint(xi),xi.addVectors(hi.max,gi.max),hi.expandByPoint(xi)):(hi.expandByPoint(gi.min),hi.expandByPoint(gi.max))}hi.getCenter(t);for(var o=0,l=0,s=e.count;l<s;l++)xi.fromBufferAttribute(e,l),o=Math.max(o,t.distanceToSquared(xi));if(n)for(var c=0,u=n.length;c<u;c++)for(var v=n[c],f=this.morphTargetsRelative,p=0,m=v.count;p<m;p++)xi.fromBufferAttribute(v,p),f&&(di.fromBufferAttribute(e,p),xi.add(di)),o=Math.max(o,t.distanceToSquared(xi));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},{key:"computeTangents",value:function(){var e=this.index,n=this.attributes;if(null!==e&&void 0!==n.position&&void 0!==n.normal&&void 0!==n.uv){var t=e.array,r=n.position.array,a=n.normal.array,i=n.uv.array,o=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new ni(new Float32Array(4*o),4));for(var l=this.getAttribute("tangent").array,s=[],c=[],u=0;u<o;u++)s[u]=new Ar,c[u]=new Ar;var v=new Ar,f=new Ar,p=new Ar,m=new or,d=new or,h=new or,g=new Ar,x=new Ar,y=this.groups;0===y.length&&(y=[{start:0,count:t.length}]);for(var b=0,_=y.length;b<_;++b)for(var w=y[b],S=w.start,U=S,M=S+w.count;U<M;U+=3)L(t[U+0],t[U+1],t[U+2]);for(var j=new Ar,k=new Ar,T=new Ar,C=new Ar,R=0,F=y.length;R<F;++R)for(var P=y[R],D=P.start,E=D,z=D+P.count;E<z;E+=3)A(t[E+0]),A(t[E+1]),A(t[E+2])}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");function L(e,n,t){v.fromArray(r,3*e),f.fromArray(r,3*n),p.fromArray(r,3*t),m.fromArray(i,2*e),d.fromArray(i,2*n),h.fromArray(i,2*t),f.sub(v),p.sub(v),d.sub(m),h.sub(m);var a=1/(d.x*h.y-h.x*d.y);isFinite(a)&&(g.copy(f).multiplyScalar(h.y).addScaledVector(p,-d.y).multiplyScalar(a),x.copy(p).multiplyScalar(d.x).addScaledVector(f,-h.x).multiplyScalar(a),s[e].add(g),s[n].add(g),s[t].add(g),c[e].add(x),c[n].add(x),c[t].add(x))}function A(e){T.fromArray(a,3*e),C.copy(T);var n=s[e];j.copy(n),j.sub(T.multiplyScalar(T.dot(n))).normalize(),k.crossVectors(C,n);var t=k.dot(c[e])<0?-1:1;l[4*e]=j.x,l[4*e+1]=j.y,l[4*e+2]=j.z,l[4*e+3]=t}}},{key:"computeVertexNormals",value:function(){var e=this.index,n=this.getAttribute("position");if(void 0!==n){var t=this.getAttribute("normal");if(void 0===t)t=new ni(new Float32Array(3*n.count),3),this.setAttribute("normal",t);else for(var r=0,a=t.count;r<a;r++)t.setXYZ(r,0,0,0);var i=new Ar,o=new Ar,l=new Ar,s=new Ar,c=new Ar,u=new Ar,v=new Ar,f=new Ar;if(e)for(var p=0,m=e.count;p<m;p+=3){var d=e.getX(p+0),h=e.getX(p+1),g=e.getX(p+2);i.fromBufferAttribute(n,d),o.fromBufferAttribute(n,h),l.fromBufferAttribute(n,g),v.subVectors(l,o),f.subVectors(i,o),v.cross(f),s.fromBufferAttribute(t,d),c.fromBufferAttribute(t,h),u.fromBufferAttribute(t,g),s.add(v),c.add(v),u.add(v),t.setXYZ(d,s.x,s.y,s.z),t.setXYZ(h,c.x,c.y,c.z),t.setXYZ(g,u.x,u.y,u.z)}else for(var x=0,y=n.count;x<y;x+=3)i.fromBufferAttribute(n,x+0),o.fromBufferAttribute(n,x+1),l.fromBufferAttribute(n,x+2),v.subVectors(l,o),f.subVectors(i,o),v.cross(f),t.setXYZ(x+0,v.x,v.y,v.z),t.setXYZ(x+1,v.x,v.y,v.z),t.setXYZ(x+2,v.x,v.y,v.z);this.normalizeNormals(),t.needsUpdate=!0}}},{key:"merge",value:function(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}},{key:"normalizeNormals",value:function(){for(var e=this.attributes.normal,n=0,t=e.count;n<t;n++)xi.fromBufferAttribute(e,n),xi.normalize(),e.setXYZ(n,xi.x,xi.y,xi.z)}},{key:"toNonIndexed",value:function(){function e(e,n){for(var t=e.array,r=e.itemSize,a=e.normalized,i=new t.constructor(n.length*r),o=0,l=0,s=0,c=n.length;s<c;s++){o=e.isInterleavedBufferAttribute?n[s]*e.data.stride+e.offset:n[s]*r;for(var u=0;u<r;u++)i[l++]=t[o++]}return new ni(i,r,a)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var n=new t,r=this.index.array,a=this.attributes;for(var i in a){var o=e(a[i],r);n.setAttribute(i,o)}var l=this.morphAttributes;for(var s in l){for(var c=[],u=l[s],v=0,f=u.length;v<f;v++){var p=e(u[v],r);c.push(p)}n.morphAttributes[s]=c}n.morphTargetsRelative=this.morphTargetsRelative;for(var m=this.groups,d=0,h=m.length;d<h;d++){var g=m[d];n.addGroup(g.start,g.count,g.materialIndex)}return n}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var n=this.parameters;for(var t in n)void 0!==n[t]&&(e[t]=n[t]);return e}e.data={attributes:{}};var r=this.index;null!==r&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var a=this.attributes;for(var i in a){var o=a[i];e.data.attributes[i]=o.toJSON(e.data)}var l={},s=!1;for(var c in this.morphAttributes){for(var u=this.morphAttributes[c],v=[],f=0,p=u.length;f<p;f++){var m=u[f];v.push(m.toJSON(e.data))}v.length>0&&(l[c]=v,s=!0)}s&&(e.data.morphAttributes=l,e.data.morphTargetsRelative=this.morphTargetsRelative);var d=this.groups;d.length>0&&(e.data.groups=JSON.parse(JSON.stringify(d)));var h=this.boundingSphere;return null!==h&&(e.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),e}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var n={};this.name=e.name;var t=e.index;null!==t&&this.setIndex(t.clone(n));var r=e.attributes;for(var a in r){var i=r[a];this.setAttribute(a,i.clone(n))}var o=e.morphAttributes;for(var l in o){for(var s=[],c=o[l],u=0,v=c.length;u<v;u++)s.push(c[u].clone(n));this.morphAttributes[l]=s}this.morphTargetsRelative=e.morphTargetsRelative;for(var f=e.groups,p=0,m=f.length;p<m;p++){var d=f[p];this.addGroup(d.start,d.count,d.materialIndex)}var h=e.boundingBox;null!==h&&(this.boundingBox=h.clone());var g=e.boundingSphere;return null!==g&&(this.boundingSphere=g.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),t}(Ht),bi=new pa,_i=new fa,wi=new aa,Si=new Ar,Ui=new Ar,Mi=new Ar,ji=new Ar,ki=new Ar,Ti=new Ar,Ci=new Ar,Ri=new Ar,Fi=new Ar,Pi=new or,Di=new or,Ei=new or,zi=new Ar,Li=new Ar,Ai=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new yi,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new $a;return y(this,t),(e=n.call(this)).isMesh=!0,e.type="Mesh",e.geometry=r,e.material=a,e.updateMorphTargets(),e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){var t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,a=t.length;r<a;r++){var i=t[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=r}}}}},{key:"raycast",value:function(e,n){var t=this.geometry,r=this.material,a=this.matrixWorld;if(void 0!==r&&(null===t.boundingSphere&&t.computeBoundingSphere(),wi.copy(t.boundingSphere),wi.applyMatrix4(a),!1!==e.ray.intersectsSphere(wi)&&(bi.copy(a).invert(),_i.copy(e.ray).applyMatrix4(bi),null===t.boundingBox||!1!==_i.intersectsBox(t.boundingBox)))){var i,o=t.index,l=t.attributes.position,s=t.morphAttributes.position,c=t.morphTargetsRelative,u=t.attributes.uv,v=t.attributes.uv2,f=t.groups,p=t.drawRange;if(null!==o)if(Array.isArray(r))for(var m=0,d=f.length;m<d;m++)for(var h=f[m],g=r[h.materialIndex],x=Math.max(h.start,p.start),y=Math.min(o.count,Math.min(h.start+h.count,p.start+p.count));x<y;x+=3){var b=o.getX(x),_=o.getX(x+1),w=o.getX(x+2);(i=Ii(this,g,e,_i,l,s,c,u,v,b,_,w))&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=h.materialIndex,n.push(i))}else for(var S=Math.max(0,p.start),U=Math.min(o.count,p.start+p.count);S<U;S+=3){var M=o.getX(S),j=o.getX(S+1),k=o.getX(S+2);(i=Ii(this,r,e,_i,l,s,c,u,v,M,j,k))&&(i.faceIndex=Math.floor(S/3),n.push(i))}else if(void 0!==l)if(Array.isArray(r))for(var T=0,C=f.length;T<C;T++)for(var R=f[T],F=r[R.materialIndex],P=Math.max(R.start,p.start),D=Math.min(l.count,Math.min(R.start+R.count,p.start+p.count));P<D;P+=3){(i=Ii(this,F,e,_i,l,s,c,u,v,P,P+1,P+2))&&(i.faceIndex=Math.floor(P/3),i.face.materialIndex=R.materialIndex,n.push(i))}else for(var E=Math.max(0,p.start),z=Math.min(l.count,p.start+p.count);E<z;E+=3){(i=Ii(this,r,e,_i,l,s,c,u,v,E,E+1,E+2))&&(i.faceIndex=Math.floor(E/3),n.push(i))}}}}]),t}(Ia);function Ii(e,n,t,r,a,i,o,l,s,c,u,v){Si.fromBufferAttribute(a,c),Ui.fromBufferAttribute(a,u),Mi.fromBufferAttribute(a,v);var f=e.morphTargetInfluences;if(i&&f){Ci.set(0,0,0),Ri.set(0,0,0),Fi.set(0,0,0);for(var p=0,m=i.length;p<m;p++){var d=f[p],h=i[p];0!==d&&(ji.fromBufferAttribute(h,c),ki.fromBufferAttribute(h,u),Ti.fromBufferAttribute(h,v),o?(Ci.addScaledVector(ji,d),Ri.addScaledVector(ki,d),Fi.addScaledVector(Ti,d)):(Ci.addScaledVector(ji.sub(Si),d),Ri.addScaledVector(ki.sub(Ui),d),Fi.addScaledVector(Ti.sub(Mi),d)))}Si.add(Ci),Ui.add(Ri),Mi.add(Fi)}e.isSkinnedMesh&&(e.boneTransform(c,Si),e.boneTransform(u,Ui),e.boneTransform(v,Mi));var g=function(e,n,t,r,a,i,o,l){if(null===(n.side===W?r.intersectTriangle(o,i,a,!0,l):r.intersectTriangle(a,i,o,n.side!==X,l)))return null;Li.copy(l),Li.applyMatrix4(e.matrixWorld);var s=t.ray.origin.distanceTo(Li);return s<t.near||s>t.far?null:{distance:s,point:Li.clone(),object:e}}(e,n,t,r,Si,Ui,Mi,zi);if(g){l&&(Pi.fromBufferAttribute(l,c),Di.fromBufferAttribute(l,u),Ei.fromBufferAttribute(l,v),g.uv=Za.getUV(zi,Si,Ui,Mi,Pi,Di,Ei,new or)),s&&(Pi.fromBufferAttribute(s,c),Di.fromBufferAttribute(s,u),Ei.fromBufferAttribute(s,v),g.uv2=Za.getUV(zi,Si,Ui,Mi,Pi,Di,Ei,new or));var x={a:c,b:u,c:v,normal:new Ar,materialIndex:0};Za.getNormal(Si,Ui,Mi,x.normal),g.face=x}return g}var Oi=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;y(this,t),(e=n.call(this)).type="BoxGeometry",e.parameters={width:r,height:a,depth:i,widthSegments:o,heightSegments:l,depthSegments:s};var c=M(e);o=Math.floor(o),l=Math.floor(l),s=Math.floor(s);var u=[],v=[],f=[],p=[],m=0,d=0;function h(e,n,t,r,a,i,o,l,s,h,g){for(var x=i/s,y=o/h,b=i/2,_=o/2,w=l/2,S=s+1,U=h+1,M=0,j=0,k=new Ar,T=0;T<U;T++)for(var C=T*y-_,R=0;R<S;R++){var F=R*x-b;k[e]=F*r,k[n]=C*a,k[t]=w,v.push(k.x,k.y,k.z),k[e]=0,k[n]=0,k[t]=l>0?1:-1,f.push(k.x,k.y,k.z),p.push(R/s),p.push(1-T/h),M+=1}for(var P=0;P<h;P++)for(var D=0;D<s;D++){var E=m+D+S*P,z=m+D+S*(P+1),L=m+(D+1)+S*(P+1),A=m+(D+1)+S*P;u.push(E,z,A),u.push(z,L,A),j+=6}c.addGroup(d,j,g),d+=j,m+=M}return h("z","y","x",-1,-1,i,a,r,s,l,0),h("z","y","x",1,-1,i,a,-r,s,l,1),h("x","z","y",1,1,r,i,a,o,s,2),h("x","z","y",1,-1,r,i,-a,o,s,3),h("x","y","z",1,-1,r,a,i,o,l,4),h("x","y","z",-1,-1,r,a,-i,o,l,5),e.setIndex(u),e.setAttribute("position",new ui(v,3)),e.setAttribute("normal",new ui(f,3)),e.setAttribute("uv",new ui(p,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}]),t}(yi);function Bi(e){var n={};for(var t in e)for(var r in n[t]={},e[t]){var a=e[t][r];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?n[t][r]=a.clone():Array.isArray(a)?n[t][r]=a.slice():n[t][r]=a}return n}function Ni(e){for(var n={},t=0;t<e.length;t++){var r=Bi(e[t]);for(var a in r)n[a]=r[a]}return n}var Gi={clone:Bi,merge:Ni},Vi=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isShaderMaterial=!0,r.type="ShaderMaterial",r.defines={},r.uniforms={},r.uniformsGroups=[],r.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",r.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",r.linewidth=1,r.wireframe=!1,r.wireframeLinewidth=1,r.fog=!1,r.lights=!1,r.clipping=!1,r.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},r.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},r.index0AttributeName=void 0,r.uniformsNeedUpdate=!1,r.glslVersion=null,void 0!==e&&r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Bi(e.uniforms),this.uniformsGroups=function(e){for(var n=[],t=0;t<e.length;t++)n.push(e[t].clone());return n}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);for(var r in n.glslVersion=this.glslVersion,n.uniforms={},this.uniforms){var a=this.uniforms[r].value;a&&a.isTexture?n.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[r]={type:"m4",value:a.toArray()}:n.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;var i={};for(var o in this.extensions)!0===this.extensions[o]&&(i[o]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}]),t}(Qa),qi=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isCamera=!0,e.type="Camera",e.matrixWorldInverse=new pa,e.projectionMatrix=new pa,e.projectionMatrixInverse=new pa,e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}},{key:"updateMatrixWorld",value:function(e){P(S(t.prototype),"updateMatrixWorld",this).call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"updateWorldMatrix",value:function(e,n){P(S(t.prototype),"updateWorldMatrix",this).call(this,e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),t}(Ia),Hi=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;return y(this,t),(e=n.call(this)).isPerspectiveCamera=!0,e.type="PerspectiveCamera",e.fov=r,e.zoom=1,e.near=i,e.far=o,e.focus=10,e.aspect=a,e.view=null,e.filmGauge=35,e.filmOffset=0,e.updateProjectionMatrix(),e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}},{key:"setFocalLength",value:function(e){var n=.5*this.getFilmHeight()/e;this.fov=2*Zt*Math.atan(n),this.updateProjectionMatrix()}},{key:"getFocalLength",value:function(){var e=Math.tan(.5*Yt*this.fov);return.5*this.getFilmHeight()/e}},{key:"getEffectiveFOV",value:function(){return 2*Zt*Math.atan(Math.tan(.5*Yt*this.fov)/this.zoom)}},{key:"getFilmWidth",value:function(){return this.filmGauge*Math.min(this.aspect,1)}},{key:"getFilmHeight",value:function(){return this.filmGauge/Math.max(this.aspect,1)}},{key:"setViewOffset",value:function(e,n,t,r,a,i){this.aspect=e/n,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=t,this.view.offsetY=r,this.view.width=a,this.view.height=i,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=this.near,n=e*Math.tan(.5*Yt*this.fov)/this.zoom,t=2*n,r=this.aspect*t,a=-.5*r,i=this.view;if(null!==this.view&&this.view.enabled){var o=i.fullWidth,l=i.fullHeight;a+=i.offsetX*r/o,n-=i.offsetY*t/l,r*=i.width/o,t*=i.height/l}var s=this.filmOffset;0!==s&&(a+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,n,n-t,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,null!==this.view&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}]),t}(qi),Wi=90,Xi=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;y(this,t),(i=n.call(this)).type="CubeCamera",i.renderTarget=a;var o=new Hi(Wi,1,e,r);o.layers=i.layers,o.up.set(0,-1,0),o.lookAt(new Ar(1,0,0)),i.add(o);var l=new Hi(Wi,1,e,r);l.layers=i.layers,l.up.set(0,-1,0),l.lookAt(new Ar(-1,0,0)),i.add(l);var s=new Hi(Wi,1,e,r);s.layers=i.layers,s.up.set(0,0,1),s.lookAt(new Ar(0,1,0)),i.add(s);var c=new Hi(Wi,1,e,r);c.layers=i.layers,c.up.set(0,0,-1),c.lookAt(new Ar(0,-1,0)),i.add(c);var u=new Hi(Wi,1,e,r);u.layers=i.layers,u.up.set(0,-1,0),u.lookAt(new Ar(0,0,1)),i.add(u);var v=new Hi(Wi,1,e,r);return v.layers=i.layers,v.up.set(0,-1,0),v.lookAt(new Ar(0,0,-1)),i.add(v),i}return _(t,[{key:"update",value:function(e,n){null===this.parent&&this.updateMatrixWorld();var t=this.renderTarget,r=s(this.children,6),a=r[0],i=r[1],o=r[2],l=r[3],c=r[4],u=r[5],v=e.getRenderTarget(),f=e.toneMapping,p=e.xr.enabled;e.toneMapping=ke,e.xr.enabled=!1;var m=t.texture.generateMipmaps;t.texture.generateMipmaps=!1,e.setRenderTarget(t,0),e.render(n,a),e.setRenderTarget(t,1),e.render(n,i),e.setRenderTarget(t,2),e.render(n,o),e.setRenderTarget(t,3),e.render(n,l),e.setRenderTarget(t,4),e.render(n,c),t.texture.generateMipmaps=m,e.setRenderTarget(t,5),e.render(n,u),e.setRenderTarget(v),e.toneMapping=f,e.xr.enabled=p,t.texture.needsPMREMUpdate=!0}}]),t}(Ia),Yi=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s,c,u,v){var f;return y(this,t),e=void 0!==e?e:[],r=void 0!==r?r:Ee,(f=n.call(this,e,r,a,i,o,l,s,c,u,v)).isCubeTexture=!0,f.flipY=!1,f}return _(t,[{key:"images",get:function(){return this.image},set:function(e){this.image=e}}]),t}(Tr),Zi=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};y(this,t),(e=n.call(this,r,r,a)).isWebGLCubeRenderTarget=!0;var i={width:r,height:r,depth:1},o=[i,i,i,i,i,i];return e.texture=new Yi(o,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),e.texture.isRenderTargetTexture=!0,e.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,e.texture.minFilter=void 0!==a.minFilter?a.minFilter:Xe,e}return _(t,[{key:"fromEquirectangularTexture",value:function(e,n){this.texture.type=n.type,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;var t={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",a="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",i=new Oi(5,5,5),o=new Vi({name:"CubemapFromEquirect",uniforms:Bi(t),vertexShader:r,fragmentShader:a,side:W,blending:Y});o.uniforms.tEquirect.value=n;var l=new Ai(i,o),s=n.minFilter;return n.minFilter===Je&&(n.minFilter=Xe),new Xi(1,10,this).update(e,l),n.minFilter=s,l.geometry.dispose(),l.material.dispose(),this}},{key:"clear",value:function(e,n,t,r){for(var a=e.getRenderTarget(),i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(n,t,r);e.setRenderTarget(a)}}]),t}(Rr),Ji=new Ar,Qi=new Ar,$i=new lr,Ki=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar(1,0,0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,e),this.isPlane=!0,this.normal=n,this.constant=t}return _(e,[{key:"set",value:function(e,n){return this.normal.copy(e),this.constant=n,this}},{key:"setComponents",value:function(e,n,t,r){return this.normal.set(e,n,t),this.constant=r,this}},{key:"setFromNormalAndCoplanarPoint",value:function(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,n,t){var r=Ji.subVectors(t,n).cross(Qi.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.constant*=-1,this.normal.negate(),this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,n){return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"intersectLine",value:function(e,n){var t=e.delta(Ji),r=this.normal.dot(t);if(0===r)return 0===this.distanceToPoint(e.start)?n.copy(e.start):null;var a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:n.copy(t).multiplyScalar(a).add(e.start)}},{key:"intersectsLine",value:function(e){var n=this.distanceToPoint(e.start),t=this.distanceToPoint(e.end);return n<0&&t>0||t<0&&n>0}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"applyMatrix4",value:function(e,n){var t=n||$i.getNormalMatrix(e),r=this.coplanarPoint(Ji).applyMatrix4(e),a=this.normal.applyMatrix3(t).normalize();return this.constant=-r.dot(a),this}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),eo=new aa,no=new Ar,to=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ki,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ki,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ki,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Ki,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Ki,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new Ki;y(this,e),this.planes=[n,t,r,a,i,o]}return _(e,[{key:"set",value:function(e,n,t,r,a,i){var o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(t),o[3].copy(r),o[4].copy(a),o[5].copy(i),this}},{key:"copy",value:function(e){for(var n=this.planes,t=0;t<6;t++)n[t].copy(e.planes[t]);return this}},{key:"setFromProjectionMatrix",value:function(e){var n=this.planes,t=e.elements,r=t[0],a=t[1],i=t[2],o=t[3],l=t[4],s=t[5],c=t[6],u=t[7],v=t[8],f=t[9],p=t[10],m=t[11],d=t[12],h=t[13],g=t[14],x=t[15];return n[0].setComponents(o-r,u-l,m-v,x-d).normalize(),n[1].setComponents(o+r,u+l,m+v,x+d).normalize(),n[2].setComponents(o+a,u+s,m+f,x+h).normalize(),n[3].setComponents(o-a,u-s,m-f,x-h).normalize(),n[4].setComponents(o-i,u-c,m-p,x-g).normalize(),n[5].setComponents(o+i,u+c,m+p,x+g).normalize(),this}},{key:"intersectsObject",value:function(e){var n=e.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),eo.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(eo)}},{key:"intersectsSprite",value:function(e){return eo.center.set(0,0,0),eo.radius=.7071067811865476,eo.applyMatrix4(e.matrixWorld),this.intersectsSphere(eo)}},{key:"intersectsSphere",value:function(e){for(var n=this.planes,t=e.center,r=-e.radius,a=0;a<6;a++){if(n[a].distanceToPoint(t)<r)return!1}return!0}},{key:"intersectsBox",value:function(e){for(var n=this.planes,t=0;t<6;t++){var r=n[t];if(no.x=r.normal.x>0?e.max.x:e.min.x,no.y=r.normal.y>0?e.max.y:e.min.y,no.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(no)<0)return!1}return!0}},{key:"containsPoint",value:function(e){for(var n=this.planes,t=0;t<6;t++)if(n[t].distanceToPoint(e)<0)return!1;return!0}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();function ro(){var e=null,n=!1,t=null,r=null;function a(n,i){t(n,i),r=e.requestAnimationFrame(a)}return{start:function(){!0!==n&&null!==t&&(r=e.requestAnimationFrame(a),n=!0)},stop:function(){e.cancelAnimationFrame(r),n=!1},setAnimationLoop:function(e){t=e},setContext:function(n){e=n}}}function ao(e,n){var t=n.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);var t=r.get(n);t&&(e.deleteBuffer(t.buffer),r.delete(n))},update:function(n,a){if(n.isGLBufferAttribute){var i=r.get(n);(!i||i.version<n.version)&&r.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version})}else{n.isInterleavedBufferAttribute&&(n=n.data);var o=r.get(n);void 0===o?r.set(n,function(n,r){var a,i=n.array,o=n.usage,l=e.createBuffer();if(e.bindBuffer(r,l),e.bufferData(r,i,o),n.onUploadCallback(),i instanceof Float32Array)a=5126;else if(i instanceof Uint16Array)if(n.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");a=5131}else a=5123;else if(i instanceof Int16Array)a=5122;else if(i instanceof Uint32Array)a=5125;else if(i instanceof Int32Array)a=5124;else if(i instanceof Int8Array)a=5120;else if(i instanceof Uint8Array)a=5121;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);a=5121}return{buffer:l,type:a,bytesPerElement:i.BYTES_PER_ELEMENT,version:n.version}}(n,a)):o.version<n.version&&(!function(n,r,a){var i=r.array,o=r.updateRange;e.bindBuffer(a,n),-1===o.count?e.bufferSubData(a,0,i):(t?e.bufferSubData(a,o.offset*i.BYTES_PER_ELEMENT,i,o.offset,o.count):e.bufferSubData(a,o.offset*i.BYTES_PER_ELEMENT,i.subarray(o.offset,o.offset+o.count)),o.count=-1)}(o.buffer,n,a),o.version=n.version)}}}}var io=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;y(this,t),(e=n.call(this)).type="PlaneGeometry",e.parameters={width:r,height:a,widthSegments:i,heightSegments:o};for(var l=r/2,s=a/2,c=Math.floor(i),u=Math.floor(o),v=c+1,f=u+1,p=r/c,m=a/u,d=[],h=[],g=[],x=[],b=0;b<f;b++)for(var _=b*m-s,w=0;w<v;w++){var S=w*p-l;h.push(S,-_,0),g.push(0,0,1),x.push(w/c),x.push(1-b/u)}for(var U=0;U<u;U++)for(var M=0;M<c;M++){var j=M+v*U,k=M+v*(U+1),T=M+1+v*(U+1),C=M+1+v*U;d.push(j,k,C),d.push(k,T,C)}return e.setIndex(d),e.setAttribute("position",new ui(h,3)),e.setAttribute("normal",new ui(g,3)),e.setAttribute("uv",new ui(x,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.width,e.height,e.widthSegments,e.heightSegments)}}]),t}(yi),oo={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )\t(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},lo={common:{diffuse:{value:new Sr(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new lr},uv2Transform:{value:new lr},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new or(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Sr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Sr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new lr}},sprite:{diffuse:{value:new Sr(16777215)},opacity:{value:1},center:{value:new or(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new lr}}},so={basic:{uniforms:Ni([lo.common,lo.specularmap,lo.envmap,lo.aomap,lo.lightmap,lo.fog]),vertexShader:oo.meshbasic_vert,fragmentShader:oo.meshbasic_frag},lambert:{uniforms:Ni([lo.common,lo.specularmap,lo.envmap,lo.aomap,lo.lightmap,lo.emissivemap,lo.bumpmap,lo.normalmap,lo.displacementmap,lo.fog,lo.lights,{emissive:{value:new Sr(0)}}]),vertexShader:oo.meshlambert_vert,fragmentShader:oo.meshlambert_frag},phong:{uniforms:Ni([lo.common,lo.specularmap,lo.envmap,lo.aomap,lo.lightmap,lo.emissivemap,lo.bumpmap,lo.normalmap,lo.displacementmap,lo.fog,lo.lights,{emissive:{value:new Sr(0)},specular:{value:new Sr(1118481)},shininess:{value:30}}]),vertexShader:oo.meshphong_vert,fragmentShader:oo.meshphong_frag},standard:{uniforms:Ni([lo.common,lo.envmap,lo.aomap,lo.lightmap,lo.emissivemap,lo.bumpmap,lo.normalmap,lo.displacementmap,lo.roughnessmap,lo.metalnessmap,lo.fog,lo.lights,{emissive:{value:new Sr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:oo.meshphysical_vert,fragmentShader:oo.meshphysical_frag},toon:{uniforms:Ni([lo.common,lo.aomap,lo.lightmap,lo.emissivemap,lo.bumpmap,lo.normalmap,lo.displacementmap,lo.gradientmap,lo.fog,lo.lights,{emissive:{value:new Sr(0)}}]),vertexShader:oo.meshtoon_vert,fragmentShader:oo.meshtoon_frag},matcap:{uniforms:Ni([lo.common,lo.bumpmap,lo.normalmap,lo.displacementmap,lo.fog,{matcap:{value:null}}]),vertexShader:oo.meshmatcap_vert,fragmentShader:oo.meshmatcap_frag},points:{uniforms:Ni([lo.points,lo.fog]),vertexShader:oo.points_vert,fragmentShader:oo.points_frag},dashed:{uniforms:Ni([lo.common,lo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:oo.linedashed_vert,fragmentShader:oo.linedashed_frag},depth:{uniforms:Ni([lo.common,lo.displacementmap]),vertexShader:oo.depth_vert,fragmentShader:oo.depth_frag},normal:{uniforms:Ni([lo.common,lo.bumpmap,lo.normalmap,lo.displacementmap,{opacity:{value:1}}]),vertexShader:oo.meshnormal_vert,fragmentShader:oo.meshnormal_frag},sprite:{uniforms:Ni([lo.sprite,lo.fog]),vertexShader:oo.sprite_vert,fragmentShader:oo.sprite_frag},background:{uniforms:{uvTransform:{value:new lr},t2D:{value:null}},vertexShader:oo.background_vert,fragmentShader:oo.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:oo.backgroundCube_vert,fragmentShader:oo.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:oo.cube_vert,fragmentShader:oo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:oo.equirect_vert,fragmentShader:oo.equirect_frag},distanceRGBA:{uniforms:Ni([lo.common,lo.displacementmap,{referencePosition:{value:new Ar},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:oo.distanceRGBA_vert,fragmentShader:oo.distanceRGBA_frag},shadow:{uniforms:Ni([lo.lights,lo.fog,{color:{value:new Sr(0)},opacity:{value:1}}]),vertexShader:oo.shadow_vert,fragmentShader:oo.shadow_frag}};function co(e,n,t,r,a,i,o){var l,s,c=new Sr(0),u=!0===i?0:1,v=null,f=0,p=null;function m(e,n){r.buffers.color.setClear(e.r,e.g,e.b,n,o)}return{getClearColor:function(){return c},setClearColor:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;c.set(e),m(c,u=n)},getClearAlpha:function(){return u},setClearAlpha:function(e){m(c,u=e)},render:function(r,i){var o=!1,d=!0===i.isScene?i.background:null;d&&d.isTexture&&(d=(i.backgroundBlurriness>0?t:n).get(d));var h=e.xr,g=h.getSession&&h.getSession();g&&"additive"===g.environmentBlendMode&&(d=null),null===d?m(c,u):d&&d.isColor&&(m(d,1),o=!0),(e.autoClear||o)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),d&&(d.isCubeTexture||d.mapping===Ie)?(void 0===s&&((s=new Ai(new Oi(1,1,1),new Vi({name:"BackgroundCubeMaterial",uniforms:Bi(so.backgroundCube.uniforms),vertexShader:so.backgroundCube.vertexShader,fragmentShader:so.backgroundCube.fragmentShader,side:W,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,n,t){this.matrixWorld.copyPosition(t.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),a.update(s)),s.material.uniforms.envMap.value=d,s.material.uniforms.flipEnvMap.value=d.isCubeTexture&&!1===d.isRenderTargetTexture?-1:1,s.material.uniforms.backgroundBlurriness.value=i.backgroundBlurriness,v===d&&f===d.version&&p===e.toneMapping||(s.material.needsUpdate=!0,v=d,f=d.version,p=e.toneMapping),s.layers.enableAll(),r.unshift(s,s.geometry,s.material,0,0,null)):d&&d.isTexture&&(void 0===l&&((l=new Ai(new io(2,2),new Vi({name:"BackgroundMaterial",uniforms:Bi(so.background.uniforms),vertexShader:so.background.vertexShader,fragmentShader:so.background.fragmentShader,side:H,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),a.update(l)),l.material.uniforms.t2D.value=d,!0===d.matrixAutoUpdate&&d.updateMatrix(),l.material.uniforms.uvTransform.value.copy(d.matrix),v===d&&f===d.version&&p===e.toneMapping||(l.material.needsUpdate=!0,v=d,f=d.version,p=e.toneMapping),l.layers.enableAll(),r.unshift(l,l.geometry,l.material,0,0,null))}}}function uo(e,n,t,r){var a=e.getParameter(34921),i=r.isWebGL2?null:n.get("OES_vertex_array_object"),o=r.isWebGL2||null!==i,l={},s=p(null),c=s,u=!1;function v(n){return r.isWebGL2?e.bindVertexArray(n):i.bindVertexArrayOES(n)}function f(n){return r.isWebGL2?e.deleteVertexArray(n):i.deleteVertexArrayOES(n)}function p(e){for(var n=[],t=[],r=[],i=0;i<a;i++)n[i]=0,t[i]=0,r[i]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:n,enabledAttributes:t,attributeDivisors:r,object:e,attributes:{},index:null}}function m(){for(var e=c.newAttributes,n=0,t=e.length;n<t;n++)e[n]=0}function d(e){h(e,0)}function h(t,a){var i=c.newAttributes,o=c.enabledAttributes,l=c.attributeDivisors;(i[t]=1,0===o[t]&&(e.enableVertexAttribArray(t),o[t]=1),l[t]!==a)&&((r.isWebGL2?e:n.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](t,a),l[t]=a)}function g(){for(var n=c.newAttributes,t=c.enabledAttributes,r=0,a=t.length;r<a;r++)t[r]!==n[r]&&(e.disableVertexAttribArray(r),t[r]=0)}function x(n,t,a,i,o,l){!0!==r.isWebGL2||5124!==a&&5125!==a?e.vertexAttribPointer(n,t,a,i,o,l):e.vertexAttribIPointer(n,t,a,o,l)}function y(){b(),u=!0,c!==s&&v((c=s).object)}function b(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:function(a,s,f,y,b){var _=!1;if(o){var w=function(n,t,a){var o=!0===a.wireframe,s=l[n.id];void 0===s&&(s={},l[n.id]=s);var c=s[t.id];void 0===c&&(c={},s[t.id]=c);var u=c[o];void 0===u&&(u=p(r.isWebGL2?e.createVertexArray():i.createVertexArrayOES()),c[o]=u);return u}(y,f,s);c!==w&&v((c=w).object),_=function(e,n,t,r){var a=c.attributes,i=n.attributes,o=0,l=t.getAttributes();for(var s in l){if(l[s].location>=0){var u=a[s],v=i[s];if(void 0===v&&("instanceMatrix"===s&&e.instanceMatrix&&(v=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(v=e.instanceColor)),void 0===u)return!0;if(u.attribute!==v)return!0;if(v&&u.data!==v.data)return!0;o++}}return c.attributesNum!==o||c.index!==r}(a,y,f,b),_&&function(e,n,t,r){var a={},i=n.attributes,o=0,l=t.getAttributes();for(var s in l){if(l[s].location>=0){var u=i[s];void 0===u&&("instanceMatrix"===s&&e.instanceMatrix&&(u=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(u=e.instanceColor));var v={};v.attribute=u,u&&u.data&&(v.data=u.data),a[s]=v,o++}}c.attributes=a,c.attributesNum=o,c.index=r}(a,y,f,b)}else{var S=!0===s.wireframe;c.geometry===y.id&&c.program===f.id&&c.wireframe===S||(c.geometry=y.id,c.program=f.id,c.wireframe=S,_=!0)}null!==b&&t.update(b,34963),(_||u)&&(u=!1,function(a,i,o,l){if(!1===r.isWebGL2&&(a.isInstancedMesh||l.isInstancedBufferGeometry)&&null===n.get("ANGLE_instanced_arrays"))return;m();var s=l.attributes,c=o.getAttributes(),u=i.defaultAttributeValues;for(var v in c){var f=c[v];if(f.location>=0){var p=s[v];if(void 0===p&&("instanceMatrix"===v&&a.instanceMatrix&&(p=a.instanceMatrix),"instanceColor"===v&&a.instanceColor&&(p=a.instanceColor)),void 0!==p){var y=p.normalized,b=p.itemSize,_=t.get(p);if(void 0===_)continue;var w=_.buffer,S=_.type,U=_.bytesPerElement;if(p.isInterleavedBufferAttribute){var M=p.data,j=M.stride,k=p.offset;if(M.isInstancedInterleavedBuffer){for(var T=0;T<f.locationSize;T++)h(f.location+T,M.meshPerAttribute);!0!==a.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=M.meshPerAttribute*M.count)}else for(var C=0;C<f.locationSize;C++)d(f.location+C);e.bindBuffer(34962,w);for(var R=0;R<f.locationSize;R++)x(f.location+R,b/f.locationSize,S,y,j*U,(k+b/f.locationSize*R)*U)}else{if(p.isInstancedBufferAttribute){for(var F=0;F<f.locationSize;F++)h(f.location+F,p.meshPerAttribute);!0!==a.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=p.meshPerAttribute*p.count)}else for(var P=0;P<f.locationSize;P++)d(f.location+P);e.bindBuffer(34962,w);for(var D=0;D<f.locationSize;D++)x(f.location+D,b/f.locationSize,S,y,b*U,b/f.locationSize*D*U)}}else if(void 0!==u){var E=u[v];if(void 0!==E)switch(E.length){case 2:e.vertexAttrib2fv(f.location,E);break;case 3:e.vertexAttrib3fv(f.location,E);break;case 4:e.vertexAttrib4fv(f.location,E);break;default:e.vertexAttrib1fv(f.location,E)}}}}g()}(a,s,f,y),null!==b&&e.bindBuffer(34963,t.get(b).buffer))},reset:y,resetDefaultState:b,dispose:function(){for(var e in y(),l){var n=l[e];for(var t in n){var r=n[t];for(var a in r)f(r[a].object),delete r[a];delete n[t]}delete l[e]}},releaseStatesOfGeometry:function(e){if(void 0!==l[e.id]){var n=l[e.id];for(var t in n){var r=n[t];for(var a in r)f(r[a].object),delete r[a];delete n[t]}delete l[e.id]}},releaseStatesOfProgram:function(e){for(var n in l){var t=l[n];if(void 0!==t[e.id]){var r=t[e.id];for(var a in r)f(r[a].object),delete r[a];delete t[e.id]}}},initAttributes:m,enableAttribute:d,disableUnusedAttributes:g}}function vo(e,n,t,r){var a,i=r.isWebGL2;this.setMode=function(e){a=e},this.render=function(n,r){e.drawArrays(a,n,r),t.update(r,a,1)},this.renderInstances=function(r,o,l){if(0!==l){var s,c;if(i)s=e,c="drawArraysInstanced";else if(c="drawArraysInstancedANGLE",null===(s=n.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");s[c](a,r,o,l),t.update(o,a,l)}}}function fo(e,n,t){var r;function a(n){if("highp"===n){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";n="mediump"}return"mediump"===n&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var i="undefined"!==typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,o=void 0!==t.precision?t.precision:"highp",l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);var s=i||n.has("WEBGL_draw_buffers"),c=!0===t.logarithmicDepthBuffer,u=e.getParameter(34930),v=e.getParameter(35660),f=e.getParameter(3379),p=e.getParameter(34076),m=e.getParameter(34921),d=e.getParameter(36347),h=e.getParameter(36348),g=e.getParameter(36349),x=v>0,y=i||n.has("OES_texture_float");return{isWebGL2:i,drawBuffers:s,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===n.has("EXT_texture_filter_anisotropic")){var t=n.get("EXT_texture_filter_anisotropic");r=e.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:a,precision:o,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:v,maxTextureSize:f,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:d,maxVaryings:h,maxFragmentUniforms:g,vertexTextures:x,floatFragmentTextures:y,floatVertexTextures:x&&y,maxSamples:i?e.getParameter(36183):0}}function po(e){var n=this,t=null,r=0,a=!1,i=!1,o=new Ki,l=new lr,s={value:null,needsUpdate:!1};function c(){s.value!==t&&(s.value=t,s.needsUpdate=r>0),n.numPlanes=r,n.numIntersection=0}function u(e,t,r,a){var i=null!==e?e.length:0,c=null;if(0!==i){if(c=s.value,!0!==a||null===c){var u=r+4*i,v=t.matrixWorldInverse;l.getNormalMatrix(v),(null===c||c.length<u)&&(c=new Float32Array(u));for(var f=0,p=r;f!==i;++f,p+=4)o.copy(e[f]).applyMatrix4(v,l),o.normal.toArray(c,p),c[p+3]=o.constant}s.value=c,s.needsUpdate=!0}return n.numPlanes=i,n.numIntersection=0,c}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,n,i){var o=0!==e.length||n||0!==r||a;return a=n,t=u(e,i,0),r=e.length,o},this.beginShadows=function(){i=!0,u(null)},this.endShadows=function(){i=!1,c()},this.setState=function(n,o,l){var v=n.clippingPlanes,f=n.clipIntersection,p=n.clipShadows,m=e.get(n);if(!a||null===v||0===v.length||i&&!p)i?u(null):c();else{var d=i?0:r,h=4*d,g=m.clippingState||null;s.value=g,g=u(v,o,h,l);for(var x=0;x!==h;++x)g[x]=t[x];m.clippingState=g,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=d}}}function mo(e){var n=new WeakMap;function t(e,n){return n===Le?e.mapping=Ee:n===Ae&&(e.mapping=ze),e}function r(e){var t=e.target;t.removeEventListener("dispose",r);var a=n.get(t);void 0!==a&&(n.delete(t),a.dispose())}return{get:function(a){if(a&&a.isTexture&&!1===a.isRenderTargetTexture){var i=a.mapping;if(i===Le||i===Ae){if(n.has(a))return t(n.get(a).texture,a.mapping);var o=a.image;if(o&&o.height>0){var l=new Zi(o.height/2);return l.fromEquirectangularTexture(e,a),n.set(a,l),a.addEventListener("dispose",r),t(l.texture,a.mapping)}return null}}return a},dispose:function(){n=new WeakMap}}}so.physical={uniforms:Ni([so.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new or(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Sr(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new or},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Sr(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Sr(1,1,1)},specularColorMap:{value:null}}]),vertexShader:oo.meshphysical_vert,fragmentShader:oo.meshphysical_frag};var ho=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;return y(this,t),(e=n.call(this)).isOrthographicCamera=!0,e.type="OrthographicCamera",e.zoom=1,e.view=null,e.left=r,e.right=a,e.top=i,e.bottom=o,e.near=l,e.far=s,e.updateProjectionMatrix(),e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}},{key:"setViewOffset",value:function(e,n,t,r,a,i){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=t,this.view.offsetY=r,this.view.width=a,this.view.height=i,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),t=(this.right+this.left)/2,r=(this.top+this.bottom)/2,a=t-e,i=t+e,o=r+n,l=r-n;if(null!==this.view&&this.view.enabled){var s=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i=(a+=s*this.view.offsetX)+s*this.view.width,l=(o-=c*this.view.offsetY)-c*this.view.height}this.projectionMatrix.makeOrthographic(a,i,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,null!==this.view&&(n.object.view=Object.assign({},this.view)),n}}]),t}(qi),go=[.125,.215,.35,.446,.526,.582],xo=20,yo=new ho,bo=new Sr,_o=null,wo=(1+Math.sqrt(5))/2,So=1/wo,Uo=[new Ar(1,1,1),new Ar(-1,1,1),new Ar(1,1,-1),new Ar(-1,1,-1),new Ar(0,wo,So),new Ar(0,wo,-So),new Ar(So,0,wo),new Ar(-So,0,wo),new Ar(wo,So,0),new Ar(-wo,So,0)],Mo=function(){function e(n){y(this,e),this._renderer=n,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}return _(e,[{key:"fromScene",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;_o=this._renderer.getRenderTarget(),this._setSize(256);var a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,t,r,a),n>0&&this._blur(a,0,0,n),this._applyPMREM(a),this._cleanup(a),a}},{key:"fromEquirectangular",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,n)}},{key:"fromCubemap",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,n)}},{key:"compileCubemapShader",value:function(){null===this._cubemapMaterial&&(this._cubemapMaterial=Co(),this._compileMaterial(this._cubemapMaterial))}},{key:"compileEquirectangularShader",value:function(){null===this._equirectMaterial&&(this._equirectMaterial=To(),this._compileMaterial(this._equirectMaterial))}},{key:"dispose",value:function(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}},{key:"_setSize",value:function(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}},{key:"_dispose",value:function(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(var e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}},{key:"_cleanup",value:function(e){this._renderer.setRenderTarget(_o),e.scissorTest=!1,ko(e,0,0,e.width,e.height)}},{key:"_fromTexture",value:function(e,n){e.mapping===Ee||e.mapping===ze?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),_o=this._renderer.getRenderTarget();var t=n||this._allocateTargets();return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}},{key:"_allocateTargets",value:function(){var e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,t={magFilter:Xe,minFilter:Xe,generateMipmaps:!1,type:on,format:fn,encoding:st,depthBuffer:!1},r=jo(e,n,t);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=jo(e,n,t);var a=this._lodMax,i=function(e){for(var n=[],t=[],r=[],a=e,i=e-4+1+go.length,o=0;o<i;o++){var l=Math.pow(2,a);t.push(l);var s=1/l;o>e-4?s=go[o-e+4-1]:0===o&&(s=0),r.push(s);for(var c=1/(l-2),u=-c,v=1+c,f=[u,u,v,u,v,v,u,u,v,v,u,v],p=6,m=6,d=3,h=2,g=1,x=new Float32Array(d*m*p),y=new Float32Array(h*m*p),b=new Float32Array(g*m*p),_=0;_<p;_++){var w=_%3*2/3-1,S=_>2?0:-1,U=[w,S,0,w+2/3,S,0,w+2/3,S+1,0,w,S,0,w+2/3,S+1,0,w,S+1,0];x.set(U,d*m*_),y.set(f,h*m*_);var M=[_,_,_,_,_,_];b.set(M,g*m*_)}var j=new yi;j.setAttribute("position",new ni(x,d)),j.setAttribute("uv",new ni(y,h)),j.setAttribute("faceIndex",new ni(b,g)),n.push(j),a>4&&a--}return{lodPlanes:n,sizeLods:t,sigmas:r}}(a);this._sizeLods=i.sizeLods,this._lodPlanes=i.lodPlanes,this._sigmas=i.sigmas,this._blurMaterial=function(e,n,t){var r=new Float32Array(xo),a=new Ar(0,1,0);return new Vi({name:"SphericalGaussianBlur",defines:{n:xo,CUBEUV_TEXEL_WIDTH:1/n,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:"".concat(e,".0")},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:a}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}(a,e,n)}return r}},{key:"_compileMaterial",value:function(e){var n=new Ai(this._lodPlanes[0],e);this._renderer.compile(n,yo)}},{key:"_sceneToCubeUV",value:function(e,n,t,r){var a=new Hi(90,1,n,t),i=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,s=l.autoClear,c=l.toneMapping;l.getClearColor(bo),l.toneMapping=ke,l.autoClear=!1;var u=new $a({name:"PMREM.Background",side:W,depthWrite:!1,depthTest:!1}),v=new Ai(new Oi,u),f=!1,p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,f=!0):(u.color.copy(bo),f=!0);for(var m=0;m<6;m++){var d=m%3;0===d?(a.up.set(0,i[m],0),a.lookAt(o[m],0,0)):1===d?(a.up.set(0,0,i[m]),a.lookAt(0,o[m],0)):(a.up.set(0,i[m],0),a.lookAt(0,0,o[m]));var h=this._cubeSize;ko(r,d*h,m>2?h:0,h,h),l.setRenderTarget(r),f&&l.render(v,a),l.render(e,a)}v.geometry.dispose(),v.material.dispose(),l.toneMapping=c,l.autoClear=s,e.background=p}},{key:"_textureToCubeUV",value:function(e,n){var t=this._renderer,r=e.mapping===Ee||e.mapping===ze;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=Co()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=To());var a=r?this._cubemapMaterial:this._equirectMaterial,i=new Ai(this._lodPlanes[0],a);a.uniforms.envMap.value=e;var o=this._cubeSize;ko(n,0,0,3*o,2*o),t.setRenderTarget(n),t.render(i,yo)}},{key:"_applyPMREM",value:function(e){var n=this._renderer,t=n.autoClear;n.autoClear=!1;for(var r=1;r<this._lodPlanes.length;r++){var a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),i=Uo[(r-1)%Uo.length];this._blur(e,r-1,r,a,i)}n.autoClear=t}},{key:"_blur",value:function(e,n,t,r,a){var i=this._pingPongRenderTarget;this._halfBlur(e,i,n,t,r,"latitudinal",a),this._halfBlur(i,e,t,t,r,"longitudinal",a)}},{key:"_halfBlur",value:function(e,n,t,r,a,i,o){var l=this._renderer,s=this._blurMaterial;"latitudinal"!==i&&"longitudinal"!==i&&console.error("blur direction must be either latitudinal or longitudinal!");var c=new Ai(this._lodPlanes[r],s),u=s.uniforms,v=this._sizeLods[t]-1,f=isFinite(a)?Math.PI/(2*v):2*Math.PI/39,p=a/f,m=isFinite(a)?1+Math.floor(3*p):xo;m>xo&&console.warn("sigmaRadians, ".concat(a,", is too large and will clip, as it requested ").concat(m," samples when the maximum is set to ").concat(xo));for(var d=[],h=0,g=0;g<xo;++g){var x=g/p,y=Math.exp(-x*x/2);d.push(y),0===g?h+=y:g<m&&(h+=2*y)}for(var b=0;b<d.length;b++)d[b]=d[b]/h;u.envMap.value=e.texture,u.samples.value=m,u.weights.value=d,u.latitudinal.value="latitudinal"===i,o&&(u.poleAxis.value=o);var _=this._lodMax;u.dTheta.value=f,u.mipInt.value=_-t;var w=this._sizeLods[r];ko(n,3*w*(r>_-4?r-_+4:0),4*(this._cubeSize-w),3*w,2*w),l.setRenderTarget(n),l.render(c,yo)}}]),e}();function jo(e,n,t){var r=new Rr(e,n,t);return r.texture.mapping=Ie,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function ko(e,n,t,r,a){e.viewport.set(n,t,r,a),e.scissor.set(n,t,r,a)}function To(){return new Vi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}function Co(){return new Vi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}function Ro(e){var n=new WeakMap,t=null;function r(e){var t=e.target;t.removeEventListener("dispose",r);var a=n.get(t);void 0!==a&&(n.delete(t),a.dispose())}return{get:function(a){if(a&&a.isTexture){var i=a.mapping,o=i===Le||i===Ae,l=i===Ee||i===ze;if(o||l){if(a.isRenderTargetTexture&&!0===a.needsPMREMUpdate){a.needsPMREMUpdate=!1;var s=n.get(a);return null===t&&(t=new Mo(e)),s=o?t.fromEquirectangular(a,s):t.fromCubemap(a,s),n.set(a,s),s.texture}if(n.has(a))return n.get(a).texture;var c=a.image;if(o&&c&&c.height>0||l&&c&&function(e){for(var n=0,t=6,r=0;r<t;r++)void 0!==e[r]&&n++;return n===t}(c)){null===t&&(t=new Mo(e));var u=o?t.fromEquirectangular(a):t.fromCubemap(a);return n.set(a,u),a.addEventListener("dispose",r),u.texture}return null}}return a},dispose:function(){n=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function Fo(e){var n={};function t(t){if(void 0!==n[t])return n[t];var r;switch(t){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(t)}return n[t]=r,r}return{has:function(e){return null!==t(e)},init:function(e){e.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(e){var n=t(e);return null===n&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),n}}}function Po(e,n,t,r){var a={},i=new WeakMap;function o(e){var l=e.target;for(var s in null!==l.index&&n.remove(l.index),l.attributes)n.remove(l.attributes[s]);l.removeEventListener("dispose",o),delete a[l.id];var c=i.get(l);c&&(n.remove(c),i.delete(l)),r.releaseStatesOfGeometry(l),!0===l.isInstancedBufferGeometry&&delete l._maxInstanceCount,t.memory.geometries--}function l(e){var t=[],r=e.index,a=e.attributes.position,o=0;if(null!==r){var l=r.array;o=r.version;for(var s=0,c=l.length;s<c;s+=3){var u=l[s+0],v=l[s+1],f=l[s+2];t.push(u,v,v,f,f,u)}}else{var p=a.array;o=a.version;for(var m=0,d=p.length/3-1;m<d;m+=3){var h=m+0,g=m+1,x=m+2;t.push(h,g,g,x,x,h)}}var y=new(sr(t)?si:oi)(t,1);y.version=o;var b=i.get(e);b&&n.remove(b),i.set(e,y)}return{get:function(e,n){return!0===a[n.id]||(n.addEventListener("dispose",o),a[n.id]=!0,t.memory.geometries++),n},update:function(e){var t=e.attributes;for(var r in t)n.update(t[r],34962);var a=e.morphAttributes;for(var i in a)for(var o=a[i],l=0,s=o.length;l<s;l++)n.update(o[l],34962)},getWireframeAttribute:function(e){var n=i.get(e);if(n){var t=e.index;null!==t&&n.version<t.version&&l(e)}else l(e);return i.get(e)}}}function Do(e,n,t,r){var a,i,o,l=r.isWebGL2;this.setMode=function(e){a=e},this.setIndex=function(e){i=e.type,o=e.bytesPerElement},this.render=function(n,r){e.drawElements(a,r,i,n*o),t.update(r,a,1)},this.renderInstances=function(r,s,c){if(0!==c){var u,v;if(l)u=e,v="drawElementsInstanced";else if(v="drawElementsInstancedANGLE",null===(u=n.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[v](a,s,i,r*o,c),t.update(s,a,c)}}}function Eo(e){var n={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:n,programs:null,autoReset:!0,reset:function(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0},update:function(e,t,r){switch(n.calls++,t){case 4:n.triangles+=r*(e/3);break;case 1:n.lines+=r*(e/2);break;case 3:n.lines+=r*(e-1);break;case 2:n.lines+=r*e;break;case 0:n.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function zo(e,n){return e[0]-n[0]}function Lo(e,n){return Math.abs(n[1])-Math.abs(e[1])}function Ao(e,n,t){for(var r={},a=new Float32Array(8),i=new WeakMap,o=new Cr,l=[],s=0;s<8;s++)l[s]=[s,0];return{update:function(s,c,u,v){var f=s.morphTargetInfluences;if(!0===n.isWebGL2){var p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=void 0!==p?p.length:0,d=i.get(c);if(void 0===d||d.count!==m){void 0!==d&&d.texture.dispose();var h=void 0!==c.morphAttributes.position,g=void 0!==c.morphAttributes.normal,x=void 0!==c.morphAttributes.color,y=c.morphAttributes.position||[],b=c.morphAttributes.normal||[],_=c.morphAttributes.color||[],w=0;!0===h&&(w=1),!0===g&&(w=2),!0===x&&(w=3);var S=c.attributes.position.count*w,U=1;S>n.maxTextureSize&&(U=Math.ceil(S/n.maxTextureSize),S=n.maxTextureSize);var M=new Float32Array(S*U*4*m),j=new Fr(M,S,U,m);j.type=an,j.needsUpdate=!0;for(var k=4*w,T=0;T<m;T++)for(var C=y[T],R=b[T],F=_[T],P=S*U*4*T,D=0;D<C.count;D++){var E=D*k;!0===h&&(o.fromBufferAttribute(C,D),M[P+E+0]=o.x,M[P+E+1]=o.y,M[P+E+2]=o.z,M[P+E+3]=0),!0===g&&(o.fromBufferAttribute(R,D),M[P+E+4]=o.x,M[P+E+5]=o.y,M[P+E+6]=o.z,M[P+E+7]=0),!0===x&&(o.fromBufferAttribute(F,D),M[P+E+8]=o.x,M[P+E+9]=o.y,M[P+E+10]=o.z,M[P+E+11]=4===F.itemSize?o.w:1)}d={count:m,texture:j,size:new or(S,U)},i.set(c,d),c.addEventListener("dispose",(function e(){j.dispose(),i.delete(c),c.removeEventListener("dispose",e)}))}for(var z=0,L=0;L<f.length;L++)z+=f[L];var A=c.morphTargetsRelative?1:1-z;v.getUniforms().setValue(e,"morphTargetBaseInfluence",A),v.getUniforms().setValue(e,"morphTargetInfluences",f),v.getUniforms().setValue(e,"morphTargetsTexture",d.texture,t),v.getUniforms().setValue(e,"morphTargetsTextureSize",d.size)}else{var I=void 0===f?0:f.length,O=r[c.id];if(void 0===O||O.length!==I){O=[];for(var B=0;B<I;B++)O[B]=[B,0];r[c.id]=O}for(var N=0;N<I;N++){var G=O[N];G[0]=N,G[1]=f[N]}O.sort(Lo);for(var V=0;V<8;V++)V<I&&O[V][1]?(l[V][0]=O[V][0],l[V][1]=O[V][1]):(l[V][0]=Number.MAX_SAFE_INTEGER,l[V][1]=0);l.sort(zo);for(var q=c.morphAttributes.position,H=c.morphAttributes.normal,W=0,X=0;X<8;X++){var Y=l[X],Z=Y[0],J=Y[1];Z!==Number.MAX_SAFE_INTEGER&&J?(q&&c.getAttribute("morphTarget"+X)!==q[Z]&&c.setAttribute("morphTarget"+X,q[Z]),H&&c.getAttribute("morphNormal"+X)!==H[Z]&&c.setAttribute("morphNormal"+X,H[Z]),a[X]=J,W+=J):(q&&!0===c.hasAttribute("morphTarget"+X)&&c.deleteAttribute("morphTarget"+X),H&&!0===c.hasAttribute("morphNormal"+X)&&c.deleteAttribute("morphNormal"+X),a[X]=0)}var Q=c.morphTargetsRelative?1:1-W;v.getUniforms().setValue(e,"morphTargetBaseInfluence",Q),v.getUniforms().setValue(e,"morphTargetInfluences",a)}}}}function Io(e,n,t,r){var a=new WeakMap;function i(e){var n=e.target;n.removeEventListener("dispose",i),t.remove(n.instanceMatrix),null!==n.instanceColor&&t.remove(n.instanceColor)}return{update:function(e){var o=r.render.frame,l=e.geometry,s=n.get(e,l);return a.get(s)!==o&&(n.update(s),a.set(s,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",i)&&e.addEventListener("dispose",i),t.update(e.instanceMatrix,34962),null!==e.instanceColor&&t.update(e.instanceColor,34962)),s},dispose:function(){a=new WeakMap}}}var Oo=new Tr,Bo=new Fr,No=new Dr,Go=new Yi,Vo=[],qo=[],Ho=new Float32Array(16),Wo=new Float32Array(9),Xo=new Float32Array(4);function Yo(e,n,t){var r=e[0];if(r<=0||r>0)return e;var a=n*t,i=Vo[a];if(void 0===i&&(i=new Float32Array(a),Vo[a]=i),0!==n){r.toArray(i,0);for(var o=1,l=0;o!==n;++o)l+=t,e[o].toArray(i,l)}return i}function Zo(e,n){if(e.length!==n.length)return!1;for(var t=0,r=e.length;t<r;t++)if(e[t]!==n[t])return!1;return!0}function Jo(e,n){for(var t=0,r=n.length;t<r;t++)e[t]=n[t]}function Qo(e,n){var t=qo[n];void 0===t&&(t=new Int32Array(n),qo[n]=t);for(var r=0;r!==n;++r)t[r]=e.allocateTextureUnit();return t}function $o(e,n){var t=this.cache;t[0]!==n&&(e.uniform1f(this.addr,n),t[0]=n)}function Ko(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y||(e.uniform2f(this.addr,n.x,n.y),t[0]=n.x,t[1]=n.y);else{if(Zo(t,n))return;e.uniform2fv(this.addr,n),Jo(t,n)}}function el(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z||(e.uniform3f(this.addr,n.x,n.y,n.z),t[0]=n.x,t[1]=n.y,t[2]=n.z);else if(void 0!==n.r)t[0]===n.r&&t[1]===n.g&&t[2]===n.b||(e.uniform3f(this.addr,n.r,n.g,n.b),t[0]=n.r,t[1]=n.g,t[2]=n.b);else{if(Zo(t,n))return;e.uniform3fv(this.addr,n),Jo(t,n)}}function nl(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z&&t[3]===n.w||(e.uniform4f(this.addr,n.x,n.y,n.z,n.w),t[0]=n.x,t[1]=n.y,t[2]=n.z,t[3]=n.w);else{if(Zo(t,n))return;e.uniform4fv(this.addr,n),Jo(t,n)}}function tl(e,n){var t=this.cache,r=n.elements;if(void 0===r){if(Zo(t,n))return;e.uniformMatrix2fv(this.addr,!1,n),Jo(t,n)}else{if(Zo(t,r))return;Xo.set(r),e.uniformMatrix2fv(this.addr,!1,Xo),Jo(t,r)}}function rl(e,n){var t=this.cache,r=n.elements;if(void 0===r){if(Zo(t,n))return;e.uniformMatrix3fv(this.addr,!1,n),Jo(t,n)}else{if(Zo(t,r))return;Wo.set(r),e.uniformMatrix3fv(this.addr,!1,Wo),Jo(t,r)}}function al(e,n){var t=this.cache,r=n.elements;if(void 0===r){if(Zo(t,n))return;e.uniformMatrix4fv(this.addr,!1,n),Jo(t,n)}else{if(Zo(t,r))return;Ho.set(r),e.uniformMatrix4fv(this.addr,!1,Ho),Jo(t,r)}}function il(e,n){var t=this.cache;t[0]!==n&&(e.uniform1i(this.addr,n),t[0]=n)}function ol(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y||(e.uniform2i(this.addr,n.x,n.y),t[0]=n.x,t[1]=n.y);else{if(Zo(t,n))return;e.uniform2iv(this.addr,n),Jo(t,n)}}function ll(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z||(e.uniform3i(this.addr,n.x,n.y,n.z),t[0]=n.x,t[1]=n.y,t[2]=n.z);else{if(Zo(t,n))return;e.uniform3iv(this.addr,n),Jo(t,n)}}function sl(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z&&t[3]===n.w||(e.uniform4i(this.addr,n.x,n.y,n.z,n.w),t[0]=n.x,t[1]=n.y,t[2]=n.z,t[3]=n.w);else{if(Zo(t,n))return;e.uniform4iv(this.addr,n),Jo(t,n)}}function cl(e,n){var t=this.cache;t[0]!==n&&(e.uniform1ui(this.addr,n),t[0]=n)}function ul(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y||(e.uniform2ui(this.addr,n.x,n.y),t[0]=n.x,t[1]=n.y);else{if(Zo(t,n))return;e.uniform2uiv(this.addr,n),Jo(t,n)}}function vl(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z||(e.uniform3ui(this.addr,n.x,n.y,n.z),t[0]=n.x,t[1]=n.y,t[2]=n.z);else{if(Zo(t,n))return;e.uniform3uiv(this.addr,n),Jo(t,n)}}function fl(e,n){var t=this.cache;if(void 0!==n.x)t[0]===n.x&&t[1]===n.y&&t[2]===n.z&&t[3]===n.w||(e.uniform4ui(this.addr,n.x,n.y,n.z,n.w),t[0]=n.x,t[1]=n.y,t[2]=n.z,t[3]=n.w);else{if(Zo(t,n))return;e.uniform4uiv(this.addr,n),Jo(t,n)}}function pl(e,n,t){var r=this.cache,a=t.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),t.setTexture2D(n||Oo,a)}function ml(e,n,t){var r=this.cache,a=t.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),t.setTexture3D(n||No,a)}function dl(e,n,t){var r=this.cache,a=t.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),t.setTextureCube(n||Go,a)}function hl(e,n,t){var r=this.cache,a=t.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),t.setTexture2DArray(n||Bo,a)}function gl(e,n){e.uniform1fv(this.addr,n)}function xl(e,n){var t=Yo(n,this.size,2);e.uniform2fv(this.addr,t)}function yl(e,n){var t=Yo(n,this.size,3);e.uniform3fv(this.addr,t)}function bl(e,n){var t=Yo(n,this.size,4);e.uniform4fv(this.addr,t)}function _l(e,n){var t=Yo(n,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function wl(e,n){var t=Yo(n,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function Sl(e,n){var t=Yo(n,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Ul(e,n){e.uniform1iv(this.addr,n)}function Ml(e,n){e.uniform2iv(this.addr,n)}function jl(e,n){e.uniform3iv(this.addr,n)}function kl(e,n){e.uniform4iv(this.addr,n)}function Tl(e,n){e.uniform1uiv(this.addr,n)}function Cl(e,n){e.uniform2uiv(this.addr,n)}function Rl(e,n){e.uniform3uiv(this.addr,n)}function Fl(e,n){e.uniform4uiv(this.addr,n)}function Pl(e,n,t){var r=this.cache,a=n.length,i=Qo(t,a);Zo(r,i)||(e.uniform1iv(this.addr,i),Jo(r,i));for(var o=0;o!==a;++o)t.setTexture2D(n[o]||Oo,i[o])}function Dl(e,n,t){var r=this.cache,a=n.length,i=Qo(t,a);Zo(r,i)||(e.uniform1iv(this.addr,i),Jo(r,i));for(var o=0;o!==a;++o)t.setTexture3D(n[o]||No,i[o])}function El(e,n,t){var r=this.cache,a=n.length,i=Qo(t,a);Zo(r,i)||(e.uniform1iv(this.addr,i),Jo(r,i));for(var o=0;o!==a;++o)t.setTextureCube(n[o]||Go,i[o])}function zl(e,n,t){var r=this.cache,a=n.length,i=Qo(t,a);Zo(r,i)||(e.uniform1iv(this.addr,i),Jo(r,i));for(var o=0;o!==a;++o)t.setTexture2DArray(n[o]||Bo,i[o])}var Ll=_((function e(n,t,r){y(this,e),this.id=n,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return $o;case 35664:return Ko;case 35665:return el;case 35666:return nl;case 35674:return tl;case 35675:return rl;case 35676:return al;case 5124:case 35670:return il;case 35667:case 35671:return ol;case 35668:case 35672:return ll;case 35669:case 35673:return sl;case 5125:return cl;case 36294:return ul;case 36295:return vl;case 36296:return fl;case 35678:case 36198:case 36298:case 36306:case 35682:return pl;case 35679:case 36299:case 36307:return ml;case 35680:case 36300:case 36308:case 36293:return dl;case 36289:case 36303:case 36311:case 36292:return hl}}(t.type)})),Al=_((function e(n,t,r){y(this,e),this.id=n,this.addr=r,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return gl;case 35664:return xl;case 35665:return yl;case 35666:return bl;case 35674:return _l;case 35675:return wl;case 35676:return Sl;case 5124:case 35670:return Ul;case 35667:case 35671:return Ml;case 35668:case 35672:return jl;case 35669:case 35673:return kl;case 5125:return Tl;case 36294:return Cl;case 36295:return Rl;case 36296:return Fl;case 35678:case 36198:case 36298:case 36306:case 35682:return Pl;case 35679:case 36299:case 36307:return Dl;case 35680:case 36300:case 36308:case 36293:return El;case 36289:case 36303:case 36311:case 36292:return zl}}(t.type)})),Il=function(){function e(n){y(this,e),this.id=n,this.seq=[],this.map={}}return _(e,[{key:"setValue",value:function(e,n,t){for(var r=this.seq,a=0,i=r.length;a!==i;++a){var o=r[a];o.setValue(e,n[o.id],t)}}}]),e}(),Ol=/(\w+)(\])?(\[|\.)?/g;function Bl(e,n){e.seq.push(n),e.map[n.id]=n}function Nl(e,n,t){var r=e.name,a=r.length;for(Ol.lastIndex=0;;){var i=Ol.exec(r),o=Ol.lastIndex,l=i[1],s="]"===i[2],c=i[3];if(s&&(l|=0),void 0===c||"["===c&&o+2===a){Bl(t,void 0===c?new Ll(l,e,n):new Al(l,e,n));break}var u=t.map[l];void 0===u&&Bl(t,u=new Il(l)),t=u}}var Gl=function(){function e(n,t){y(this,e),this.seq=[],this.map={};for(var r=n.getProgramParameter(t,35718),a=0;a<r;++a){var i=n.getActiveUniform(t,a);Nl(i,n.getUniformLocation(t,i.name),this)}}return _(e,[{key:"setValue",value:function(e,n,t,r){var a=this.map[n];void 0!==a&&a.setValue(e,t,r)}},{key:"setOptional",value:function(e,n,t){var r=n[t];void 0!==r&&this.setValue(e,t,r)}}],[{key:"upload",value:function(e,n,t,r){for(var a=0,i=n.length;a!==i;++a){var o=n[a],l=t[o.id];!1!==l.needsUpdate&&o.setValue(e,l.value,r)}}},{key:"seqWithValue",value:function(e,n){for(var t=[],r=0,a=e.length;r!==a;++r){var i=e[r];i.id in n&&t.push(i)}return t}}]),e}();function Vl(e,n,t){var r=e.createShader(n);return e.shaderSource(r,t),e.compileShader(r),r}var ql=0;function Hl(e,n,t){var r=e.getShaderParameter(n,35713),a=e.getShaderInfoLog(n).trim();if(r&&""===a)return"";var i=/ERROR: 0:(\d+)/.exec(a);if(i){var o=parseInt(i[1]);return t.toUpperCase()+"\n\n"+a+"\n\n"+function(e,n){for(var t=e.split("\n"),r=[],a=Math.max(n-6,0),i=Math.min(n+6,t.length),o=a;o<i;o++){var l=o+1;r.push("".concat(l===n?">":" "," ").concat(l,": ").concat(t[o]))}return r.join("\n")}(e.getShaderSource(n),o)}return a}function Wl(e,n){var t=function(e){switch(e){case st:return["Linear","( value )"];case ct:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(n);return"vec4 "+e+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Xl(e,n){var t;switch(n){case Te:t="Linear";break;case Ce:t="Reinhard";break;case Re:t="OptimizedCineon";break;case Fe:t="ACESFilmic";break;case Pe:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",n),t="Linear"}return"vec3 "+e+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Yl(e){return""!==e}function Zl(e,n){var t=n.numSpotLightShadows+n.numSpotLightMaps-n.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,n.numDirLights).replace(/NUM_SPOT_LIGHTS/g,n.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,n.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,n.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,n.numPointLights).replace(/NUM_HEMI_LIGHTS/g,n.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,n.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,n.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,n.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,n.numPointLightShadows)}function Jl(e,n){return e.replace(/NUM_CLIPPING_PLANES/g,n.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,n.numClippingPlanes-n.numClipIntersection)}var Ql=/^[ \t]*#include +<([\w\d./]+)>/gm;function $l(e){return e.replace(Ql,Kl)}function Kl(e,n){var t=oo[n];if(void 0===t)throw new Error("Can not resolve #include <"+n+">");return $l(t)}var es=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ns(e){return e.replace(es,ts)}function ts(e,n,t,r){for(var a="",i=parseInt(n);i<parseInt(t);i++)a+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return a}function rs(e){var n="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?n+="\n#define HIGH_PRECISION":"mediump"===e.precision?n+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(n+="\n#define LOW_PRECISION"),n}function as(e,n,t,r){var a,i,o=e.getContext(),l=t.defines,s=t.vertexShader,c=t.fragmentShader,u=function(e){var n="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===G?n="SHADOWMAP_TYPE_PCF":e.shadowMapType===V?n="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===q&&(n="SHADOWMAP_TYPE_VSM"),n}(t),v=function(e){var n="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Ee:case ze:n="ENVMAP_TYPE_CUBE";break;case Ie:n="ENVMAP_TYPE_CUBE_UV"}return n}(t),f=function(e){var n="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===ze&&(n="ENVMAP_MODE_REFRACTION");return n}(t),p=function(e){var n="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Ue:n="ENVMAP_BLENDING_MULTIPLY";break;case Me:n="ENVMAP_BLENDING_MIX";break;case je:n="ENVMAP_BLENDING_ADD"}return n}(t),m=function(e){var n=e.envMapCubeUVHeight;if(null===n)return null;var t=Math.log2(n)-2,r=1/n;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:r,maxMip:t}}(t),d=t.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Yl).join("\n")}(t),h=function(e){var n=[];for(var t in e){var r=e[t];!1!==r&&n.push("#define "+t+" "+r)}return n.join("\n")}(l),g=o.createProgram(),x=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?((a=[h].filter(Yl).join("\n")).length>0&&(a+="\n"),(i=[d,h].filter(Yl).join("\n")).length>0&&(i+="\n")):(a=[rs(t),"#define SHADER_NAME "+t.shaderName,h,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Yl).join("\n"),i=[d,rs(t),"#define SHADER_NAME "+t.shaderName,h,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+v:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ke?"#define TONE_MAPPING":"",t.toneMapping!==ke?oo.tonemapping_pars_fragment:"",t.toneMapping!==ke?Xl("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",oo.encodings_pars_fragment,Wl("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(Yl).join("\n")),s=Jl(s=Zl(s=$l(s),t),t),c=Jl(c=Zl(c=$l(c),t),t),s=ns(s),c=ns(c),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(x="#version 300 es\n",a=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+a,i=["#define varying in",t.glslVersion===Vt?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Vt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+i);var y,b,_=x+i+c,w=Vl(o,35633,x+a+s),S=Vl(o,35632,_);if(o.attachShader(g,w),o.attachShader(g,S),void 0!==t.index0AttributeName?o.bindAttribLocation(g,0,t.index0AttributeName):!0===t.morphTargets&&o.bindAttribLocation(g,0,"position"),o.linkProgram(g),e.debug.checkShaderErrors){var U=o.getProgramInfoLog(g).trim(),M=o.getShaderInfoLog(w).trim(),j=o.getShaderInfoLog(S).trim(),k=!0,T=!0;if(!1===o.getProgramParameter(g,35714)){k=!1;var C=Hl(o,w,"vertex"),R=Hl(o,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(g,35715)+"\n\nProgram Info Log: "+U+"\n"+C+"\n"+R)}else""!==U?console.warn("THREE.WebGLProgram: Program Info Log:",U):""!==M&&""!==j||(T=!1);T&&(this.diagnostics={runnable:k,programLog:U,vertexShader:{log:M,prefix:a},fragmentShader:{log:j,prefix:i}})}return o.deleteShader(w),o.deleteShader(S),this.getUniforms=function(){return void 0===y&&(y=new Gl(o,g)),y},this.getAttributes=function(){return void 0===b&&(b=function(e,n){for(var t={},r=e.getProgramParameter(n,35721),a=0;a<r;a++){var i=e.getActiveAttrib(n,a),o=i.name,l=1;35674===i.type&&(l=2),35675===i.type&&(l=3),35676===i.type&&(l=4),t[o]={type:i.type,location:e.getAttribLocation(n,o),locationSize:l}}return t}(o,g)),b},this.destroy=function(){r.releaseStatesOfProgram(this),o.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=ql++,this.cacheKey=n,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=S,this}var is=0,os=function(){function e(){y(this,e),this.shaderCache=new Map,this.materialCache=new Map}return _(e,[{key:"update",value:function(e){var n=e.vertexShader,t=e.fragmentShader,r=this._getShaderStage(n),a=this._getShaderStage(t),i=this._getShaderCacheForMaterial(e);return!1===i.has(r)&&(i.add(r),r.usedTimes++),!1===i.has(a)&&(i.add(a),a.usedTimes++),this}},{key:"remove",value:function(e){var n,t=f(this.materialCache.get(e));try{for(t.s();!(n=t.n()).done;){var r=n.value;r.usedTimes--,0===r.usedTimes&&this.shaderCache.delete(r.code)}}catch(a){t.e(a)}finally{t.f()}return this.materialCache.delete(e),this}},{key:"getVertexShaderID",value:function(e){return this._getShaderStage(e.vertexShader).id}},{key:"getFragmentShaderID",value:function(e){return this._getShaderStage(e.fragmentShader).id}},{key:"dispose",value:function(){this.shaderCache.clear(),this.materialCache.clear()}},{key:"_getShaderCacheForMaterial",value:function(e){var n=this.materialCache,t=n.get(e);return void 0===t&&(t=new Set,n.set(e,t)),t}},{key:"_getShaderStage",value:function(e){var n=this.shaderCache,t=n.get(e);return void 0===t&&(t=new ls(e),n.set(e,t)),t}}]),e}(),ls=_((function e(n){y(this,e),this.id=is++,this.code=n,this.usedTimes=0}));function ss(e,n,t,r,a,i,o){var l=new Ua,s=new os,c=[],u=a.isWebGL2,v=a.logarithmicDepthBuffer,f=a.vertexTextures,p=a.precision,m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(i,l,c,d,h){var g=d.fog,x=h.geometry,y=i.isMeshStandardMaterial?d.environment:null,b=(i.isMeshStandardMaterial?t:n).get(i.envMap||y),_=b&&b.mapping===Ie?b.image.height:null,w=m[i.type];null!==i.precision&&(p=a.getMaxPrecision(i.precision))!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",p,"instead.");var S,U,M,j,k=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,T=void 0!==k?k.length:0,C=0;if(void 0!==x.morphAttributes.position&&(C=1),void 0!==x.morphAttributes.normal&&(C=2),void 0!==x.morphAttributes.color&&(C=3),w){var R=so[w];S=R.vertexShader,U=R.fragmentShader}else S=i.vertexShader,U=i.fragmentShader,s.update(i),M=s.getVertexShaderID(i),j=s.getFragmentShaderID(i);var F=e.getRenderTarget(),P=i.alphaTest>0,D=i.clearcoat>0,E=i.iridescence>0;return{isWebGL2:u,shaderID:w,shaderName:i.type,vertexShader:S,fragmentShader:U,defines:i.defines,customVertexShaderID:M,customFragmentShaderID:j,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:p,instancing:!0===h.isInstancedMesh,instancingColor:!0===h.isInstancedMesh&&null!==h.instanceColor,supportsVertexTextures:f,outputEncoding:null===F?e.outputEncoding:!0===F.isXRRenderTarget?F.texture.encoding:st,map:!!i.map,matcap:!!i.matcap,envMap:!!b,envMapMode:b&&b.mapping,envMapCubeUVHeight:_,lightMap:!!i.lightMap,aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===pt,tangentSpaceNormalMap:i.normalMapType===ft,decodeVideoTexture:!!i.map&&!0===i.map.isVideoTexture&&i.map.encoding===ct,clearcoat:D,clearcoatMap:D&&!!i.clearcoatMap,clearcoatRoughnessMap:D&&!!i.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!i.clearcoatNormalMap,iridescence:E,iridescenceMap:E&&!!i.iridescenceMap,iridescenceThicknessMap:E&&!!i.iridescenceThicknessMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,specularIntensityMap:!!i.specularIntensityMap,specularColorMap:!!i.specularColorMap,opaque:!1===i.transparent&&i.blending===Z,alphaMap:!!i.alphaMap,alphaTest:P,gradientMap:!!i.gradientMap,sheen:i.sheen>0,sheenColorMap:!!i.sheenColorMap,sheenRoughnessMap:!!i.sheenRoughnessMap,transmission:i.transmission>0,transmissionMap:!!i.transmissionMap,thicknessMap:!!i.thicknessMap,combine:i.combine,vertexTangents:!!i.normalMap&&!!x.attributes.tangent,vertexColors:i.vertexColors,vertexAlphas:!0===i.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,vertexUvs:!!i.map||!!i.bumpMap||!!i.normalMap||!!i.specularMap||!!i.alphaMap||!!i.emissiveMap||!!i.roughnessMap||!!i.metalnessMap||!!i.clearcoatMap||!!i.clearcoatRoughnessMap||!!i.clearcoatNormalMap||!!i.iridescenceMap||!!i.iridescenceThicknessMap||!!i.displacementMap||!!i.transmissionMap||!!i.thicknessMap||!!i.specularIntensityMap||!!i.specularColorMap||!!i.sheenColorMap||!!i.sheenRoughnessMap,uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.iridescenceMap||i.iridescenceThicknessMap||i.transmission>0||i.transmissionMap||i.thicknessMap||i.specularIntensityMap||i.specularColorMap||i.sheen>0||i.sheenColorMap||i.sheenRoughnessMap)&&!!i.displacementMap,fog:!!g,useFog:!0===i.fog,fogExp2:g&&g.isFogExp2,flatShading:!!i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:v,skinning:!0===h.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:T,morphTextureStride:C,numDirLights:l.directional.length,numPointLights:l.point.length,numSpotLights:l.spot.length,numSpotLightMaps:l.spotLightMap.length,numRectAreaLights:l.rectArea.length,numHemiLights:l.hemi.length,numDirLightShadows:l.directionalShadowMap.length,numPointLightShadows:l.pointShadowMap.length,numSpotLightShadows:l.spotShadowMap.length,numSpotLightShadowsWithMaps:l.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:ke,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,doubleSided:i.side===X,flipSided:i.side===W,useDepthPacking:!!i.depthPacking,depthPacking:i.depthPacking||0,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(n){var t=[];if(n.shaderID?t.push(n.shaderID):(t.push(n.customVertexShaderID),t.push(n.customFragmentShaderID)),void 0!==n.defines)for(var r in n.defines)t.push(r),t.push(n.defines[r]);return!1===n.isRawShaderMaterial&&(!function(e,n){e.push(n.precision),e.push(n.outputEncoding),e.push(n.envMapMode),e.push(n.envMapCubeUVHeight),e.push(n.combine),e.push(n.vertexUvs),e.push(n.fogExp2),e.push(n.sizeAttenuation),e.push(n.morphTargetsCount),e.push(n.morphAttributeCount),e.push(n.numDirLights),e.push(n.numPointLights),e.push(n.numSpotLights),e.push(n.numSpotLightMaps),e.push(n.numHemiLights),e.push(n.numRectAreaLights),e.push(n.numDirLightShadows),e.push(n.numPointLightShadows),e.push(n.numSpotLightShadows),e.push(n.numSpotLightShadowsWithMaps),e.push(n.shadowMapType),e.push(n.toneMapping),e.push(n.numClippingPlanes),e.push(n.numClipIntersection),e.push(n.depthPacking)}(t,n),function(e,n){l.disableAll(),n.isWebGL2&&l.enable(0);n.supportsVertexTextures&&l.enable(1);n.instancing&&l.enable(2);n.instancingColor&&l.enable(3);n.map&&l.enable(4);n.matcap&&l.enable(5);n.envMap&&l.enable(6);n.lightMap&&l.enable(7);n.aoMap&&l.enable(8);n.emissiveMap&&l.enable(9);n.bumpMap&&l.enable(10);n.normalMap&&l.enable(11);n.objectSpaceNormalMap&&l.enable(12);n.tangentSpaceNormalMap&&l.enable(13);n.clearcoat&&l.enable(14);n.clearcoatMap&&l.enable(15);n.clearcoatRoughnessMap&&l.enable(16);n.clearcoatNormalMap&&l.enable(17);n.iridescence&&l.enable(18);n.iridescenceMap&&l.enable(19);n.iridescenceThicknessMap&&l.enable(20);n.displacementMap&&l.enable(21);n.specularMap&&l.enable(22);n.roughnessMap&&l.enable(23);n.metalnessMap&&l.enable(24);n.gradientMap&&l.enable(25);n.alphaMap&&l.enable(26);n.alphaTest&&l.enable(27);n.vertexColors&&l.enable(28);n.vertexAlphas&&l.enable(29);n.vertexUvs&&l.enable(30);n.vertexTangents&&l.enable(31);n.uvsVertexOnly&&l.enable(32);e.push(l.mask),l.disableAll(),n.fog&&l.enable(0);n.useFog&&l.enable(1);n.flatShading&&l.enable(2);n.logarithmicDepthBuffer&&l.enable(3);n.skinning&&l.enable(4);n.morphTargets&&l.enable(5);n.morphNormals&&l.enable(6);n.morphColors&&l.enable(7);n.premultipliedAlpha&&l.enable(8);n.shadowMapEnabled&&l.enable(9);n.physicallyCorrectLights&&l.enable(10);n.doubleSided&&l.enable(11);n.flipSided&&l.enable(12);n.useDepthPacking&&l.enable(13);n.dithering&&l.enable(14);n.specularIntensityMap&&l.enable(15);n.specularColorMap&&l.enable(16);n.transmission&&l.enable(17);n.transmissionMap&&l.enable(18);n.thicknessMap&&l.enable(19);n.sheen&&l.enable(20);n.sheenColorMap&&l.enable(21);n.sheenRoughnessMap&&l.enable(22);n.decodeVideoTexture&&l.enable(23);n.opaque&&l.enable(24);e.push(l.mask)}(t,n),t.push(e.outputEncoding)),t.push(n.customProgramCacheKey),t.join()},getUniforms:function(e){var n,t=m[e.type];if(t){var r=so[t];n=Gi.clone(r.uniforms)}else n=e.uniforms;return n},acquireProgram:function(n,t){for(var r,a=0,o=c.length;a<o;a++){var l=c[a];if(l.cacheKey===t){++(r=l).usedTimes;break}}return void 0===r&&(r=new as(e,t,n,i),c.push(r)),r},releaseProgram:function(e){if(0===--e.usedTimes){var n=c.indexOf(e);c[n]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){s.remove(e)},programs:c,dispose:function(){s.dispose()}}}function cs(){var e=new WeakMap;return{get:function(n){var t=e.get(n);return void 0===t&&(t={},e.set(n,t)),t},remove:function(n){e.delete(n)},update:function(n,t,r){e.get(n)[t]=r},dispose:function(){e=new WeakMap}}}function us(e,n){return e.groupOrder!==n.groupOrder?e.groupOrder-n.groupOrder:e.renderOrder!==n.renderOrder?e.renderOrder-n.renderOrder:e.material.id!==n.material.id?e.material.id-n.material.id:e.z!==n.z?e.z-n.z:e.id-n.id}function vs(e,n){return e.groupOrder!==n.groupOrder?e.groupOrder-n.groupOrder:e.renderOrder!==n.renderOrder?e.renderOrder-n.renderOrder:e.z!==n.z?n.z-e.z:e.id-n.id}function fs(){var e=[],n=0,t=[],r=[],a=[];function i(t,r,a,i,o,l){var s=e[n];return void 0===s?(s={id:t.id,object:t,geometry:r,material:a,groupOrder:i,renderOrder:t.renderOrder,z:o,group:l},e[n]=s):(s.id=t.id,s.object=t,s.geometry=r,s.material=a,s.groupOrder=i,s.renderOrder=t.renderOrder,s.z=o,s.group=l),n++,s}return{opaque:t,transmissive:r,transparent:a,init:function(){n=0,t.length=0,r.length=0,a.length=0},push:function(e,n,o,l,s,c){var u=i(e,n,o,l,s,c);o.transmission>0?r.push(u):!0===o.transparent?a.push(u):t.push(u)},unshift:function(e,n,o,l,s,c){var u=i(e,n,o,l,s,c);o.transmission>0?r.unshift(u):!0===o.transparent?a.unshift(u):t.unshift(u)},finish:function(){for(var t=n,r=e.length;t<r;t++){var a=e[t];if(null===a.id)break;a.id=null,a.object=null,a.geometry=null,a.material=null,a.group=null}},sort:function(e,n){t.length>1&&t.sort(e||us),r.length>1&&r.sort(n||vs),a.length>1&&a.sort(n||vs)}}}function ps(){var e=new WeakMap;return{get:function(n,t){var r,a=e.get(n);return void 0===a?(r=new fs,e.set(n,[r])):t>=a.length?(r=new fs,a.push(r)):r=a[t],r},dispose:function(){e=new WeakMap}}}function ms(){var e={};return{get:function(n){if(void 0!==e[n.id])return e[n.id];var t;switch(n.type){case"DirectionalLight":t={direction:new Ar,color:new Sr};break;case"SpotLight":t={position:new Ar,direction:new Ar,color:new Sr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Ar,color:new Sr,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Ar,skyColor:new Sr,groundColor:new Sr};break;case"RectAreaLight":t={color:new Sr,position:new Ar,halfWidth:new Ar,halfHeight:new Ar}}return e[n.id]=t,t}}}var ds=0;function hs(e,n){return(n.castShadow?2:0)-(e.castShadow?2:0)+(n.map?1:0)-(e.map?1:0)}function gs(e,n){for(var t=new ms,r=function(){var e={};return{get:function(n){if(void 0!==e[n.id])return e[n.id];var t;switch(n.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new or};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new or,shadowCameraNear:1,shadowCameraFar:1e3}}return e[n.id]=t,t}}}(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0},i=0;i<9;i++)a.probe.push(new Ar);var o=new Ar,l=new pa,s=new pa;return{setup:function(i,o){for(var l=0,s=0,c=0,u=0;u<9;u++)a.probe[u].set(0,0,0);var v=0,f=0,p=0,m=0,d=0,h=0,g=0,x=0,y=0,b=0;i.sort(hs);for(var _=!0!==o?Math.PI:1,w=0,S=i.length;w<S;w++){var U=i[w],M=U.color,j=U.intensity,k=U.distance,T=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)l+=M.r*j*_,s+=M.g*j*_,c+=M.b*j*_;else if(U.isLightProbe)for(var C=0;C<9;C++)a.probe[C].addScaledVector(U.sh.coefficients[C],j);else if(U.isDirectionalLight){var R=t.get(U);if(R.color.copy(U.color).multiplyScalar(U.intensity*_),U.castShadow){var F=U.shadow,P=r.get(U);P.shadowBias=F.bias,P.shadowNormalBias=F.normalBias,P.shadowRadius=F.radius,P.shadowMapSize=F.mapSize,a.directionalShadow[v]=P,a.directionalShadowMap[v]=T,a.directionalShadowMatrix[v]=U.shadow.matrix,h++}a.directional[v]=R,v++}else if(U.isSpotLight){var D=t.get(U);D.position.setFromMatrixPosition(U.matrixWorld),D.color.copy(M).multiplyScalar(j*_),D.distance=k,D.coneCos=Math.cos(U.angle),D.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),D.decay=U.decay,a.spot[p]=D;var E=U.shadow;if(U.map&&(a.spotLightMap[y]=U.map,y++,E.updateMatrices(U),U.castShadow&&b++),a.spotLightMatrix[p]=E.matrix,U.castShadow){var z=r.get(U);z.shadowBias=E.bias,z.shadowNormalBias=E.normalBias,z.shadowRadius=E.radius,z.shadowMapSize=E.mapSize,a.spotShadow[p]=z,a.spotShadowMap[p]=T,x++}p++}else if(U.isRectAreaLight){var L=t.get(U);L.color.copy(M).multiplyScalar(j),L.halfWidth.set(.5*U.width,0,0),L.halfHeight.set(0,.5*U.height,0),a.rectArea[m]=L,m++}else if(U.isPointLight){var A=t.get(U);if(A.color.copy(U.color).multiplyScalar(U.intensity*_),A.distance=U.distance,A.decay=U.decay,U.castShadow){var I=U.shadow,O=r.get(U);O.shadowBias=I.bias,O.shadowNormalBias=I.normalBias,O.shadowRadius=I.radius,O.shadowMapSize=I.mapSize,O.shadowCameraNear=I.camera.near,O.shadowCameraFar=I.camera.far,a.pointShadow[f]=O,a.pointShadowMap[f]=T,a.pointShadowMatrix[f]=U.shadow.matrix,g++}a.point[f]=A,f++}else if(U.isHemisphereLight){var B=t.get(U);B.skyColor.copy(U.color).multiplyScalar(j*_),B.groundColor.copy(U.groundColor).multiplyScalar(j*_),a.hemi[d]=B,d++}}m>0&&(n.isWebGL2||!0===e.has("OES_texture_float_linear")?(a.rectAreaLTC1=lo.LTC_FLOAT_1,a.rectAreaLTC2=lo.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(a.rectAreaLTC1=lo.LTC_HALF_1,a.rectAreaLTC2=lo.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=l,a.ambient[1]=s,a.ambient[2]=c;var N=a.hash;N.directionalLength===v&&N.pointLength===f&&N.spotLength===p&&N.rectAreaLength===m&&N.hemiLength===d&&N.numDirectionalShadows===h&&N.numPointShadows===g&&N.numSpotShadows===x&&N.numSpotMaps===y||(a.directional.length=v,a.spot.length=p,a.rectArea.length=m,a.point.length=f,a.hemi.length=d,a.directionalShadow.length=h,a.directionalShadowMap.length=h,a.pointShadow.length=g,a.pointShadowMap.length=g,a.spotShadow.length=x,a.spotShadowMap.length=x,a.directionalShadowMatrix.length=h,a.pointShadowMatrix.length=g,a.spotLightMatrix.length=x+y-b,a.spotLightMap.length=y,a.numSpotLightShadowsWithMaps=b,N.directionalLength=v,N.pointLength=f,N.spotLength=p,N.rectAreaLength=m,N.hemiLength=d,N.numDirectionalShadows=h,N.numPointShadows=g,N.numSpotShadows=x,N.numSpotMaps=y,a.version=ds++)},setupView:function(e,n){for(var t=0,r=0,i=0,c=0,u=0,v=n.matrixWorldInverse,f=0,p=e.length;f<p;f++){var m=e[f];if(m.isDirectionalLight){var d=a.directional[t];d.direction.setFromMatrixPosition(m.matrixWorld),o.setFromMatrixPosition(m.target.matrixWorld),d.direction.sub(o),d.direction.transformDirection(v),t++}else if(m.isSpotLight){var h=a.spot[i];h.position.setFromMatrixPosition(m.matrixWorld),h.position.applyMatrix4(v),h.direction.setFromMatrixPosition(m.matrixWorld),o.setFromMatrixPosition(m.target.matrixWorld),h.direction.sub(o),h.direction.transformDirection(v),i++}else if(m.isRectAreaLight){var g=a.rectArea[c];g.position.setFromMatrixPosition(m.matrixWorld),g.position.applyMatrix4(v),s.identity(),l.copy(m.matrixWorld),l.premultiply(v),s.extractRotation(l),g.halfWidth.set(.5*m.width,0,0),g.halfHeight.set(0,.5*m.height,0),g.halfWidth.applyMatrix4(s),g.halfHeight.applyMatrix4(s),c++}else if(m.isPointLight){var x=a.point[r];x.position.setFromMatrixPosition(m.matrixWorld),x.position.applyMatrix4(v),r++}else if(m.isHemisphereLight){var y=a.hemi[u];y.direction.setFromMatrixPosition(m.matrixWorld),y.direction.transformDirection(v),u++}}},state:a}}function xs(e,n){var t=new gs(e,n),r=[],a=[];return{init:function(){r.length=0,a.length=0},state:{lightsArray:r,shadowsArray:a,lights:t},setupLights:function(e){t.setup(r,e)},setupLightsView:function(e){t.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){a.push(e)}}}function ys(e,n){var t=new WeakMap;return{get:function(r){var a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=t.get(r);return void 0===o?(a=new xs(e,n),t.set(r,[a])):i>=o.length?(a=new xs(e,n),o.push(a)):a=o[i],a},dispose:function(){t=new WeakMap}}}var bs=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshDepthMaterial=!0,r.type="MeshDepthMaterial",r.depthPacking=ut,r.map=null,r.alphaMap=null,r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.wireframe=!1,r.wireframeLinewidth=1,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}]),t}(Qa),_s=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshDistanceMaterial=!0,r.type="MeshDistanceMaterial",r.referencePosition=new Ar,r.nearDistance=1,r.farDistance=1e3,r.map=null,r.alphaMap=null,r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}]),t}(Qa);function ws(e,n,t){var r=new to,a=new or,i=new or,o=new Cr,l=new bs({depthPacking:vt}),s=new _s,c={},u=t.maxTextureSize,v={0:W,1:H,2:X},f=new Vi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new or},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=f.clone();p.defines.HORIZONTAL_PASS=1;var m=new yi;m.setAttribute("position",new ni(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var d=new Ai(m,f),h=this;function g(t,r){var i=n.update(d);f.defines.VSM_SAMPLES!==t.blurSamples&&(f.defines.VSM_SAMPLES=t.blurSamples,p.defines.VSM_SAMPLES=t.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),null===t.mapPass&&(t.mapPass=new Rr(a.x,a.y)),f.uniforms.shadow_pass.value=t.map.texture,f.uniforms.resolution.value=t.mapSize,f.uniforms.radius.value=t.radius,e.setRenderTarget(t.mapPass),e.clear(),e.renderBufferDirect(r,null,i,f,d,null),p.uniforms.shadow_pass.value=t.mapPass.texture,p.uniforms.resolution.value=t.mapSize,p.uniforms.radius.value=t.radius,e.setRenderTarget(t.map),e.clear(),e.renderBufferDirect(r,null,i,p,d,null)}function x(n,t,r,a,i,o){var u=null,f=!0===r.isPointLight?n.customDistanceMaterial:n.customDepthMaterial;if(u=void 0!==f?f:!0===r.isPointLight?s:l,e.localClippingEnabled&&!0===t.clipShadows&&Array.isArray(t.clippingPlanes)&&0!==t.clippingPlanes.length||t.displacementMap&&0!==t.displacementScale||t.alphaMap&&t.alphaTest>0){var p=u.uuid,m=t.uuid,d=c[p];void 0===d&&(d={},c[p]=d);var h=d[m];void 0===h&&(h=u.clone(),d[m]=h),u=h}return u.visible=t.visible,u.wireframe=t.wireframe,u.side=o===q?null!==t.shadowSide?t.shadowSide:t.side:null!==t.shadowSide?t.shadowSide:v[t.side],u.alphaMap=t.alphaMap,u.alphaTest=t.alphaTest,u.clipShadows=t.clipShadows,u.clippingPlanes=t.clippingPlanes,u.clipIntersection=t.clipIntersection,u.displacementMap=t.displacementMap,u.displacementScale=t.displacementScale,u.displacementBias=t.displacementBias,u.wireframeLinewidth=t.wireframeLinewidth,u.linewidth=t.linewidth,!0===r.isPointLight&&!0===u.isMeshDistanceMaterial&&(u.referencePosition.setFromMatrixPosition(r.matrixWorld),u.nearDistance=a,u.farDistance=i),u}function y(t,a,i,o,l){if(!1!==t.visible){if(t.layers.test(a.layers)&&(t.isMesh||t.isLine||t.isPoints)&&(t.castShadow||t.receiveShadow&&l===q)&&(!t.frustumCulled||r.intersectsObject(t))){t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld);var s=n.update(t),c=t.material;if(Array.isArray(c))for(var u=s.groups,v=0,f=u.length;v<f;v++){var p=u[v],m=c[p.materialIndex];if(m&&m.visible){var d=x(t,m,o,i.near,i.far,l);e.renderBufferDirect(i,null,s,d,t,p)}}else if(c.visible){var h=x(t,c,o,i.near,i.far,l);e.renderBufferDirect(i,null,s,h,t,null)}}for(var g=t.children,b=0,_=g.length;b<_;b++)y(g[b],a,i,o,l)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=G,this.render=function(n,t,l){if(!1!==h.enabled&&(!1!==h.autoUpdate||!1!==h.needsUpdate)&&0!==n.length){var s=e.getRenderTarget(),c=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),f=e.state;f.setBlending(Y),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(var p=0,m=n.length;p<m;p++){var d=n[p],x=d.shadow;if(void 0!==x){if(!1!==x.autoUpdate||!1!==x.needsUpdate){a.copy(x.mapSize);var b=x.getFrameExtents();if(a.multiply(b),i.copy(x.mapSize),(a.x>u||a.y>u)&&(a.x>u&&(i.x=Math.floor(u/b.x),a.x=i.x*b.x,x.mapSize.x=i.x),a.y>u&&(i.y=Math.floor(u/b.y),a.y=i.y*b.y,x.mapSize.y=i.y)),null===x.map){var _=this.type!==q?{minFilter:Ge,magFilter:Ge}:{};x.map=new Rr(a.x,a.y,_),x.map.texture.name=d.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();for(var w=x.getViewportCount(),S=0;S<w;S++){var U=x.getViewport(S);o.set(i.x*U.x,i.y*U.y,i.x*U.z,i.y*U.w),f.viewport(o),x.updateMatrices(d,S),r=x.getFrustum(),y(t,l,x.camera,d,this.type)}!0!==x.isPointLightShadow&&this.type===q&&g(x,l),x.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",d,"has no shadow.")}h.needsUpdate=!1,e.setRenderTarget(s,c,v)}}}function Ss(e,n,t){var r,a,i=t.isWebGL2;var o=new function(){var n=!1,t=new Cr,r=null,a=new Cr(0,0,0,0);return{setMask:function(t){r===t||n||(e.colorMask(t,t,t,t),r=t)},setLocked:function(e){n=e},setClear:function(n,r,i,o,l){!0===l&&(n*=o,r*=o,i*=o),t.set(n,r,i,o),!1===a.equals(t)&&(e.clearColor(n,r,i,o),a.copy(t))},reset:function(){n=!1,r=null,a.set(-1,0,0,0)}}},l=new function(){var n=!1,t=null,r=null,a=null;return{setTest:function(e){e?Ue(2929):Me(2929)},setMask:function(r){t===r||n||(e.depthMask(r),t=r)},setFunc:function(n){if(r!==n){switch(n){case he:e.depthFunc(512);break;case ge:e.depthFunc(519);break;case xe:e.depthFunc(513);break;case ye:e.depthFunc(515);break;case be:e.depthFunc(514);break;case _e:e.depthFunc(518);break;case we:e.depthFunc(516);break;case Se:e.depthFunc(517);break;default:e.depthFunc(515)}r=n}},setLocked:function(e){n=e},setClear:function(n){a!==n&&(e.clearDepth(n),a=n)},reset:function(){n=!1,t=null,r=null,a=null}}},s=new function(){var n=!1,t=null,r=null,a=null,i=null,o=null,l=null,s=null,c=null;return{setTest:function(e){n||(e?Ue(2960):Me(2960))},setMask:function(r){t===r||n||(e.stencilMask(r),t=r)},setFunc:function(n,t,o){r===n&&a===t&&i===o||(e.stencilFunc(n,t,o),r=n,a=t,i=o)},setOp:function(n,t,r){o===n&&l===t&&s===r||(e.stencilOp(n,t,r),o=n,l=t,s=r)},setLocked:function(e){n=e},setClear:function(n){c!==n&&(e.clearStencil(n),c=n)},reset:function(){n=!1,t=null,r=null,a=null,i=null,o=null,l=null,s=null,c=null}}},u=new WeakMap,v=new WeakMap,f={},p={},m=new WeakMap,d=[],h=null,g=!1,x=null,y=null,b=null,_=null,w=null,S=null,U=null,M=!1,j=null,k=null,T=null,C=null,R=null,F=e.getParameter(35661),P=!1,D=0,E=e.getParameter(7938);-1!==E.indexOf("WebGL")?(D=parseFloat(/^WebGL (\d)/.exec(E)[1]),P=D>=1):-1!==E.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL ES (\d)/.exec(E)[1]),P=D>=2);var z=null,L={},B=e.getParameter(3088),N=e.getParameter(2978),G=(new Cr).fromArray(B),V=(new Cr).fromArray(N);function q(n,t,r){var a=new Uint8Array(4),i=e.createTexture();e.bindTexture(n,i),e.texParameteri(n,10241,9728),e.texParameteri(n,10240,9728);for(var o=0;o<r;o++)e.texImage2D(t+o,0,6408,1,1,0,6408,5121,a);return i}var H={};function Ue(n){!0!==f[n]&&(e.enable(n),f[n]=!0)}function Me(n){!1!==f[n]&&(e.disable(n),f[n]=!1)}H[3553]=q(3553,3553,1),H[34067]=q(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),s.setClear(0),Ue(2929),l.setFunc(ye),Re(!1),Fe(I),Ue(2884),Ce(Y);var je=(c(r={},ee,32774),c(r,ne,32778),c(r,te,32779),r);if(i)je[re]=32775,je[ae]=32776;else{var ke=n.get("EXT_blend_minmax");null!==ke&&(je[re]=ke.MIN_EXT,je[ae]=ke.MAX_EXT)}var Te=(c(a={},ie,0),c(a,oe,1),c(a,le,768),c(a,ce,770),c(a,de,776),c(a,pe,774),c(a,ve,772),c(a,se,769),c(a,ue,771),c(a,me,775),c(a,fe,773),a);function Ce(n,t,r,a,i,o,l,s){if(n!==Y){if(!1===g&&(Ue(3042),g=!0),n===K)i=i||t,o=o||r,l=l||a,t===y&&i===w||(e.blendEquationSeparate(je[t],je[i]),y=t,w=i),r===b&&a===_&&o===S&&l===U||(e.blendFuncSeparate(Te[r],Te[a],Te[o],Te[l]),b=r,_=a,S=o,U=l),x=n,M=null;else if(n!==x||s!==M){if(y===ee&&w===ee||(e.blendEquation(32774),y=ee,w=ee),s)switch(n){case Z:e.blendFuncSeparate(1,771,1,771);break;case J:e.blendFunc(1,1);break;case Q:e.blendFuncSeparate(0,769,0,1);break;case $:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}else switch(n){case Z:e.blendFuncSeparate(770,771,1,771);break;case J:e.blendFunc(770,1);break;case Q:e.blendFuncSeparate(0,769,0,1);break;case $:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}b=null,_=null,S=null,U=null,x=n,M=s}}else!0===g&&(Me(3042),g=!1)}function Re(n){j!==n&&(n?e.frontFace(2304):e.frontFace(2305),j=n)}function Fe(n){n!==A?(Ue(2884),n!==k&&(n===I?e.cullFace(1029):n===O?e.cullFace(1028):e.cullFace(1032))):Me(2884),k=n}function Pe(n,t,r){n?(Ue(32823),C===t&&R===r||(e.polygonOffset(t,r),C=t,R=r)):Me(32823)}return{buffers:{color:o,depth:l,stencil:s},enable:Ue,disable:Me,bindFramebuffer:function(n,t){return p[n]!==t&&(e.bindFramebuffer(n,t),p[n]=t,i&&(36009===n&&(p[36160]=t),36160===n&&(p[36009]=t)),!0)},drawBuffers:function(r,a){var i=d,o=!1;if(r)if(void 0===(i=m.get(a))&&(i=[],m.set(a,i)),r.isWebGLMultipleRenderTargets){var l=r.texture;if(i.length!==l.length||36064!==i[0]){for(var s=0,c=l.length;s<c;s++)i[s]=36064+s;i.length=l.length,o=!0}}else 36064!==i[0]&&(i[0]=36064,o=!0);else 1029!==i[0]&&(i[0]=1029,o=!0);o&&(t.isWebGL2?e.drawBuffers(i):n.get("WEBGL_draw_buffers").drawBuffersWEBGL(i))},useProgram:function(n){return h!==n&&(e.useProgram(n),h=n,!0)},setBlending:Ce,setMaterial:function(e,n){e.side===X?Me(2884):Ue(2884);var t=e.side===W;n&&(t=!t),Re(t),e.blending===Z&&!1===e.transparent?Ce(Y):Ce(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),l.setFunc(e.depthFunc),l.setTest(e.depthTest),l.setMask(e.depthWrite),o.setMask(e.colorWrite);var r=e.stencilWrite;s.setTest(r),r&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Pe(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?Ue(32926):Me(32926)},setFlipSided:Re,setCullFace:Fe,setLineWidth:function(n){n!==T&&(P&&e.lineWidth(n),T=n)},setPolygonOffset:Pe,setScissorTest:function(e){e?Ue(3089):Me(3089)},activeTexture:function(n){void 0===n&&(n=33984+F-1),z!==n&&(e.activeTexture(n),z=n)},bindTexture:function(n,t,r){void 0===r&&(r=null===z?33984+F-1:z);var a=L[r];void 0===a&&(a={type:void 0,texture:void 0},L[r]=a),a.type===n&&a.texture===t||(z!==r&&(e.activeTexture(r),z=r),e.bindTexture(n,t||H[n]),a.type=n,a.texture=t)},unbindTexture:function(){var n=L[z];void 0!==n&&void 0!==n.type&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},updateUBOMapping:function(n,t){var r=v.get(t);void 0===r&&(r=new WeakMap,v.set(t,r));var a=r.get(n);void 0===a&&(a=e.getUniformBlockIndex(t,n.name),r.set(n,a))},uniformBlockBinding:function(n,t){var r=v.get(t).get(n);u.get(n)!==r&&(e.uniformBlockBinding(t,r,n.__bindingPointIndex),u.set(n,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(n){console.error("THREE.WebGLState:",n)}},scissor:function(n){!1===G.equals(n)&&(e.scissor(n.x,n.y,n.z,n.w),G.copy(n))},viewport:function(n){!1===V.equals(n)&&(e.viewport(n.x,n.y,n.z,n.w),V.copy(n))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===i&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),f={},z=null,L={},p={},m=new WeakMap,d=[],h=null,g=!1,x=null,y=null,b=null,_=null,w=null,S=null,U=null,M=!1,j=null,k=null,T=null,C=null,R=null,G.set(0,0,e.canvas.width,e.canvas.height),V.set(0,0,e.canvas.width,e.canvas.height),o.reset(),l.reset(),s.reset()}}}function Us(e,n,t,r,a,i,o){var l,s,u,v=a.isWebGL2,f=a.maxTextures,p=a.maxCubemapSize,m=a.maxTextureSize,d=a.maxSamples,h=n.has("WEBGL_multisampled_render_to_texture")?n.get("WEBGL_multisampled_render_to_texture"):null,g=/OculusBrowser/g.test("undefined"===typeof navigator?"":navigator.userAgent),x=new WeakMap,y=new WeakMap,b=!1;try{b="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(H){}function _(e,n){return b?new OffscreenCanvas(e,n):vr("canvas")}function w(e,n,t,r){var a=1;if((e.width>r||e.height>r)&&(a=r/Math.max(e.width,e.height)),a<1||!0===n){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var i=n?tr:Math.floor,o=i(a*e.width),l=i(a*e.height);void 0===u&&(u=_(o,l));var s=t?_(o,l):u;return s.width=o,s.height=l,s.getContext("2d").drawImage(e,0,0,o,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+l+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function S(e){return er(e.width)&&er(e.height)}function U(e,n){return e.generateMipmaps&&n&&e.minFilter!==Ge&&e.minFilter!==Xe}function M(n){e.generateMipmap(n)}function j(t,r,a,i){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!1===v)return r;if(null!==t){if(void 0!==e[t])return e[t];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+t+"'")}var l=r;return 6403===r&&(5126===a&&(l=33326),5131===a&&(l=33325),5121===a&&(l=33321)),33319===r&&(5126===a&&(l=33328),5131===a&&(l=33327),5121===a&&(l=33323)),6408===r&&(5126===a&&(l=34836),5131===a&&(l=34842),5121===a&&(l=i===ct&&!1===o?35907:32856),32819===a&&(l=32854),32820===a&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||n.get("EXT_color_buffer_float"),l}function k(e,n,t){return!0===U(e,t)||e.isFramebufferTexture&&e.minFilter!==Ge&&e.minFilter!==Xe?Math.log2(Math.max(n.width,n.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?n.mipmaps.length:1}function T(e){return e===Ge||e===Ve||e===He?9728:9729}function C(e){var n=e.target;n.removeEventListener("dispose",C),function(e){var n=r.get(e);if(void 0===n.__webglInit)return;var t=e.source,a=y.get(t);if(a){var i=a[n.__cacheKey];i.usedTimes--,0===i.usedTimes&&F(e),0===Object.keys(a).length&&y.delete(t)}r.remove(e)}(n),n.isVideoTexture&&x.delete(n)}function R(n){var t=n.target;t.removeEventListener("dispose",R),function(n){var t=n.texture,a=r.get(n),i=r.get(t);void 0!==i.__webglTexture&&(e.deleteTexture(i.__webglTexture),o.memory.textures--);n.depthTexture&&n.depthTexture.dispose();if(n.isWebGLCubeRenderTarget)for(var l=0;l<6;l++)e.deleteFramebuffer(a.__webglFramebuffer[l]),a.__webglDepthbuffer&&e.deleteRenderbuffer(a.__webglDepthbuffer[l]);else{if(e.deleteFramebuffer(a.__webglFramebuffer),a.__webglDepthbuffer&&e.deleteRenderbuffer(a.__webglDepthbuffer),a.__webglMultisampledFramebuffer&&e.deleteFramebuffer(a.__webglMultisampledFramebuffer),a.__webglColorRenderbuffer)for(var s=0;s<a.__webglColorRenderbuffer.length;s++)a.__webglColorRenderbuffer[s]&&e.deleteRenderbuffer(a.__webglColorRenderbuffer[s]);a.__webglDepthRenderbuffer&&e.deleteRenderbuffer(a.__webglDepthRenderbuffer)}if(n.isWebGLMultipleRenderTargets)for(var c=0,u=t.length;c<u;c++){var v=r.get(t[c]);v.__webglTexture&&(e.deleteTexture(v.__webglTexture),o.memory.textures--),r.remove(t[c])}r.remove(t),r.remove(n)}(t)}function F(n){var t=r.get(n);e.deleteTexture(t.__webglTexture);var a=n.source;delete y.get(a)[t.__cacheKey],o.memory.textures--}var P=0;function D(e,n){var a=r.get(e);if(e.isVideoTexture&&function(e){var n=o.render.frame;x.get(e)!==n&&(x.set(e,n),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&a.__version!==e.version){var i=e.image;if(null===i)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==i.complete)return void I(a,e,n);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.bindTexture(3553,a.__webglTexture,33984+n)}var E=(c(l={},Oe,10497),c(l,Be,33071),c(l,Ne,33648),l),z=(c(s={},Ge,9728),c(s,Ve,9984),c(s,He,9986),c(s,Xe,9729),c(s,Ye,9985),c(s,Je,9987),s);function L(t,i,o){if(o?(e.texParameteri(t,10242,E[i.wrapS]),e.texParameteri(t,10243,E[i.wrapT]),32879!==t&&35866!==t||e.texParameteri(t,32882,E[i.wrapR]),e.texParameteri(t,10240,z[i.magFilter]),e.texParameteri(t,10241,z[i.minFilter])):(e.texParameteri(t,10242,33071),e.texParameteri(t,10243,33071),32879!==t&&35866!==t||e.texParameteri(t,32882,33071),i.wrapS===Be&&i.wrapT===Be||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(t,10240,T(i.magFilter)),e.texParameteri(t,10241,T(i.minFilter)),i.minFilter!==Ge&&i.minFilter!==Xe&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){var l=n.get("EXT_texture_filter_anisotropic");if(i.type===an&&!1===n.has("OES_texture_float_linear"))return;if(!1===v&&i.type===on&&!1===n.has("OES_texture_half_float_linear"))return;(i.anisotropy>1||r.get(i).__currentAnisotropy)&&(e.texParameterf(t,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,a.getMaxAnisotropy())),r.get(i).__currentAnisotropy=i.anisotropy)}}function A(n,t){var r=!1;void 0===n.__webglInit&&(n.__webglInit=!0,t.addEventListener("dispose",C));var a=t.source,i=y.get(a);void 0===i&&(i={},y.set(a,i));var l=function(e){var n=[];return n.push(e.wrapS),n.push(e.wrapT),n.push(e.wrapR||0),n.push(e.magFilter),n.push(e.minFilter),n.push(e.anisotropy),n.push(e.internalFormat),n.push(e.format),n.push(e.type),n.push(e.generateMipmaps),n.push(e.premultiplyAlpha),n.push(e.flipY),n.push(e.unpackAlignment),n.push(e.encoding),n.join()}(t);if(l!==n.__cacheKey){void 0===i[l]&&(i[l]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,r=!0),i[l].usedTimes++;var s=i[n.__cacheKey];void 0!==s&&(i[n.__cacheKey].usedTimes--,0===s.usedTimes&&F(t)),n.__cacheKey=l,n.__webglTexture=i[l].texture}return r}function I(n,a,o){var l=3553;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=35866),a.isData3DTexture&&(l=32879);var s=A(n,a),c=a.source;t.bindTexture(l,n.__webglTexture,33984+o);var u=r.get(c);if(c.version!==u.__version||!0===s){t.activeTexture(33984+o),e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment),e.pixelStorei(37443,0);var f,p=function(e){return!v&&(e.wrapS!==Be||e.wrapT!==Be||e.minFilter!==Ge&&e.minFilter!==Xe)}(a)&&!1===S(a.image),d=w(a.image,p,!1,m),h=S(d=q(a,d))||v,g=i.convert(a.format,a.encoding),x=i.convert(a.type),y=j(a.internalFormat,g,x,a.encoding,a.isVideoTexture);L(l,a,h);var b=a.mipmaps,_=v&&!0!==a.isVideoTexture,T=void 0===u.__version||!0===s,C=k(a,d,h);if(a.isDepthTexture)y=6402,v?y=a.type===an?36012:a.type===rn?33190:a.type===cn?35056:33189:a.type===an&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===dn&&6402===y&&a.type!==nn&&a.type!==rn&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=rn,x=i.convert(a.type)),a.format===hn&&6402===y&&(y=34041,a.type!==cn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=cn,x=i.convert(a.type))),T&&(_?t.texStorage2D(3553,1,y,d.width,d.height):t.texImage2D(3553,0,y,d.width,d.height,0,g,x,null));else if(a.isDataTexture)if(b.length>0&&h){_&&T&&t.texStorage2D(3553,C,y,b[0].width,b[0].height);for(var R=0,F=b.length;R<F;R++)f=b[R],_?t.texSubImage2D(3553,R,0,0,f.width,f.height,g,x,f.data):t.texImage2D(3553,R,y,f.width,f.height,0,g,x,f.data);a.generateMipmaps=!1}else _?(T&&t.texStorage2D(3553,C,y,d.width,d.height),t.texSubImage2D(3553,0,0,0,d.width,d.height,g,x,d.data)):t.texImage2D(3553,0,y,d.width,d.height,0,g,x,d.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){_&&T&&t.texStorage3D(35866,C,y,b[0].width,b[0].height,d.depth);for(var P=0,D=b.length;P<D;P++)f=b[P],a.format!==fn?null!==g?_?t.compressedTexSubImage3D(35866,P,0,0,0,f.width,f.height,d.depth,g,f.data,0,0):t.compressedTexImage3D(35866,P,y,f.width,f.height,d.depth,0,f.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?t.texSubImage3D(35866,P,0,0,0,f.width,f.height,d.depth,g,x,f.data):t.texImage3D(35866,P,y,f.width,f.height,d.depth,0,g,x,f.data)}else{_&&T&&t.texStorage2D(3553,C,y,b[0].width,b[0].height);for(var E=0,z=b.length;E<z;E++)f=b[E],a.format!==fn?null!==g?_?t.compressedTexSubImage2D(3553,E,0,0,f.width,f.height,g,f.data):t.compressedTexImage2D(3553,E,y,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?t.texSubImage2D(3553,E,0,0,f.width,f.height,g,x,f.data):t.texImage2D(3553,E,y,f.width,f.height,0,g,x,f.data)}else if(a.isDataArrayTexture)_?(T&&t.texStorage3D(35866,C,y,d.width,d.height,d.depth),t.texSubImage3D(35866,0,0,0,0,d.width,d.height,d.depth,g,x,d.data)):t.texImage3D(35866,0,y,d.width,d.height,d.depth,0,g,x,d.data);else if(a.isData3DTexture)_?(T&&t.texStorage3D(32879,C,y,d.width,d.height,d.depth),t.texSubImage3D(32879,0,0,0,0,d.width,d.height,d.depth,g,x,d.data)):t.texImage3D(32879,0,y,d.width,d.height,d.depth,0,g,x,d.data);else if(a.isFramebufferTexture){if(T)if(_)t.texStorage2D(3553,C,y,d.width,d.height);else for(var I=d.width,O=d.height,B=0;B<C;B++)t.texImage2D(3553,B,y,I,O,0,g,x,null),I>>=1,O>>=1}else if(b.length>0&&h){_&&T&&t.texStorage2D(3553,C,y,b[0].width,b[0].height);for(var N=0,G=b.length;N<G;N++)f=b[N],_?t.texSubImage2D(3553,N,0,0,g,x,f):t.texImage2D(3553,N,y,g,x,f);a.generateMipmaps=!1}else _?(T&&t.texStorage2D(3553,C,y,d.width,d.height),t.texSubImage2D(3553,0,0,0,g,x,d)):t.texImage2D(3553,0,y,g,x,d);U(a,h)&&M(l),u.__version=c.version,a.onUpdate&&a.onUpdate(a)}n.__version=a.version}function O(n,a,o,l,s){var c=i.convert(o.format,o.encoding),u=i.convert(o.type),v=j(o.internalFormat,c,u,o.encoding);r.get(a).__hasExternalTextures||(32879===s||35866===s?t.texImage3D(s,0,v,a.width,a.height,a.depth,0,c,u,null):t.texImage2D(s,0,v,a.width,a.height,0,c,u,null)),t.bindFramebuffer(36160,n),V(a)?h.framebufferTexture2DMultisampleEXT(36160,l,s,r.get(o).__webglTexture,0,G(a)):(3553===s||s>=34069&&s<=34074)&&e.framebufferTexture2D(36160,l,s,r.get(o).__webglTexture,0),t.bindFramebuffer(36160,null)}function B(n,t,r){if(e.bindRenderbuffer(36161,n),t.depthBuffer&&!t.stencilBuffer){var a=33189;if(r||V(t)){var o=t.depthTexture;o&&o.isDepthTexture&&(o.type===an?a=36012:o.type===rn&&(a=33190));var l=G(t);V(t)?h.renderbufferStorageMultisampleEXT(36161,l,a,t.width,t.height):e.renderbufferStorageMultisample(36161,l,a,t.width,t.height)}else e.renderbufferStorage(36161,a,t.width,t.height);e.framebufferRenderbuffer(36160,36096,36161,n)}else if(t.depthBuffer&&t.stencilBuffer){var s=G(t);r&&!1===V(t)?e.renderbufferStorageMultisample(36161,s,35056,t.width,t.height):V(t)?h.renderbufferStorageMultisampleEXT(36161,s,35056,t.width,t.height):e.renderbufferStorage(36161,34041,t.width,t.height),e.framebufferRenderbuffer(36160,33306,36161,n)}else for(var c=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture],u=0;u<c.length;u++){var v=c[u],f=i.convert(v.format,v.encoding),p=i.convert(v.type),m=j(v.internalFormat,f,p,v.encoding),d=G(t);r&&!1===V(t)?e.renderbufferStorageMultisample(36161,d,m,t.width,t.height):V(t)?h.renderbufferStorageMultisampleEXT(36161,d,m,t.width,t.height):e.renderbufferStorage(36161,m,t.width,t.height)}e.bindRenderbuffer(36161,null)}function N(n){var a=r.get(n),i=!0===n.isWebGLCubeRenderTarget;if(n.depthTexture&&!a.__autoAllocateDepthBuffer){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(n,a){if(a&&a.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,n),!a.depthTexture||!a.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(a.depthTexture).__webglTexture&&a.depthTexture.image.width===a.width&&a.depthTexture.image.height===a.height||(a.depthTexture.image.width=a.width,a.depthTexture.image.height=a.height,a.depthTexture.needsUpdate=!0),D(a.depthTexture,0);var i=r.get(a.depthTexture).__webglTexture,o=G(a);if(a.depthTexture.format===dn)V(a)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,i,0,o):e.framebufferTexture2D(36160,36096,3553,i,0);else{if(a.depthTexture.format!==hn)throw new Error("Unknown depthTexture format");V(a)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,i,0,o):e.framebufferTexture2D(36160,33306,3553,i,0)}}(a.__webglFramebuffer,n)}else if(i){a.__webglDepthbuffer=[];for(var o=0;o<6;o++)t.bindFramebuffer(36160,a.__webglFramebuffer[o]),a.__webglDepthbuffer[o]=e.createRenderbuffer(),B(a.__webglDepthbuffer[o],n,!1)}else t.bindFramebuffer(36160,a.__webglFramebuffer),a.__webglDepthbuffer=e.createRenderbuffer(),B(a.__webglDepthbuffer,n,!1);t.bindFramebuffer(36160,null)}function G(e){return Math.min(d,e.samples)}function V(e){var t=r.get(e);return v&&e.samples>0&&!0===n.has("WEBGL_multisampled_render_to_texture")&&!1!==t.__useRenderToTexture}function q(e,t){var r=e.encoding,a=e.format,i=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===qt||r!==st&&(r===ct?!1===v?!0===n.has("EXT_sRGB")&&a===fn?(e.format=qt,e.minFilter=Xe,e.generateMipmaps=!1):t=Ur.sRGBToLinear(t):a===fn&&i===$e||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),t}this.allocateTextureUnit=function(){var e=P;return e>=f&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+f),P+=1,e},this.resetTextureUnits=function(){P=0},this.setTexture2D=D,this.setTexture2DArray=function(e,n){var a=r.get(e);e.version>0&&a.__version!==e.version?I(a,e,n):t.bindTexture(35866,a.__webglTexture,33984+n)},this.setTexture3D=function(e,n){var a=r.get(e);e.version>0&&a.__version!==e.version?I(a,e,n):t.bindTexture(32879,a.__webglTexture,33984+n)},this.setTextureCube=function(n,a){var o=r.get(n);n.version>0&&o.__version!==n.version?function(n,a,o){if(6!==a.image.length)return;var l=A(n,a),s=a.source;t.bindTexture(34067,n.__webglTexture,33984+o);var c=r.get(s);if(s.version!==c.__version||!0===l){t.activeTexture(33984+o),e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment),e.pixelStorei(37443,0);for(var u=a.isCompressedTexture||a.image[0].isCompressedTexture,f=a.image[0]&&a.image[0].isDataTexture,m=[],d=0;d<6;d++)m[d]=u||f?f?a.image[d].image:a.image[d]:w(a.image[d],!1,!0,p),m[d]=q(a,m[d]);var h,g=m[0],x=S(g)||v,y=i.convert(a.format,a.encoding),b=i.convert(a.type),_=j(a.internalFormat,y,b,a.encoding),T=v&&!0!==a.isVideoTexture,C=void 0===c.__version||!0===l,R=k(a,g,x);if(L(34067,a,x),u){T&&C&&t.texStorage2D(34067,R,_,g.width,g.height);for(var F=0;F<6;F++){h=m[F].mipmaps;for(var P=0;P<h.length;P++){var D=h[P];a.format!==fn?null!==y?T?t.compressedTexSubImage2D(34069+F,P,0,0,D.width,D.height,y,D.data):t.compressedTexImage2D(34069+F,P,_,D.width,D.height,0,D.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):T?t.texSubImage2D(34069+F,P,0,0,D.width,D.height,y,b,D.data):t.texImage2D(34069+F,P,_,D.width,D.height,0,y,b,D.data)}}}else{h=a.mipmaps,T&&C&&(h.length>0&&R++,t.texStorage2D(34067,R,_,m[0].width,m[0].height));for(var E=0;E<6;E++)if(f){T?t.texSubImage2D(34069+E,0,0,0,m[E].width,m[E].height,y,b,m[E].data):t.texImage2D(34069+E,0,_,m[E].width,m[E].height,0,y,b,m[E].data);for(var z=0;z<h.length;z++){var I=h[z].image[E].image;T?t.texSubImage2D(34069+E,z+1,0,0,I.width,I.height,y,b,I.data):t.texImage2D(34069+E,z+1,_,I.width,I.height,0,y,b,I.data)}}else{T?t.texSubImage2D(34069+E,0,0,0,y,b,m[E]):t.texImage2D(34069+E,0,_,y,b,m[E]);for(var O=0;O<h.length;O++){var B=h[O];T?t.texSubImage2D(34069+E,O+1,0,0,y,b,B.image[E]):t.texImage2D(34069+E,O+1,_,y,b,B.image[E])}}}U(a,x)&&M(34067),c.__version=s.version,a.onUpdate&&a.onUpdate(a)}n.__version=a.version}(o,n,a):t.bindTexture(34067,o.__webglTexture,33984+a)},this.rebindTextures=function(e,n,t){var a=r.get(e);void 0!==n&&O(a.__webglFramebuffer,e,e.texture,36064,3553),void 0!==t&&N(e)},this.setupRenderTarget=function(n){var l=n.texture,s=r.get(n),c=r.get(l);n.addEventListener("dispose",R),!0!==n.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=l.version,o.memory.textures++);var u=!0===n.isWebGLCubeRenderTarget,f=!0===n.isWebGLMultipleRenderTargets,p=S(n)||v;if(u){s.__webglFramebuffer=[];for(var m=0;m<6;m++)s.__webglFramebuffer[m]=e.createFramebuffer()}else{if(s.__webglFramebuffer=e.createFramebuffer(),f)if(a.drawBuffers)for(var d=n.texture,h=0,g=d.length;h<g;h++){var x=r.get(d[h]);void 0===x.__webglTexture&&(x.__webglTexture=e.createTexture(),o.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(v&&n.samples>0&&!1===V(n)){var y=f?l:[l];s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,s.__webglMultisampledFramebuffer);for(var b=0;b<y.length;b++){var _=y[b];s.__webglColorRenderbuffer[b]=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer[b]);var w=i.convert(_.format,_.encoding),k=i.convert(_.type),T=j(_.internalFormat,w,k,_.encoding,!0===n.isXRRenderTarget),C=G(n);e.renderbufferStorageMultisample(36161,C,T,n.width,n.height),e.framebufferRenderbuffer(36160,36064+b,36161,s.__webglColorRenderbuffer[b])}e.bindRenderbuffer(36161,null),n.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),B(s.__webglDepthRenderbuffer,n,!0)),t.bindFramebuffer(36160,null)}}if(u){t.bindTexture(34067,c.__webglTexture),L(34067,l,p);for(var F=0;F<6;F++)O(s.__webglFramebuffer[F],n,l,36064,34069+F);U(l,p)&&M(34067),t.unbindTexture()}else if(f){for(var P=n.texture,D=0,E=P.length;D<E;D++){var z=P[D],A=r.get(z);t.bindTexture(3553,A.__webglTexture),L(3553,z,p),O(s.__webglFramebuffer,n,z,36064+D,3553),U(z,p)&&M(3553)}t.unbindTexture()}else{var I=3553;(n.isWebGL3DRenderTarget||n.isWebGLArrayRenderTarget)&&(v?I=n.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(I,c.__webglTexture),L(I,l,p),O(s.__webglFramebuffer,n,l,36064,I),U(l,p)&&M(I),t.unbindTexture()}n.depthBuffer&&N(n)},this.updateRenderTargetMipmap=function(e){for(var n=S(e)||v,a=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture],i=0,o=a.length;i<o;i++){var l=a[i];if(U(l,n)){var s=e.isWebGLCubeRenderTarget?34067:3553,c=r.get(l).__webglTexture;t.bindTexture(s,c),M(s),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function(n){if(v&&n.samples>0&&!1===V(n)){var a=n.isWebGLMultipleRenderTargets?n.texture:[n.texture],i=n.width,o=n.height,l=16384,s=[],c=n.stencilBuffer?33306:36096,u=r.get(n),f=!0===n.isWebGLMultipleRenderTargets;if(f)for(var p=0;p<a.length;p++)t.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+p,36161,null),t.bindFramebuffer(36160,u.__webglFramebuffer),e.framebufferTexture2D(36009,36064+p,3553,null,0);t.bindFramebuffer(36008,u.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,u.__webglFramebuffer);for(var m=0;m<a.length;m++){s.push(36064+m),n.depthBuffer&&s.push(c);var d=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===d&&(n.depthBuffer&&(l|=256),n.stencilBuffer&&(l|=1024)),f&&e.framebufferRenderbuffer(36008,36064,36161,u.__webglColorRenderbuffer[m]),!0===d&&(e.invalidateFramebuffer(36008,[c]),e.invalidateFramebuffer(36009,[c])),f){var h=r.get(a[m]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,h,0)}e.blitFramebuffer(0,0,i,o,0,0,i,o,l,9728),g&&e.invalidateFramebuffer(36008,s)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),f)for(var x=0;x<a.length;x++){t.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+x,36161,u.__webglColorRenderbuffer[x]);var y=r.get(a[x]).__webglTexture;t.bindFramebuffer(36160,u.__webglFramebuffer),e.framebufferTexture2D(36009,36064+x,3553,y,0)}t.bindFramebuffer(36009,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=N,this.setupFrameBufferTexture=O,this.useMultisampledRTT=V}function Ms(e,n,t){var r=t.isWebGL2;return{convert:function(t){var a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(t===$e)return 5121;if(t===ln)return 32819;if(t===sn)return 32820;if(t===Ke)return 5120;if(t===en)return 5122;if(t===nn)return 5123;if(t===tn)return 5124;if(t===rn)return 5125;if(t===an)return 5126;if(t===on)return r?5131:null!==(a=n.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(t===un)return 6406;if(t===fn)return 6408;if(t===pn)return 6409;if(t===mn)return 6410;if(t===dn)return 6402;if(t===hn)return 34041;if(t===gn)return 6403;if(t===vn)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(t===qt)return null!==(a=n.get("EXT_sRGB"))?a.SRGB_ALPHA_EXT:null;if(t===xn)return 36244;if(t===yn)return 33319;if(t===bn)return 33320;if(t===_n)return 36249;if(t===wn||t===Sn||t===Un||t===Mn)if(i===ct){if(null===(a=n.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(t===wn)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===Sn)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===Un)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===Mn)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(a=n.get("WEBGL_compressed_texture_s3tc")))return null;if(t===wn)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Sn)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Un)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Mn)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===jn||t===kn||t===Tn||t===Cn){if(null===(a=n.get("WEBGL_compressed_texture_pvrtc")))return null;if(t===jn)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===kn)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Tn)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Cn)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Rn)return null!==(a=n.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(t===Fn||t===Pn){if(null===(a=n.get("WEBGL_compressed_texture_etc")))return null;if(t===Fn)return i===ct?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(t===Pn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(t===Dn||t===En||t===zn||t===Ln||t===An||t===In||t===On||t===Bn||t===Nn||t===Gn||t===Vn||t===qn||t===Hn||t===Wn){if(null===(a=n.get("WEBGL_compressed_texture_astc")))return null;if(t===Dn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===En)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===zn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===Ln)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===An)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===In)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===On)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===Bn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===Nn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===Gn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===Vn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===qn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===Hn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===Wn)return i===ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(t===Xn){if(null===(a=n.get("EXT_texture_compression_bptc")))return null;if(t===Xn)return i===ct?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return t===cn?r?34042:null!==(a=n.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[t]?e[t]:null}}}var js=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return y(this,t),(e=n.call(this)).isArrayCamera=!0,e.cameras=r,e}return _(t)}(Hi),ks=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isGroup=!0,e.type="Group",e}return _(t)}(Ia),Ts={type:"move"},Cs=function(){function e(){y(this,e),this._targetRay=null,this._grip=null,this._hand=null}return _(e,[{key:"getHandSpace",value:function(){return null===this._hand&&(this._hand=new ks,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}},{key:"getTargetRaySpace",value:function(){return null===this._targetRay&&(this._targetRay=new ks,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ar,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ar),this._targetRay}},{key:"getGripSpace",value:function(){return null===this._grip&&(this._grip=new ks,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ar,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ar),this._grip}},{key:"dispatchEvent",value:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}},{key:"disconnect",value:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}},{key:"update",value:function(e,n,t){var r=null,a=null,i=null,o=this._targetRay,l=this._grip,s=this._hand;if(e&&"visible-blurred"!==n.session.visibilityState){if(s&&e.hand){i=!0;var c,u=f(e.hand.values());try{for(u.s();!(c=u.n()).done;){var v=c.value,p=n.getJointPose(v,t);if(void 0===s.joints[v.jointName]){var m=new ks;m.matrixAutoUpdate=!1,m.visible=!1,s.joints[v.jointName]=m,s.add(m)}var d=s.joints[v.jointName];null!==p&&(d.matrix.fromArray(p.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=p.radius),d.visible=null!==p}}catch(y){u.e(y)}finally{u.f()}var h=s.joints["index-finger-tip"],g=s.joints["thumb-tip"],x=h.position.distanceTo(g.position);s.inputState.pinching&&x>.025?(s.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!s.inputState.pinching&&x<=.015&&(s.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&null!==(a=n.getPose(e.gripSpace,t))&&(l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),a.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(a.linearVelocity)):l.hasLinearVelocity=!1,a.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(a.angularVelocity)):l.hasAngularVelocity=!1);null!==o&&(null===(r=n.getPose(e.targetRaySpace,t))&&null!==a&&(r=a),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Ts)))}return null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),null!==s&&(s.visible=null!==i),this}}]),e}(),Rs=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s,c,u,v){var f;if(y(this,t),(v=void 0!==v?v:dn)!==dn&&v!==hn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");return void 0===a&&v===dn&&(a=rn),void 0===a&&v===hn&&(a=cn),(f=n.call(this,null,i,o,l,s,c,v,a,u)).isDepthTexture=!0,f.image={width:e,height:r},f.magFilter=void 0!==s?s:Ge,f.minFilter=void 0!==c?c:Ge,f.flipY=!1,f.generateMipmaps=!1,f}return _(t)}(Tr),Fs=function(e){w(t,e);var n=k(t);function t(e,r){var a;y(this,t);var i=M(a=n.call(this)),o=null,l=1,s=null,c="local-floor",u=null,v=null,f=null,p=null,m=null,d=null,h=r.getContextAttributes(),g=null,x=null,b=[],_=[],w=new Hi;w.layers.enable(1),w.viewport=new Cr;var S=new Hi;S.layers.enable(2),S.viewport=new Cr;var U=[w,S],j=new js;j.layers.enable(1),j.layers.enable(2);var k=null,T=null;function C(e){var n=_.indexOf(e.inputSource);if(-1!==n){var t=b[n];void 0!==t&&t.dispatchEvent({type:e.type,data:e.inputSource})}}function F(){o.removeEventListener("select",C),o.removeEventListener("selectstart",C),o.removeEventListener("selectend",C),o.removeEventListener("squeeze",C),o.removeEventListener("squeezestart",C),o.removeEventListener("squeezeend",C),o.removeEventListener("end",F),o.removeEventListener("inputsourceschange",P);for(var n=0;n<b.length;n++){var t=_[n];null!==t&&(_[n]=null,b[n].disconnect(t))}k=null,T=null,e.setRenderTarget(g),m=null,p=null,f=null,o=null,x=null,I.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function P(e){for(var n=0;n<e.removed.length;n++){var t=e.removed[n],r=_.indexOf(t);r>=0&&(_[r]=null,b[r].dispatchEvent({type:"disconnected",data:t}))}for(var a=0;a<e.added.length;a++){var i=e.added[a],o=_.indexOf(i);if(-1===o){for(var l=0;l<b.length;l++){if(l>=_.length){_.push(i),o=l;break}if(null===_[l]){_[l]=i,o=l;break}}if(-1===o)break}var s=b[o];s&&s.dispatchEvent({type:"connected",data:i})}}a.cameraAutoUpdate=!0,a.enabled=!1,a.isPresenting=!1,a.getController=function(e){var n=b[e];return void 0===n&&(n=new Cs,b[e]=n),n.getTargetRaySpace()},a.getControllerGrip=function(e){var n=b[e];return void 0===n&&(n=new Cs,b[e]=n),n.getGripSpace()},a.getHand=function(e){var n=b[e];return void 0===n&&(n=new Cs,b[e]=n),n.getHandSpace()},a.setFramebufferScaleFactor=function(e){l=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},a.setReferenceSpaceType=function(e){c=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},a.getReferenceSpace=function(){return u||s},a.setReferenceSpace=function(e){u=e},a.getBaseLayer=function(){return null!==p?p:m},a.getBinding=function(){return f},a.getFrame=function(){return d},a.getSession=function(){return o},a.setSession=function(){var n=R(D().mark((function n(t){var a,v,d,y,b;return D().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(null===(o=t)){n.next=25;break}if(g=e.getRenderTarget(),o.addEventListener("select",C),o.addEventListener("selectstart",C),o.addEventListener("selectend",C),o.addEventListener("squeeze",C),o.addEventListener("squeezestart",C),o.addEventListener("squeezeend",C),o.addEventListener("end",F),o.addEventListener("inputsourceschange",P),!0===h.xrCompatible){n.next=14;break}return n.next=14,r.makeXRCompatible();case 14:return void 0===o.renderState.layers||!1===e.capabilities.isWebGL2?(a={antialias:void 0!==o.renderState.layers||h.antialias,alpha:h.alpha,depth:h.depth,stencil:h.stencil,framebufferScaleFactor:l},m=new XRWebGLLayer(o,r,a),o.updateRenderState({baseLayer:m}),x=new Rr(m.framebufferWidth,m.framebufferHeight,{format:fn,type:$e,encoding:e.outputEncoding,stencilBuffer:h.stencil})):(v=null,d=null,y=null,h.depth&&(y=h.stencil?35056:33190,v=h.stencil?hn:dn,d=h.stencil?cn:rn),b={colorFormat:32856,depthFormat:y,scaleFactor:l},f=new XRWebGLBinding(o,r),p=f.createProjectionLayer(b),o.updateRenderState({layers:[p]}),x=new Rr(p.textureWidth,p.textureHeight,{format:fn,type:$e,depthTexture:new Rs(p.textureWidth,p.textureHeight,d,void 0,void 0,void 0,void 0,void 0,void 0,v),stencilBuffer:h.stencil,encoding:e.outputEncoding,samples:h.antialias?4:0}),e.properties.get(x).__ignoreDepthValues=p.ignoreDepthValues),x.isXRRenderTarget=!0,this.setFoveation(1),u=null,n.next=20,o.requestReferenceSpace(c);case 20:s=n.sent,I.setContext(o),I.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"});case 25:case"end":return n.stop()}}),n,this)})));return function(e){return n.apply(this,arguments)}}();var E=new Ar,z=new Ar;function L(e,n){null===n?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(n.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}a.updateCamera=function(e){if(null!==o){j.near=S.near=w.near=e.near,j.far=S.far=w.far=e.far,k===j.near&&T===j.far||(o.updateRenderState({depthNear:j.near,depthFar:j.far}),k=j.near,T=j.far);var n=e.parent,t=j.cameras;L(j,n);for(var r=0;r<t.length;r++)L(t[r],n);j.matrixWorld.decompose(j.position,j.quaternion,j.scale),e.matrix.copy(j.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);for(var a=e.children,i=0,l=a.length;i<l;i++)a[i].updateMatrixWorld(!0);2===t.length?function(e,n,t){E.setFromMatrixPosition(n.matrixWorld),z.setFromMatrixPosition(t.matrixWorld);var r=E.distanceTo(z),a=n.projectionMatrix.elements,i=t.projectionMatrix.elements,o=a[14]/(a[10]-1),l=a[14]/(a[10]+1),s=(a[9]+1)/a[5],c=(a[9]-1)/a[5],u=(a[8]-1)/a[0],v=(i[8]+1)/i[0],f=o*u,p=o*v,m=r/(-u+v),d=m*-u;n.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(d),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();var h=o+m,g=l+m,x=f-d,y=p+(r-d),b=s*l/g*h,_=c*l/g*h;e.projectionMatrix.makePerspective(x,y,b,_,h,g)}(j,w,S):j.projectionMatrix.copy(w.projectionMatrix)}},a.getCamera=function(){return j},a.getFoveation=function(){return null!==p?p.fixedFoveation:null!==m?m.fixedFoveation:void 0},a.setFoveation=function(e){null!==p&&(p.fixedFoveation=e),null!==m&&void 0!==m.fixedFoveation&&(m.fixedFoveation=e)};var A=null;var I=new ro;return I.setAnimationLoop((function(n,t){if(v=t.getViewerPose(u||s),d=t,null!==v){var r=v.views;null!==m&&(e.setRenderTargetFramebuffer(x,m.framebuffer),e.setRenderTarget(x));var a=!1;r.length!==j.cameras.length&&(j.cameras.length=0,a=!0);for(var i=0;i<r.length;i++){var o=r[i],l=null;if(null!==m)l=m.getViewport(o);else{var c=f.getViewSubImage(p,o);l=c.viewport,0===i&&(e.setRenderTargetTextures(x,c.colorTexture,p.ignoreDepthValues?void 0:c.depthStencilTexture),e.setRenderTarget(x))}var h=U[i];void 0===h&&((h=new Hi).layers.enable(i),h.viewport=new Cr,U[i]=h),h.matrix.fromArray(o.transform.matrix),h.projectionMatrix.fromArray(o.projectionMatrix),h.viewport.set(l.x,l.y,l.width,l.height),0===i&&j.matrix.copy(h.matrix),!0===a&&j.cameras.push(h)}}for(var g=0;g<b.length;g++){var y=_[g],w=b[g];null!==y&&void 0!==w&&w.update(y,t,u||s)}A&&A(n,t),d=null})),a.setAnimationLoop=function(e){A=e},a.dispose=function(){},a}return _(t)}(Ht);function Ps(e,n){function t(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.bumpMap&&(t.bumpMap.value=r.bumpMap,t.bumpScale.value=r.bumpScale,r.side===W&&(t.bumpScale.value*=-1)),r.displacementMap&&(t.displacementMap.value=r.displacementMap,t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap),r.normalMap&&(t.normalMap.value=r.normalMap,t.normalScale.value.copy(r.normalScale),r.side===W&&t.normalScale.value.negate()),r.specularMap&&(t.specularMap.value=r.specularMap),r.alphaTest>0&&(t.alphaTest.value=r.alphaTest);var a,i,o=n.get(r).envMap;if(o&&(t.envMap.value=o,t.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,t.reflectivity.value=r.reflectivity,t.ior.value=r.ior,t.refractionRatio.value=r.refractionRatio),r.lightMap){t.lightMap.value=r.lightMap;var l=!0!==e.physicallyCorrectLights?Math.PI:1;t.lightMapIntensity.value=r.lightMapIntensity*l}r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity),r.map?a=r.map:r.specularMap?a=r.specularMap:r.displacementMap?a=r.displacementMap:r.normalMap?a=r.normalMap:r.bumpMap?a=r.bumpMap:r.roughnessMap?a=r.roughnessMap:r.metalnessMap?a=r.metalnessMap:r.alphaMap?a=r.alphaMap:r.emissiveMap?a=r.emissiveMap:r.clearcoatMap?a=r.clearcoatMap:r.clearcoatNormalMap?a=r.clearcoatNormalMap:r.clearcoatRoughnessMap?a=r.clearcoatRoughnessMap:r.iridescenceMap?a=r.iridescenceMap:r.iridescenceThicknessMap?a=r.iridescenceThicknessMap:r.specularIntensityMap?a=r.specularIntensityMap:r.specularColorMap?a=r.specularColorMap:r.transmissionMap?a=r.transmissionMap:r.thicknessMap?a=r.thicknessMap:r.sheenColorMap?a=r.sheenColorMap:r.sheenRoughnessMap&&(a=r.sheenRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uvTransform.value.copy(a.matrix)),r.aoMap?i=r.aoMap:r.lightMap&&(i=r.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uv2Transform.value.copy(i.matrix))}return{refreshFogUniforms:function(e,n){e.fogColor.value.copy(n.color),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,a,i,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?t(e,r):r.isMeshToonMaterial?(t(e,r),function(e,n){n.gradientMap&&(e.gradientMap.value=n.gradientMap)}(e,r)):r.isMeshPhongMaterial?(t(e,r),function(e,n){e.specular.value.copy(n.specular),e.shininess.value=Math.max(n.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(t(e,r),function(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap);t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap);n.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,n,t){e.ior.value=n.ior,n.sheen>0&&(e.sheenColor.value.copy(n.sheenColor).multiplyScalar(n.sheen),e.sheenRoughness.value=n.sheenRoughness,n.sheenColorMap&&(e.sheenColorMap.value=n.sheenColorMap),n.sheenRoughnessMap&&(e.sheenRoughnessMap.value=n.sheenRoughnessMap));n.clearcoat>0&&(e.clearcoat.value=n.clearcoat,e.clearcoatRoughness.value=n.clearcoatRoughness,n.clearcoatMap&&(e.clearcoatMap.value=n.clearcoatMap),n.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=n.clearcoatRoughnessMap),n.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(n.clearcoatNormalScale),e.clearcoatNormalMap.value=n.clearcoatNormalMap,n.side===W&&e.clearcoatNormalScale.value.negate()));n.iridescence>0&&(e.iridescence.value=n.iridescence,e.iridescenceIOR.value=n.iridescenceIOR,e.iridescenceThicknessMinimum.value=n.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=n.iridescenceThicknessRange[1],n.iridescenceMap&&(e.iridescenceMap.value=n.iridescenceMap),n.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=n.iridescenceThicknessMap));n.transmission>0&&(e.transmission.value=n.transmission,e.transmissionSamplerMap.value=t.texture,e.transmissionSamplerSize.value.set(t.width,t.height),n.transmissionMap&&(e.transmissionMap.value=n.transmissionMap),e.thickness.value=n.thickness,n.thicknessMap&&(e.thicknessMap.value=n.thicknessMap),e.attenuationDistance.value=n.attenuationDistance,e.attenuationColor.value.copy(n.attenuationColor));e.specularIntensity.value=n.specularIntensity,e.specularColor.value.copy(n.specularColor),n.specularIntensityMap&&(e.specularIntensityMap.value=n.specularIntensityMap);n.specularColorMap&&(e.specularColorMap.value=n.specularColorMap)}(e,r,o)):r.isMeshMatcapMaterial?(t(e,r),function(e,n){n.matcap&&(e.matcap.value=n.matcap)}(e,r)):r.isMeshDepthMaterial?t(e,r):r.isMeshDistanceMaterial?(t(e,r),function(e,n){e.referencePosition.value.copy(n.referencePosition),e.nearDistance.value=n.nearDistance,e.farDistance.value=n.farDistance}(e,r)):r.isMeshNormalMaterial?t(e,r):r.isLineBasicMaterial?(function(e,n){e.diffuse.value.copy(n.color),e.opacity.value=n.opacity}(e,r),r.isLineDashedMaterial&&function(e,n){e.dashSize.value=n.dashSize,e.totalSize.value=n.dashSize+n.gapSize,e.scale.value=n.scale}(e,r)):r.isPointsMaterial?function(e,n,t,r){e.diffuse.value.copy(n.color),e.opacity.value=n.opacity,e.size.value=n.size*t,e.scale.value=.5*r,n.map&&(e.map.value=n.map);n.alphaMap&&(e.alphaMap.value=n.alphaMap);n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);var a;n.map?a=n.map:n.alphaMap&&(a=n.alphaMap);void 0!==a&&(!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uvTransform.value.copy(a.matrix))}(e,r,a,i):r.isSpriteMaterial?function(e,n){e.diffuse.value.copy(n.color),e.opacity.value=n.opacity,e.rotation.value=n.rotation,n.map&&(e.map.value=n.map);n.alphaMap&&(e.alphaMap.value=n.alphaMap);n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);var t;n.map?t=n.map:n.alphaMap&&(t=n.alphaMap);void 0!==t&&(!0===t.matrixAutoUpdate&&t.updateMatrix(),e.uvTransform.value.copy(t.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Ds(e,n,t,r){var a={},i={},o=[],l=t.isWebGL2?e.getParameter(35375):0;function s(e,n,t){var r=e.value;if(void 0===t[n])return t[n]="number"===typeof r?r:r.clone(),!0;if("number"===typeof r){if(t[n]!==r)return t[n]=r,!0}else{var a=t[n];if(!1===a.equals(r))return a.copy(r),!0}return!1}function c(e){var n=e.value,t={boundary:0,storage:0};return"number"===typeof n?(t.boundary=4,t.storage=4):n.isVector2?(t.boundary=8,t.storage=8):n.isVector3||n.isColor?(t.boundary=16,t.storage=12):n.isVector4?(t.boundary=16,t.storage=16):n.isMatrix3?(t.boundary=48,t.storage=48):n.isMatrix4?(t.boundary=64,t.storage=64):n.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",n),t}function u(n){var t=n.target;t.removeEventListener("dispose",u);var r=o.indexOf(t.__bindingPointIndex);o.splice(r,1),e.deleteBuffer(a[t.id]),delete a[t.id],delete i[t.id]}return{bind:function(e,n){var t=n.program;r.uniformBlockBinding(e,t)},update:function(t,v){var f=a[t.id];void 0===f&&(!function(e){for(var n=e.uniforms,t=0,r=16,a=0,i=0,o=n.length;i<o;i++){var l=n[i],s=c(l);if(l.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),l.__offset=t,i>0)0!==(a=t%r)&&r-a-s.boundary<0&&(t+=r-a,l.__offset=t);t+=s.storage}(a=t%r)>0&&(t+=r-a);e.__size=t,e.__cache={}}(t),f=function(n){var t=function(){for(var e=0;e<l;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();n.__bindingPointIndex=t;var r=e.createBuffer(),a=n.__size,i=n.usage;return e.bindBuffer(35345,r),e.bufferData(35345,a,i),e.bindBuffer(35345,null),e.bindBufferBase(35345,t,r),r}(t),a[t.id]=f,t.addEventListener("dispose",u));var p=v.program;r.updateUBOMapping(t,p);var m=n.render.frame;i[t.id]!==m&&(!function(n){var t=a[n.id],r=n.uniforms,i=n.__cache;e.bindBuffer(35345,t);for(var o=0,l=r.length;o<l;o++){var c=r[o];if(!0===s(c,o,i)){var u=c.value,v=c.__offset;"number"===typeof u?(c.__data[0]=u,e.bufferSubData(35345,v,c.__data)):(c.value.isMatrix3?(c.__data[0]=c.value.elements[0],c.__data[1]=c.value.elements[1],c.__data[2]=c.value.elements[2],c.__data[3]=c.value.elements[0],c.__data[4]=c.value.elements[3],c.__data[5]=c.value.elements[4],c.__data[6]=c.value.elements[5],c.__data[7]=c.value.elements[0],c.__data[8]=c.value.elements[6],c.__data[9]=c.value.elements[7],c.__data[10]=c.value.elements[8],c.__data[11]=c.value.elements[0]):u.toArray(c.__data),e.bufferSubData(35345,v,c.__data))}}e.bindBuffer(35345,null)}(t),i[t.id]=m)},dispose:function(){for(var n in a)e.deleteBuffer(a[n]);o=[],a={},i={}}}}function Es(){var e=vr("canvas");return e.style.display="block",e}function zs(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.isWebGLRenderer=!0;var n,t=void 0!==e.canvas?e.canvas:Es(),r=void 0!==e.context?e.context:null,a=void 0===e.depth||e.depth,i=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,l=void 0===e.premultipliedAlpha||e.premultipliedAlpha,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;n=null!==r?r.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;var v=null,f=null,p=[],m=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=st,this.physicallyCorrectLights=!1,this.toneMapping=ke,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});var d=this,h=!1,g=0,x=0,y=null,b=-1,_=null,w=new Cr,S=new Cr,U=null,M=t.width,j=t.height,k=1,T=null,C=null,R=new Cr(0,0,M,j),F=new Cr(0,0,M,j),P=!1,D=new to,z=!1,L=!1,A=null,I=new pa,O=new or,B=new Ar,N={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function G(){return null===y?k:1}var V,q,Y,Z,J,Q,$,K,ee,ne,te,re,ae,ie,oe,le,se,ce,ue,ve,fe,pe,me,de,he=r;function ge(e,n){for(var r=0;r<e.length;r++){var a=e[r],i=t.getContext(a,n);if(null!==i)return i}return null}try{var xe={alpha:!0,depth:a,stencil:i,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:s,powerPreference:c,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine","three.js r".concat(E)),t.addEventListener("webglcontextlost",we,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",Ue,!1),null===he){var ye=["webgl2","webgl","experimental-webgl"];if(!0===d.isWebGL1Renderer&&ye.shift(),null===(he=ge(ye,xe)))throw ge(ye)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===he.getShaderPrecisionFormat&&(he.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(qe){throw console.error("THREE.WebGLRenderer: "+qe.message),qe}function be(){V=new Fo(he),q=new fo(he,V,e),V.init(q),pe=new Ms(he,V,q),Y=new Ss(he,V,q),Z=new Eo,J=new cs,Q=new Us(he,V,Y,J,q,pe,Z),$=new mo(d),K=new Ro(d),ee=new ao(he,q),me=new uo(he,V,ee,q),ne=new Po(he,ee,Z,me),te=new Io(he,ne,ee,Z),ue=new Ao(he,q,Q),le=new po(J),re=new ss(d,$,K,V,q,me,le),ae=new Ps(d,J),ie=new ps,oe=new ys(V,q),ce=new co(d,$,K,Y,te,n,l),se=new ws(d,te,q),de=new Ds(he,Z,q,Y),ve=new vo(he,V,Z,q),fe=new Do(he,V,Z,q),Z.programs=re.programs,d.capabilities=q,d.extensions=V,d.properties=J,d.renderLists=ie,d.shadowMap=se,d.state=Y,d.info=Z}be();var _e=new Fs(d,he);function we(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),h=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),h=!1;var e=Z.autoReset,n=se.enabled,t=se.autoUpdate,r=se.needsUpdate,a=se.type;be(),Z.autoReset=e,se.enabled=n,se.autoUpdate=t,se.needsUpdate=r,se.type=a}function Ue(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Me(e){var n=e.target;n.removeEventListener("dispose",Me),je(n)}function je(e){Te(e),J.remove(e)}function Te(e){var n=J.get(e).programs;void 0!==n&&(n.forEach((function(e){re.releaseProgram(e)})),e.isShaderMaterial&&re.releaseShaderCache(e))}this.xr=_e,this.getContext=function(){return he},this.getContextAttributes=function(){return he.getContextAttributes()},this.forceContextLoss=function(){var e=V.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=V.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(e){void 0!==e&&(k=e,this.setSize(M,j,!1))},this.getSize=function(e){return e.set(M,j)},this.setSize=function(e,n,r){_e.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,j=n,t.width=Math.floor(e*k),t.height=Math.floor(n*k),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(M*k,j*k).floor()},this.setDrawingBufferSize=function(e,n,r){M=e,j=n,k=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(w)},this.getViewport=function(e){return e.copy(R)},this.setViewport=function(e,n,t,r){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,n,t,r),Y.viewport(w.copy(R).multiplyScalar(k).floor())},this.getScissor=function(e){return e.copy(F)},this.setScissor=function(e,n,t,r){e.isVector4?F.set(e.x,e.y,e.z,e.w):F.set(e,n,t,r),Y.scissor(S.copy(F).multiplyScalar(k).floor())},this.getScissorTest=function(){return P},this.setScissorTest=function(e){Y.setScissorTest(P=e)},this.setOpaqueSort=function(e){T=e},this.setTransparentSort=function(e){C=e},this.getClearColor=function(e){return e.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=0;e&&(r|=16384),n&&(r|=256),t&&(r|=1024),he.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",we,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",Ue,!1),ie.dispose(),oe.dispose(),J.dispose(),$.dispose(),K.dispose(),te.dispose(),me.dispose(),de.dispose(),re.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",Fe),_e.removeEventListener("sessionend",Pe),A&&(A.dispose(),A=null),De.stop()},this.renderBufferDirect=function(e,n,t,r,a,i){null===n&&(n=N);var o=a.isMesh&&a.matrixWorld.determinant()<0,l=Ne(e,n,t,r,a);Y.setMaterial(r,o);var s=t.index,c=t.attributes.position;if(null===s){if(void 0===c||0===c.count)return}else if(0===s.count)return;var u,v=1;!0===r.wireframe&&(s=ne.getWireframeAttribute(t),v=2),me.setup(a,r,l,t,s);var f=ve;null!==s&&(u=ee.get(s),(f=fe).setIndex(u));var p=null!==s?s.count:c.count,m=t.drawRange.start*v,d=t.drawRange.count*v,h=null!==i?i.start*v:0,g=null!==i?i.count*v:1/0,x=Math.max(m,h),y=Math.min(p,m+d,h+g)-1,b=Math.max(0,y-x+1);if(0!==b){if(a.isMesh)!0===r.wireframe?(Y.setLineWidth(r.wireframeLinewidth*G()),f.setMode(1)):f.setMode(4);else if(a.isLine){var _=r.linewidth;void 0===_&&(_=1),Y.setLineWidth(_*G()),a.isLineSegments?f.setMode(1):a.isLineLoop?f.setMode(2):f.setMode(3)}else a.isPoints?f.setMode(0):a.isSprite&&f.setMode(4);if(a.isInstancedMesh)f.renderInstances(x,b,a.count);else if(t.isInstancedBufferGeometry){var w=Math.min(t.instanceCount,t._maxInstanceCount);f.renderInstances(x,b,w)}else f.render(x,b)}},this.compile=function(e,n){function t(e,n,t){!0===e.transparent&&e.side===X?(e.side=W,e.needsUpdate=!0,Oe(e,n,t),e.side=H,e.needsUpdate=!0,Oe(e,n,t),e.side=X):Oe(e,n,t)}(f=oe.get(e)).init(),m.push(f),e.traverseVisible((function(e){e.isLight&&e.layers.test(n.layers)&&(f.pushLight(e),e.castShadow&&f.pushShadow(e))})),f.setupLights(d.physicallyCorrectLights),e.traverse((function(n){var r=n.material;if(r)if(Array.isArray(r))for(var a=0;a<r.length;a++){t(r[a],e,n)}else t(r,e,n)})),m.pop(),f=null};var Ce=null;function Re(e){Ce&&Ce(e)}function Fe(){De.stop()}function Pe(){De.start()}var De=new ro;function Ee(e,n,t,r){if(!1!==e.visible){if(e.layers.test(n.layers))if(e.isGroup)t=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(n);else if(e.isLight)f.pushLight(e),e.castShadow&&f.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||D.intersectsSprite(e)){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I);var a=te.update(e),i=e.material;i.visible&&v.push(e,a,i,t,B.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Z.render.frame&&(e.skeleton.update(),e.skeleton.frame=Z.render.frame),!e.frustumCulled||D.intersectsObject(e))){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I);var o=te.update(e),l=e.material;if(Array.isArray(l))for(var s=o.groups,c=0,u=s.length;c<u;c++){var p=s[c],m=l[p.materialIndex];m&&m.visible&&v.push(e,o,m,t,B.z,p)}else l.visible&&v.push(e,o,l,t,B.z,null)}for(var d=e.children,h=0,g=d.length;h<g;h++)Ee(d[h],n,t,r)}}function ze(e,n,t,r){var a=e.opaque,i=e.transmissive,o=e.transparent;f.setupLightsView(t),i.length>0&&Le(a,n,t),r&&Y.viewport(w.copy(r)),a.length>0&&Ae(a,n,t),i.length>0&&Ae(i,n,t),o.length>0&&Ae(o,n,t),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function Le(e,n,t){var r=q.isWebGL2;null===A&&(A=new Rr(1,1,{generateMipmaps:!0,type:V.has("EXT_color_buffer_half_float")?on:$e,minFilter:Je,samples:r&&!0===o?4:0})),d.getDrawingBufferSize(O),r?A.setSize(O.x,O.y):A.setSize(tr(O.x),tr(O.y));var a=d.getRenderTarget();d.setRenderTarget(A),d.clear();var i=d.toneMapping;d.toneMapping=ke,Ae(e,n,t),d.toneMapping=i,Q.updateMultisampleRenderTarget(A),Q.updateRenderTargetMipmap(A),d.setRenderTarget(a)}function Ae(e,n,t){for(var r=!0===n.isScene?n.overrideMaterial:null,a=0,i=e.length;a<i;a++){var o=e[a],l=o.object,s=o.geometry,c=null===r?o.material:r,u=o.group;l.layers.test(t.layers)&&Ie(l,n,t,s,c,u)}}function Ie(e,n,t,r,a,i){e.onBeforeRender(d,n,t,r,a,i),e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),a.onBeforeRender(d,n,t,r,e,i),!0===a.transparent&&a.side===X?(a.side=W,a.needsUpdate=!0,d.renderBufferDirect(t,n,r,a,e,i),a.side=H,a.needsUpdate=!0,d.renderBufferDirect(t,n,r,a,e,i),a.side=X):d.renderBufferDirect(t,n,r,a,e,i),e.onAfterRender(d,n,t,r,a,i)}function Oe(e,n,t){!0!==n.isScene&&(n=N);var r=J.get(e),a=f.state.lights,i=f.state.shadowsArray,o=a.state.version,l=re.getParameters(e,a.state,i,n,t),s=re.getProgramCacheKey(l),c=r.programs;r.environment=e.isMeshStandardMaterial?n.environment:null,r.fog=n.fog,r.envMap=(e.isMeshStandardMaterial?K:$).get(e.envMap||r.environment),void 0===c&&(e.addEventListener("dispose",Me),c=new Map,r.programs=c);var u=c.get(s);if(void 0!==u){if(r.currentProgram===u&&r.lightsStateVersion===o)return Be(e,l),u}else l.uniforms=re.getUniforms(e),e.onBuild(t,l,d),e.onBeforeCompile(l,d),u=re.acquireProgram(l,s),c.set(s,u),r.uniforms=l.uniforms;var v=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(v.clippingPlanes=le.uniform),Be(e,l),r.needsLights=Ve(e),r.lightsStateVersion=o,r.needsLights&&(v.ambientLightColor.value=a.state.ambient,v.lightProbe.value=a.state.probe,v.directionalLights.value=a.state.directional,v.directionalLightShadows.value=a.state.directionalShadow,v.spotLights.value=a.state.spot,v.spotLightShadows.value=a.state.spotShadow,v.rectAreaLights.value=a.state.rectArea,v.ltc_1.value=a.state.rectAreaLTC1,v.ltc_2.value=a.state.rectAreaLTC2,v.pointLights.value=a.state.point,v.pointLightShadows.value=a.state.pointShadow,v.hemisphereLights.value=a.state.hemi,v.directionalShadowMap.value=a.state.directionalShadowMap,v.directionalShadowMatrix.value=a.state.directionalShadowMatrix,v.spotShadowMap.value=a.state.spotShadowMap,v.spotLightMatrix.value=a.state.spotLightMatrix,v.spotLightMap.value=a.state.spotLightMap,v.pointShadowMap.value=a.state.pointShadowMap,v.pointShadowMatrix.value=a.state.pointShadowMatrix);var p=u.getUniforms(),m=Gl.seqWithValue(p.seq,v);return r.currentProgram=u,r.uniformsList=m,u}function Be(e,n){var t=J.get(e);t.outputEncoding=n.outputEncoding,t.instancing=n.instancing,t.skinning=n.skinning,t.morphTargets=n.morphTargets,t.morphNormals=n.morphNormals,t.morphColors=n.morphColors,t.morphTargetsCount=n.morphTargetsCount,t.numClippingPlanes=n.numClippingPlanes,t.numIntersection=n.numClipIntersection,t.vertexAlphas=n.vertexAlphas,t.vertexTangents=n.vertexTangents,t.toneMapping=n.toneMapping}function Ne(e,n,t,r,a){!0!==n.isScene&&(n=N),Q.resetTextureUnits();var i=n.fog,o=r.isMeshStandardMaterial?n.environment:null,l=null===y?d.outputEncoding:!0===y.isXRRenderTarget?y.texture.encoding:st,s=(r.isMeshStandardMaterial?K:$).get(r.envMap||o),c=!0===r.vertexColors&&!!t.attributes.color&&4===t.attributes.color.itemSize,u=!!r.normalMap&&!!t.attributes.tangent,v=!!t.morphAttributes.position,p=!!t.morphAttributes.normal,m=!!t.morphAttributes.color,h=r.toneMapped?d.toneMapping:ke,g=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,x=void 0!==g?g.length:0,w=J.get(r),S=f.state.lights;if(!0===z&&(!0===L||e!==_)){var U=e===_&&r.id===b;le.setState(r,e,U)}var M=!1;r.version===w.__version?w.needsLights&&w.lightsStateVersion!==S.state.version||w.outputEncoding!==l||a.isInstancedMesh&&!1===w.instancing?M=!0:a.isInstancedMesh||!0!==w.instancing?a.isSkinnedMesh&&!1===w.skinning?M=!0:a.isSkinnedMesh||!0!==w.skinning?w.envMap!==s||!0===r.fog&&w.fog!==i?M=!0:void 0===w.numClippingPlanes||w.numClippingPlanes===le.numPlanes&&w.numIntersection===le.numIntersection?(w.vertexAlphas!==c||w.vertexTangents!==u||w.morphTargets!==v||w.morphNormals!==p||w.morphColors!==m||w.toneMapping!==h||!0===q.isWebGL2&&w.morphTargetsCount!==x)&&(M=!0):M=!0:M=!0:M=!0:(M=!0,w.__version=r.version);var T=w.currentProgram;!0===M&&(T=Oe(r,n,a));var C=!1,R=!1,F=!1,P=T.getUniforms(),D=w.uniforms;if(Y.useProgram(T.program)&&(C=!0,R=!0,F=!0),r.id!==b&&(b=r.id,R=!0),C||_!==e){if(P.setValue(he,"projectionMatrix",e.projectionMatrix),q.logarithmicDepthBuffer&&P.setValue(he,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),_!==e&&(_=e,R=!0,F=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var E=P.map.cameraPosition;void 0!==E&&E.setValue(he,B.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&P.setValue(he,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||a.isSkinnedMesh)&&P.setValue(he,"viewMatrix",e.matrixWorldInverse)}if(a.isSkinnedMesh){P.setOptional(he,a,"bindMatrix"),P.setOptional(he,a,"bindMatrixInverse");var I=a.skeleton;I&&(q.floatVertexTextures?(null===I.boneTexture&&I.computeBoneTexture(),P.setValue(he,"boneTexture",I.boneTexture,Q),P.setValue(he,"boneTextureSize",I.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}var O=t.morphAttributes;if((void 0!==O.position||void 0!==O.normal||void 0!==O.color&&!0===q.isWebGL2)&&ue.update(a,t,r,T),(R||w.receiveShadow!==a.receiveShadow)&&(w.receiveShadow=a.receiveShadow,P.setValue(he,"receiveShadow",a.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(D.envMap.value=s,D.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1),R&&(P.setValue(he,"toneMappingExposure",d.toneMappingExposure),w.needsLights&&Ge(D,F),i&&!0===r.fog&&ae.refreshFogUniforms(D,i),ae.refreshMaterialUniforms(D,r,k,j,A),Gl.upload(he,w.uniformsList,D,Q)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Gl.upload(he,w.uniformsList,D,Q),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&P.setValue(he,"center",a.center),P.setValue(he,"modelViewMatrix",a.modelViewMatrix),P.setValue(he,"normalMatrix",a.normalMatrix),P.setValue(he,"modelMatrix",a.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial)for(var G=r.uniformsGroups,V=0,H=G.length;V<H;V++)if(q.isWebGL2){var W=G[V];de.update(W,T),de.bind(W,T)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");return T}function Ge(e,n){e.ambientLightColor.needsUpdate=n,e.lightProbe.needsUpdate=n,e.directionalLights.needsUpdate=n,e.directionalLightShadows.needsUpdate=n,e.pointLights.needsUpdate=n,e.pointLightShadows.needsUpdate=n,e.spotLights.needsUpdate=n,e.spotLightShadows.needsUpdate=n,e.rectAreaLights.needsUpdate=n,e.hemisphereLights.needsUpdate=n}function Ve(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}De.setAnimationLoop(Re),"undefined"!==typeof self&&De.setContext(self),this.setAnimationLoop=function(e){Ce=e,_e.setAnimationLoop(e),null===e?De.stop():De.start()},_e.addEventListener("sessionstart",Fe),_e.addEventListener("sessionend",Pe),this.render=function(e,n){if(void 0===n||!0===n.isCamera){if(!0!==h){!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===n.parent&&!0===n.matrixWorldAutoUpdate&&n.updateMatrixWorld(),!0===_e.enabled&&!0===_e.isPresenting&&(!0===_e.cameraAutoUpdate&&_e.updateCamera(n),n=_e.getCamera()),!0===e.isScene&&e.onBeforeRender(d,e,n,y),(f=oe.get(e,m.length)).init(),m.push(f),I.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),D.setFromProjectionMatrix(I),L=this.localClippingEnabled,z=le.init(this.clippingPlanes,L,n),(v=ie.get(e,p.length)).init(),p.push(v),Ee(e,n,0,d.sortObjects),v.finish(),!0===d.sortObjects&&v.sort(T,C),!0===z&&le.beginShadows();var t=f.state.shadowsArray;if(se.render(t,e,n),!0===z&&le.endShadows(),!0===this.info.autoReset&&this.info.reset(),ce.render(v,e),f.setupLights(d.physicallyCorrectLights),n.isArrayCamera)for(var r=n.cameras,a=0,i=r.length;a<i;a++){var o=r[a];ze(v,e,o,o.viewport)}else ze(v,e,n);null!==y&&(Q.updateMultisampleRenderTarget(y),Q.updateRenderTargetMipmap(y)),!0===e.isScene&&e.onAfterRender(d,e,n),me.resetDefaultState(),b=-1,_=null,m.pop(),f=m.length>0?m[m.length-1]:null,p.pop(),v=p.length>0?p[p.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(e,n,t){J.get(e.texture).__webglTexture=n,J.get(e.depthTexture).__webglTexture=t;var r=J.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===t,r.__autoAllocateDepthBuffer||!0===V.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,n){var t=J.get(e);t.__webglFramebuffer=n,t.__useDefaultFramebuffer=void 0===n},this.setRenderTarget=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;y=e,g=n,x=t;var r=!0,a=null,i=!1,o=!1;if(e){var l=J.get(e);void 0!==l.__useDefaultFramebuffer?(Y.bindFramebuffer(36160,null),r=!1):void 0===l.__webglFramebuffer?Q.setupRenderTarget(e):l.__hasExternalTextures&&Q.rebindTextures(e,J.get(e.texture).__webglTexture,J.get(e.depthTexture).__webglTexture);var s=e.texture;(s.isData3DTexture||s.isDataArrayTexture||s.isCompressedArrayTexture)&&(o=!0);var c=J.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=c[n],i=!0):a=q.isWebGL2&&e.samples>0&&!1===Q.useMultisampledRTT(e)?J.get(e).__webglMultisampledFramebuffer:c,w.copy(e.viewport),S.copy(e.scissor),U=e.scissorTest}else w.copy(R).multiplyScalar(k).floor(),S.copy(F).multiplyScalar(k).floor(),U=P;var u=Y.bindFramebuffer(36160,a);if(u&&q.drawBuffers&&r&&Y.drawBuffers(e,a),Y.viewport(w),Y.scissor(S),Y.setScissorTest(U),i){var v=J.get(e.texture);he.framebufferTexture2D(36160,36064,34069+n,v.__webglTexture,t)}else if(o){var f=J.get(e.texture),p=n||0;he.framebufferTextureLayer(36160,36064,f.__webglTexture,t||0,p)}b=-1},this.readRenderTargetPixels=function(e,n,t,r,a,i,o){if(e&&e.isWebGLRenderTarget){var l=J.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(l=l[o]),l){Y.bindFramebuffer(36160,l);try{var s=e.texture,c=s.format,u=s.type;if(c!==fn&&pe.convert(c)!==he.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var v=u===on&&(V.has("EXT_color_buffer_half_float")||q.isWebGL2&&V.has("EXT_color_buffer_float"));if(u!==$e&&pe.convert(u)!==he.getParameter(35738)&&(u!==an||!(q.isWebGL2||V.has("OES_texture_float")||V.has("WEBGL_color_buffer_float")))&&!v)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");n>=0&&n<=e.width-r&&t>=0&&t<=e.height-a&&he.readPixels(n,t,r,a,pe.convert(c),pe.convert(u),i)}finally{var f=null!==y?J.get(y).__webglFramebuffer:null;Y.bindFramebuffer(36160,f)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=Math.pow(2,-t),a=Math.floor(n.image.width*r),i=Math.floor(n.image.height*r);Q.setTexture2D(n,0),he.copyTexSubImage2D(3553,t,0,0,e.x,e.y,a,i),Y.unbindTexture()},this.copyTextureToTexture=function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=n.image.width,i=n.image.height,o=pe.convert(t.format),l=pe.convert(t.type);Q.setTexture2D(t,0),he.pixelStorei(37440,t.flipY),he.pixelStorei(37441,t.premultiplyAlpha),he.pixelStorei(3317,t.unpackAlignment),n.isDataTexture?he.texSubImage2D(3553,r,e.x,e.y,a,i,o,l,n.image.data):n.isCompressedTexture?he.compressedTexSubImage2D(3553,r,e.x,e.y,n.mipmaps[0].width,n.mipmaps[0].height,o,n.mipmaps[0].data):he.texSubImage2D(3553,r,e.x,e.y,o,l,n.image),0===r&&t.generateMipmaps&&he.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(e,n,t,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if(d.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var i,o=e.max.x-e.min.x+1,l=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,c=pe.convert(r.format),u=pe.convert(r.type);if(r.isData3DTexture)Q.setTexture3D(r,0),i=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Q.setTexture2DArray(r,0),i=35866}he.pixelStorei(37440,r.flipY),he.pixelStorei(37441,r.premultiplyAlpha),he.pixelStorei(3317,r.unpackAlignment);var v=he.getParameter(3314),f=he.getParameter(32878),p=he.getParameter(3316),m=he.getParameter(3315),h=he.getParameter(32877),g=t.isCompressedTexture?t.mipmaps[0]:t.image;he.pixelStorei(3314,g.width),he.pixelStorei(32878,g.height),he.pixelStorei(3316,e.min.x),he.pixelStorei(3315,e.min.y),he.pixelStorei(32877,e.min.z),t.isDataTexture||t.isData3DTexture?he.texSubImage3D(i,a,n.x,n.y,n.z,o,l,s,c,u,g.data):t.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),he.compressedTexSubImage3D(i,a,n.x,n.y,n.z,o,l,s,c,g.data)):he.texSubImage3D(i,a,n.x,n.y,n.z,o,l,s,c,u,g),he.pixelStorei(3314,v),he.pixelStorei(32878,f),he.pixelStorei(3316,p),he.pixelStorei(3315,m),he.pixelStorei(32877,h),0===a&&r.generateMipmaps&&he.generateMipmap(i),Y.unbindTexture()}},this.initTexture=function(e){e.isCubeTexture?Q.setTextureCube(e,0):e.isData3DTexture?Q.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?Q.setTexture2DArray(e,0):Q.setTexture2D(e,0),Y.unbindTexture()},this.resetState=function(){g=0,x=0,y=null,Y.reset(),me.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var Ls=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(zs);Ls.prototype.isWebGL1Renderer=!0;var As,Is=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25e-5;y(this,e),this.isFogExp2=!0,this.name="",this.color=new Sr(n),this.density=t}return _(e,[{key:"clone",value:function(){return new e(this.color,this.density)}},{key:"toJSON",value:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}]),e}(),Os=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;y(this,e),this.isFog=!0,this.name="",this.color=new Sr(n),this.near=t,this.far=r}return _(e,[{key:"clone",value:function(){return new e(this.color,this.near,this.far)}},{key:"toJSON",value:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}]),e}(),Bs=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isScene=!0,e.type="Scene",e.background=null,e.environment=null,e.fog=null,e.backgroundBlurriness=0,e.overrideMaterial=null,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:M(e)})),e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return null!==this.fog&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.backgroundBlurriness=this.backgroundBlurriness),n}},{key:"autoUpdate",get:function(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate},set:function(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}]),t}(Ia),Ns=function(){function e(n,t){y(this,e),this.isInterleavedBuffer=!0,this.array=n,this.stride=t,this.count=void 0!==n?n.length/t:0,this.usage=Dt,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Jt()}return _(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}},{key:"copyAt",value:function(e,n,t){e*=this.stride,t*=n.stride;for(var r=0,a=this.stride;r<a;r++)this.array[e+r]=n.array[t+r];return this}},{key:"set",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,n),this}},{key:"clone",value:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Jt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);var n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),t=new this.constructor(n,this.stride);return t.setUsage(this.usage),t}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"toJSON",value:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Jt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}]),e}(),Gs=new Ar,Vs=function(){function e(n,t,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];y(this,e),this.isInterleavedBufferAttribute=!0,this.name="",this.data=n,this.itemSize=t,this.offset=r,this.normalized=!0===a}return _(e,[{key:"count",get:function(){return this.data.count}},{key:"array",get:function(){return this.data.array}},{key:"needsUpdate",set:function(e){this.data.needsUpdate=e}},{key:"applyMatrix4",value:function(e){for(var n=0,t=this.data.count;n<t;n++)Gs.fromBufferAttribute(this,n),Gs.applyMatrix4(e),this.setXYZ(n,Gs.x,Gs.y,Gs.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var n=0,t=this.count;n<t;n++)Gs.fromBufferAttribute(this,n),Gs.applyNormalMatrix(e),this.setXYZ(n,Gs.x,Gs.y,Gs.z);return this}},{key:"transformDirection",value:function(e){for(var n=0,t=this.count;n<t;n++)Gs.fromBufferAttribute(this,n),Gs.transformDirection(e),this.setXYZ(n,Gs.x,Gs.y,Gs.z);return this}},{key:"setX",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.data.array[e*this.data.stride+this.offset]=n,this}},{key:"setY",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.data.array[e*this.data.stride+this.offset+1]=n,this}},{key:"setZ",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.data.array[e*this.data.stride+this.offset+2]=n,this}},{key:"setW",value:function(e,n){return this.normalized&&(n=ar(n,this.array)),this.data.array[e*this.data.stride+this.offset+3]=n,this}},{key:"getX",value:function(e){var n=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(n=rr(n,this.array)),n}},{key:"getY",value:function(e){var n=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(n=rr(n,this.array)),n}},{key:"getZ",value:function(e){var n=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(n=rr(n,this.array)),n}},{key:"getW",value:function(e){var n=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(n=rr(n,this.array)),n}},{key:"setXY",value:function(e,n,t){return e=e*this.data.stride+this.offset,this.normalized&&(n=ar(n,this.array),t=ar(t,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=t,this}},{key:"setXYZ",value:function(e,n,t,r){return e=e*this.data.stride+this.offset,this.normalized&&(n=ar(n,this.array),t=ar(t,this.array),r=ar(r,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=t,this.data.array[e+2]=r,this}},{key:"setXYZW",value:function(e,n,t,r,a){return e=e*this.data.stride+this.offset,this.normalized&&(n=ar(n,this.array),t=ar(t,this.array),r=ar(r,this.array),a=ar(a,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=t,this.data.array[e+2]=r,this.data.array[e+3]=a,this}},{key:"clone",value:function(n){if(void 0===n){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");for(var t=[],r=0;r<this.count;r++)for(var a=r*this.data.stride+this.offset,i=0;i<this.itemSize;i++)t.push(this.data.array[a+i]);return new ni(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===n.interleavedBuffers&&(n.interleavedBuffers={}),void 0===n.interleavedBuffers[this.data.uuid]&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new e(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}},{key:"toJSON",value:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");for(var n=[],t=0;t<this.count;t++)for(var r=t*this.data.stride+this.offset,a=0;a<this.itemSize;a++)n.push(this.data.array[r+a]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}]),e}(),qs=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isSpriteMaterial=!0,r.type="SpriteMaterial",r.color=new Sr(16777215),r.map=null,r.alphaMap=null,r.rotation=0,r.sizeAttenuation=!0,r.transparent=!0,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}]),t}(Qa),Hs=new Ar,Ws=new Ar,Xs=new Ar,Ys=new or,Zs=new or,Js=new pa,Qs=new Ar,$s=new Ar,Ks=new Ar,ec=new or,nc=new or,tc=new or,rc=function(e){w(t,e);var n=k(t);function t(e){var r;if(y(this,t),(r=n.call(this)).isSprite=!0,r.type="Sprite",void 0===As){As=new yi;var a=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Ns(a,5);As.setIndex([0,1,2,0,2,3]),As.setAttribute("position",new Vs(i,3,0,!1)),As.setAttribute("uv",new Vs(i,2,3,!1))}return r.geometry=As,r.material=void 0!==e?e:new qs,r.center=new or(.5,.5),r}return _(t,[{key:"raycast",value:function(e,n){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ws.setFromMatrixScale(this.matrixWorld),Js.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Xs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ws.multiplyScalar(-Xs.z);var t,r,a=this.material.rotation;0!==a&&(r=Math.cos(a),t=Math.sin(a));var i=this.center;ac(Qs.set(-.5,-.5,0),Xs,i,Ws,t,r),ac($s.set(.5,-.5,0),Xs,i,Ws,t,r),ac(Ks.set(.5,.5,0),Xs,i,Ws,t,r),ec.set(0,0),nc.set(1,0),tc.set(1,1);var o=e.ray.intersectTriangle(Qs,$s,Ks,!1,Hs);if(null!==o||(ac($s.set(-.5,.5,0),Xs,i,Ws,t,r),nc.set(0,1),null!==(o=e.ray.intersectTriangle(Qs,Ks,$s,!1,Hs)))){var l=e.ray.origin.distanceTo(Hs);l<e.near||l>e.far||n.push({distance:l,point:Hs.clone(),uv:Za.getUV(Hs,Qs,$s,Ks,ec,nc,tc,new or),face:null,object:this})}}},{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}]),t}(Ia);function ac(e,n,t,r,a,i){Ys.subVectors(e,t).addScalar(.5).multiply(r),void 0!==a?(Zs.x=i*Ys.x-a*Ys.y,Zs.y=a*Ys.x+i*Ys.y):Zs.copy(Ys),e.copy(n),e.x+=Zs.x,e.y+=Zs.y,e.applyMatrix4(Js)}var ic=new Ar,oc=new Ar,lc=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this))._currentLevel=0,e.type="LOD",Object.defineProperties(M(e),{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),e.autoUpdate=!0,e}return _(t,[{key:"copy",value:function(e){P(S(t.prototype),"copy",this).call(this,e,!1);for(var n=e.levels,r=0,a=n.length;r<a;r++){var i=n[r];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this}},{key:"addLevel",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;n=Math.abs(n);var t,r=this.levels;for(t=0;t<r.length&&!(n<r[t].distance);t++);return r.splice(t,0,{distance:n,object:e}),this.add(e),this}},{key:"getCurrentLevel",value:function(){return this._currentLevel}},{key:"getObjectForDistance",value:function(e){var n=this.levels;if(n.length>0){var t,r;for(t=1,r=n.length;t<r&&!(e<n[t].distance);t++);return n[t-1].object}return null}},{key:"raycast",value:function(e,n){if(this.levels.length>0){ic.setFromMatrixPosition(this.matrixWorld);var t=e.ray.origin.distanceTo(ic);this.getObjectForDistance(t).raycast(e,n)}}},{key:"update",value:function(e){var n=this.levels;if(n.length>1){ic.setFromMatrixPosition(e.matrixWorld),oc.setFromMatrixPosition(this.matrixWorld);var t,r,a=ic.distanceTo(oc)/e.zoom;for(n[0].object.visible=!0,t=1,r=n.length;t<r&&a>=n[t].distance;t++)n[t-1].object.visible=!1,n[t].object.visible=!0;for(this._currentLevel=t-1;t<r;t++)n[t].object.visible=!1}}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[];for(var r=this.levels,a=0,i=r.length;a<i;a++){var o=r[a];n.object.levels.push({object:o.object.uuid,distance:o.distance})}return n}}]),t}(Ia),sc=new Ar,cc=new Cr,uc=new Cr,vc=new Ar,fc=new pa,pc=function(e){w(t,e);var n=k(t);function t(e,r){var a;return y(this,t),(a=n.call(this,e,r)).isSkinnedMesh=!0,a.type="SkinnedMesh",a.bindMode="attached",a.bindMatrix=new pa,a.bindMatrixInverse=new pa,a}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}},{key:"bind",value:function(e,n){this.skeleton=e,void 0===n&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),n=this.matrixWorld),this.bindMatrix.copy(n),this.bindMatrixInverse.copy(n).invert()}},{key:"pose",value:function(){this.skeleton.pose()}},{key:"normalizeSkinWeights",value:function(){for(var e=new Cr,n=this.geometry.attributes.skinWeight,t=0,r=n.count;t<r;t++){e.fromBufferAttribute(n,t);var a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),n.setXYZW(t,e.x,e.y,e.z,e.w)}}},{key:"updateMatrixWorld",value:function(e){P(S(t.prototype),"updateMatrixWorld",this).call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}},{key:"boneTransform",value:function(e,n){var t=this.skeleton,r=this.geometry;cc.fromBufferAttribute(r.attributes.skinIndex,e),uc.fromBufferAttribute(r.attributes.skinWeight,e),sc.copy(n).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(var a=0;a<4;a++){var i=uc.getComponent(a);if(0!==i){var o=cc.getComponent(a);fc.multiplyMatrices(t.bones[o].matrixWorld,t.boneInverses[o]),n.addScaledVector(vc.copy(sc).applyMatrix4(fc),i)}}return n.applyMatrix4(this.bindMatrixInverse)}}]),t}(Ai),mc=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isBone=!0,e.type="Bone",e}return _(t)}(Ia),dc=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3?arguments[3]:void 0,l=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0,u=arguments.length>7?arguments[7]:void 0,v=arguments.length>8&&void 0!==arguments[8]?arguments[8]:Ge,f=arguments.length>9&&void 0!==arguments[9]?arguments[9]:Ge,p=arguments.length>10?arguments[10]:void 0,m=arguments.length>11?arguments[11]:void 0;return y(this,t),(e=n.call(this,null,s,c,u,v,f,o,l,p,m)).isDataTexture=!0,e.image={data:r,width:a,height:i},e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return _(t)}(Tr),hc=new pa,gc=new pa,xc=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];y(this,e),this.uuid=Jt(),this.bones=n.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}return _(e,[{key:"init",value:function(){var e=this.bones,n=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===n.length)this.calculateInverses();else if(e.length!==n.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(var t=0,r=this.bones.length;t<r;t++)this.boneInverses.push(new pa)}}},{key:"calculateInverses",value:function(){this.boneInverses.length=0;for(var e=0,n=this.bones.length;e<n;e++){var t=new pa;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}},{key:"pose",value:function(){for(var e=0,n=this.bones.length;e<n;e++){var t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(var r=0,a=this.bones.length;r<a;r++){var i=this.bones[r];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}},{key:"update",value:function(){for(var e=this.bones,n=this.boneInverses,t=this.boneMatrices,r=this.boneTexture,a=0,i=e.length;a<i;a++){var o=e[a]?e[a].matrixWorld:gc;hc.multiplyMatrices(o,n[a]),hc.toArray(t,16*a)}null!==r&&(r.needsUpdate=!0)}},{key:"clone",value:function(){return new e(this.bones,this.boneInverses)}},{key:"computeBoneTexture",value:function(){var e=Math.sqrt(4*this.bones.length);e=nr(e),e=Math.max(e,4);var n=new Float32Array(e*e*4);n.set(this.boneMatrices);var t=new dc(n,e,e,fn,an);return t.needsUpdate=!0,this.boneMatrices=n,this.boneTexture=t,this.boneTextureSize=e,this}},{key:"getBoneByName",value:function(e){for(var n=0,t=this.bones.length;n<t;n++){var r=this.bones[n];if(r.name===e)return r}}},{key:"dispose",value:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}},{key:"fromJSON",value:function(e,n){this.uuid=e.uuid;for(var t=0,r=e.bones.length;t<r;t++){var a=e.bones[t],i=n[a];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",a),i=new mc),this.bones.push(i),this.boneInverses.push((new pa).fromArray(e.boneInverses[t]))}return this.init(),this}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;for(var n=this.bones,t=this.boneInverses,r=0,a=n.length;r<a;r++){var i=n[r];e.bones.push(i.uuid);var o=t[r];e.boneInverses.push(o.toArray())}return e}}]),e}(),yc=function(e){w(t,e);var n=k(t);function t(e,r,a){var i,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(i=n.call(this,e,r,a)).isInstancedBufferAttribute=!0,i.meshPerAttribute=o,i}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}]),t}(ni),bc=new pa,_c=new pa,wc=[],Sc=new pa,Uc=new Ai,Mc=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;y(this,t),(i=n.call(this,e,r)).isInstancedMesh=!0,i.instanceMatrix=new yc(new Float32Array(16*a),16),i.instanceColor=null,i.count=a,i.frustumCulled=!1;for(var o=0;o<a;o++)i.setMatrixAt(o,Sc);return i}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}},{key:"getColorAt",value:function(e,n){n.fromArray(this.instanceColor.array,3*e)}},{key:"getMatrixAt",value:function(e,n){n.fromArray(this.instanceMatrix.array,16*e)}},{key:"raycast",value:function(e,n){var t=this.matrixWorld,r=this.count;if(Uc.geometry=this.geometry,Uc.material=this.material,void 0!==Uc.material)for(var a=0;a<r;a++){this.getMatrixAt(a,bc),_c.multiplyMatrices(t,bc),Uc.matrixWorld=_c,Uc.raycast(e,wc);for(var i=0,o=wc.length;i<o;i++){var l=wc[i];l.instanceId=a,l.object=this,n.push(l)}wc.length=0}}},{key:"setColorAt",value:function(e,n){null===this.instanceColor&&(this.instanceColor=new yc(new Float32Array(3*this.instanceMatrix.count),3)),n.toArray(this.instanceColor.array,3*e)}},{key:"setMatrixAt",value:function(e,n){n.toArray(this.instanceMatrix.array,16*e)}},{key:"updateMorphTargets",value:function(){}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),t}(Ai),jc=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isLineBasicMaterial=!0,r.type="LineBasicMaterial",r.color=new Sr(16777215),r.linewidth=1,r.linecap="round",r.linejoin="round",r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}]),t}(Qa),kc=new Ar,Tc=new Ar,Cc=new pa,Rc=new fa,Fc=new aa,Pc=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new yi,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new jc;return y(this,t),(e=n.call(this)).isLine=!0,e.type="Line",e.geometry=r,e.material=a,e.updateMorphTargets(),e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.material=e.material,this.geometry=e.geometry,this}},{key:"computeLineDistances",value:function(){var e=this.geometry;if(null===e.index){for(var n=e.attributes.position,t=[0],r=1,a=n.count;r<a;r++)kc.fromBufferAttribute(n,r-1),Tc.fromBufferAttribute(n,r),t[r]=t[r-1],t[r]+=kc.distanceTo(Tc);e.setAttribute("lineDistance",new ui(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}},{key:"raycast",value:function(e,n){var t=this.geometry,r=this.matrixWorld,a=e.params.Line.threshold,i=t.drawRange;if(null===t.boundingSphere&&t.computeBoundingSphere(),Fc.copy(t.boundingSphere),Fc.applyMatrix4(r),Fc.radius+=a,!1!==e.ray.intersectsSphere(Fc)){Cc.copy(r).invert(),Rc.copy(e.ray).applyMatrix4(Cc);var o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,s=new Ar,c=new Ar,u=new Ar,v=new Ar,f=this.isLineSegments?2:1,p=t.index,m=t.attributes.position;if(null!==p)for(var d=Math.max(0,i.start),h=Math.min(p.count,i.start+i.count)-1;d<h;d+=f){var g=p.getX(d),x=p.getX(d+1);if(s.fromBufferAttribute(m,g),c.fromBufferAttribute(m,x),!(Rc.distanceSqToSegment(s,c,v,u)>l)){v.applyMatrix4(this.matrixWorld);var y=e.ray.origin.distanceTo(v);y<e.near||y>e.far||n.push({distance:y,point:u.clone().applyMatrix4(this.matrixWorld),index:d,face:null,faceIndex:null,object:this})}}else for(var b=Math.max(0,i.start),_=Math.min(m.count,i.start+i.count)-1;b<_;b+=f){if(s.fromBufferAttribute(m,b),c.fromBufferAttribute(m,b+1),!(Rc.distanceSqToSegment(s,c,v,u)>l)){v.applyMatrix4(this.matrixWorld);var w=e.ray.origin.distanceTo(v);w<e.near||w>e.far||n.push({distance:w,point:u.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){var t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,a=t.length;r<a;r++){var i=t[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=r}}}}}]),t}(Ia),Dc=new Ar,Ec=new Ar,zc=function(e){w(t,e);var n=k(t);function t(e,r){var a;return y(this,t),(a=n.call(this,e,r)).isLineSegments=!0,a.type="LineSegments",a}return _(t,[{key:"computeLineDistances",value:function(){var e=this.geometry;if(null===e.index){for(var n=e.attributes.position,t=[],r=0,a=n.count;r<a;r+=2)Dc.fromBufferAttribute(n,r),Ec.fromBufferAttribute(n,r+1),t[r]=0===r?0:t[r-1],t[r+1]=t[r]+Dc.distanceTo(Ec);e.setAttribute("lineDistance",new ui(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}]),t}(Pc),Lc=function(e){w(t,e);var n=k(t);function t(e,r){var a;return y(this,t),(a=n.call(this,e,r)).isLineLoop=!0,a.type="LineLoop",a}return _(t)}(Pc),Ac=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isPointsMaterial=!0,r.type="PointsMaterial",r.color=new Sr(16777215),r.map=null,r.alphaMap=null,r.size=1,r.sizeAttenuation=!0,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}]),t}(Qa),Ic=new pa,Oc=new fa,Bc=new aa,Nc=new Ar,Gc=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new yi,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ac;return y(this,t),(e=n.call(this)).isPoints=!0,e.type="Points",e.geometry=r,e.material=a,e.updateMorphTargets(),e}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.material=e.material,this.geometry=e.geometry,this}},{key:"raycast",value:function(e,n){var t=this.geometry,r=this.matrixWorld,a=e.params.Points.threshold,i=t.drawRange;if(null===t.boundingSphere&&t.computeBoundingSphere(),Bc.copy(t.boundingSphere),Bc.applyMatrix4(r),Bc.radius+=a,!1!==e.ray.intersectsSphere(Bc)){Ic.copy(r).invert(),Oc.copy(e.ray).applyMatrix4(Ic);var o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,s=t.index,c=t.attributes.position;if(null!==s)for(var u=Math.max(0,i.start),v=Math.min(s.count,i.start+i.count);u<v;u++){var f=s.getX(u);Nc.fromBufferAttribute(c,f),Vc(Nc,f,l,r,e,n,this)}else for(var p=Math.max(0,i.start),m=Math.min(c.count,i.start+i.count);p<m;p++)Nc.fromBufferAttribute(c,p),Vc(Nc,p,l,r,e,n,this)}}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){var t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,a=t.length;r<a;r++){var i=t[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=r}}}}}]),t}(Ia);function Vc(e,n,t,r,a,i,o){var l=Oc.distanceSqToPoint(e);if(l<t){var s=new Ar;Oc.closestPointToPoint(e,s),s.applyMatrix4(r);var c=a.ray.origin.distanceTo(s);if(c<a.near||c>a.far)return;i.push({distance:c,distanceToRay:Math.sqrt(l),point:s,index:n,face:null,object:o})}}var qc=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s,c,u){var v;y(this,t),(v=n.call(this,e,r,a,i,o,l,s,c,u)).isVideoTexture=!0,v.minFilter=void 0!==l?l:Xe,v.magFilter=void 0!==o?o:Xe,v.generateMipmaps=!1;var f=M(v);return"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function n(){f.needsUpdate=!0,e.requestVideoFrameCallback(n)})),v}return _(t,[{key:"clone",value:function(){return new this.constructor(this.image).copy(this)}},{key:"update",value:function(){var e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}]),t}(Tr),Hc=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;return y(this,t),(i=n.call(this,{width:e,height:r})).isFramebufferTexture=!0,i.format=a,i.magFilter=Ge,i.minFilter=Ge,i.generateMipmaps=!1,i.needsUpdate=!0,i}return _(t)}(Tr),Wc=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s,c,u,v,f,p){var m;return y(this,t),(m=n.call(this,null,l,s,c,u,v,i,o,f,p)).isCompressedTexture=!0,m.image={width:r,height:a},m.mipmaps=e,m.flipY=!1,m.generateMipmaps=!1,m}return _(t)}(Tr),Xc=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l){var s;return y(this,t),(s=n.call(this,e,r,a,o,l)).isCompressedArrayTexture=!0,s.image.depth=i,s.wrapR=Be,s}return _(t)}(Wc),Yc=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s,c,u){var v;return y(this,t),(v=n.call(this,e,r,a,i,o,l,s,c,u)).isCanvasTexture=!0,v.needsUpdate=!0,v}return _(t)}(Tr),Zc=function(){function e(){y(this,e),this.type="Curve",this.arcLengthDivisions=200}return _(e,[{key:"getPoint",value:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}},{key:"getPointAt",value:function(e,n){var t=this.getUtoTmapping(e);return this.getPoint(t,n)}},{key:"getPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,n=[],t=0;t<=e;t++)n.push(this.getPoint(t/e));return n}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,n=[],t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n}},{key:"getLength",value:function(){var e=this.getLengths();return e[e.length-1]}},{key:"getLengths",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var n,t=[],r=this.getPoint(0),a=0;t.push(0);for(var i=1;i<=e;i++)a+=(n=this.getPoint(i/e)).distanceTo(r),t.push(a),r=n;return this.cacheArcLengths=t,t}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.getLengths()}},{key:"getUtoTmapping",value:function(e,n){var t,r=this.getLengths(),a=0,i=r.length;t=n||e*r[i-1];for(var o,l=0,s=i-1;l<=s;)if((o=r[a=Math.floor(l+(s-l)/2)]-t)<0)l=a+1;else{if(!(o>0)){s=a;break}s=a-1}if(r[a=s]===t)return a/(i-1);var c=r[a];return(a+(t-c)/(r[a+1]-c))/(i-1)}},{key:"getTangent",value:function(e,n){var t=1e-4,r=e-t,a=e+t;r<0&&(r=0),a>1&&(a=1);var i=this.getPoint(r),o=this.getPoint(a),l=n||(i.isVector2?new or:new Ar);return l.copy(o).sub(i).normalize(),l}},{key:"getTangentAt",value:function(e,n){var t=this.getUtoTmapping(e);return this.getTangent(t,n)}},{key:"computeFrenetFrames",value:function(e,n){for(var t=new Ar,r=[],a=[],i=[],o=new Ar,l=new pa,s=0;s<=e;s++){var c=s/e;r[s]=this.getTangentAt(c,new Ar)}a[0]=new Ar,i[0]=new Ar;var u=Number.MAX_VALUE,v=Math.abs(r[0].x),f=Math.abs(r[0].y),p=Math.abs(r[0].z);v<=u&&(u=v,t.set(1,0,0)),f<=u&&(u=f,t.set(0,1,0)),p<=u&&t.set(0,0,1),o.crossVectors(r[0],t).normalize(),a[0].crossVectors(r[0],o),i[0].crossVectors(r[0],a[0]);for(var m=1;m<=e;m++){if(a[m]=a[m-1].clone(),i[m]=i[m-1].clone(),o.crossVectors(r[m-1],r[m]),o.length()>Number.EPSILON){o.normalize();var d=Math.acos(Qt(r[m-1].dot(r[m]),-1,1));a[m].applyMatrix4(l.makeRotationAxis(o,d))}i[m].crossVectors(r[m],a[m])}if(!0===n){var h=Math.acos(Qt(a[0].dot(a[e]),-1,1));h/=e,r[0].dot(o.crossVectors(a[0],a[e]))>0&&(h=-h);for(var g=1;g<=e;g++)a[g].applyMatrix4(l.makeRotationAxis(r[g],h*g)),i[g].crossVectors(r[g],a[g])}return{tangents:r,normals:a,binormals:i}}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}},{key:"fromJSON",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}]),e}(),Jc=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI,c=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0;return y(this,t),(e=n.call(this)).isEllipseCurve=!0,e.type="EllipseCurve",e.aX=r,e.aY=a,e.xRadius=i,e.yRadius=o,e.aStartAngle=l,e.aEndAngle=s,e.aClockwise=c,e.aRotation=u,e}return _(t,[{key:"getPoint",value:function(e,n){for(var t=n||new or,r=2*Math.PI,a=this.aEndAngle-this.aStartAngle,i=Math.abs(a)<Number.EPSILON;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(a=i?0:r),!0!==this.aClockwise||i||(a===r?a=-r:a-=r);var o=this.aStartAngle+e*a,l=this.aX+this.xRadius*Math.cos(o),s=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),v=l-this.aX,f=s-this.aY;l=v*c-f*u+this.aX,s=v*u+f*c+this.aY}return t.set(l,s)}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}]),t}(Zc),Qc=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l){var s;return y(this,t),(s=n.call(this,e,r,a,a,i,o,l)).isArcCurve=!0,s.type="ArcCurve",s}return _(t)}(Jc);function $c(){var e=0,n=0,t=0,r=0;function a(a,i,o,l){e=a,n=o,t=-3*a+3*i-2*o-l,r=2*a-2*i+o+l}return{initCatmullRom:function(e,n,t,r,i){a(n,t,i*(t-e),i*(r-n))},initNonuniformCatmullRom:function(e,n,t,r,i,o,l){var s=(n-e)/i-(t-e)/(i+o)+(t-n)/o,c=(t-n)/o-(r-n)/(o+l)+(r-t)/l;a(n,t,s*=o,c*=o)},calc:function(a){var i=a*a;return e+n*a+t*i+r*(i*a)}}}var Kc=new Ar,eu=new $c,nu=new $c,tu=new $c,ru=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"centripetal",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;return y(this,t),(e=n.call(this)).isCatmullRomCurve3=!0,e.type="CatmullRomCurve3",e.points=r,e.closed=a,e.curveType=i,e.tension=o,e}return _(t,[{key:"getPoint",value:function(e){var n,t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,a=r,i=this.points,o=i.length,l=(o-(this.closed?0:1))*e,s=Math.floor(l),c=l-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/o)+1)*o:0===c&&s===o-1&&(s=o-2,c=1),this.closed||s>0?n=i[(s-1)%o]:(Kc.subVectors(i[0],i[1]).add(i[0]),n=Kc);var u=i[s%o],v=i[(s+1)%o];if(this.closed||s+2<o?t=i[(s+2)%o]:(Kc.subVectors(i[o-1],i[o-2]).add(i[o-1]),t=Kc),"centripetal"===this.curveType||"chordal"===this.curveType){var f="chordal"===this.curveType?.5:.25,p=Math.pow(n.distanceToSquared(u),f),m=Math.pow(u.distanceToSquared(v),f),d=Math.pow(v.distanceToSquared(t),f);m<1e-4&&(m=1),p<1e-4&&(p=m),d<1e-4&&(d=m),eu.initNonuniformCatmullRom(n.x,u.x,v.x,t.x,p,m,d),nu.initNonuniformCatmullRom(n.y,u.y,v.y,t.y,p,m,d),tu.initNonuniformCatmullRom(n.z,u.z,v.z,t.z,p,m,d)}else"catmullrom"===this.curveType&&(eu.initCatmullRom(n.x,u.x,v.x,t.x,this.tension),nu.initCatmullRom(n.y,u.y,v.y,t.y,this.tension),tu.initCatmullRom(n.z,u.z,v.z,t.z,this.tension));return a.set(eu.calc(c),nu.calc(c),tu.calc(c)),a}},{key:"copy",value:function(e){P(S(t.prototype),"copy",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var a=e.points[n];this.points.push(a.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);e.points=[];for(var n=0,r=this.points.length;n<r;n++){var a=this.points[n];e.points.push(a.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}},{key:"fromJSON",value:function(e){P(S(t.prototype),"fromJSON",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var a=e.points[n];this.points.push((new Ar).fromArray(a))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}]),t}(Zc);function au(e,n,t,r,a){var i=.5*(r-n),o=.5*(a-t),l=e*e;return(2*t-2*r+i+o)*(e*l)+(-3*t+3*r-2*i-o)*l+i*e+t}function iu(e,n,t,r){return function(e,n){var t=1-e;return t*t*n}(e,n)+function(e,n){return 2*(1-e)*e*n}(e,t)+function(e,n){return e*e*n}(e,r)}function ou(e,n,t,r,a){return function(e,n){var t=1-e;return t*t*t*n}(e,n)+function(e,n){var t=1-e;return 3*t*t*e*n}(e,t)+function(e,n){return 3*(1-e)*e*e*n}(e,r)+function(e,n){return e*e*e*n}(e,a)}var lu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new or,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new or,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new or;return y(this,t),(e=n.call(this)).isCubicBezierCurve=!0,e.type="CubicBezierCurve",e.v0=r,e.v1=a,e.v2=i,e.v3=o,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or,t=n,r=this.v0,a=this.v1,i=this.v2,o=this.v3;return t.set(ou(e,r.x,a.x,i.x,o.x),ou(e,r.y,a.y,i.y,o.y)),t}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),t}(Zc),su=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ar,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Ar;return y(this,t),(e=n.call(this)).isCubicBezierCurve3=!0,e.type="CubicBezierCurve3",e.v0=r,e.v1=a,e.v2=i,e.v3=o,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,t=n,r=this.v0,a=this.v1,i=this.v2,o=this.v3;return t.set(ou(e,r.x,a.x,i.x,o.x),ou(e,r.y,a.y,i.y,o.y),ou(e,r.z,a.z,i.z,o.z)),t}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),t}(Zc),cu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new or,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or;return y(this,t),(e=n.call(this)).isLineCurve=!0,e.type="LineCurve",e.v1=r,e.v2=a,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or,t=n;return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}},{key:"getPointAt",value:function(e,n){return this.getPoint(e,n)}},{key:"getTangent",value:function(e,n){var t=n||new or;return t.copy(this.v2).sub(this.v1).normalize(),t}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),uu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar;return y(this,t),(e=n.call(this)).isLineCurve3=!0,e.type="LineCurve3",e.v1=r,e.v2=a,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,t=n;return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}},{key:"getPointAt",value:function(e,n){return this.getPoint(e,n)}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),vu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new or,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new or;return y(this,t),(e=n.call(this)).isQuadraticBezierCurve=!0,e.type="QuadraticBezierCurve",e.v0=r,e.v1=a,e.v2=i,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or,t=n,r=this.v0,a=this.v1,i=this.v2;return t.set(iu(e,r.x,a.x,i.x),iu(e,r.y,a.y,i.y)),t}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),fu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ar;return y(this,t),(e=n.call(this)).isQuadraticBezierCurve3=!0,e.type="QuadraticBezierCurve3",e.v0=r,e.v1=a,e.v2=i,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar,t=n,r=this.v0,a=this.v1,i=this.v2;return t.set(iu(e,r.x,a.x,i.x),iu(e,r.y,a.y,i.y),iu(e,r.z,a.z,i.z)),t}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),t}(Zc),pu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return y(this,t),(e=n.call(this)).isSplineCurve=!0,e.type="SplineCurve",e.points=r,e}return _(t,[{key:"getPoint",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or,t=n,r=this.points,a=(r.length-1)*e,i=Math.floor(a),o=a-i,l=r[0===i?i:i-1],s=r[i],c=r[i>r.length-2?r.length-1:i+1],u=r[i>r.length-3?r.length-1:i+2];return t.set(au(o,l.x,s.x,c.x,u.x),au(o,l.y,s.y,c.y,u.y)),t}},{key:"copy",value:function(e){P(S(t.prototype),"copy",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var a=e.points[n];this.points.push(a.clone())}return this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);e.points=[];for(var n=0,r=this.points.length;n<r;n++){var a=this.points[n];e.points.push(a.toArray())}return e}},{key:"fromJSON",value:function(e){P(S(t.prototype),"fromJSON",this).call(this,e),this.points=[];for(var n=0,r=e.points.length;n<r;n++){var a=e.points[n];this.points.push((new or).fromArray(a))}return this}}]),t}(Zc),mu=Object.freeze({__proto__:null,ArcCurve:Qc,CatmullRomCurve3:ru,CubicBezierCurve:lu,CubicBezierCurve3:su,EllipseCurve:Jc,LineCurve:cu,LineCurve3:uu,QuadraticBezierCurve:vu,QuadraticBezierCurve3:fu,SplineCurve:pu}),du=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).type="CurvePath",e.curves=[],e.autoClose=!1,e}return _(t,[{key:"add",value:function(e){this.curves.push(e)}},{key:"closePath",value:function(){var e=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);e.equals(n)||this.curves.push(new cu(n,e))}},{key:"getPoint",value:function(e,n){for(var t=e*this.getLength(),r=this.getCurveLengths(),a=0;a<r.length;){if(r[a]>=t){var i=r[a]-t,o=this.curves[a],l=o.getLength(),s=0===l?0:1-i/l;return o.getPointAt(s,n)}a++}return null}},{key:"getLength",value:function(){var e=this.getCurveLengths();return e[e.length-1]}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}},{key:"getCurveLengths",value:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],n=0,t=0,r=this.curves.length;t<r;t++)n+=this.curves[t].getLength(),e.push(n);return this.cacheLengths=e,e}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:40,n=[],t=0;t<=e;t++)n.push(this.getPoint(t/e));return this.autoClose&&n.push(n[0]),n}},{key:"getPoints",value:function(){for(var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12,t=[],r=0,a=this.curves;r<a.length;r++)for(var i=a[r],o=i.isEllipseCurve?2*n:i.isLineCurve||i.isLineCurve3?1:i.isSplineCurve?n*i.points.length:n,l=i.getPoints(o),s=0;s<l.length;s++){var c=l[s];e&&e.equals(c)||(t.push(c),e=c)}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}},{key:"copy",value:function(e){P(S(t.prototype),"copy",this).call(this,e),this.curves=[];for(var n=0,r=e.curves.length;n<r;n++){var a=e.curves[n];this.curves.push(a.clone())}return this.autoClose=e.autoClose,this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);e.autoClose=this.autoClose,e.curves=[];for(var n=0,r=this.curves.length;n<r;n++){var a=this.curves[n];e.curves.push(a.toJSON())}return e}},{key:"fromJSON",value:function(e){P(S(t.prototype),"fromJSON",this).call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var n=0,r=e.curves.length;n<r;n++){var a=e.curves[n];this.curves.push((new mu[a.type]).fromJSON(a))}return this}}]),t}(Zc),hu=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).type="Path",r.currentPoint=new or,e&&r.setFromPoints(e),r}return _(t,[{key:"setFromPoints",value:function(e){this.moveTo(e[0].x,e[0].y);for(var n=1,t=e.length;n<t;n++)this.lineTo(e[n].x,e[n].y);return this}},{key:"moveTo",value:function(e,n){return this.currentPoint.set(e,n),this}},{key:"lineTo",value:function(e,n){var t=new cu(this.currentPoint.clone(),new or(e,n));return this.curves.push(t),this.currentPoint.set(e,n),this}},{key:"quadraticCurveTo",value:function(e,n,t,r){var a=new vu(this.currentPoint.clone(),new or(e,n),new or(t,r));return this.curves.push(a),this.currentPoint.set(t,r),this}},{key:"bezierCurveTo",value:function(e,n,t,r,a,i){var o=new lu(this.currentPoint.clone(),new or(e,n),new or(t,r),new or(a,i));return this.curves.push(o),this.currentPoint.set(a,i),this}},{key:"splineThru",value:function(e){var n=[this.currentPoint.clone()].concat(e),t=new pu(n);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}},{key:"arc",value:function(e,n,t,r,a,i){var o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,n+l,t,r,a,i),this}},{key:"absarc",value:function(e,n,t,r,a,i){return this.absellipse(e,n,t,t,r,a,i),this}},{key:"ellipse",value:function(e,n,t,r,a,i,o,l){var s=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+s,n+c,t,r,a,i,o,l),this}},{key:"absellipse",value:function(e,n,t,r,a,i,o,l){var s=new Jc(e,n,t,r,a,i,o,l);if(this.curves.length>0){var c=s.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(s);var u=s.getPoint(1);return this.currentPoint.copy(u),this}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.currentPoint.copy(e.currentPoint),this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.currentPoint=this.currentPoint.toArray(),e}},{key:"fromJSON",value:function(e){return P(S(t.prototype),"fromJSON",this).call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}]),t}(du),gu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[new or(0,-.5),new or(.5,0),new or(0,.5)],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;y(this,t),(e=n.call(this)).type="LatheGeometry",e.parameters={points:r,segments:a,phiStart:i,phiLength:o},a=Math.floor(a),o=Qt(o,0,2*Math.PI);for(var l=[],s=[],c=[],u=[],v=[],f=1/a,p=new Ar,m=new or,d=new Ar,h=new Ar,g=new Ar,x=0,b=0,_=0;_<=r.length-1;_++)switch(_){case 0:x=r[_+1].x-r[_].x,b=r[_+1].y-r[_].y,d.x=1*b,d.y=-x,d.z=0*b,g.copy(d),d.normalize(),u.push(d.x,d.y,d.z);break;case r.length-1:u.push(g.x,g.y,g.z);break;default:x=r[_+1].x-r[_].x,b=r[_+1].y-r[_].y,d.x=1*b,d.y=-x,d.z=0*b,h.copy(d),d.x+=g.x,d.y+=g.y,d.z+=g.z,d.normalize(),u.push(d.x,d.y,d.z),g.copy(h)}for(var w=0;w<=a;w++)for(var S=i+w*f*o,U=Math.sin(S),M=Math.cos(S),j=0;j<=r.length-1;j++){p.x=r[j].x*U,p.y=r[j].y,p.z=r[j].x*M,s.push(p.x,p.y,p.z),m.x=w/a,m.y=j/(r.length-1),c.push(m.x,m.y);var k=u[3*j+0]*U,T=u[3*j+1],C=u[3*j+0]*M;v.push(k,T,C)}for(var R=0;R<a;R++)for(var F=0;F<r.length-1;F++){var P=F+R*r.length,D=P,E=P+r.length,z=P+r.length+1,L=P+1;l.push(D,E,L),l.push(z,L,E)}return e.setIndex(l),e.setAttribute("position",new ui(s,3)),e.setAttribute("uv",new ui(c,2)),e.setAttribute("normal",new ui(v,3)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.points,e.segments,e.phiStart,e.phiLength)}}]),t}(yi),xu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8;y(this,t);var l=new hu;return l.absarc(0,-a/2,r,1.5*Math.PI,0),l.absarc(0,a/2,r,0,.5*Math.PI),(e=n.call(this,l.getPoints(i),o)).type="CapsuleGeometry",e.parameters={radius:r,height:a,capSegments:i,radialSegments:o},e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.length,e.capSegments,e.radialSegments)}}]),t}(gu),yu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:8,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;y(this,t),(e=n.call(this)).type="CircleGeometry",e.parameters={radius:r,segments:a,thetaStart:i,thetaLength:o},a=Math.max(3,a);var l=[],s=[],c=[],u=[],v=new Ar,f=new or;s.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(var p=0,m=3;p<=a;p++,m+=3){var d=i+p/a*o;v.x=r*Math.cos(d),v.y=r*Math.sin(d),s.push(v.x,v.y,v.z),c.push(0,0,1),f.x=(s[m]/r+1)/2,f.y=(s[m+1]/r+1)/2,u.push(f.x,f.y)}for(var h=1;h<=a;h++)l.push(h,h+1,0);return e.setIndex(l),e.setAttribute("position",new ui(s,3)),e.setAttribute("normal",new ui(c,3)),e.setAttribute("uv",new ui(u,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.segments,e.thetaStart,e.thetaLength)}}]),t}(yi),bu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:2*Math.PI;y(this,t),(e=n.call(this)).type="CylinderGeometry",e.parameters={radiusTop:r,radiusBottom:a,height:i,radialSegments:o,heightSegments:l,openEnded:s,thetaStart:c,thetaLength:u};var v=M(e);o=Math.floor(o),l=Math.floor(l);var f=[],p=[],m=[],d=[],h=0,g=[],x=i/2,b=0;function _(){for(var e=new Ar,n=new Ar,t=0,s=(a-r)/i,y=0;y<=l;y++){for(var _=[],w=y/l,S=w*(a-r)+r,U=0;U<=o;U++){var M=U/o,j=M*u+c,k=Math.sin(j),T=Math.cos(j);n.x=S*k,n.y=-w*i+x,n.z=S*T,p.push(n.x,n.y,n.z),e.set(k,s,T).normalize(),m.push(e.x,e.y,e.z),d.push(M,1-w),_.push(h++)}g.push(_)}for(var C=0;C<o;C++)for(var R=0;R<l;R++){var F=g[R][C],P=g[R+1][C],D=g[R+1][C+1],E=g[R][C+1];f.push(F,P,E),f.push(P,D,E),t+=6}v.addGroup(b,t,0),b+=t}function w(e){for(var n=h,t=new or,i=new Ar,l=0,s=!0===e?r:a,g=!0===e?1:-1,y=1;y<=o;y++)p.push(0,x*g,0),m.push(0,g,0),d.push(.5,.5),h++;for(var _=h,w=0;w<=o;w++){var S=w/o*u+c,U=Math.cos(S),M=Math.sin(S);i.x=s*M,i.y=x*g,i.z=s*U,p.push(i.x,i.y,i.z),m.push(0,g,0),t.x=.5*U+.5,t.y=.5*M*g+.5,d.push(t.x,t.y),h++}for(var j=0;j<o;j++){var k=n+j,T=_+j;!0===e?f.push(T,T+1,k):f.push(T+1,T,k),l+=3}v.addGroup(b,l,!0===e?1:2),b+=l}return _(),!1===s&&(r>0&&w(!0),a>0&&w(!1)),e.setIndex(f),e.setAttribute("position",new ui(p,3)),e.setAttribute("normal",new ui(m,3)),e.setAttribute("uv",new ui(d,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}]),t}(yi),_u=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2*Math.PI;return y(this,t),(e=n.call(this,0,r,a,i,o,l,s,c)).type="ConeGeometry",e.parameters={radius:r,height:a,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:s,thetaLength:c},e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}]),t}(bu),wu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;y(this,t),(e=n.call(this)).type="PolyhedronGeometry",e.parameters={vertices:r,indices:a,radius:i,detail:o};var l=[],s=[];function c(e){for(var n=new Ar,t=new Ar,r=new Ar,i=0;i<a.length;i+=3)d(a[i+0],n),d(a[i+1],t),d(a[i+2],r),u(n,t,r,e)}function u(e,n,t,r){for(var a=r+1,i=[],o=0;o<=a;o++){i[o]=[];for(var l=e.clone().lerp(t,o/a),s=n.clone().lerp(t,o/a),c=a-o,u=0;u<=c;u++)i[o][u]=0===u&&o===a?l:l.clone().lerp(s,u/c)}for(var v=0;v<a;v++)for(var f=0;f<2*(a-v)-1;f++){var p=Math.floor(f/2);f%2===0?(m(i[v][p+1]),m(i[v+1][p]),m(i[v][p])):(m(i[v][p+1]),m(i[v+1][p+1]),m(i[v+1][p]))}}function v(e){for(var n=new Ar,t=0;t<l.length;t+=3)n.x=l[t+0],n.y=l[t+1],n.z=l[t+2],n.normalize().multiplyScalar(e),l[t+0]=n.x,l[t+1]=n.y,l[t+2]=n.z}function f(){for(var e=new Ar,n=0;n<l.length;n+=3){e.x=l[n+0],e.y=l[n+1],e.z=l[n+2];var t=x(e)/2/Math.PI+.5,r=b(e)/Math.PI+.5;s.push(t,1-r)}h(),p()}function p(){for(var e=0;e<s.length;e+=6){var n=s[e+0],t=s[e+2],r=s[e+4],a=Math.max(n,t,r),i=Math.min(n,t,r);a>.9&&i<.1&&(n<.2&&(s[e+0]+=1),t<.2&&(s[e+2]+=1),r<.2&&(s[e+4]+=1))}}function m(e){l.push(e.x,e.y,e.z)}function d(e,n){var t=3*e;n.x=r[t+0],n.y=r[t+1],n.z=r[t+2]}function h(){for(var e=new Ar,n=new Ar,t=new Ar,r=new Ar,a=new or,i=new or,o=new or,c=0,u=0;c<l.length;c+=9,u+=6){e.set(l[c+0],l[c+1],l[c+2]),n.set(l[c+3],l[c+4],l[c+5]),t.set(l[c+6],l[c+7],l[c+8]),a.set(s[u+0],s[u+1]),i.set(s[u+2],s[u+3]),o.set(s[u+4],s[u+5]),r.copy(e).add(n).add(t).divideScalar(3);var v=x(r);g(a,u+0,e,v),g(i,u+2,n,v),g(o,u+4,t,v)}}function g(e,n,t,r){r<0&&1===e.x&&(s[n]=e.x-1),0===t.x&&0===t.z&&(s[n]=r/2/Math.PI+.5)}function x(e){return Math.atan2(e.z,-e.x)}function b(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}return c(o),v(i),f(),e.setAttribute("position",new ui(l,3)),e.setAttribute("normal",new ui(l.slice(),3)),e.setAttribute("uv",new ui(s,2)),0===o?e.computeVertexNormals():e.normalizeNormals(),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.vertices,e.indices,e.radius,e.details)}}]),t}(yi),Su=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var i=(1+Math.sqrt(5))/2,o=1/i,l=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-o,-i,0,-o,i,0,o,-i,0,o,i,-o,-i,0,-o,i,0,o,-i,0,o,i,0,-i,0,-o,i,0,-o,-i,0,o,i,0,o],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];return(e=n.call(this,l,s,r,a)).type="DodecahedronGeometry",e.parameters={radius:r,detail:a},e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(wu),Uu=new Ar,Mu=new Ar,ju=new Ar,ku=new Za,Tu=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(y(this,t),(e=n.call(this)).type="EdgesGeometry",e.parameters={geometry:r,thresholdAngle:a},null!==r){for(var i=4,o=Math.pow(10,i),l=Math.cos(Yt*a),s=r.getIndex(),c=r.getAttribute("position"),u=s?s.count:c.count,v=[0,0,0],f=["a","b","c"],p=new Array(3),m={},d=[],h=0;h<u;h+=3){s?(v[0]=s.getX(h),v[1]=s.getX(h+1),v[2]=s.getX(h+2)):(v[0]=h,v[1]=h+1,v[2]=h+2);var g=ku.a,x=ku.b,b=ku.c;if(g.fromBufferAttribute(c,v[0]),x.fromBufferAttribute(c,v[1]),b.fromBufferAttribute(c,v[2]),ku.getNormal(ju),p[0]="".concat(Math.round(g.x*o),",").concat(Math.round(g.y*o),",").concat(Math.round(g.z*o)),p[1]="".concat(Math.round(x.x*o),",").concat(Math.round(x.y*o),",").concat(Math.round(x.z*o)),p[2]="".concat(Math.round(b.x*o),",").concat(Math.round(b.y*o),",").concat(Math.round(b.z*o)),p[0]!==p[1]&&p[1]!==p[2]&&p[2]!==p[0])for(var _=0;_<3;_++){var w=(_+1)%3,S=p[_],U=p[w],M=ku[f[_]],j=ku[f[w]],k="".concat(S,"_").concat(U),T="".concat(U,"_").concat(S);T in m&&m[T]?(ju.dot(m[T].normal)<=l&&(d.push(M.x,M.y,M.z),d.push(j.x,j.y,j.z)),m[T]=null):k in m||(m[k]={index0:v[_],index1:v[w],normal:ju.clone()})}}for(var C in m)if(m[C]){var R=m[C],F=R.index0,P=R.index1;Uu.fromBufferAttribute(c,F),Mu.fromBufferAttribute(c,P),d.push(Uu.x,Uu.y,Uu.z),d.push(Mu.x,Mu.y,Mu.z)}e.setAttribute("position",new ui(d,3))}return e}return _(t)}(yi),Cu=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).uuid=Jt(),r.type="Shape",r.holes=[],r}return _(t,[{key:"getPointsHoles",value:function(e){for(var n=[],t=0,r=this.holes.length;t<r;t++)n[t]=this.holes[t].getPoints(e);return n}},{key:"extractPoints",value:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}},{key:"copy",value:function(e){P(S(t.prototype),"copy",this).call(this,e),this.holes=[];for(var n=0,r=e.holes.length;n<r;n++){var a=e.holes[n];this.holes.push(a.clone())}return this}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);e.uuid=this.uuid,e.holes=[];for(var n=0,r=this.holes.length;n<r;n++){var a=this.holes[n];e.holes.push(a.toJSON())}return e}},{key:"fromJSON",value:function(e){P(S(t.prototype),"fromJSON",this).call(this,e),this.uuid=e.uuid,this.holes=[];for(var n=0,r=e.holes.length;n<r;n++){var a=e.holes[n];this.holes.push((new hu).fromJSON(a))}return this}}]),t}(hu),Ru=function(e,n){var t,r,a,i,o,l,s,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,u=n&&n.length,v=u?n[0]*c:e.length,f=Fu(e,0,v,c,!0),p=[];if(!f||f.next===f.prev)return p;if(u&&(f=Iu(e,n,f,c)),e.length>80*c){t=a=e[0],r=i=e[1];for(var m=c;m<v;m+=c)(o=e[m])<t&&(t=o),(l=e[m+1])<r&&(r=l),o>a&&(a=o),l>i&&(i=l);s=0!==(s=Math.max(a-t,i-r))?32767/s:0}return Du(f,p,c,t,r,s,0),p};function Fu(e,n,t,r,a){var i,o;if(a===function(e,n,t,r){for(var a=0,i=n,o=t-r;i<t;i+=r)a+=(e[o]-e[i])*(e[i+1]+e[o+1]),o=i;return a}(e,n,t,r)>0)for(i=n;i<t;i+=r)o=Ku(i,e[i],e[i+1],o);else for(i=t-r;i>=n;i-=r)o=Ku(i,e[i],e[i+1],o);return o&&Xu(o,o.next)&&(ev(o),o=o.next),o}function Pu(e,n){if(!e)return e;n||(n=e);var t,r=e;do{if(t=!1,r.steiner||!Xu(r,r.next)&&0!==Wu(r.prev,r,r.next))r=r.next;else{if(ev(r),(r=n=r.prev)===r.next)break;t=!0}}while(t||r!==n);return n}function Du(e,n,t,r,a,i,o){if(e){!o&&i&&function(e,n,t,r){var a=e;do{0===a.z&&(a.z=Gu(a.x,a.y,n,t,r)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next}while(a!==e);a.prevZ.nextZ=null,a.prevZ=null,function(e){var n,t,r,a,i,o,l,s,c=1;do{for(t=e,e=null,i=null,o=0;t;){for(o++,r=t,l=0,n=0;n<c&&(l++,r=r.nextZ);n++);for(s=c;l>0||s>0&&r;)0!==l&&(0===s||!r||t.z<=r.z)?(a=t,t=t.nextZ,l--):(a=r,r=r.nextZ,s--),i?i.nextZ=a:e=a,a.prevZ=i,i=a;t=r}i.nextZ=null,c*=2}while(o>1)}(a)}(e,r,a,i);for(var l,s,c=e;e.prev!==e.next;)if(l=e.prev,s=e.next,i?zu(e,r,a,i):Eu(e))n.push(l.i/t|0),n.push(e.i/t|0),n.push(s.i/t|0),ev(e),e=s.next,c=s.next;else if((e=s)===c){o?1===o?Du(e=Lu(Pu(e),n,t),n,t,r,a,i,2):2===o&&Au(e,n,t,r,a,i):Du(Pu(e),n,t,r,a,i,1);break}}}function Eu(e){var n=e.prev,t=e,r=e.next;if(Wu(n,t,r)>=0)return!1;for(var a=n.x,i=t.x,o=r.x,l=n.y,s=t.y,c=r.y,u=a<i?a<o?a:o:i<o?i:o,v=l<s?l<c?l:c:s<c?s:c,f=a>i?a>o?a:o:i>o?i:o,p=l>s?l>c?l:c:s>c?s:c,m=r.next;m!==n;){if(m.x>=u&&m.x<=f&&m.y>=v&&m.y<=p&&qu(a,l,i,s,o,c,m.x,m.y)&&Wu(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function zu(e,n,t,r){var a=e.prev,i=e,o=e.next;if(Wu(a,i,o)>=0)return!1;for(var l=a.x,s=i.x,c=o.x,u=a.y,v=i.y,f=o.y,p=l<s?l<c?l:c:s<c?s:c,m=u<v?u<f?u:f:v<f?v:f,d=l>s?l>c?l:c:s>c?s:c,h=u>v?u>f?u:f:v>f?v:f,g=Gu(p,m,n,t,r),x=Gu(d,h,n,t,r),y=e.prevZ,b=e.nextZ;y&&y.z>=g&&b&&b.z<=x;){if(y.x>=p&&y.x<=d&&y.y>=m&&y.y<=h&&y!==a&&y!==o&&qu(l,u,s,v,c,f,y.x,y.y)&&Wu(y.prev,y,y.next)>=0)return!1;if(y=y.prevZ,b.x>=p&&b.x<=d&&b.y>=m&&b.y<=h&&b!==a&&b!==o&&qu(l,u,s,v,c,f,b.x,b.y)&&Wu(b.prev,b,b.next)>=0)return!1;b=b.nextZ}for(;y&&y.z>=g;){if(y.x>=p&&y.x<=d&&y.y>=m&&y.y<=h&&y!==a&&y!==o&&qu(l,u,s,v,c,f,y.x,y.y)&&Wu(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=x;){if(b.x>=p&&b.x<=d&&b.y>=m&&b.y<=h&&b!==a&&b!==o&&qu(l,u,s,v,c,f,b.x,b.y)&&Wu(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function Lu(e,n,t){var r=e;do{var a=r.prev,i=r.next.next;!Xu(a,i)&&Yu(a,r,r.next,i)&&Qu(a,i)&&Qu(i,a)&&(n.push(a.i/t|0),n.push(r.i/t|0),n.push(i.i/t|0),ev(r),ev(r.next),r=e=i),r=r.next}while(r!==e);return Pu(r)}function Au(e,n,t,r,a,i){var o=e;do{for(var l=o.next.next;l!==o.prev;){if(o.i!==l.i&&Hu(o,l)){var s=$u(o,l);return o=Pu(o,o.next),s=Pu(s,s.next),Du(o,n,t,r,a,i,0),void Du(s,n,t,r,a,i,0)}l=l.next}o=o.next}while(o!==e)}function Iu(e,n,t,r){var a,i,o,l=[];for(a=0,i=n.length;a<i;a++)(o=Fu(e,n[a]*r,a<i-1?n[a+1]*r:e.length,r,!1))===o.next&&(o.steiner=!0),l.push(Vu(o));for(l.sort(Ou),a=0;a<l.length;a++)t=Bu(l[a],t);return t}function Ou(e,n){return e.x-n.x}function Bu(e,n){var t=function(e,n){var t,r=n,a=-1/0,i=e.x,o=e.y;do{if(o<=r.y&&o>=r.next.y&&r.next.y!==r.y){var l=r.x+(o-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(l<=i&&l>a&&(a=l,t=r.x<r.next.x?r:r.next,l===i))return t}r=r.next}while(r!==n);if(!t)return null;var s,c=t,u=t.x,v=t.y,f=1/0;r=t;do{i>=r.x&&r.x>=u&&i!==r.x&&qu(o<v?i:a,o,u,v,o<v?a:i,o,r.x,r.y)&&(s=Math.abs(o-r.y)/(i-r.x),Qu(r,e)&&(s<f||s===f&&(r.x>t.x||r.x===t.x&&Nu(t,r)))&&(t=r,f=s)),r=r.next}while(r!==c);return t}(e,n);if(!t)return n;var r=$u(t,e);return Pu(r,r.next),Pu(t,t.next)}function Nu(e,n){return Wu(e.prev,e,n.prev)<0&&Wu(n.next,e,e.next)<0}function Gu(e,n,t,r,a){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-t)*a|0)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=(n-r)*a|0)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function Vu(e){var n=e,t=e;do{(n.x<t.x||n.x===t.x&&n.y<t.y)&&(t=n),n=n.next}while(n!==e);return t}function qu(e,n,t,r,a,i,o,l){return(a-o)*(n-l)>=(e-o)*(i-l)&&(e-o)*(r-l)>=(t-o)*(n-l)&&(t-o)*(i-l)>=(a-o)*(r-l)}function Hu(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!function(e,n){var t=e;do{if(t.i!==e.i&&t.next.i!==e.i&&t.i!==n.i&&t.next.i!==n.i&&Yu(t,t.next,e,n))return!0;t=t.next}while(t!==e);return!1}(e,n)&&(Qu(e,n)&&Qu(n,e)&&function(e,n){var t=e,r=!1,a=(e.x+n.x)/2,i=(e.y+n.y)/2;do{t.y>i!==t.next.y>i&&t.next.y!==t.y&&a<(t.next.x-t.x)*(i-t.y)/(t.next.y-t.y)+t.x&&(r=!r),t=t.next}while(t!==e);return r}(e,n)&&(Wu(e.prev,e,n.prev)||Wu(e,n.prev,n))||Xu(e,n)&&Wu(e.prev,e,e.next)>0&&Wu(n.prev,n,n.next)>0)}function Wu(e,n,t){return(n.y-e.y)*(t.x-n.x)-(n.x-e.x)*(t.y-n.y)}function Xu(e,n){return e.x===n.x&&e.y===n.y}function Yu(e,n,t,r){var a=Ju(Wu(e,n,t)),i=Ju(Wu(e,n,r)),o=Ju(Wu(t,r,e)),l=Ju(Wu(t,r,n));return a!==i&&o!==l||(!(0!==a||!Zu(e,t,n))||(!(0!==i||!Zu(e,r,n))||(!(0!==o||!Zu(t,e,r))||!(0!==l||!Zu(t,n,r)))))}function Zu(e,n,t){return n.x<=Math.max(e.x,t.x)&&n.x>=Math.min(e.x,t.x)&&n.y<=Math.max(e.y,t.y)&&n.y>=Math.min(e.y,t.y)}function Ju(e){return e>0?1:e<0?-1:0}function Qu(e,n){return Wu(e.prev,e,e.next)<0?Wu(e,n,e.next)>=0&&Wu(e,e.prev,n)>=0:Wu(e,n,e.prev)<0||Wu(e,e.next,n)<0}function $u(e,n){var t=new nv(e.i,e.x,e.y),r=new nv(n.i,n.x,n.y),a=e.next,i=n.prev;return e.next=n,n.prev=e,t.next=a,a.prev=t,r.next=t,t.prev=r,i.next=r,r.prev=i,r}function Ku(e,n,t,r){var a=new nv(e,n,t);return r?(a.next=r.next,a.prev=r,r.next.prev=a,r.next=a):(a.prev=a,a.next=a),a}function ev(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function nv(e,n,t){this.i=e,this.x=n,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}var tv=function(){function e(){y(this,e)}return _(e,null,[{key:"area",value:function(e){for(var n=e.length,t=0,r=n-1,a=0;a<n;r=a++)t+=e[r].x*e[a].y-e[a].x*e[r].y;return.5*t}},{key:"isClockWise",value:function(n){return e.area(n)<0}},{key:"triangulateShape",value:function(e,n){var t=[],r=[],a=[];rv(e),av(t,e);var i=e.length;n.forEach(rv);for(var o=0;o<n.length;o++)r.push(i),i+=n[o].length,av(t,n[o]);for(var l=Ru(t,r),s=0;s<l.length;s+=3)a.push(l.slice(s,s+3));return a}}]),e}();function rv(e){var n=e.length;n>2&&e[n-1].equals(e[0])&&e.pop()}function av(e,n){for(var t=0;t<n.length;t++)e.push(n[t].x),e.push(n[t].y)}var iv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Cu([new or(.5,.5),new or(-.5,.5),new or(-.5,-.5),new or(.5,-.5)]),a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};y(this,t),(e=n.call(this)).type="ExtrudeGeometry",e.parameters={shapes:r,options:a},r=Array.isArray(r)?r:[r];for(var i=M(e),o=[],l=[],s=0,c=r.length;s<c;s++){var u=r[s];v(u)}function v(e){var n,t,r,s,c,u=[],v=void 0!==a.curveSegments?a.curveSegments:12,f=void 0!==a.steps?a.steps:1,p=void 0!==a.depth?a.depth:1,m=void 0===a.bevelEnabled||a.bevelEnabled,d=void 0!==a.bevelThickness?a.bevelThickness:.2,h=void 0!==a.bevelSize?a.bevelSize:d-.1,g=void 0!==a.bevelOffset?a.bevelOffset:0,x=void 0!==a.bevelSegments?a.bevelSegments:3,y=a.extrudePath,b=void 0!==a.UVGenerator?a.UVGenerator:ov,_=!1;y&&(n=y.getSpacedPoints(f),_=!0,m=!1,t=y.computeFrenetFrames(f,!1),r=new Ar,s=new Ar,c=new Ar),m||(x=0,d=0,h=0,g=0);var w=e.extractPoints(v),S=w.shape,U=w.holes;if(!tv.isClockWise(S)){S=S.reverse();for(var M=0,j=U.length;M<j;M++){var k=U[M];tv.isClockWise(k)&&(U[M]=k.reverse())}}for(var T=tv.triangulateShape(S,U),C=S,R=0,F=U.length;R<F;R++){var P=U[R];S=S.concat(P)}function D(e,n,t){return n||console.error("THREE.ExtrudeGeometry: vec does not exist"),n.clone().multiplyScalar(t).add(e)}var E=S.length,z=T.length;function L(e,n,t){var r,a,i,o=e.x-n.x,l=e.y-n.y,s=t.x-e.x,c=t.y-e.y,u=o*o+l*l,v=o*c-l*s;if(Math.abs(v)>Number.EPSILON){var f=Math.sqrt(u),p=Math.sqrt(s*s+c*c),m=n.x-l/f,d=n.y+o/f,h=((t.x-c/p-m)*c-(t.y+s/p-d)*s)/(o*c-l*s),g=(r=m+o*h-e.x)*r+(a=d+l*h-e.y)*a;if(g<=2)return new or(r,a);i=Math.sqrt(g/2)}else{var x=!1;o>Number.EPSILON?s>Number.EPSILON&&(x=!0):o<-Number.EPSILON?s<-Number.EPSILON&&(x=!0):Math.sign(l)===Math.sign(c)&&(x=!0),x?(r=-l,a=o,i=Math.sqrt(u)):(r=o,a=l,i=Math.sqrt(u/2))}return new or(r/i,a/i)}for(var A=[],I=0,O=C.length,B=O-1,N=I+1;I<O;I++,B++,N++)B===O&&(B=0),N===O&&(N=0),A[I]=L(C[I],C[B],C[N]);for(var G,V=[],q=A.concat(),H=0,W=U.length;H<W;H++){var X=U[H];G=[];for(var Y=0,Z=X.length,J=Z-1,Q=Y+1;Y<Z;Y++,J++,Q++)J===Z&&(J=0),Q===Z&&(Q=0),G[Y]=L(X[Y],X[J],X[Q]);V.push(G),q=q.concat(G)}for(var $=0;$<x;$++){for(var K=$/x,ee=d*Math.cos(K*Math.PI/2),ne=h*Math.sin(K*Math.PI/2)+g,te=0,re=C.length;te<re;te++){var ae=D(C[te],A[te],ne);Fe(ae.x,ae.y,-ee)}for(var ie=0,oe=U.length;ie<oe;ie++){var le=U[ie];G=V[ie];for(var se=0,ce=le.length;se<ce;se++){var ue=D(le[se],G[se],ne);Fe(ue.x,ue.y,-ee)}}}for(var ve=h+g,fe=0;fe<E;fe++){var pe=m?D(S[fe],q[fe],ve):S[fe];_?(s.copy(t.normals[0]).multiplyScalar(pe.x),r.copy(t.binormals[0]).multiplyScalar(pe.y),c.copy(n[0]).add(s).add(r),Fe(c.x,c.y,c.z)):Fe(pe.x,pe.y,0)}for(var me=1;me<=f;me++)for(var de=0;de<E;de++){var he=m?D(S[de],q[de],ve):S[de];_?(s.copy(t.normals[me]).multiplyScalar(he.x),r.copy(t.binormals[me]).multiplyScalar(he.y),c.copy(n[me]).add(s).add(r),Fe(c.x,c.y,c.z)):Fe(he.x,he.y,p/f*me)}for(var ge=x-1;ge>=0;ge--){for(var xe=ge/x,ye=d*Math.cos(xe*Math.PI/2),be=h*Math.sin(xe*Math.PI/2)+g,_e=0,we=C.length;_e<we;_e++){var Se=D(C[_e],A[_e],be);Fe(Se.x,Se.y,p+ye)}for(var Ue=0,Me=U.length;Ue<Me;Ue++){var je=U[Ue];G=V[Ue];for(var ke=0,Te=je.length;ke<Te;ke++){var Ce=D(je[ke],G[ke],be);_?Fe(Ce.x,Ce.y+n[f-1].y,n[f-1].x+ye):Fe(Ce.x,Ce.y,p+ye)}}}function Re(e,n){for(var t=e.length;--t>=0;){var r=t,a=t-1;a<0&&(a=e.length-1);for(var i=0,o=f+2*x;i<o;i++){var l=E*i,s=E*(i+1);De(n+r+l,n+a+l,n+a+s,n+r+s)}}}function Fe(e,n,t){u.push(e),u.push(n),u.push(t)}function Pe(e,n,t){Ee(e),Ee(n),Ee(t);var r=o.length/3,a=b.generateTopUV(i,o,r-3,r-2,r-1);ze(a[0]),ze(a[1]),ze(a[2])}function De(e,n,t,r){Ee(e),Ee(n),Ee(r),Ee(n),Ee(t),Ee(r);var a=o.length/3,l=b.generateSideWallUV(i,o,a-6,a-3,a-2,a-1);ze(l[0]),ze(l[1]),ze(l[3]),ze(l[1]),ze(l[2]),ze(l[3])}function Ee(e){o.push(u[3*e+0]),o.push(u[3*e+1]),o.push(u[3*e+2])}function ze(e){l.push(e.x),l.push(e.y)}!function(){var e=o.length/3;if(m){for(var n=0,t=E*n,r=0;r<z;r++){var a=T[r];Pe(a[2]+t,a[1]+t,a[0]+t)}t=E*(n=f+2*x);for(var l=0;l<z;l++){var s=T[l];Pe(s[0]+t,s[1]+t,s[2]+t)}}else{for(var c=0;c<z;c++){var u=T[c];Pe(u[2],u[1],u[0])}for(var v=0;v<z;v++){var p=T[v];Pe(p[0]+E*f,p[1]+E*f,p[2]+E*f)}}i.addGroup(e,o.length/3-e,0)}(),function(){var e=o.length/3,n=0;Re(C,n),n+=C.length;for(var t=0,r=U.length;t<r;t++){var a=U[t];Re(a,n),n+=a.length}i.addGroup(e,o.length/3-e,1)}()}return e.setAttribute("position",new ui(o,3)),e.setAttribute("uv",new ui(l,2)),e.computeVertexNormals(),e}return _(t,[{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return function(e,n,t){if(t.shapes=[],Array.isArray(e))for(var r=0,a=e.length;r<a;r++){var i=e[r];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);t.options=Object.assign({},n),void 0!==n.extrudePath&&(t.options.extrudePath=n.extrudePath.toJSON());return t}(this.parameters.shapes,this.parameters.options,e)}}],[{key:"fromJSON",value:function(e,n){for(var r=[],a=0,i=e.shapes.length;a<i;a++){var o=n[e.shapes[a]];r.push(o)}var l=e.options.extrudePath;return void 0!==l&&(e.options.extrudePath=(new mu[l.type]).fromJSON(l)),new t(r,e.options)}}]),t}(yi),ov={generateTopUV:function(e,n,t,r,a){var i=n[3*t],o=n[3*t+1],l=n[3*r],s=n[3*r+1],c=n[3*a],u=n[3*a+1];return[new or(i,o),new or(l,s),new or(c,u)]},generateSideWallUV:function(e,n,t,r,a,i){var o=n[3*t],l=n[3*t+1],s=n[3*t+2],c=n[3*r],u=n[3*r+1],v=n[3*r+2],f=n[3*a],p=n[3*a+1],m=n[3*a+2],d=n[3*i],h=n[3*i+1],g=n[3*i+2];return Math.abs(l-u)<Math.abs(o-c)?[new or(o,1-s),new or(c,1-v),new or(f,1-m),new or(d,1-g)]:[new or(l,1-s),new or(u,1-v),new or(p,1-m),new or(h,1-g)]}};var lv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var i=(1+Math.sqrt(5))/2,o=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],l=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];return(e=n.call(this,o,l,r,a)).type="IcosahedronGeometry",e.parameters={radius:r,detail:a},e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(wu),sv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],o=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];return(e=n.call(this,i,o,r,a)).type="OctahedronGeometry",e.parameters={radius:r,detail:a},e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(wu),cv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.5,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI;y(this,t),(e=n.call(this)).type="RingGeometry",e.parameters={innerRadius:r,outerRadius:a,thetaSegments:i,phiSegments:o,thetaStart:l,thetaLength:s},i=Math.max(3,i);for(var c=[],u=[],v=[],f=[],p=r,m=(a-r)/(o=Math.max(1,o)),d=new Ar,h=new or,g=0;g<=o;g++){for(var x=0;x<=i;x++){var b=l+x/i*s;d.x=p*Math.cos(b),d.y=p*Math.sin(b),u.push(d.x,d.y,d.z),v.push(0,0,1),h.x=(d.x/a+1)/2,h.y=(d.y/a+1)/2,f.push(h.x,h.y)}p+=m}for(var _=0;_<o;_++)for(var w=_*(i+1),S=0;S<i;S++){var U=S+w,M=U,j=U+i+1,k=U+i+2,T=U+1;c.push(M,j,T),c.push(j,k,T)}return e.setIndex(c),e.setAttribute("position",new ui(u,3)),e.setAttribute("normal",new ui(v,3)),e.setAttribute("uv",new ui(f,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}]),t}(yi),uv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Cu([new or(0,.5),new or(-.5,-.5),new or(.5,-.5)]),a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12;y(this,t),(e=n.call(this)).type="ShapeGeometry",e.parameters={shapes:r,curveSegments:a};var i=[],o=[],l=[],s=[],c=0,u=0;if(!1===Array.isArray(r))f(r);else for(var v=0;v<r.length;v++)f(r[v]),e.addGroup(c,u,v),c+=u,u=0;function f(e){var n=o.length/3,t=e.extractPoints(a),r=t.shape,c=t.holes;!1===tv.isClockWise(r)&&(r=r.reverse());for(var v=0,f=c.length;v<f;v++){var p=c[v];!0===tv.isClockWise(p)&&(c[v]=p.reverse())}for(var m=tv.triangulateShape(r,c),d=0,h=c.length;d<h;d++){var g=c[d];r=r.concat(g)}for(var x=0,y=r.length;x<y;x++){var b=r[x];o.push(b.x,b.y,0),l.push(0,0,1),s.push(b.x,b.y)}for(var _=0,w=m.length;_<w;_++){var S=m[_],U=S[0]+n,M=S[1]+n,j=S[2]+n;i.push(U,M,j),u+=3}}return e.setIndex(i),e.setAttribute("position",new ui(o,3)),e.setAttribute("normal",new ui(l,3)),e.setAttribute("uv",new ui(s,2)),e}return _(t,[{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return function(e,n){if(n.shapes=[],Array.isArray(e))for(var t=0,r=e.length;t<r;t++){var a=e[t];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);return n}(this.parameters.shapes,e)}}],[{key:"fromJSON",value:function(e,n){for(var r=[],a=0,i=e.shapes.length;a<i;a++){var o=n[e.shapes[a]];r.push(o)}return new t(r,e.curveSegments)}}]),t}(yi);var vv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Math.PI;y(this,t),(e=n.call(this)).type="SphereGeometry",e.parameters={radius:r,widthSegments:a,heightSegments:i,phiStart:o,phiLength:l,thetaStart:s,thetaLength:c},a=Math.max(3,Math.floor(a)),i=Math.max(2,Math.floor(i));for(var u=Math.min(s+c,Math.PI),v=0,f=[],p=new Ar,m=new Ar,d=[],h=[],g=[],x=[],b=0;b<=i;b++){var _=[],w=b/i,S=0;0==b&&0==s?S=.5/a:b==i&&u==Math.PI&&(S=-.5/a);for(var U=0;U<=a;U++){var M=U/a;p.x=-r*Math.cos(o+M*l)*Math.sin(s+w*c),p.y=r*Math.cos(s+w*c),p.z=r*Math.sin(o+M*l)*Math.sin(s+w*c),h.push(p.x,p.y,p.z),m.copy(p).normalize(),g.push(m.x,m.y,m.z),x.push(M+S,1-w),_.push(v++)}f.push(_)}for(var j=0;j<i;j++)for(var k=0;k<a;k++){var T=f[j][k+1],C=f[j][k],R=f[j+1][k],F=f[j+1][k+1];(0!==j||s>0)&&d.push(T,C,F),(j!==i-1||u<Math.PI)&&d.push(C,R,F)}return e.setIndex(d),e.setAttribute("position",new ui(h,3)),e.setAttribute("normal",new ui(g,3)),e.setAttribute("uv",new ui(x,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}]),t}(yi),fv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;y(this,t);var i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],o=[2,1,0,0,3,2,1,3,0,2,3,1];return(e=n.call(this,i,o,r,a)).type="TetrahedronGeometry",e.parameters={radius:r,detail:a},e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.detail)}}]),t}(wu),pv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:6,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI;y(this,t),(e=n.call(this)).type="TorusGeometry",e.parameters={radius:r,tube:a,radialSegments:i,tubularSegments:o,arc:l},i=Math.floor(i),o=Math.floor(o);for(var s=[],c=[],u=[],v=[],f=new Ar,p=new Ar,m=new Ar,d=0;d<=i;d++)for(var h=0;h<=o;h++){var g=h/o*l,x=d/i*Math.PI*2;p.x=(r+a*Math.cos(x))*Math.cos(g),p.y=(r+a*Math.cos(x))*Math.sin(g),p.z=a*Math.sin(x),c.push(p.x,p.y,p.z),f.x=r*Math.cos(g),f.y=r*Math.sin(g),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),v.push(h/o),v.push(d/i)}for(var b=1;b<=i;b++)for(var _=1;_<=o;_++){var w=(o+1)*b+_-1,S=(o+1)*(b-1)+_-1,U=(o+1)*(b-1)+_,M=(o+1)*b+_;s.push(w,S,M),s.push(S,U,M)}return e.setIndex(s),e.setAttribute("position",new ui(c,3)),e.setAttribute("normal",new ui(u,3)),e.setAttribute("uv",new ui(v,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}]),t}(yi),mv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:64,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:3;y(this,t),(e=n.call(this)).type="TorusKnotGeometry",e.parameters={radius:r,tube:a,tubularSegments:i,radialSegments:o,p:l,q:s},i=Math.floor(i),o=Math.floor(o);for(var c=[],u=[],v=[],f=[],p=new Ar,m=new Ar,d=new Ar,h=new Ar,g=new Ar,x=new Ar,b=new Ar,_=0;_<=i;++_){var w=_/i*l*Math.PI*2;D(w,l,s,r,d),D(w+.01,l,s,r,h),x.subVectors(h,d),b.addVectors(h,d),g.crossVectors(x,b),b.crossVectors(g,x),g.normalize(),b.normalize();for(var S=0;S<=o;++S){var U=S/o*Math.PI*2,M=-a*Math.cos(U),j=a*Math.sin(U);p.x=d.x+(M*b.x+j*g.x),p.y=d.y+(M*b.y+j*g.y),p.z=d.z+(M*b.z+j*g.z),u.push(p.x,p.y,p.z),m.subVectors(p,d).normalize(),v.push(m.x,m.y,m.z),f.push(_/i),f.push(S/o)}}for(var k=1;k<=i;k++)for(var T=1;T<=o;T++){var C=(o+1)*(k-1)+(T-1),R=(o+1)*k+(T-1),F=(o+1)*k+T,P=(o+1)*(k-1)+T;c.push(C,R,P),c.push(R,F,P)}function D(e,n,t,r,a){var i=Math.cos(e),o=Math.sin(e),l=t/n*e,s=Math.cos(l);a.x=r*(2+s)*.5*i,a.y=r*(2+s)*o*.5,a.z=r*Math.sin(l)*.5}return e.setIndex(c),e.setAttribute("position",new ui(u,3)),e.setAttribute("normal",new ui(v,3)),e.setAttribute("uv",new ui(f,2)),e}return _(t,null,[{key:"fromJSON",value:function(e){return new t(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}]),t}(yi),dv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new fu(new Ar(-1,-1,0),new Ar(-1,1,0),new Ar(1,1,0)),a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,l=arguments.length>4&&void 0!==arguments[4]&&arguments[4];y(this,t),(e=n.call(this)).type="TubeGeometry",e.parameters={path:r,tubularSegments:a,radius:i,radialSegments:o,closed:l};var s=r.computeFrenetFrames(a,l);e.tangents=s.tangents,e.normals=s.normals,e.binormals=s.binormals;var c=new Ar,u=new Ar,v=new or,f=new Ar,p=[],m=[],d=[],h=[];function g(){for(var e=0;e<a;e++)x(e);x(!1===l?a:0),_(),b()}function x(e){f=r.getPointAt(e/a,f);for(var n=s.normals[e],t=s.binormals[e],l=0;l<=o;l++){var v=l/o*Math.PI*2,d=Math.sin(v),h=-Math.cos(v);u.x=h*n.x+d*t.x,u.y=h*n.y+d*t.y,u.z=h*n.z+d*t.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+i*u.x,c.y=f.y+i*u.y,c.z=f.z+i*u.z,p.push(c.x,c.y,c.z)}}function b(){for(var e=1;e<=a;e++)for(var n=1;n<=o;n++){var t=(o+1)*(e-1)+(n-1),r=(o+1)*e+(n-1),i=(o+1)*e+n,l=(o+1)*(e-1)+n;h.push(t,r,l),h.push(r,i,l)}}function _(){for(var e=0;e<=a;e++)for(var n=0;n<=o;n++)v.x=e/a,v.y=n/o,d.push(v.x,v.y)}return g(),e.setIndex(h),e.setAttribute("position",new ui(p,3)),e.setAttribute("normal",new ui(m,3)),e.setAttribute("uv",new ui(d,2)),e}return _(t,[{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this);return e.path=this.parameters.path.toJSON(),e}}],[{key:"fromJSON",value:function(e){return new t((new mu[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}]),t}(yi),hv=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(y(this,t),(e=n.call(this)).type="WireframeGeometry",e.parameters={geometry:r},null!==r){var a=[],i=new Set,o=new Ar,l=new Ar;if(null!==r.index){var s=r.attributes.position,c=r.index,u=r.groups;0===u.length&&(u=[{start:0,count:c.count,materialIndex:0}]);for(var v=0,f=u.length;v<f;++v)for(var p=u[v],m=p.start,d=p.count,h=m,g=m+d;h<g;h+=3)for(var x=0;x<3;x++){var b=c.getX(h+x),_=c.getX(h+(x+1)%3);o.fromBufferAttribute(s,b),l.fromBufferAttribute(s,_),!0===gv(o,l,i)&&(a.push(o.x,o.y,o.z),a.push(l.x,l.y,l.z))}}else for(var w=r.attributes.position,S=0,U=w.count/3;S<U;S++)for(var M=0;M<3;M++){var j=3*S+M,k=3*S+(M+1)%3;o.fromBufferAttribute(w,j),l.fromBufferAttribute(w,k),!0===gv(o,l,i)&&(a.push(o.x,o.y,o.z),a.push(l.x,l.y,l.z))}e.setAttribute("position",new ui(a,3))}return e}return _(t)}(yi);function gv(e,n,t){var r="".concat(e.x,",").concat(e.y,",").concat(e.z,"-").concat(n.x,",").concat(n.y,",").concat(n.z),a="".concat(n.x,",").concat(n.y,",").concat(n.z,"-").concat(e.x,",").concat(e.y,",").concat(e.z);return!0!==t.has(r)&&!0!==t.has(a)&&(t.add(r),t.add(a),!0)}var xv=Object.freeze({__proto__:null,BoxGeometry:Oi,CapsuleGeometry:xu,CircleGeometry:yu,ConeGeometry:_u,CylinderGeometry:bu,DodecahedronGeometry:Su,EdgesGeometry:Tu,ExtrudeGeometry:iv,IcosahedronGeometry:lv,LatheGeometry:gu,OctahedronGeometry:sv,PlaneGeometry:io,PolyhedronGeometry:wu,RingGeometry:cv,ShapeGeometry:uv,SphereGeometry:vv,TetrahedronGeometry:fv,TorusGeometry:pv,TorusKnotGeometry:mv,TubeGeometry:dv,WireframeGeometry:hv}),yv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isShadowMaterial=!0,r.type="ShadowMaterial",r.color=new Sr(0),r.transparent=!0,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.fog=e.fog,this}}]),t}(Qa),bv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).isRawShaderMaterial=!0,r.type="RawShaderMaterial",r}return _(t)}(Vi),_v=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshStandardMaterial=!0,r.defines={STANDARD:""},r.type="MeshStandardMaterial",r.color=new Sr(16777215),r.roughness=1,r.metalness=0,r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new Sr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new or(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.roughnessMap=null,r.metalnessMap=null,r.alphaMap=null,r.envMap=null,r.envMapIntensity=1,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.flatShading=!1,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}(Qa),wv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshPhysicalMaterial=!0,r.defines={STANDARD:"",PHYSICAL:""},r.type="MeshPhysicalMaterial",r.clearcoatMap=null,r.clearcoatRoughness=0,r.clearcoatRoughnessMap=null,r.clearcoatNormalScale=new or(1,1),r.clearcoatNormalMap=null,r.ior=1.5,Object.defineProperty(M(r),"reflectivity",{get:function(){return Qt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),r.iridescenceMap=null,r.iridescenceIOR=1.3,r.iridescenceThicknessRange=[100,400],r.iridescenceThicknessMap=null,r.sheenColor=new Sr(0),r.sheenColorMap=null,r.sheenRoughness=1,r.sheenRoughnessMap=null,r.transmissionMap=null,r.thickness=0,r.thicknessMap=null,r.attenuationDistance=1/0,r.attenuationColor=new Sr(1,1,1),r.specularIntensity=1,r.specularIntensityMap=null,r.specularColor=new Sr(1,1,1),r.specularColorMap=null,r._sheen=0,r._clearcoat=0,r._iridescence=0,r._transmission=0,r.setValues(e),r}return _(t,[{key:"sheen",get:function(){return this._sheen},set:function(e){this._sheen>0!==e>0&&this.version++,this._sheen=e}},{key:"clearcoat",get:function(){return this._clearcoat},set:function(e){this._clearcoat>0!==e>0&&this.version++,this._clearcoat=e}},{key:"iridescence",get:function(){return this._iridescence},set:function(e){this._iridescence>0!==e>0&&this.version++,this._iridescence=e}},{key:"transmission",get:function(){return this._transmission},set:function(e){this._transmission>0!==e>0&&this.version++,this._transmission=e}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=g(e.iridescenceThicknessRange),this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}]),t}(_v),Sv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshPhongMaterial=!0,r.type="MeshPhongMaterial",r.color=new Sr(16777215),r.specular=new Sr(1118481),r.shininess=30,r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new Sr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new or(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=Ue,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.flatShading=!1,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}(Qa),Uv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshToonMaterial=!0,r.defines={TOON:""},r.type="MeshToonMaterial",r.color=new Sr(16777215),r.map=null,r.gradientMap=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new Sr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new or(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.alphaMap=null,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}]),t}(Qa),Mv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshNormalMaterial=!0,r.type="MeshNormalMaterial",r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new or(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.wireframe=!1,r.wireframeLinewidth=1,r.flatShading=!1,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}]),t}(Qa),jv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshLambertMaterial=!0,r.type="MeshLambertMaterial",r.color=new Sr(16777215),r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.emissive=new Sr(0),r.emissiveIntensity=1,r.emissiveMap=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new or(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=Ue,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.flatShading=!1,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}(Qa),kv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isMeshMatcapMaterial=!0,r.defines={MATCAP:""},r.type="MeshMatcapMaterial",r.color=new Sr(16777215),r.matcap=null,r.map=null,r.bumpMap=null,r.bumpScale=1,r.normalMap=null,r.normalMapType=ft,r.normalScale=new or(1,1),r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.alphaMap=null,r.flatShading=!1,r.fog=!0,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}]),t}(Qa),Tv=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).isLineDashedMaterial=!0,r.type="LineDashedMaterial",r.scale=1,r.dashSize=3,r.gapSize=1,r.setValues(e),r}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}]),t}(jc);function Cv(e,n,t){return Fv(e)?new e.constructor(e.subarray(n,void 0!==t?t:e.length)):e.slice(n,t)}function Rv(e,n,t){return!e||!t&&e.constructor===n?e:"number"===typeof n.BYTES_PER_ELEMENT?new n(e):Array.prototype.slice.call(e)}function Fv(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function Pv(e){for(var n=e.length,t=new Array(n),r=0;r!==n;++r)t[r]=r;return t.sort((function(n,t){return e[n]-e[t]})),t}function Dv(e,n,t){for(var r=e.length,a=new e.constructor(r),i=0,o=0;o!==r;++i)for(var l=t[i]*n,s=0;s!==n;++s)a[o++]=e[l+s];return a}function Ev(e,n,t,r){for(var a=1,i=e[0];void 0!==i&&void 0===i[r];)i=e[a++];if(void 0!==i){var o=i[r];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=i[r])&&(n.push(i.time),t.push.apply(t,o)),i=e[a++]}while(void 0!==i);else if(void 0!==o.toArray)do{void 0!==(o=i[r])&&(n.push(i.time),o.toArray(t,t.length)),i=e[a++]}while(void 0!==i);else do{void 0!==(o=i[r])&&(n.push(i.time),t.push(o)),i=e[a++]}while(void 0!==i)}}var zv=Object.freeze({__proto__:null,arraySlice:Cv,convertArray:Rv,isTypedArray:Fv,getKeyframeOrder:Pv,sortedArray:Dv,flattenJSON:Ev,subclip:function(e,n,t,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:30,i=e.clone();i.name=n;for(var o=[],l=0;l<i.tracks.length;++l){for(var s=i.tracks[l],c=s.getValueSize(),u=[],v=[],f=0;f<s.times.length;++f){var p=s.times[f]*a;if(!(p<t||p>=r)){u.push(s.times[f]);for(var m=0;m<c;++m)v.push(s.values[f*c+m])}}0!==u.length&&(s.times=Rv(u,s.times.constructor),s.values=Rv(v,s.values.constructor),o.push(s))}i.tracks=o;for(var d=1/0,h=0;h<i.tracks.length;++h)d>i.tracks[h].times[0]&&(d=i.tracks[h].times[0]);for(var g=0;g<i.tracks.length;++g)i.tracks[g].shift(-1*d);return i.resetDuration(),i},makeClipAdditive:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:30;r<=0&&(r=30);for(var a=t.tracks.length,i=n/r,o=function(n){var r=t.tracks[n],a=r.ValueTypeName;if("bool"===a||"string"===a)return"continue";var o=e.tracks.find((function(e){return e.name===r.name&&e.ValueTypeName===a}));if(void 0===o)return"continue";var l=0,s=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=s/3);var c=0,u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);var v=r.times.length-1,f=void 0;if(i<=r.times[0]){var p=l,m=s-l;f=Cv(r.values,p,m)}else if(i>=r.times[v]){var d=v*s+l,h=d+s-l;f=Cv(r.values,d,h)}else{var g=r.createInterpolant(),x=l,y=s-l;g.evaluate(i),f=Cv(g.resultBuffer,x,y)}"quaternion"===a&&(new Lr).fromArray(f).normalize().conjugate().toArray(f);for(var b=o.times.length,_=0;_<b;++_){var w=_*u+c;if("quaternion"===a)Lr.multiplyQuaternionsFlat(o.values,w,f,0,o.values,w);else for(var S=u-2*c,U=0;U<S;++U)o.values[w+U]-=f[U]}},l=0;l<a;++l)o(l);return e.blendMode=at,e}}),Lv=function(){function e(n,t,r,a){y(this,e),this.parameterPositions=n,this._cachedIndex=0,this.resultBuffer=void 0!==a?a:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}return _(e,[{key:"evaluate",value:function(e){var n=this.parameterPositions,t=this._cachedIndex,r=n[t],a=n[t-1];e:{n:{var i;t:{r:if(!(e<r)){for(var o=t+2;;){if(void 0===r){if(e<a)break r;return t=n.length,this._cachedIndex=t,this.copySampleValue_(t-1)}if(t===o)break;if(a=r,e<(r=n[++t]))break n}i=n.length;break t}if(e>=a)break e;var l=n[1];e<l&&(t=2,a=l);for(var s=t-2;;){if(void 0===a)return this._cachedIndex=0,this.copySampleValue_(0);if(t===s)break;if(r=a,e>=(a=n[--t-1]))break n}i=t,t=0}for(;t<i;){var c=t+i>>>1;e<n[c]?i=c:t=c+1}if(r=n[t],void 0===(a=n[t-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return t=n.length,this._cachedIndex=t,this.copySampleValue_(t-1)}this._cachedIndex=t,this.intervalChanged_(t,a,r)}return this.interpolate_(t,a,e,r)}},{key:"getSettings_",value:function(){return this.settings||this.DefaultSettings_}},{key:"copySampleValue_",value:function(e){for(var n=this.resultBuffer,t=this.sampleValues,r=this.valueSize,a=e*r,i=0;i!==r;++i)n[i]=t[a+i];return n}},{key:"interpolate_",value:function(){throw new Error("call to abstract method")}},{key:"intervalChanged_",value:function(){}}]),e}(),Av=function(e){w(t,e);var n=k(t);function t(e,r,a,i){var o;return y(this,t),(o=n.call(this,e,r,a,i))._weightPrev=-0,o._offsetPrev=-0,o._weightNext=-0,o._offsetNext=-0,o.DefaultSettings_={endingStart:et,endingEnd:et},o}return _(t,[{key:"intervalChanged_",value:function(e,n,t){var r=this.parameterPositions,a=e-2,i=e+1,o=r[a],l=r[i];if(void 0===o)switch(this.getSettings_().endingStart){case nt:a=e,o=2*n-t;break;case tt:o=n+r[a=r.length-2]-r[a+1];break;default:a=e,o=t}if(void 0===l)switch(this.getSettings_().endingEnd){case nt:i=e,l=2*t-n;break;case tt:i=1,l=t+r[1]-r[0];break;default:i=e-1,l=n}var s=.5*(t-n),c=this.valueSize;this._weightPrev=s/(n-o),this._weightNext=s/(l-t),this._offsetPrev=a*c,this._offsetNext=i*c}},{key:"interpolate_",value:function(e,n,t,r){for(var a=this.resultBuffer,i=this.sampleValues,o=this.valueSize,l=e*o,s=l-o,c=this._offsetPrev,u=this._offsetNext,v=this._weightPrev,f=this._weightNext,p=(t-n)/(r-n),m=p*p,d=m*p,h=-v*d+2*v*m-v*p,g=(1+v)*d+(-1.5-2*v)*m+(-.5+v)*p+1,x=(-1-f)*d+(1.5+f)*m+.5*p,y=f*d-f*m,b=0;b!==o;++b)a[b]=h*i[c+b]+g*i[s+b]+x*i[l+b]+y*i[u+b];return a}}]),t}(Lv),Iv=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),n.call(this,e,r,a,i)}return _(t,[{key:"interpolate_",value:function(e,n,t,r){for(var a=this.resultBuffer,i=this.sampleValues,o=this.valueSize,l=e*o,s=l-o,c=(t-n)/(r-n),u=1-c,v=0;v!==o;++v)a[v]=i[s+v]*u+i[l+v]*c;return a}}]),t}(Lv),Ov=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),n.call(this,e,r,a,i)}return _(t,[{key:"interpolate_",value:function(e){return this.copySampleValue_(e-1)}}]),t}(Lv),Bv=function(){function e(n,t,r,a){if(y(this,e),void 0===n)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n,this.times=Rv(t,this.TimeBufferType),this.values=Rv(r,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}return _(e,[{key:"InterpolantFactoryMethodDiscrete",value:function(e){return new Ov(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodLinear",value:function(e){return new Iv(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodSmooth",value:function(e){return new Av(this.times,this.values,this.getValueSize(),e)}},{key:"setInterpolation",value:function(e){var n;switch(e){case Qn:n=this.InterpolantFactoryMethodDiscrete;break;case $n:n=this.InterpolantFactoryMethodLinear;break;case Kn:n=this.InterpolantFactoryMethodSmooth}if(void 0===n){var t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=n,this}},{key:"getInterpolation",value:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Qn;case this.InterpolantFactoryMethodLinear:return $n;case this.InterpolantFactoryMethodSmooth:return Kn}}},{key:"getValueSize",value:function(){return this.values.length/this.times.length}},{key:"shift",value:function(e){if(0!==e)for(var n=this.times,t=0,r=n.length;t!==r;++t)n[t]+=e;return this}},{key:"scale",value:function(e){if(1!==e)for(var n=this.times,t=0,r=n.length;t!==r;++t)n[t]*=e;return this}},{key:"trim",value:function(e,n){for(var t=this.times,r=t.length,a=0,i=r-1;a!==r&&t[a]<e;)++a;for(;-1!==i&&t[i]>n;)--i;if(++i,0!==a||i!==r){a>=i&&(a=(i=Math.max(i,1))-1);var o=this.getValueSize();this.times=Cv(t,a,i),this.values=Cv(this.values,a*o,i*o)}return this}},{key:"validate",value:function(){var e=!0,n=this.getValueSize();n-Math.floor(n)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var t=this.times,r=this.values,a=t.length;0===a&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var i=null,o=0;o!==a;o++){var l=t[o];if("number"===typeof l&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(null!==i&&i>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,i),e=!1;break}i=l}if(void 0!==r&&Fv(r))for(var s=0,c=r.length;s!==c;++s){var u=r[s];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,u),e=!1;break}}return e}},{key:"optimize",value:function(){for(var e=Cv(this.times),n=Cv(this.values),t=this.getValueSize(),r=this.getInterpolation()===Kn,a=e.length-1,i=1,o=1;o<a;++o){var l=!1,s=e[o];if(s!==e[o+1]&&(1!==o||s!==e[0]))if(r)l=!0;else for(var c=o*t,u=c-t,v=c+t,f=0;f!==t;++f){var p=n[c+f];if(p!==n[u+f]||p!==n[v+f]){l=!0;break}}if(l){if(o!==i){e[i]=e[o];for(var m=o*t,d=i*t,h=0;h!==t;++h)n[d+h]=n[m+h]}++i}}if(a>0){e[i]=e[a];for(var g=a*t,x=i*t,y=0;y!==t;++y)n[x+y]=n[g+y];++i}return i!==e.length?(this.times=Cv(e,0,i),this.values=Cv(n,0,i*t)):(this.times=e,this.values=n),this}},{key:"clone",value:function(){var e=Cv(this.times,0),n=Cv(this.values,0),t=new(0,this.constructor)(this.name,e,n);return t.createInterpolant=this.createInterpolant,t}}],[{key:"toJSON",value:function(e){var n,t=e.constructor;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Rv(e.times,Array),values:Rv(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}}]),e}();Bv.prototype.TimeBufferType=Float32Array,Bv.prototype.ValueBufferType=Float32Array,Bv.prototype.DefaultInterpolation=$n;var Nv=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(Bv);Nv.prototype.ValueTypeName="bool",Nv.prototype.ValueBufferType=Array,Nv.prototype.DefaultInterpolation=Qn,Nv.prototype.InterpolantFactoryMethodLinear=void 0,Nv.prototype.InterpolantFactoryMethodSmooth=void 0;var Gv=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(Bv);Gv.prototype.ValueTypeName="color";var Vv=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(Bv);Vv.prototype.ValueTypeName="number";var qv=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),n.call(this,e,r,a,i)}return _(t,[{key:"interpolate_",value:function(e,n,t,r){for(var a=this.resultBuffer,i=this.sampleValues,o=this.valueSize,l=(t-n)/(r-n),s=e*o,c=s+o;s!==c;s+=4)Lr.slerpFlat(a,0,i,s-o,i,s,l);return a}}]),t}(Lv),Hv=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t,[{key:"InterpolantFactoryMethodLinear",value:function(e){return new qv(this.times,this.values,this.getValueSize(),e)}}]),t}(Bv);Hv.prototype.ValueTypeName="quaternion",Hv.prototype.DefaultInterpolation=$n,Hv.prototype.InterpolantFactoryMethodSmooth=void 0;var Wv=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(Bv);Wv.prototype.ValueTypeName="string",Wv.prototype.ValueBufferType=Array,Wv.prototype.DefaultInterpolation=Qn,Wv.prototype.InterpolantFactoryMethodLinear=void 0,Wv.prototype.InterpolantFactoryMethodSmooth=void 0;var Xv=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(Bv);Xv.prototype.ValueTypeName="vector";var Yv=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=arguments.length>2?arguments[2]:void 0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:rt;y(this,e),this.name=n,this.tracks=r,this.duration=t,this.blendMode=a,this.uuid=Jt(),this.duration<0&&this.resetDuration()}return _(e,[{key:"resetDuration",value:function(){for(var e=0,n=0,t=this.tracks.length;n!==t;++n){var r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}},{key:"trim",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}},{key:"validate",value:function(){for(var e=!0,n=0;n<this.tracks.length;n++)e=e&&this.tracks[n].validate();return e}},{key:"optimize",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},{key:"clone",value:function(){for(var e=[],n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}},{key:"toJSON",value:function(){return this.constructor.toJSON(this)}}],[{key:"parse",value:function(e){for(var n=[],t=e.tracks,r=1/(e.fps||1),a=0,i=t.length;a!==i;++a)n.push(Zv(t[a]).scale(r));var o=new this(e.name,e.duration,n,e.blendMode);return o.uuid=e.uuid,o}},{key:"toJSON",value:function(e){for(var n=[],t=e.tracks,r={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode},a=0,i=t.length;a!==i;++a)n.push(Bv.toJSON(t[a]));return r}},{key:"CreateFromMorphTargetSequence",value:function(e,n,t,r){for(var a=n.length,i=[],o=0;o<a;o++){var l=[],s=[];l.push((o+a-1)%a,o,(o+1)%a),s.push(0,1,0);var c=Pv(l);l=Dv(l,1,c),s=Dv(s,1,c),r||0!==l[0]||(l.push(a),s.push(s[0])),i.push(new Vv(".morphTargetInfluences["+n[o].name+"]",l,s).scale(1/t))}return new this(e,-1,i)}},{key:"findByName",value:function(e,n){var t=e;if(!Array.isArray(e)){var r=e;t=r.geometry&&r.geometry.animations||r.animations}for(var a=0;a<t.length;a++)if(t[a].name===n)return t[a];return null}},{key:"CreateClipsFromMorphTargetSequences",value:function(e,n,t){for(var r={},a=/^([\w-]*?)([\d]+)$/,i=0,o=e.length;i<o;i++){var l=e[i],s=l.name.match(a);if(s&&s.length>1){var c=s[1],u=r[c];u||(r[c]=u=[]),u.push(l)}}var v=[];for(var f in r)v.push(this.CreateFromMorphTargetSequence(f,r[f],n,t));return v}},{key:"parseAnimation",value:function(e,n){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var t=function(e,n,t,r,a){if(0!==t.length){var i=[],o=[];Ev(t,i,o,r),0!==i.length&&a.push(new e(n,i,o))}},r=[],a=e.name||"default",i=e.fps||30,o=e.blendMode,l=e.length||-1,s=e.hierarchy||[],c=0;c<s.length;c++){var u=s[c].keys;if(u&&0!==u.length)if(u[0].morphTargets){var v={},f=void 0;for(f=0;f<u.length;f++)if(u[f].morphTargets)for(var p=0;p<u[f].morphTargets.length;p++)v[u[f].morphTargets[p]]=-1;for(var m in v){for(var d=[],h=[],g=0;g!==u[f].morphTargets.length;++g){var x=u[f];d.push(x.time),h.push(x.morphTarget===m?1:0)}r.push(new Vv(".morphTargetInfluence["+m+"]",d,h))}l=v.length*i}else{var y=".bones["+n[c].name+"]";t(Xv,y+".position",u,"pos",r),t(Hv,y+".quaternion",u,"rot",r),t(Xv,y+".scale",u,"scl",r)}}return 0===r.length?null:new this(a,l,r,o)}}]),e}();function Zv(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var n=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Vv;case"vector":case"vector2":case"vector3":case"vector4":return Xv;case"color":return Gv;case"quaternion":return Hv;case"bool":case"boolean":return Nv;case"string":return Wv}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){var t=[],r=[];Ev(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0!==n.parse?n.parse(e):new n(e.name,e.times,e.values,e.interpolation)}var Jv,Qv={enabled:!1,files:{},add:function(e,n){!1!==this.enabled&&(this.files[e]=n)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},$v=_((function e(n,t,r){y(this,e);var a=this,i=!1,o=0,l=0,s=void 0,c=[];this.onStart=void 0,this.onLoad=n,this.onProgress=t,this.onError=r,this.itemStart=function(e){l++,!1===i&&void 0!==a.onStart&&a.onStart(e,o,l),i=!0},this.itemEnd=function(e){o++,void 0!==a.onProgress&&a.onProgress(e,o,l),o===l&&(i=!1,void 0!==a.onLoad&&a.onLoad())},this.itemError=function(e){void 0!==a.onError&&a.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,n){return c.push(e,n),this},this.removeHandler=function(e){var n=c.indexOf(e);return-1!==n&&c.splice(n,2),this},this.getHandler=function(e){for(var n=0,t=c.length;n<t;n+=2){var r=c[n],a=c[n+1];if(r.global&&(r.lastIndex=0),r.test(e))return a}return null}})),Kv=new $v,ef=function(){function e(n){y(this,e),this.manager=void 0!==n?n:Kv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}return _(e,[{key:"load",value:function(){}},{key:"loadAsync",value:function(e,n){var t=this;return new Promise((function(r,a){t.load(e,r,n,a)}))}},{key:"parse",value:function(){}},{key:"setCrossOrigin",value:function(e){return this.crossOrigin=e,this}},{key:"setWithCredentials",value:function(e){return this.withCredentials=e,this}},{key:"setPath",value:function(e){return this.path=e,this}},{key:"setResourcePath",value:function(e){return this.resourcePath=e,this}},{key:"setRequestHeader",value:function(e){return this.requestHeader=e,this}}]),e}(),nf={},tf=function(e){w(t,e);var n=k(t);function t(e,r){var a;return y(this,t),(a=n.call(this,e)).response=r,a}return _(t)}(T(Error)),rf=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this;void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=Qv.get(e);if(void 0!==i)return this.manager.itemStart(e),setTimeout((function(){n&&n(i),a.manager.itemEnd(e)}),0),i;if(void 0===nf[e]){nf[e]=[],nf[e].push({onLoad:n,onProgress:t,onError:r});var o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,s=this.responseType;fetch(o).then((function(n){if(200===n.status||0===n.status){if(0===n.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"===typeof ReadableStream||void 0===n.body||void 0===n.body.getReader)return n;var t=nf[e],r=n.body.getReader(),a=n.headers.get("Content-Length"),i=a?parseInt(a):0,o=0!==i,l=0,s=new ReadableStream({start:function(e){!function n(){r.read().then((function(r){var a=r.done,s=r.value;if(a)e.close();else{l+=s.byteLength;for(var c=new ProgressEvent("progress",{lengthComputable:o,loaded:l,total:i}),u=0,v=t.length;u<v;u++){var f=t[u];f.onProgress&&f.onProgress(c)}e.enqueue(s),n()}}))}()}});return new Response(s)}throw new tf('fetch for "'.concat(n.url,'" responded with ').concat(n.status,": ").concat(n.statusText),n)})).then((function(e){switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((function(e){return(new DOMParser).parseFromString(e,l)}));case"json":return e.json();default:if(void 0===l)return e.text();var n=/charset="?([^;"\s]*)"?/i.exec(l),t=n&&n[1]?n[1].toLowerCase():void 0,r=new TextDecoder(t);return e.arrayBuffer().then((function(e){return r.decode(e)}))}})).then((function(n){Qv.add(e,n);var t=nf[e];delete nf[e];for(var r=0,a=t.length;r<a;r++){var i=t[r];i.onLoad&&i.onLoad(n)}})).catch((function(n){var t=nf[e];if(void 0===t)throw a.manager.itemError(e),n;delete nf[e];for(var r=0,i=t.length;r<i;r++){var o=t[r];o.onError&&o.onError(n)}a.manager.itemError(e)})).finally((function(){a.manager.itemEnd(e)})),this.manager.itemStart(e)}else nf[e].push({onLoad:n,onProgress:t,onError:r})}},{key:"setResponseType",value:function(e){return this.responseType=e,this}},{key:"setMimeType",value:function(e){return this.mimeType=e,this}}]),t}(ef),af=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=new rf(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(function(t){try{n(a.parse(JSON.parse(t)))}catch(i){r?r(i):console.error(i),a.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e){for(var n=[],t=0;t<e.length;t++){var r=Yv.parse(e[t]);n.push(r)}return n}}]),t}(ef),of=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=[],o=new Wc,l=new rf(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(a.withCredentials);var s=0;function c(c){l.load(e[c],(function(e){var t=a.parse(e,!0);i[c]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps},6===(s+=1)&&(1===t.mipmapCount&&(o.minFilter=Xe),o.image=i,o.format=t.format,o.needsUpdate=!0,n&&n(o))}),t,r)}if(Array.isArray(e))for(var u=0,v=e.length;u<v;++u)c(u);else l.load(e,(function(e){var t=a.parse(e,!0);if(t.isCubemap){for(var r=t.mipmaps.length/t.mipmapCount,l=0;l<r;l++){i[l]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)i[l].mipmaps.push(t.mipmaps[l*t.mipmapCount+s]),i[l].format=t.format,i[l].width=t.width,i[l].height=t.height}o.image=i}else o.image.width=t.width,o.image.height=t.height,o.mipmaps=t.mipmaps;1===t.mipmapCount&&(o.minFilter=Xe),o.format=t.format,o.needsUpdate=!0,n&&n(o)}),t,r);return o}}]),t}(ef),lf=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var a=this,i=Qv.get(e);if(void 0!==i)return a.manager.itemStart(e),setTimeout((function(){n&&n(i),a.manager.itemEnd(e)}),0),i;var o=vr("img");function l(){c(),Qv.add(e,this),n&&n(this),a.manager.itemEnd(e)}function s(n){c(),r&&r(n),a.manager.itemError(e),a.manager.itemEnd(e)}function c(){o.removeEventListener("load",l,!1),o.removeEventListener("error",s,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",s,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),a.manager.itemStart(e),o.src=e,o}}]),t}(ef),sf=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=new Yi,i=new lf(this.manager);i.setCrossOrigin(this.crossOrigin),i.setPath(this.path);var o=0;function l(t){i.load(e[t],(function(e){a.images[t]=e,6===++o&&(a.needsUpdate=!0,n&&n(a))}),void 0,r)}for(var s=0;s<e.length;++s)l(s);return a}}]),t}(ef),cf=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=new dc,o=new rf(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(a.withCredentials),o.load(e,(function(e){var t=a.parse(e);t&&(void 0!==t.image?i.image=t.image:void 0!==t.data&&(i.image.width=t.width,i.image.height=t.height,i.image.data=t.data),i.wrapS=void 0!==t.wrapS?t.wrapS:Be,i.wrapT=void 0!==t.wrapT?t.wrapT:Be,i.magFilter=void 0!==t.magFilter?t.magFilter:Xe,i.minFilter=void 0!==t.minFilter?t.minFilter:Xe,i.anisotropy=void 0!==t.anisotropy?t.anisotropy:1,void 0!==t.encoding&&(i.encoding=t.encoding),void 0!==t.flipY&&(i.flipY=t.flipY),void 0!==t.format&&(i.format=t.format),void 0!==t.type&&(i.type=t.type),void 0!==t.mipmaps&&(i.mipmaps=t.mipmaps,i.minFilter=Je),1===t.mipmapCount&&(i.minFilter=Xe),void 0!==t.generateMipmaps&&(i.generateMipmaps=t.generateMipmaps),i.needsUpdate=!0,n&&n(i,t))}),t,r),i}}]),t}(ef),uf=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=new Tr,i=new lf(this.manager);return i.setCrossOrigin(this.crossOrigin),i.setPath(this.path),i.load(e,(function(e){a.image=e,a.needsUpdate=!0,void 0!==n&&n(a)}),t,r),a}}]),t}(ef),vf=function(e){w(t,e);var n=k(t);function t(e){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return y(this,t),(r=n.call(this)).isLight=!0,r.type="Light",r.color=new Sr(e),r.intensity=a,r}return _(t,[{key:"dispose",value:function(){}},{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.color.copy(e.color),this.intensity=e.intensity,this}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,void 0!==this.groundColor&&(n.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(n.object.distance=this.distance),void 0!==this.angle&&(n.object.angle=this.angle),void 0!==this.decay&&(n.object.decay=this.decay),void 0!==this.penumbra&&(n.object.penumbra=this.penumbra),void 0!==this.shadow&&(n.object.shadow=this.shadow.toJSON()),n}}]),t}(Ia),ff=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;return y(this,t),(i=n.call(this,e,a)).isHemisphereLight=!0,i.type="HemisphereLight",i.position.copy(Ia.DefaultUp),i.updateMatrix(),i.groundColor=new Sr(r),i}return _(t,[{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.groundColor.copy(e.groundColor),this}}]),t}(vf),pf=new pa,mf=new Ar,df=new Ar,hf=function(){function e(n){y(this,e),this.camera=n,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new or(512,512),this.map=null,this.mapPass=null,this.matrix=new pa,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new to,this._frameExtents=new or(1,1),this._viewportCount=1,this._viewports=[new Cr(0,0,1,1)]}return _(e,[{key:"getViewportCount",value:function(){return this._viewportCount}},{key:"getFrustum",value:function(){return this._frustum}},{key:"updateMatrices",value:function(e){var n=this.camera,t=this.matrix;mf.setFromMatrixPosition(e.matrixWorld),n.position.copy(mf),df.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(df),n.updateMatrixWorld(),pf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pf),t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(pf)}},{key:"getViewport",value:function(e){return this._viewports[e]}},{key:"getFrameExtents",value:function(){return this._frameExtents}},{key:"dispose",value:function(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}},{key:"copy",value:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}]),e}(),gf=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this,new Hi(50,1,.5,500))).isSpotLightShadow=!0,e.focus=1,e}return _(t,[{key:"updateMatrices",value:function(e){var n=this.camera,r=2*Zt*e.angle*this.focus,a=this.mapSize.width/this.mapSize.height,i=e.distance||n.far;r===n.fov&&a===n.aspect&&i===n.far||(n.fov=r,n.aspect=a,n.far=i,n.updateProjectionMatrix()),P(S(t.prototype),"updateMatrices",this).call(this,e)}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.focus=e.focus,this}}]),t}(hf),xf=function(e){w(t,e);var n=k(t);function t(e,r){var a,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Math.PI/3,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;return y(this,t),(a=n.call(this,e,r)).isSpotLight=!0,a.type="SpotLight",a.position.copy(Ia.DefaultUp),a.updateMatrix(),a.target=new Ia,a.distance=i,a.angle=o,a.penumbra=l,a.decay=s,a.map=null,a.shadow=new gf,a}return _(t,[{key:"power",get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),t}(vf),yf=new pa,bf=new Ar,_f=new Ar,wf=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this,new Hi(90,1,.5,500))).isPointLightShadow=!0,e._frameExtents=new or(4,2),e._viewportCount=6,e._viewports=[new Cr(2,1,1,1),new Cr(0,1,1,1),new Cr(3,1,1,1),new Cr(1,1,1,1),new Cr(3,0,1,1),new Cr(1,0,1,1)],e._cubeDirections=[new Ar(1,0,0),new Ar(-1,0,0),new Ar(0,0,1),new Ar(0,0,-1),new Ar(0,1,0),new Ar(0,-1,0)],e._cubeUps=[new Ar(0,1,0),new Ar(0,1,0),new Ar(0,1,0),new Ar(0,1,0),new Ar(0,0,1),new Ar(0,0,-1)],e}return _(t,[{key:"updateMatrices",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.camera,r=this.matrix,a=e.distance||t.far;a!==t.far&&(t.far=a,t.updateProjectionMatrix()),bf.setFromMatrixPosition(e.matrixWorld),t.position.copy(bf),_f.copy(t.position),_f.add(this._cubeDirections[n]),t.up.copy(this._cubeUps[n]),t.lookAt(_f),t.updateMatrixWorld(),r.makeTranslation(-bf.x,-bf.y,-bf.z),yf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yf)}}]),t}(hf),Sf=function(e){w(t,e);var n=k(t);function t(e,r){var a,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return y(this,t),(a=n.call(this,e,r)).isPointLight=!0,a.type="PointLight",a.distance=i,a.decay=o,a.shadow=new wf,a}return _(t,[{key:"power",get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}]),t}(vf),Uf=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this,new ho(-5,5,5,-5,.5,500))).isDirectionalLightShadow=!0,e}return _(t)}(hf),Mf=function(e){w(t,e);var n=k(t);function t(e,r){var a;return y(this,t),(a=n.call(this,e,r)).isDirectionalLight=!0,a.type="DirectionalLight",a.position.copy(Ia.DefaultUp),a.updateMatrix(),a.target=new Ia,a.shadow=new Uf,a}return _(t,[{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),t}(vf),jf=function(e){w(t,e);var n=k(t);function t(e,r){var a;return y(this,t),(a=n.call(this,e,r)).isAmbientLight=!0,a.type="AmbientLight",a}return _(t)}(vf),kf=function(e){w(t,e);var n=k(t);function t(e,r){var a,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;return y(this,t),(a=n.call(this,e,r)).isRectAreaLight=!0,a.type="RectAreaLight",a.width=i,a.height=o,a}return _(t,[{key:"power",get:function(){return this.intensity*this.width*this.height*Math.PI},set:function(e){this.intensity=e/(this.width*this.height*Math.PI)}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.width=e.width,this.height=e.height,this}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return n.object.width=this.width,n.object.height=this.height,n}}]),t}(vf),Tf=function(){function e(){y(this,e),this.isSphericalHarmonics3=!0,this.coefficients=[];for(var n=0;n<9;n++)this.coefficients.push(new Ar)}return _(e,[{key:"set",value:function(e){for(var n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}},{key:"zero",value:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}},{key:"getAt",value:function(e,n){var t=e.x,r=e.y,a=e.z,i=this.coefficients;return n.copy(i[0]).multiplyScalar(.282095),n.addScaledVector(i[1],.488603*r),n.addScaledVector(i[2],.488603*a),n.addScaledVector(i[3],.488603*t),n.addScaledVector(i[4],t*r*1.092548),n.addScaledVector(i[5],r*a*1.092548),n.addScaledVector(i[6],.315392*(3*a*a-1)),n.addScaledVector(i[7],t*a*1.092548),n.addScaledVector(i[8],.546274*(t*t-r*r)),n}},{key:"getIrradianceAt",value:function(e,n){var t=e.x,r=e.y,a=e.z,i=this.coefficients;return n.copy(i[0]).multiplyScalar(.886227),n.addScaledVector(i[1],1.023328*r),n.addScaledVector(i[2],1.023328*a),n.addScaledVector(i[3],1.023328*t),n.addScaledVector(i[4],.858086*t*r),n.addScaledVector(i[5],.858086*r*a),n.addScaledVector(i[6],.743125*a*a-.247708),n.addScaledVector(i[7],.858086*t*a),n.addScaledVector(i[8],.429043*(t*t-r*r)),n}},{key:"add",value:function(e){for(var n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}},{key:"addScaledSH",value:function(e,n){for(var t=0;t<9;t++)this.coefficients[t].addScaledVector(e.coefficients[t],n);return this}},{key:"scale",value:function(e){for(var n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}},{key:"lerp",value:function(e,n){for(var t=0;t<9;t++)this.coefficients[t].lerp(e.coefficients[t],n);return this}},{key:"equals",value:function(e){for(var n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}},{key:"copy",value:function(e){return this.set(e.coefficients)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"fromArray",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.coefficients,r=0;r<9;r++)t[r].fromArray(e,n+3*r);return this}},{key:"toArray",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=this.coefficients,r=0;r<9;r++)t[r].toArray(e,n+3*r);return e}}],[{key:"getBasisAt",value:function(e,n){var t=e.x,r=e.y,a=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*a,n[3]=.488603*t,n[4]=1.092548*t*r,n[5]=1.092548*r*a,n[6]=.315392*(3*a*a-1),n[7]=1.092548*t*a,n[8]=.546274*(t*t-r*r)}}]),e}(),Cf=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Tf,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return y(this,t),(e=n.call(this,void 0,a)).isLightProbe=!0,e.sh=r,e}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.sh.copy(e.sh),this}},{key:"fromJSON",value:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return n.object.sh=this.sh.toArray(),n}}]),t}(vf),Rf=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).textures={},r}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=new rf(a.manager);i.setPath(a.path),i.setRequestHeader(a.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(t){try{n(a.parse(JSON.parse(t)))}catch(i){r?r(i):console.error(i),a.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e){var n=this.textures;function r(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}var a=t.createMaterialFromType(e.type);if(void 0!==e.uuid&&(a.uuid=e.uuid),void 0!==e.name&&(a.name=e.name),void 0!==e.color&&void 0!==a.color&&a.color.setHex(e.color),void 0!==e.roughness&&(a.roughness=e.roughness),void 0!==e.metalness&&(a.metalness=e.metalness),void 0!==e.sheen&&(a.sheen=e.sheen),void 0!==e.sheenColor&&(a.sheenColor=(new Sr).setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(a.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==a.emissive&&a.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==a.specular&&a.specular.setHex(e.specular),void 0!==e.specularIntensity&&(a.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==a.specularColor&&a.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(a.shininess=e.shininess),void 0!==e.clearcoat&&(a.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(a.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.iridescence&&(a.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(a.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(a.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(a.transmission=e.transmission),void 0!==e.thickness&&(a.thickness=e.thickness),void 0!==e.attenuationDistance&&(a.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==a.attenuationColor&&a.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(a.fog=e.fog),void 0!==e.flatShading&&(a.flatShading=e.flatShading),void 0!==e.blending&&(a.blending=e.blending),void 0!==e.combine&&(a.combine=e.combine),void 0!==e.side&&(a.side=e.side),void 0!==e.shadowSide&&(a.shadowSide=e.shadowSide),void 0!==e.opacity&&(a.opacity=e.opacity),void 0!==e.transparent&&(a.transparent=e.transparent),void 0!==e.alphaTest&&(a.alphaTest=e.alphaTest),void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(a.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(a.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(a.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(a.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(a.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(a.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(a.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(a.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(a.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(a.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(a.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(a.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(a.rotation=e.rotation),1!==e.linewidth&&(a.linewidth=e.linewidth),void 0!==e.dashSize&&(a.dashSize=e.dashSize),void 0!==e.gapSize&&(a.gapSize=e.gapSize),void 0!==e.scale&&(a.scale=e.scale),void 0!==e.polygonOffset&&(a.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(a.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(a.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(a.dithering=e.dithering),void 0!==e.alphaToCoverage&&(a.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(a.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.toneMapped&&(a.toneMapped=e.toneMapped),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.vertexColors&&("number"===typeof e.vertexColors?a.vertexColors=e.vertexColors>0:a.vertexColors=e.vertexColors),void 0!==e.uniforms)for(var i in e.uniforms){var o=e.uniforms[i];switch(a.uniforms[i]={},o.type){case"t":a.uniforms[i].value=r(o.value);break;case"c":a.uniforms[i].value=(new Sr).setHex(o.value);break;case"v2":a.uniforms[i].value=(new or).fromArray(o.value);break;case"v3":a.uniforms[i].value=(new Ar).fromArray(o.value);break;case"v4":a.uniforms[i].value=(new Cr).fromArray(o.value);break;case"m3":a.uniforms[i].value=(new lr).fromArray(o.value);break;case"m4":a.uniforms[i].value=(new pa).fromArray(o.value);break;default:a.uniforms[i].value=o.value}}if(void 0!==e.defines&&(a.defines=e.defines),void 0!==e.vertexShader&&(a.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(a.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(a.glslVersion=e.glslVersion),void 0!==e.extensions)for(var l in e.extensions)a.extensions[l]=e.extensions[l];if(void 0!==e.size&&(a.size=e.size),void 0!==e.sizeAttenuation&&(a.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(a.map=r(e.map)),void 0!==e.matcap&&(a.matcap=r(e.matcap)),void 0!==e.alphaMap&&(a.alphaMap=r(e.alphaMap)),void 0!==e.bumpMap&&(a.bumpMap=r(e.bumpMap)),void 0!==e.bumpScale&&(a.bumpScale=e.bumpScale),void 0!==e.normalMap&&(a.normalMap=r(e.normalMap)),void 0!==e.normalMapType&&(a.normalMapType=e.normalMapType),void 0!==e.normalScale){var s=e.normalScale;!1===Array.isArray(s)&&(s=[s,s]),a.normalScale=(new or).fromArray(s)}return void 0!==e.displacementMap&&(a.displacementMap=r(e.displacementMap)),void 0!==e.displacementScale&&(a.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(a.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(a.roughnessMap=r(e.roughnessMap)),void 0!==e.metalnessMap&&(a.metalnessMap=r(e.metalnessMap)),void 0!==e.emissiveMap&&(a.emissiveMap=r(e.emissiveMap)),void 0!==e.emissiveIntensity&&(a.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(a.specularMap=r(e.specularMap)),void 0!==e.specularIntensityMap&&(a.specularIntensityMap=r(e.specularIntensityMap)),void 0!==e.specularColorMap&&(a.specularColorMap=r(e.specularColorMap)),void 0!==e.envMap&&(a.envMap=r(e.envMap)),void 0!==e.envMapIntensity&&(a.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(a.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(a.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(a.lightMap=r(e.lightMap)),void 0!==e.lightMapIntensity&&(a.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(a.aoMap=r(e.aoMap)),void 0!==e.aoMapIntensity&&(a.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(a.gradientMap=r(e.gradientMap)),void 0!==e.clearcoatMap&&(a.clearcoatMap=r(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap=r(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(a.clearcoatNormalMap=r(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(a.clearcoatNormalScale=(new or).fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(a.iridescenceMap=r(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(a.iridescenceThicknessMap=r(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(a.transmissionMap=r(e.transmissionMap)),void 0!==e.thicknessMap&&(a.thicknessMap=r(e.thicknessMap)),void 0!==e.sheenColorMap&&(a.sheenColorMap=r(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(a.sheenRoughnessMap=r(e.sheenRoughnessMap)),a}},{key:"setTextures",value:function(e){return this.textures=e,this}}],[{key:"createMaterialFromType",value:function(e){return new{ShadowMaterial:yv,SpriteMaterial:qs,RawShaderMaterial:bv,ShaderMaterial:Vi,PointsMaterial:Ac,MeshPhysicalMaterial:wv,MeshStandardMaterial:_v,MeshPhongMaterial:Sv,MeshToonMaterial:Uv,MeshNormalMaterial:Mv,MeshLambertMaterial:jv,MeshDepthMaterial:bs,MeshDistanceMaterial:_s,MeshBasicMaterial:$a,MeshMatcapMaterial:kv,LineDashedMaterial:Tv,LineBasicMaterial:jc,Material:Qa}[e]}}]),t}(ef),Ff=function(){function e(){y(this,e)}return _(e,null,[{key:"decodeText",value:function(e){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(e);for(var n="",t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);try{return decodeURIComponent(escape(n))}catch(a){return n}}},{key:"extractUrlBase",value:function(e){var n=e.lastIndexOf("/");return-1===n?"./":e.slice(0,n+1)}},{key:"resolveURL",value:function(e,n){return"string"!==typeof e||""===e?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}}]),e}(),Pf=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isInstancedBufferGeometry=!0,e.type="InstancedBufferGeometry",e.instanceCount=1/0,e}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.instanceCount=e.instanceCount,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e=P(S(t.prototype),"toJSON",this).call(this,this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}]),t}(yi),Df=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=new rf(a.manager);i.setPath(a.path),i.setRequestHeader(a.requestHeader),i.setWithCredentials(a.withCredentials),i.load(e,(function(t){try{n(a.parse(JSON.parse(t)))}catch(i){r?r(i):console.error(i),a.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e){var n={},t={};function r(e,r){if(void 0!==n[r])return n[r];var a=e.interleavedBuffers[r],i=function(e,n){if(void 0!==t[n])return t[n];var r=e.arrayBuffers[n],a=new Uint32Array(r).buffer;return t[n]=a,a}(e,a.buffer),o=ur(a.type,i),l=new Ns(o,a.stride);return l.uuid=a.uuid,n[r]=l,l}var a=e.isInstancedBufferGeometry?new Pf:new yi,i=e.data.index;if(void 0!==i){var o=ur(i.type,i.array);a.setIndex(new ni(o,1))}var l=e.data.attributes;for(var s in l){var c=l[s],u=void 0;if(c.isInterleavedBufferAttribute){var v=r(e.data,c.data);u=new Vs(v,c.itemSize,c.offset,c.normalized)}else{var f=ur(c.type,c.array);u=new(c.isInstancedBufferAttribute?yc:ni)(f,c.itemSize,c.normalized)}void 0!==c.name&&(u.name=c.name),void 0!==c.usage&&u.setUsage(c.usage),void 0!==c.updateRange&&(u.updateRange.offset=c.updateRange.offset,u.updateRange.count=c.updateRange.count),a.setAttribute(s,u)}var p=e.data.morphAttributes;if(p)for(var m in p){for(var d=p[m],h=[],g=0,x=d.length;g<x;g++){var y=d[g],b=void 0;if(y.isInterleavedBufferAttribute){var _=r(e.data,y.data);b=new Vs(_,y.itemSize,y.offset,y.normalized)}else{var w=ur(y.type,y.array);b=new ni(w,y.itemSize,y.normalized)}void 0!==y.name&&(b.name=y.name),h.push(b)}a.morphAttributes[m]=h}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);var S=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==S)for(var U=0,M=S.length;U!==M;++U){var j=S[U];a.addGroup(j.start,j.count,j.materialIndex)}var k=e.data.boundingSphere;if(void 0!==k){var T=new Ar;void 0!==k.center&&T.fromArray(k.center),a.boundingSphere=new aa(T,k.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}]),t}(ef),Ef=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=""===this.path?Ff.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;var o=new rf(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(t){var i=null;try{i=JSON.parse(t)}catch(l){return void 0!==r&&r(l),void console.error("THREE:ObjectLoader: Can't parse "+e+".",l.message)}var o=i.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?a.parse(i,n):console.error("THREE.ObjectLoader: Can't load "+e)}),t,r)}},{key:"loadAsync",value:function(){var e=R(D().mark((function e(n,t){var r,a,i,o,l,s;return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this,a=""===this.path?Ff.extractUrlBase(n):this.path,this.resourcePath=this.resourcePath||a,(i=new rf(this.manager)).setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),e.next=9,i.loadAsync(n,t);case 9:if(o=e.sent,l=JSON.parse(o),void 0!==(s=l.metadata)&&void 0!==s.type&&"geometry"!==s.type.toLowerCase()){e.next=14;break}throw new Error("THREE.ObjectLoader: Can't load "+n);case 14:return e.next=16,r.parseAsync(l);case 16:return e.abrupt("return",e.sent);case 17:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}()},{key:"parse",value:function(e,n){var t=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),a=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,(function(){void 0!==n&&n(s)})),o=this.parseTextures(e.textures,i),l=this.parseMaterials(e.materials,o),s=this.parseObject(e.object,a,l,o,t),c=this.parseSkeletons(e.skeletons,s);if(this.bindSkeletons(s,c),void 0!==n){var u=!1;for(var v in i)if(i[v].data instanceof HTMLImageElement){u=!0;break}!1===u&&n(s)}return s}},{key:"parseAsync",value:function(){var e=R(D().mark((function e(n){var t,r,a,i,o,l,s,c;return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.parseAnimations(n.animations),r=this.parseShapes(n.shapes),a=this.parseGeometries(n.geometries,r),e.next=5,this.parseImagesAsync(n.images);case 5:return i=e.sent,o=this.parseTextures(n.textures,i),l=this.parseMaterials(n.materials,o),s=this.parseObject(n.object,a,l,o,t),c=this.parseSkeletons(n.skeletons,s),this.bindSkeletons(s,c),e.abrupt("return",s);case 12:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}()},{key:"parseShapes",value:function(e){var n={};if(void 0!==e)for(var t=0,r=e.length;t<r;t++){var a=(new Cu).fromJSON(e[t]);n[a.uuid]=a}return n}},{key:"parseSkeletons",value:function(e,n){var t={},r={};if(n.traverse((function(e){e.isBone&&(r[e.uuid]=e)})),void 0!==e)for(var a=0,i=e.length;a<i;a++){var o=(new xc).fromJSON(e[a],r);t[o.uuid]=o}return t}},{key:"parseGeometries",value:function(e,n){var t={};if(void 0!==e)for(var r=new Df,a=0,i=e.length;a<i;a++){var o=void 0,l=e[a];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(l);break;default:l.type in xv?o=xv[l.type].fromJSON(l,n):console.warn('THREE.ObjectLoader: Unsupported geometry type "'.concat(l.type,'"'))}o.uuid=l.uuid,void 0!==l.name&&(o.name=l.name),!0===o.isBufferGeometry&&void 0!==l.userData&&(o.userData=l.userData),t[l.uuid]=o}return t}},{key:"parseMaterials",value:function(e,n){var t={},r={};if(void 0!==e){var a=new Rf;a.setTextures(n);for(var i=0,o=e.length;i<o;i++){var l=e[i];void 0===t[l.uuid]&&(t[l.uuid]=a.parse(l)),r[l.uuid]=t[l.uuid]}}return r}},{key:"parseAnimations",value:function(e){var n={};if(void 0!==e)for(var t=0;t<e.length;t++){var r=e[t],a=Yv.parse(r);n[a.uuid]=a}return n}},{key:"parseImages",value:function(e,n){var t,r=this,a={};function i(e){if("string"===typeof e){var n=e;return function(e){return r.manager.itemStart(e),t.load(e,(function(){r.manager.itemEnd(e)}),void 0,(function(){r.manager.itemError(e),r.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:r.resourcePath+n)}return e.data?{data:ur(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){var o=new $v(n);(t=new lf(o)).setCrossOrigin(this.crossOrigin);for(var l=0,s=e.length;l<s;l++){var c=e[l],u=c.url;if(Array.isArray(u)){for(var v=[],f=0,p=u.length;f<p;f++){var m=i(u[f]);null!==m&&(m instanceof HTMLImageElement?v.push(m):v.push(new dc(m.data,m.width,m.height)))}a[c.uuid]=new Mr(v)}else{var d=i(c.url);a[c.uuid]=new Mr(d)}}}return a}},{key:"parseImagesAsync",value:function(){var e=R(D().mark((function e(n){var t,r,a,i,o,l,s,c,u,v,f,p,m,d,h;return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=function(){return o=R(D().mark((function e(n){var r,i;return D().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("string"!==typeof n){e.next=8;break}return i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r=n)?r:t.resourcePath+r,e.next=5,a.loadAsync(i);case 5:return e.abrupt("return",e.sent);case 8:if(!n.data){e.next=12;break}return e.abrupt("return",{data:ur(n.type,n.data),width:n.width,height:n.height});case 12:return e.abrupt("return",null);case 13:case"end":return e.stop()}}),e)}))),o.apply(this,arguments)},i=function(e){return o.apply(this,arguments)},t=this,r={},!(void 0!==n&&n.length>0)){e.next=33;break}(a=new lf(this.manager)).setCrossOrigin(this.crossOrigin),l=0,s=n.length;case 8:if(!(l<s)){e.next=33;break}if(c=n[l],u=c.url,!Array.isArray(u)){e.next=26;break}v=[],f=0,p=u.length;case 14:if(!(f<p)){e.next=23;break}return m=u[f],e.next=18,i(m);case 18:null!==(d=e.sent)&&(d instanceof HTMLImageElement?v.push(d):v.push(new dc(d.data,d.width,d.height)));case 20:f++,e.next=14;break;case 23:r[c.uuid]=new Mr(v),e.next=30;break;case 26:return e.next=28,i(c.url);case 28:h=e.sent,r[c.uuid]=new Mr(h);case 30:l++,e.next=8;break;case 33:return e.abrupt("return",r);case 34:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}()},{key:"parseTextures",value:function(e,n){function t(e,n){return"number"===typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),n[e])}var r={};if(void 0!==e)for(var a=0,i=e.length;a<i;a++){var o=e[a];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===n[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var l=n[o.image],s=l.data,c=void 0;Array.isArray(s)?(c=new Yi,6===s.length&&(c.needsUpdate=!0)):(c=s&&s.data?new dc:new Tr,s&&(c.needsUpdate=!0)),c.source=l,c.uuid=o.uuid,void 0!==o.name&&(c.name=o.name),void 0!==o.mapping&&(c.mapping=t(o.mapping,zf)),void 0!==o.offset&&c.offset.fromArray(o.offset),void 0!==o.repeat&&c.repeat.fromArray(o.repeat),void 0!==o.center&&c.center.fromArray(o.center),void 0!==o.rotation&&(c.rotation=o.rotation),void 0!==o.wrap&&(c.wrapS=t(o.wrap[0],Lf),c.wrapT=t(o.wrap[1],Lf)),void 0!==o.format&&(c.format=o.format),void 0!==o.type&&(c.type=o.type),void 0!==o.encoding&&(c.encoding=o.encoding),void 0!==o.minFilter&&(c.minFilter=t(o.minFilter,Af)),void 0!==o.magFilter&&(c.magFilter=t(o.magFilter,Af)),void 0!==o.anisotropy&&(c.anisotropy=o.anisotropy),void 0!==o.flipY&&(c.flipY=o.flipY),void 0!==o.premultiplyAlpha&&(c.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(c.unpackAlignment=o.unpackAlignment),void 0!==o.userData&&(c.userData=o.userData),r[o.uuid]=c}return r}},{key:"parseObject",value:function(e,n,t,r,a){var i,o,l;function s(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),n[e]}function c(e){if(void 0!==e){if(Array.isArray(e)){for(var n=[],r=0,a=e.length;r<a;r++){var i=e[r];void 0===t[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),n.push(t[i])}return n}return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),t[e]}}function u(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}switch(e.type){case"Scene":i=new Bs,void 0!==e.background&&(Number.isInteger(e.background)?i.background=new Sr(e.background):i.background=u(e.background)),void 0!==e.environment&&(i.environment=u(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?i.fog=new Os(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(i.fog=new Is(e.fog.color,e.fog.density))),void 0!==e.backgroundBlurriness&&(i.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":i=new Hi(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(i.focus=e.focus),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.filmGauge&&(i.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(i.filmOffset=e.filmOffset),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new ho(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new jf(e.color,e.intensity);break;case"DirectionalLight":i=new Mf(e.color,e.intensity);break;case"PointLight":i=new Sf(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new kf(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new xf(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new ff(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=(new Cf).fromJSON(e);break;case"SkinnedMesh":o=s(e.geometry),l=c(e.material),i=new pc(o,l),void 0!==e.bindMode&&(i.bindMode=e.bindMode),void 0!==e.bindMatrix&&i.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(i.skeleton=e.skeleton);break;case"Mesh":o=s(e.geometry),l=c(e.material),i=new Ai(o,l);break;case"InstancedMesh":o=s(e.geometry),l=c(e.material);var v=e.count,f=e.instanceMatrix,p=e.instanceColor;(i=new Mc(o,l,v)).instanceMatrix=new yc(new Float32Array(f.array),16),void 0!==p&&(i.instanceColor=new yc(new Float32Array(p.array),p.itemSize));break;case"LOD":i=new lc;break;case"Line":i=new Pc(s(e.geometry),c(e.material));break;case"LineLoop":i=new Lc(s(e.geometry),c(e.material));break;case"LineSegments":i=new zc(s(e.geometry),c(e.material));break;case"PointCloud":case"Points":i=new Gc(s(e.geometry),c(e.material));break;case"Sprite":i=new rc(c(e.material));break;case"Group":i=new ks;break;case"Bone":i=new mc;break;default:i=new Ia}if(i.uuid=e.uuid,void 0!==e.name&&(i.name=e.name),void 0!==e.matrix?(i.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==e.position&&i.position.fromArray(e.position),void 0!==e.rotation&&i.rotation.fromArray(e.rotation),void 0!==e.quaternion&&i.quaternion.fromArray(e.quaternion),void 0!==e.scale&&i.scale.fromArray(e.scale)),void 0!==e.castShadow&&(i.castShadow=e.castShadow),void 0!==e.receiveShadow&&(i.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(i.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(i.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(i.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&i.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(i.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.frustumCulled&&(i.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(i.renderOrder=e.renderOrder),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.layers&&(i.layers.mask=e.layers),void 0!==e.children)for(var m=e.children,d=0;d<m.length;d++)i.add(this.parseObject(m[d],n,t,r,a));if(void 0!==e.animations)for(var h=e.animations,g=0;g<h.length;g++){var x=h[g];i.animations.push(a[x])}if("LOD"===e.type){void 0!==e.autoUpdate&&(i.autoUpdate=e.autoUpdate);for(var y=e.levels,b=0;b<y.length;b++){var _=y[b],w=i.getObjectByProperty("uuid",_.object);void 0!==w&&i.addLevel(w,_.distance)}}return i}},{key:"bindSkeletons",value:function(e,n){0!==Object.keys(n).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){var t=n[e.skeleton];void 0===t?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix)}}))}}]),t}(ef),zf={UVMapping:De,CubeReflectionMapping:Ee,CubeRefractionMapping:ze,EquirectangularReflectionMapping:Le,EquirectangularRefractionMapping:Ae,CubeUVReflectionMapping:Ie},Lf={RepeatWrapping:Oe,ClampToEdgeWrapping:Be,MirroredRepeatWrapping:Ne},Af={NearestFilter:Ge,NearestMipmapNearestFilter:Ve,NearestMipmapLinearFilter:He,LinearFilter:Xe,LinearMipmapNearestFilter:Ye,LinearMipmapLinearFilter:Je},If=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).isImageBitmapLoader=!0,"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),r.options={premultiplyAlpha:"none"},r}return _(t,[{key:"setOptions",value:function(e){return this.options=e,this}},{key:"load",value:function(e,n,t,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var a=this,i=Qv.get(e);if(void 0!==i)return a.manager.itemStart(e),setTimeout((function(){n&&n(i),a.manager.itemEnd(e)}),0),i;var o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(a.options,{colorSpaceConversion:"none"}))})).then((function(t){Qv.add(e,t),n&&n(t),a.manager.itemEnd(e)})).catch((function(n){r&&r(n),a.manager.itemError(e),a.manager.itemEnd(e)})),a.manager.itemStart(e)}}]),t}(ef),Of=function(){function e(){y(this,e)}return _(e,null,[{key:"getContext",value:function(){return void 0===Jv&&(Jv=new(window.AudioContext||window.webkitAudioContext)),Jv}},{key:"setContext",value:function(e){Jv=e}}]),e}(),Bf=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=new rf(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(function(t){try{var i=t.slice(0);Of.getContext().decodeAudioData(i,(function(e){n(e)}))}catch(o){r?r(o):console.error(o),a.manager.itemError(e)}}),t,r)}}]),t}(ef),Nf=function(e){w(t,e);var n=k(t);function t(e,r){var a,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;y(this,t),(a=n.call(this,void 0,i)).isHemisphereLightProbe=!0;var o=(new Sr).set(e),l=(new Sr).set(r),s=new Ar(o.r,o.g,o.b),c=new Ar(l.r,l.g,l.b),u=Math.sqrt(Math.PI),v=u*Math.sqrt(.75);return a.sh.coefficients[0].copy(s).add(c).multiplyScalar(u),a.sh.coefficients[1].copy(s).sub(c).multiplyScalar(v),a}return _(t)}(Cf),Gf=function(e){w(t,e);var n=k(t);function t(e){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;y(this,t),(r=n.call(this,void 0,a)).isAmbientLightProbe=!0;var i=(new Sr).set(e);return r.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI)),r}return _(t)}(Cf),Vf=new pa,qf=new pa,Hf=new pa,Wf=function(){function e(){y(this,e),this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Hi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Hi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}return _(e,[{key:"update",value:function(e){var n=this._cache;if(n.focus!==e.focus||n.fov!==e.fov||n.aspect!==e.aspect*this.aspect||n.near!==e.near||n.far!==e.far||n.zoom!==e.zoom||n.eyeSep!==this.eyeSep){n.focus=e.focus,n.fov=e.fov,n.aspect=e.aspect*this.aspect,n.near=e.near,n.far=e.far,n.zoom=e.zoom,n.eyeSep=this.eyeSep,Hf.copy(e.projectionMatrix);var t,r,a=n.eyeSep/2,i=a*n.near/n.focus,o=n.near*Math.tan(Yt*n.fov*.5)/n.zoom;qf.elements[12]=-a,Vf.elements[12]=a,t=-o*n.aspect+i,r=o*n.aspect+i,Hf.elements[0]=2*n.near/(r-t),Hf.elements[8]=(r+t)/(r-t),this.cameraL.projectionMatrix.copy(Hf),t=-o*n.aspect-i,r=o*n.aspect-i,Hf.elements[0]=2*n.near/(r-t),Hf.elements[8]=(r+t)/(r-t),this.cameraR.projectionMatrix.copy(Hf)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(qf),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Vf)}}]),e}(),Xf=function(){function e(){var n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];y(this,e),this.autoStart=n,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}return _(e,[{key:"start",value:function(){this.startTime=Yf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}},{key:"stop",value:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}},{key:"getElapsedTime",value:function(){return this.getDelta(),this.elapsedTime}},{key:"getDelta",value:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var n=Yf();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}}]),e}();function Yf(){return("undefined"===typeof performance?Date:performance).now()}var Zf=new Ar,Jf=new Lr,Qf=new Ar,$f=new Ar,Kf=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).type="AudioListener",e.context=Of.getContext(),e.gain=e.context.createGain(),e.gain.connect(e.context.destination),e.filter=null,e.timeDelta=0,e._clock=new Xf,e}return _(t,[{key:"getInput",value:function(){return this.gain}},{key:"removeFilter",value:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}},{key:"getFilter",value:function(){return this.filter}},{key:"setFilter",value:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}},{key:"getMasterVolume",value:function(){return this.gain.gain.value}},{key:"setMasterVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}},{key:"updateMatrixWorld",value:function(e){P(S(t.prototype),"updateMatrixWorld",this).call(this,e);var n=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Zf,Jf,Qf),$f.set(0,0,-1).applyQuaternion(Jf),n.positionX){var a=this.context.currentTime+this.timeDelta;n.positionX.linearRampToValueAtTime(Zf.x,a),n.positionY.linearRampToValueAtTime(Zf.y,a),n.positionZ.linearRampToValueAtTime(Zf.z,a),n.forwardX.linearRampToValueAtTime($f.x,a),n.forwardY.linearRampToValueAtTime($f.y,a),n.forwardZ.linearRampToValueAtTime($f.z,a),n.upX.linearRampToValueAtTime(r.x,a),n.upY.linearRampToValueAtTime(r.y,a),n.upZ.linearRampToValueAtTime(r.z,a)}else n.setPosition(Zf.x,Zf.y,Zf.z),n.setOrientation($f.x,$f.y,$f.z,r.x,r.y,r.z)}}]),t}(Ia),ep=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this)).type="Audio",r.listener=e,r.context=e.context,r.gain=r.context.createGain(),r.gain.connect(e.getInput()),r.autoplay=!1,r.buffer=null,r.detune=0,r.loop=!1,r.loopStart=0,r.loopEnd=0,r.offset=0,r.duration=void 0,r.playbackRate=1,r.isPlaying=!1,r.hasPlaybackControl=!0,r.source=null,r.sourceType="empty",r._startedAt=0,r._progress=0,r._connected=!1,r.filters=[],r}return _(t,[{key:"getOutput",value:function(){return this.gain}},{key:"setNodeSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}},{key:"setMediaElementSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}},{key:"setMediaStreamSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}},{key:"setBuffer",value:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;var n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}},{key:"pause",value:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"stop",value:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"connect",value:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}},{key:"disconnect",value:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}},{key:"getFilters",value:function(){return this.filters}},{key:"setFilters",value:function(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}},{key:"setDetune",value:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}},{key:"getDetune",value:function(){return this.detune}},{key:"getFilter",value:function(){return this.getFilters()[0]}},{key:"setFilter",value:function(e){return this.setFilters(e?[e]:[])}},{key:"setPlaybackRate",value:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"getPlaybackRate",value:function(){return this.playbackRate}},{key:"onEnded",value:function(){this.isPlaying=!1}},{key:"getLoop",value:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}},{key:"setLoop",value:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"setLoopStart",value:function(e){return this.loopStart=e,this}},{key:"setLoopEnd",value:function(e){return this.loopEnd=e,this}},{key:"getVolume",value:function(){return this.gain.gain.value}},{key:"setVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}]),t}(Ia),np=new Ar,tp=new Lr,rp=new Ar,ap=new Ar,ip=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).panner=r.context.createPanner(),r.panner.panningModel="HRTF",r.panner.connect(r.gain),r}return _(t,[{key:"disconnect",value:function(){P(S(t.prototype),"disconnect",this).call(this),this.panner.disconnect(this.gain)}},{key:"getOutput",value:function(){return this.panner}},{key:"getRefDistance",value:function(){return this.panner.refDistance}},{key:"setRefDistance",value:function(e){return this.panner.refDistance=e,this}},{key:"getRolloffFactor",value:function(){return this.panner.rolloffFactor}},{key:"setRolloffFactor",value:function(e){return this.panner.rolloffFactor=e,this}},{key:"getDistanceModel",value:function(){return this.panner.distanceModel}},{key:"setDistanceModel",value:function(e){return this.panner.distanceModel=e,this}},{key:"getMaxDistance",value:function(){return this.panner.maxDistance}},{key:"setMaxDistance",value:function(e){return this.panner.maxDistance=e,this}},{key:"setDirectionalCone",value:function(e,n,t){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=n,this.panner.coneOuterGain=t,this}},{key:"updateMatrixWorld",value:function(e){if(P(S(t.prototype),"updateMatrixWorld",this).call(this,e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(np,tp,rp),ap.set(0,0,1).applyQuaternion(tp);var n=this.panner;if(n.positionX){var r=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(np.x,r),n.positionY.linearRampToValueAtTime(np.y,r),n.positionZ.linearRampToValueAtTime(np.z,r),n.orientationX.linearRampToValueAtTime(ap.x,r),n.orientationY.linearRampToValueAtTime(ap.y,r),n.orientationZ.linearRampToValueAtTime(ap.z,r)}else n.setPosition(np.x,np.y,np.z),n.setOrientation(ap.x,ap.y,ap.z)}}}]),t}(ep),op=function(){function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2048;y(this,e),this.analyser=n.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),n.getOutput().connect(this.analyser)}return _(e,[{key:"getFrequencyData",value:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},{key:"getAverageFrequency",value:function(){for(var e=0,n=this.getFrequencyData(),t=0;t<n.length;t++)e+=n[t];return e/n.length}}]),e}(),lp=function(){function e(n,t,r){var a,i,o;switch(y(this,e),this.binding=n,this.valueSize=r,t){case"quaternion":a=this._slerp,i=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":a=this._select,i=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:a=this._lerp,i=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=a,this._mixBufferRegionAdditive=i,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}return _(e,[{key:"accumulate",value:function(e,n){var t=this.buffer,r=this.valueSize,a=e*r+r,i=this.cumulativeWeight;if(0===i){for(var o=0;o!==r;++o)t[a+o]=t[o];i=n}else{var l=n/(i+=n);this._mixBufferRegion(t,a,0,l,r)}this.cumulativeWeight=i}},{key:"accumulateAdditive",value:function(e){var n=this.buffer,t=this.valueSize,r=t*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(n,r,0,e,t),this.cumulativeWeightAdditive+=e}},{key:"apply",value:function(e){var n=this.valueSize,t=this.buffer,r=e*n+n,a=this.cumulativeWeight,i=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){var l=n*this._origIndex;this._mixBufferRegion(t,r,l,1-a,n)}i>0&&this._mixBufferRegionAdditive(t,r,this._addIndex*n,1,n);for(var s=n,c=n+n;s!==c;++s)if(t[s]!==t[s+n]){o.setValue(t,r);break}}},{key:"saveOriginalState",value:function(){var e=this.binding,n=this.buffer,t=this.valueSize,r=t*this._origIndex;e.getValue(n,r);for(var a=t,i=r;a!==i;++a)n[a]=n[r+a%t];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}},{key:"restoreOriginalState",value:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}},{key:"_setAdditiveIdentityNumeric",value:function(){for(var e=this._addIndex*this.valueSize,n=e+this.valueSize,t=e;t<n;t++)this.buffer[t]=0}},{key:"_setAdditiveIdentityQuaternion",value:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}},{key:"_setAdditiveIdentityOther",value:function(){for(var e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize,t=0;t<this.valueSize;t++)this.buffer[n+t]=this.buffer[e+t]}},{key:"_select",value:function(e,n,t,r,a){if(r>=.5)for(var i=0;i!==a;++i)e[n+i]=e[t+i]}},{key:"_slerp",value:function(e,n,t,r){Lr.slerpFlat(e,n,e,n,e,t,r)}},{key:"_slerpAdditive",value:function(e,n,t,r,a){var i=this._workIndex*a;Lr.multiplyQuaternionsFlat(e,i,e,n,e,t),Lr.slerpFlat(e,n,e,n,e,i,r)}},{key:"_lerp",value:function(e,n,t,r,a){for(var i=1-r,o=0;o!==a;++o){var l=n+o;e[l]=e[l]*i+e[t+o]*r}}},{key:"_lerpAdditive",value:function(e,n,t,r,a){for(var i=0;i!==a;++i){var o=n+i;e[o]=e[o]+e[t+i]*r}}}]),e}(),sp="\\[\\]\\.:\\/",cp=new RegExp("[\\[\\]\\.:\\/]","g"),up="[^\\[\\]\\.:\\/]",vp="[^"+sp.replace("\\.","")+"]",fp=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",up)+/(WCOD+)?/.source.replace("WCOD",vp)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",up)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",up)+"$"),pp=["material","materials","bones","map"],mp=function(){function e(n,t,r){y(this,e);var a=r||dp.parseTrackName(t);this._targetGroup=n,this._bindings=n.subscribe_(t,a)}return _(e,[{key:"getValue",value:function(e,n){this.bind();var t=this._targetGroup.nCachedObjects_,r=this._bindings[t];void 0!==r&&r.getValue(e,n)}},{key:"setValue",value:function(e,n){for(var t=this._bindings,r=this._targetGroup.nCachedObjects_,a=t.length;r!==a;++r)t[r].setValue(e,n)}},{key:"bind",value:function(){for(var e=this._bindings,n=this._targetGroup.nCachedObjects_,t=e.length;n!==t;++n)e[n].bind()}},{key:"unbind",value:function(){for(var e=this._bindings,n=this._targetGroup.nCachedObjects_,t=e.length;n!==t;++n)e[n].unbind()}}]),e}(),dp=function(){function e(n,t,r){y(this,e),this.path=t,this.parsedPath=r||e.parseTrackName(t),this.node=e.findNode(n,this.parsedPath.nodeName)||n,this.rootNode=n,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}return _(e,[{key:"_getValue_unavailable",value:function(){}},{key:"_setValue_unavailable",value:function(){}},{key:"_getValue_direct",value:function(e,n){e[n]=this.targetObject[this.propertyName]}},{key:"_getValue_array",value:function(e,n){for(var t=this.resolvedProperty,r=0,a=t.length;r!==a;++r)e[n++]=t[r]}},{key:"_getValue_arrayElement",value:function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]}},{key:"_getValue_toArray",value:function(e,n){this.resolvedProperty.toArray(e,n)}},{key:"_setValue_direct",value:function(e,n){this.targetObject[this.propertyName]=e[n]}},{key:"_setValue_direct_setNeedsUpdate",value:function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0}},{key:"_setValue_direct_setMatrixWorldNeedsUpdate",value:function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_array",value:function(e,n){for(var t=this.resolvedProperty,r=0,a=t.length;r!==a;++r)t[r]=e[n++]}},{key:"_setValue_array_setNeedsUpdate",value:function(e,n){for(var t=this.resolvedProperty,r=0,a=t.length;r!==a;++r)t[r]=e[n++];this.targetObject.needsUpdate=!0}},{key:"_setValue_array_setMatrixWorldNeedsUpdate",value:function(e,n){for(var t=this.resolvedProperty,r=0,a=t.length;r!==a;++r)t[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_arrayElement",value:function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]}},{key:"_setValue_arrayElement_setNeedsUpdate",value:function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0}},{key:"_setValue_arrayElement_setMatrixWorldNeedsUpdate",value:function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_fromArray",value:function(e,n){this.resolvedProperty.fromArray(e,n)}},{key:"_setValue_fromArray_setNeedsUpdate",value:function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0}},{key:"_setValue_fromArray_setMatrixWorldNeedsUpdate",value:function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_getValue_unbound",value:function(e,n){this.bind(),this.getValue(e,n)}},{key:"_setValue_unbound",value:function(e,n){this.bind(),this.setValue(e,n)}},{key:"bind",value:function(){var n=this.node,t=this.parsedPath,r=t.objectName,a=t.propertyName,i=t.propertyIndex;if(n||(n=e.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(r){var o=t.objectIndex;switch(r){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(var l=0;l<n.length;l++)if(n[l].name===o){o=l;break}break;case"map":if("map"in n){n=n.map;break}if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);n=n.material.map;break;default:if(void 0===n[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[r]}if(void 0!==o){if(void 0===n[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[o]}}var s=n[a];if(void 0!==s){var c=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);var u=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===a){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[i]&&(i=n.morphTargetDictionary[i])}u=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(u=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=a;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}else{var v=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+v+"."+a+" but it wasn't found.",n)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}},{key:"unbind",value:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}],[{key:"create",value:function(n,t,r){return n&&n.isAnimationObjectGroup?new e.Composite(n,t,r):new e(n,t,r)}},{key:"sanitizeNodeName",value:function(e){return e.replace(/\s/g,"_").replace(cp,"")}},{key:"parseTrackName",value:function(e){var n=fp.exec(e);if(null===n)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var t={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},r=t.nodeName&&t.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var a=t.nodeName.substring(r+1);-1!==pp.indexOf(a)&&(t.nodeName=t.nodeName.substring(0,r),t.objectName=a)}if(null===t.propertyName||0===t.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return t}},{key:"findNode",value:function(e,n){if(void 0===n||""===n||"."===n||-1===n||n===e.name||n===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(n);if(void 0!==t)return t}if(e.children){var r=function e(t){for(var r=0;r<t.length;r++){var a=t[r];if(a.name===n||a.uuid===n)return a;var i=e(a.children);if(i)return i}return null}(e.children);if(r)return r}return null}}]),e}();dp.Composite=mp,dp.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},dp.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},dp.prototype.GetterByBindingType=[dp.prototype._getValue_direct,dp.prototype._getValue_array,dp.prototype._getValue_arrayElement,dp.prototype._getValue_toArray],dp.prototype.SetterByBindingTypeAndVersioning=[[dp.prototype._setValue_direct,dp.prototype._setValue_direct_setNeedsUpdate,dp.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[dp.prototype._setValue_array,dp.prototype._setValue_array_setNeedsUpdate,dp.prototype._setValue_array_setMatrixWorldNeedsUpdate],[dp.prototype._setValue_arrayElement,dp.prototype._setValue_arrayElement_setNeedsUpdate,dp.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[dp.prototype._setValue_fromArray,dp.prototype._setValue_fromArray_setNeedsUpdate,dp.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var hp=function(){function e(){y(this,e),this.isAnimationObjectGroup=!0,this.uuid=Jt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var n={};this._indicesByUUID=n;for(var t=0,r=arguments.length;t!==r;++t)n[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var a=this;this.stats={objects:{get total(){return a._objects.length},get inUse(){return this.total-a.nCachedObjects_}},get bindingsPerObject(){return a._bindings.length}}}return _(e,[{key:"add",value:function(){for(var e=this._objects,n=this._indicesByUUID,t=this._paths,r=this._parsedPaths,a=this._bindings,i=a.length,o=void 0,l=e.length,s=this.nCachedObjects_,c=0,u=arguments.length;c!==u;++c){var v=arguments[c],f=v.uuid,p=n[f];if(void 0===p){p=l++,n[f]=p,e.push(v);for(var m=0,d=i;m!==d;++m)a[m].push(new dp(v,t[m],r[m]))}else if(p<s){o=e[p];var h=--s,g=e[h];n[g.uuid]=p,e[p]=g,n[f]=h,e[h]=v;for(var x=0,y=i;x!==y;++x){var b=a[x],_=b[h],w=b[p];b[p]=_,void 0===w&&(w=new dp(v,t[x],r[x])),b[h]=w}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=s}},{key:"remove",value:function(){for(var e=this._objects,n=this._indicesByUUID,t=this._bindings,r=t.length,a=this.nCachedObjects_,i=0,o=arguments.length;i!==o;++i){var l=arguments[i],s=l.uuid,c=n[s];if(void 0!==c&&c>=a){var u=a++,v=e[u];n[v.uuid]=c,e[c]=v,n[s]=u,e[u]=l;for(var f=0,p=r;f!==p;++f){var m=t[f],d=m[u],h=m[c];m[c]=d,m[u]=h}}}this.nCachedObjects_=a}},{key:"uncache",value:function(){for(var e=this._objects,n=this._indicesByUUID,t=this._bindings,r=t.length,a=this.nCachedObjects_,i=e.length,o=0,l=arguments.length;o!==l;++o){var s=arguments[o],c=s.uuid,u=n[c];if(void 0!==u)if(delete n[c],u<a){var v=--a,f=e[v],p=--i,m=e[p];n[f.uuid]=u,e[u]=f,n[m.uuid]=v,e[v]=m,e.pop();for(var d=0,h=r;d!==h;++d){var g=t[d],x=g[v],y=g[p];g[u]=x,g[v]=y,g.pop()}}else{var b=--i,_=e[b];b>0&&(n[_.uuid]=u),e[u]=_,e.pop();for(var w=0,S=r;w!==S;++w){var U=t[w];U[u]=U[b],U.pop()}}}this.nCachedObjects_=a}},{key:"subscribe_",value:function(e,n){var t=this._bindingsIndicesByPath,r=t[e],a=this._bindings;if(void 0!==r)return a[r];var i=this._paths,o=this._parsedPaths,l=this._objects,s=l.length,c=this.nCachedObjects_,u=new Array(s);r=a.length,t[e]=r,i.push(e),o.push(n),a.push(u);for(var v=c,f=l.length;v!==f;++v){var p=l[v];u[v]=new dp(p,e,n)}return u}},{key:"unsubscribe_",value:function(e){var n=this._bindingsIndicesByPath,t=n[e];if(void 0!==t){var r=this._paths,a=this._parsedPaths,i=this._bindings,o=i.length-1,l=i[o];n[e[o]]=t,i[t]=l,i.pop(),a[t]=a[o],a.pop(),r[t]=r[o],r.pop()}}}]),e}(),gp=function(){function e(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.blendMode;y(this,e),this._mixer=n,this._clip=t,this._localRoot=r,this.blendMode=a;for(var i=t.tracks,o=i.length,l=new Array(o),s={endingStart:et,endingEnd:et},c=0;c!==o;++c){var u=i[c].createInterpolant(null);l[c]=u,u.settings=s}this._interpolantSettings=s,this._interpolants=l,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Zn,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}return _(e,[{key:"play",value:function(){return this._mixer._activateAction(this),this}},{key:"stop",value:function(){return this._mixer._deactivateAction(this),this.reset()}},{key:"reset",value:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}},{key:"isRunning",value:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}},{key:"isScheduled",value:function(){return this._mixer._isActiveAction(this)}},{key:"startAt",value:function(e){return this._startTime=e,this}},{key:"setLoop",value:function(e,n){return this.loop=e,this.repetitions=n,this}},{key:"setEffectiveWeight",value:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}},{key:"getEffectiveWeight",value:function(){return this._effectiveWeight}},{key:"fadeIn",value:function(e){return this._scheduleFading(e,0,1)}},{key:"fadeOut",value:function(e){return this._scheduleFading(e,1,0)}},{key:"crossFadeFrom",value:function(e,n,t){if(e.fadeOut(n),this.fadeIn(n),t){var r=this._clip.duration,a=e._clip.duration,i=a/r,o=r/a;e.warp(1,i,n),this.warp(o,1,n)}return this}},{key:"crossFadeTo",value:function(e,n,t){return e.crossFadeFrom(this,n,t)}},{key:"stopFading",value:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"setEffectiveTimeScale",value:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}},{key:"getEffectiveTimeScale",value:function(){return this._effectiveTimeScale}},{key:"setDuration",value:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}},{key:"syncWith",value:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}},{key:"halt",value:function(e){return this.warp(this._effectiveTimeScale,0,e)}},{key:"warp",value:function(e,n,t){var r=this._mixer,a=r.time,i=this.timeScale,o=this._timeScaleInterpolant;null===o&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);var l=o.parameterPositions,s=o.sampleValues;return l[0]=a,l[1]=a+t,s[0]=e/i,s[1]=n/i,this}},{key:"stopWarping",value:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"getMixer",value:function(){return this._mixer}},{key:"getClip",value:function(){return this._clip}},{key:"getRoot",value:function(){return this._localRoot||this._mixer._root}},{key:"_update",value:function(e,n,t,r){if(this.enabled){var a=this._startTime;if(null!==a){var i=(e-a)*t;i<0||0===t?n=0:(this._startTime=null,n=t*i)}n*=this._updateTimeScale(e);var o=this._updateTime(n),l=this._updateWeight(e);if(l>0){var s=this._interpolants,c=this._propertyBindings;if(this.blendMode===at)for(var u=0,v=s.length;u!==v;++u)s[u].evaluate(o),c[u].accumulateAdditive(l);else for(var f=0,p=s.length;f!==p;++f)s[f].evaluate(o),c[f].accumulate(r,l)}}else this._updateWeight(e)}},{key:"_updateWeight",value:function(e){var n=0;if(this.enabled){n=this.weight;var t=this._weightInterpolant;if(null!==t){var r=t.evaluate(e)[0];n*=r,e>t.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=n,n}},{key:"_updateTimeScale",value:function(e){var n=0;if(!this.paused){n=this.timeScale;var t=this._timeScaleInterpolant;if(null!==t)n*=t.evaluate(e)[0],e>t.parameterPositions[1]&&(this.stopWarping(),0===n?this.paused=!0:this.timeScale=n)}return this._effectiveTimeScale=n,n}},{key:"_updateTime",value:function(e){var n=this._clip.duration,t=this.loop,r=this.time+e,a=this._loopCount,i=t===Jn;if(0===e)return-1===a?r:i&&1===(1&a)?n-r:r;if(t===Yn){-1===a&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===a&&(e>=0?(a=0,this._setEndings(!0,0===this.repetitions,i)):this._setEndings(0===this.repetitions,!0,i)),r>=n||r<0){var o=Math.floor(r/n);r-=n*o,a+=Math.abs(o);var l=this.repetitions-a;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===l){var s=e<0;this._setEndings(s,!s,i)}else this._setEndings(!1,!1,i);this._loopCount=a,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(i&&1===(1&a))return n-r}return r}},{key:"_setEndings",value:function(e,n,t){var r=this._interpolantSettings;t?(r.endingStart=nt,r.endingEnd=nt):(r.endingStart=e?this.zeroSlopeAtStart?nt:et:tt,r.endingEnd=n?this.zeroSlopeAtEnd?nt:et:tt)}},{key:"_scheduleFading",value:function(e,n,t){var r=this._mixer,a=r.time,i=this._weightInterpolant;null===i&&(i=r._lendControlInterpolant(),this._weightInterpolant=i);var o=i.parameterPositions,l=i.sampleValues;return o[0]=a,l[0]=n,o[1]=a+e,l[1]=t,this}}]),e}(),xp=new Float32Array(1),yp=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this))._root=e,r._initMemoryManager(),r._accuIndex=0,r.time=0,r.timeScale=1,r}return _(t,[{key:"_bindAction",value:function(e,n){var t=e._localRoot||this._root,r=e._clip.tracks,a=r.length,i=e._propertyBindings,o=e._interpolants,l=t.uuid,s=this._bindingsByRootAndName,c=s[l];void 0===c&&(c={},s[l]=c);for(var u=0;u!==a;++u){var v=r[u],f=v.name,p=c[f];if(void 0!==p)++p.referenceCount,i[u]=p;else{if(void 0!==(p=i[u])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}var m=n&&n._propertyBindings[u].binding.parsedPath;++(p=new lp(dp.create(t,f,m),v.ValueTypeName,v.getValueSize())).referenceCount,this._addInactiveBinding(p,l,f),i[u]=p}o[u].resultBuffer=p.buffer}}},{key:"_activateAction",value:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var n=(e._localRoot||this._root).uuid,t=e._clip.uuid,r=this._actionsByClip[t];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,t,n)}for(var a=e._propertyBindings,i=0,o=a.length;i!==o;++i){var l=a[i];0===l.useCount++&&(this._lendBinding(l),l.saveOriginalState())}this._lendAction(e)}}},{key:"_deactivateAction",value:function(e){if(this._isActiveAction(e)){for(var n=e._propertyBindings,t=0,r=n.length;t!==r;++t){var a=n[t];0===--a.useCount&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}},{key:"_initMemoryManager",value:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}},{key:"_isActiveAction",value:function(e){var n=e._cacheIndex;return null!==n&&n<this._nActiveActions}},{key:"_addInactiveAction",value:function(e,n,t){var r=this._actions,a=this._actionsByClip,i=a[n];if(void 0===i)i={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[n]=i;else{var o=i.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),i.actionByRoot[t]=e}},{key:"_removeInactiveAction",value:function(e){var n=this._actions,t=n[n.length-1],r=e._cacheIndex;t._cacheIndex=r,n[r]=t,n.pop(),e._cacheIndex=null;var a=e._clip.uuid,i=this._actionsByClip,o=i[a],l=o.knownActions,s=l[l.length-1],c=e._byClipCacheIndex;s._byClipCacheIndex=c,l[c]=s,l.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],0===l.length&&delete i[a],this._removeInactiveBindingsForAction(e)}},{key:"_removeInactiveBindingsForAction",value:function(e){for(var n=e._propertyBindings,t=0,r=n.length;t!==r;++t){var a=n[t];0===--a.referenceCount&&this._removeInactiveBinding(a)}}},{key:"_lendAction",value:function(e){var n=this._actions,t=e._cacheIndex,r=this._nActiveActions++,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=t,n[t]=a}},{key:"_takeBackAction",value:function(e){var n=this._actions,t=e._cacheIndex,r=--this._nActiveActions,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=t,n[t]=a}},{key:"_addInactiveBinding",value:function(e,n,t){var r=this._bindingsByRootAndName,a=this._bindings,i=r[n];void 0===i&&(i={},r[n]=i),i[t]=e,e._cacheIndex=a.length,a.push(e)}},{key:"_removeInactiveBinding",value:function(e){var n=this._bindings,t=e.binding,r=t.rootNode.uuid,a=t.path,i=this._bindingsByRootAndName,o=i[r],l=n[n.length-1],s=e._cacheIndex;l._cacheIndex=s,n[s]=l,n.pop(),delete o[a],0===Object.keys(o).length&&delete i[r]}},{key:"_lendBinding",value:function(e){var n=this._bindings,t=e._cacheIndex,r=this._nActiveBindings++,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=t,n[t]=a}},{key:"_takeBackBinding",value:function(e){var n=this._bindings,t=e._cacheIndex,r=--this._nActiveBindings,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=t,n[t]=a}},{key:"_lendControlInterpolant",value:function(){var e=this._controlInterpolants,n=this._nActiveControlInterpolants++,t=e[n];return void 0===t&&((t=new Iv(new Float32Array(2),new Float32Array(2),1,xp)).__cacheIndex=n,e[n]=t),t}},{key:"_takeBackControlInterpolant",value:function(e){var n=this._controlInterpolants,t=e.__cacheIndex,r=--this._nActiveControlInterpolants,a=n[r];e.__cacheIndex=r,n[r]=e,a.__cacheIndex=t,n[t]=a}},{key:"clipAction",value:function(e,n,t){var r=n||this._root,a=r.uuid,i="string"===typeof e?Yv.findByName(r,e):e,o=null!==i?i.uuid:e,l=this._actionsByClip[o],s=null;if(void 0===t&&(t=null!==i?i.blendMode:rt),void 0!==l){var c=l.actionByRoot[a];if(void 0!==c&&c.blendMode===t)return c;s=l.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var u=new gp(this,i,n,t);return this._bindAction(u,s),this._addInactiveAction(u,o,a),u}},{key:"existingAction",value:function(e,n){var t=n||this._root,r=t.uuid,a="string"===typeof e?Yv.findByName(t,e):e,i=a?a.uuid:e,o=this._actionsByClip[i];return void 0!==o&&o.actionByRoot[r]||null}},{key:"stopAllAction",value:function(){for(var e=this._actions,n=this._nActiveActions-1;n>=0;--n)e[n].stop();return this}},{key:"update",value:function(e){e*=this.timeScale;for(var n=this._actions,t=this._nActiveActions,r=this.time+=e,a=Math.sign(e),i=this._accuIndex^=1,o=0;o!==t;++o){n[o]._update(r,e,a,i)}for(var l=this._bindings,s=this._nActiveBindings,c=0;c!==s;++c)l[c].apply(i);return this}},{key:"setTime",value:function(e){this.time=0;for(var n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(e)}},{key:"getRoot",value:function(){return this._root}},{key:"uncacheClip",value:function(e){var n=this._actions,t=e.uuid,r=this._actionsByClip,a=r[t];if(void 0!==a){for(var i=a.knownActions,o=0,l=i.length;o!==l;++o){var s=i[o];this._deactivateAction(s);var c=s._cacheIndex,u=n[n.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,u._cacheIndex=c,n[c]=u,n.pop(),this._removeInactiveBindingsForAction(s)}delete r[t]}}},{key:"uncacheRoot",value:function(e){var n=e.uuid,t=this._actionsByClip;for(var r in t){var a=t[r].actionByRoot[n];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}var i=this._bindingsByRootAndName[n];if(void 0!==i)for(var o in i){var l=i[o];l.restoreOriginalState(),this._removeInactiveBinding(l)}}},{key:"uncacheAction",value:function(e,n){var t=this.existingAction(e,n);null!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}}]),t}(Ht),bp=function(){function e(n){y(this,e),this.value=n}return _(e,[{key:"clone",value:function(){return new e(void 0===this.value.clone?this.value:this.value.clone())}}]),e}(),_p=0,wp=function(e){w(t,e);var n=k(t);function t(){var e;return y(this,t),(e=n.call(this)).isUniformsGroup=!0,Object.defineProperty(M(e),"id",{value:_p++}),e.name="",e.usage=Dt,e.uniforms=[],e}return _(t,[{key:"add",value:function(e){return this.uniforms.push(e),this}},{key:"remove",value:function(e){var n=this.uniforms.indexOf(e);return-1!==n&&this.uniforms.splice(n,1),this}},{key:"setName",value:function(e){return this.name=e,this}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"dispose",value:function(){return this.dispatchEvent({type:"dispose"}),this}},{key:"copy",value:function(e){this.name=e.name,this.usage=e.usage;var n=e.uniforms;this.uniforms.length=0;for(var t=0,r=n.length;t<r;t++)this.uniforms.push(n[t].clone());return this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),t}(Ht),Sp=function(e){w(t,e);var n=k(t);function t(e,r){var a,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return y(this,t),(a=n.call(this,e,r)).isInstancedInterleavedBuffer=!0,a.meshPerAttribute=i,a}return _(t,[{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"clone",value:function(e){var n=P(S(t.prototype),"clone",this).call(this,e);return n.meshPerAttribute=this.meshPerAttribute,n}},{key:"toJSON",value:function(e){var n=P(S(t.prototype),"toJSON",this).call(this,e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}]),t}(Ns),Up=function(){function e(n,t,r,a,i){y(this,e),this.isGLBufferAttribute=!0,this.buffer=n,this.type=t,this.itemSize=r,this.elementSize=a,this.count=i,this.version=0}return _(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setBuffer",value:function(e){return this.buffer=e,this}},{key:"setType",value:function(e,n){return this.type=e,this.elementSize=n,this}},{key:"setItemSize",value:function(e){return this.itemSize=e,this}},{key:"setCount",value:function(e){return this.count=e,this}}]),e}(),Mp=function(){function e(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;y(this,e),this.ray=new fa(n,t),this.near=r,this.far=a,this.camera=null,this.layers=new Ua,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}return _(e,[{key:"set",value:function(e,n){this.ray.set(e,n)}},{key:"setFromCamera",value:function(e,n){n.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(n).sub(this.ray.origin).normalize(),this.camera=n):n.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld),this.camera=n):console.error("THREE.Raycaster: Unsupported camera type: "+n.type)}},{key:"intersectObject",value:function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return kp(e,this,t,n),t.sort(jp),t}},{key:"intersectObjects",value:function(e){for(var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=0,a=e.length;r<a;r++)kp(e[r],this,t,n);return t.sort(jp),t}}]),e}();function jp(e,n){return e.distance-n.distance}function kp(e,n,t,r){if(e.layers.test(n.layers)&&e.raycast(n,t),!0===r)for(var a=e.children,i=0,o=a.length;i<o;i++)kp(a[i],n,t,!0)}var Tp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return y(this,e),this.radius=n,this.phi=t,this.theta=r,this}return _(e,[{key:"set",value:function(e,n,t){return this.radius=e,this.phi=n,this.theta=t,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:"makeSafe",value:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,n,t){return this.radius=Math.sqrt(e*e+n*n+t*t),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,t),this.phi=Math.acos(Qt(n/this.radius,-1,1))),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Cp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return y(this,e),this.radius=n,this.theta=t,this.y=r,this}return _(e,[{key:"set",value:function(e,n,t){return this.radius=e,this.theta=n,this.y=t,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,n,t){return this.radius=Math.sqrt(e*e+t*t),this.theta=Math.atan2(e,t),this.y=n,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Rp=new or,Fp=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new or(1/0,1/0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new or(-1/0,-1/0);y(this,e),this.isBox2=!0,this.min=n,this.max=t}return _(e,[{key:"set",value:function(e,n){return this.min.copy(e),this.max.copy(n),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var n=0,t=e.length;n<t;n++)this.expandByPoint(e[n]);return this}},{key:"setFromCenterAndSize",value:function(e,n){var t=Rp.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}},{key:"getParameter",value:function(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}},{key:"clampPoint",value:function(e,n){return n.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return Rp.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),Pp=new Ar,Dp=new Ar,Ep=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar;y(this,e),this.start=n,this.end=t}return _(e,[{key:"set",value:function(e,n){return this.start.copy(e),this.end.copy(n),this}},{key:"copy",value:function(e){return this.start.copy(e.start),this.end.copy(e.end),this}},{key:"getCenter",value:function(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(e){return e.subVectors(this.end,this.start)}},{key:"distanceSq",value:function(){return this.start.distanceToSquared(this.end)}},{key:"distance",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(e,n){return this.delta(n).multiplyScalar(e).add(this.start)}},{key:"closestPointToPointParameter",value:function(e,n){Pp.subVectors(e,this.start),Dp.subVectors(this.end,this.start);var t=Dp.dot(Dp),r=Dp.dot(Pp)/t;return n&&(r=Qt(r,0,1)),r}},{key:"closestPointToPoint",value:function(e,n,t){var r=this.closestPointToPointParameter(e,n);return this.delta(t).multiplyScalar(r).add(this.start)}},{key:"applyMatrix4",value:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}},{key:"equals",value:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),zp=new Ar,Lp=function(e){w(t,e);var n=k(t);function t(e,r){var a;y(this,t),(a=n.call(this)).light=e,a.light.updateMatrixWorld(),a.matrix=e.matrixWorld,a.matrixAutoUpdate=!1,a.color=r;for(var i=new yi,o=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],l=0,s=1;l<32;l++,s++){var c=l/32*Math.PI*2,u=s/32*Math.PI*2;o.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}i.setAttribute("position",new ui(o,3));var v=new jc({fog:!1,toneMapped:!1});return a.cone=new zc(i,v),a.add(a.cone),a.update(),a}return _(t,[{key:"dispose",value:function(){this.cone.geometry.dispose(),this.cone.material.dispose()}},{key:"update",value:function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),zp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(zp),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}]),t}(Ia),Ap=new Ar,Ip=new pa,Op=new pa,Bp=function(e){w(t,e);var n=k(t);function t(e){var r;y(this,t);for(var a=Np(e),i=new yi,o=[],l=[],s=new Sr(0,0,1),c=new Sr(0,1,0),u=0;u<a.length;u++){var v=a[u];v.parent&&v.parent.isBone&&(o.push(0,0,0),o.push(0,0,0),l.push(s.r,s.g,s.b),l.push(c.r,c.g,c.b))}i.setAttribute("position",new ui(o,3)),i.setAttribute("color",new ui(l,3));var f=new jc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});return(r=n.call(this,i,f)).isSkeletonHelper=!0,r.type="SkeletonHelper",r.root=e,r.bones=a,r.matrix=e.matrixWorld,r.matrixAutoUpdate=!1,r}return _(t,[{key:"updateMatrixWorld",value:function(e){var n=this.bones,r=this.geometry,a=r.getAttribute("position");Op.copy(this.root.matrixWorld).invert();for(var i=0,o=0;i<n.length;i++){var l=n[i];l.parent&&l.parent.isBone&&(Ip.multiplyMatrices(Op,l.matrixWorld),Ap.setFromMatrixPosition(Ip),a.setXYZ(o,Ap.x,Ap.y,Ap.z),Ip.multiplyMatrices(Op,l.parent.matrixWorld),Ap.setFromMatrixPosition(Ip),a.setXYZ(o+1,Ap.x,Ap.y,Ap.z),o+=2)}r.getAttribute("position").needsUpdate=!0,P(S(t.prototype),"updateMatrixWorld",this).call(this,e)}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc);function Np(e){var n=[];!0===e.isBone&&n.push(e);for(var t=0;t<e.children.length;t++)n.push.apply(n,Np(e.children[t]));return n}var Gp=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;y(this,t);var o=new vv(r,4,2),l=new $a({wireframe:!0,fog:!1,toneMapped:!1});return(i=n.call(this,o,l)).light=e,i.light.updateMatrixWorld(),i.color=a,i.type="PointLightHelper",i.matrix=i.light.matrixWorld,i.matrixAutoUpdate=!1,i.update(),i}return _(t,[{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}},{key:"update",value:function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}]),t}(Ai),Vp=new Ar,qp=new Sr,Hp=new Sr,Wp=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;y(this,t),(i=n.call(this)).light=e,i.light.updateMatrixWorld(),i.matrix=e.matrixWorld,i.matrixAutoUpdate=!1,i.color=a;var o=new sv(r);o.rotateY(.5*Math.PI),i.material=new $a({wireframe:!0,fog:!1,toneMapped:!1}),void 0===i.color&&(i.material.vertexColors=!0);var l=o.getAttribute("position"),s=new Float32Array(3*l.count);return o.setAttribute("color",new ni(s,3)),i.add(new Ai(o,i.material)),i.update(),i}return _(t,[{key:"dispose",value:function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}},{key:"update",value:function(){var e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var n=e.geometry.getAttribute("color");qp.copy(this.light.color),Hp.copy(this.light.groundColor);for(var t=0,r=n.count;t<r;t++){var a=t<r/2?qp:Hp;n.setXYZ(t,a.r,a.g,a.b)}n.needsUpdate=!0}e.lookAt(Vp.setFromMatrixPosition(this.light.matrixWorld).negate())}}]),t}(Ia),Xp=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4473924,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8947848;y(this,t),i=new Sr(i),o=new Sr(o);for(var l=a/2,s=r/a,c=r/2,u=[],v=[],f=0,p=0,m=-c;f<=a;f++,m+=s){u.push(-c,0,m,c,0,m),u.push(m,0,-c,m,0,c);var d=f===l?i:o;d.toArray(v,p),p+=3,d.toArray(v,p),p+=3,d.toArray(v,p),p+=3,d.toArray(v,p),p+=3}var h=new yi;h.setAttribute("position",new ui(u,3)),h.setAttribute("color",new ui(v,3));var g=new jc({vertexColors:!0,toneMapped:!1});return(e=n.call(this,h,g)).type="GridHelper",e}return _(t,[{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc),Yp=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:64,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4473924,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:8947848;y(this,t),l=new Sr(l),s=new Sr(s);var c=[],u=[];if(a>1)for(var v=0;v<a;v++){var f=v/a*(2*Math.PI),p=Math.sin(f)*r,m=Math.cos(f)*r;c.push(0,0,0),c.push(p,0,m);var d=1&v?l:s;u.push(d.r,d.g,d.b),u.push(d.r,d.g,d.b)}for(var h=0;h<i;h++)for(var g=1&h?l:s,x=r-r/i*h,b=0;b<o;b++){var _=b/o*(2*Math.PI),w=Math.sin(_)*x,S=Math.cos(_)*x;c.push(w,0,S),u.push(g.r,g.g,g.b),_=(b+1)/o*(2*Math.PI),w=Math.sin(_)*x,S=Math.cos(_)*x,c.push(w,0,S),u.push(g.r,g.g,g.b)}var U=new yi;U.setAttribute("position",new ui(c,3)),U.setAttribute("color",new ui(u,3));var M=new jc({vertexColors:!0,toneMapped:!1});return(e=n.call(this,U,M)).type="PolarGridHelper",e}return _(t,[{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc),Zp=new Ar,Jp=new Ar,Qp=new Ar,$p=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;y(this,t),(i=n.call(this)).light=e,i.light.updateMatrixWorld(),i.matrix=e.matrixWorld,i.matrixAutoUpdate=!1,i.color=a,void 0===r&&(r=1);var o=new yi;o.setAttribute("position",new ui([-r,r,0,r,r,0,r,-r,0,-r,-r,0,-r,r,0],3));var l=new jc({fog:!1,toneMapped:!1});return i.lightPlane=new Pc(o,l),i.add(i.lightPlane),(o=new yi).setAttribute("position",new ui([0,0,0,0,0,1],3)),i.targetLine=new Pc(o,l),i.add(i.targetLine),i.update(),i}return _(t,[{key:"dispose",value:function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}},{key:"update",value:function(){Zp.setFromMatrixPosition(this.light.matrixWorld),Jp.setFromMatrixPosition(this.light.target.matrixWorld),Qp.subVectors(Jp,Zp),this.lightPlane.lookAt(Jp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Jp),this.targetLine.scale.z=Qp.length()}}]),t}(Ia),Kp=new Ar,em=new qi,nm=function(e){w(t,e);var n=k(t);function t(e){var r;y(this,t);var a=new yi,i=new jc({color:16777215,vertexColors:!0,toneMapped:!1}),o=[],l=[],s={};function c(e,n){u(e),u(n)}function u(e){o.push(0,0,0),l.push(0,0,0),void 0===s[e]&&(s[e]=[]),s[e].push(o.length/3-1)}c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4"),a.setAttribute("position",new ui(o,3)),a.setAttribute("color",new ui(l,3)),(r=n.call(this,a,i)).type="CameraHelper",r.camera=e,r.camera.updateProjectionMatrix&&r.camera.updateProjectionMatrix(),r.matrix=e.matrixWorld,r.matrixAutoUpdate=!1,r.pointMap=s,r.update();var v=new Sr(16755200),f=new Sr(16711680),p=new Sr(43775),m=new Sr(16777215),d=new Sr(3355443);return r.setColors(v,f,p,m,d),r}return _(t,[{key:"setColors",value:function(e,n,t,r,a){var i=this.geometry.getAttribute("color");i.setXYZ(0,e.r,e.g,e.b),i.setXYZ(1,e.r,e.g,e.b),i.setXYZ(2,e.r,e.g,e.b),i.setXYZ(3,e.r,e.g,e.b),i.setXYZ(4,e.r,e.g,e.b),i.setXYZ(5,e.r,e.g,e.b),i.setXYZ(6,e.r,e.g,e.b),i.setXYZ(7,e.r,e.g,e.b),i.setXYZ(8,e.r,e.g,e.b),i.setXYZ(9,e.r,e.g,e.b),i.setXYZ(10,e.r,e.g,e.b),i.setXYZ(11,e.r,e.g,e.b),i.setXYZ(12,e.r,e.g,e.b),i.setXYZ(13,e.r,e.g,e.b),i.setXYZ(14,e.r,e.g,e.b),i.setXYZ(15,e.r,e.g,e.b),i.setXYZ(16,e.r,e.g,e.b),i.setXYZ(17,e.r,e.g,e.b),i.setXYZ(18,e.r,e.g,e.b),i.setXYZ(19,e.r,e.g,e.b),i.setXYZ(20,e.r,e.g,e.b),i.setXYZ(21,e.r,e.g,e.b),i.setXYZ(22,e.r,e.g,e.b),i.setXYZ(23,e.r,e.g,e.b),i.setXYZ(24,n.r,n.g,n.b),i.setXYZ(25,n.r,n.g,n.b),i.setXYZ(26,n.r,n.g,n.b),i.setXYZ(27,n.r,n.g,n.b),i.setXYZ(28,n.r,n.g,n.b),i.setXYZ(29,n.r,n.g,n.b),i.setXYZ(30,n.r,n.g,n.b),i.setXYZ(31,n.r,n.g,n.b),i.setXYZ(32,t.r,t.g,t.b),i.setXYZ(33,t.r,t.g,t.b),i.setXYZ(34,t.r,t.g,t.b),i.setXYZ(35,t.r,t.g,t.b),i.setXYZ(36,t.r,t.g,t.b),i.setXYZ(37,t.r,t.g,t.b),i.setXYZ(38,r.r,r.g,r.b),i.setXYZ(39,r.r,r.g,r.b),i.setXYZ(40,a.r,a.g,a.b),i.setXYZ(41,a.r,a.g,a.b),i.setXYZ(42,a.r,a.g,a.b),i.setXYZ(43,a.r,a.g,a.b),i.setXYZ(44,a.r,a.g,a.b),i.setXYZ(45,a.r,a.g,a.b),i.setXYZ(46,a.r,a.g,a.b),i.setXYZ(47,a.r,a.g,a.b),i.setXYZ(48,a.r,a.g,a.b),i.setXYZ(49,a.r,a.g,a.b),i.needsUpdate=!0}},{key:"update",value:function(){var e=this.geometry,n=this.pointMap;em.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),tm("c",n,e,em,0,0,-1),tm("t",n,e,em,0,0,1),tm("n1",n,e,em,-1,-1,-1),tm("n2",n,e,em,1,-1,-1),tm("n3",n,e,em,-1,1,-1),tm("n4",n,e,em,1,1,-1),tm("f1",n,e,em,-1,-1,1),tm("f2",n,e,em,1,-1,1),tm("f3",n,e,em,-1,1,1),tm("f4",n,e,em,1,1,1),tm("u1",n,e,em,.7,1.1,-1),tm("u2",n,e,em,-.7,1.1,-1),tm("u3",n,e,em,0,2,-1),tm("cf1",n,e,em,-1,0,1),tm("cf2",n,e,em,1,0,1),tm("cf3",n,e,em,0,-1,1),tm("cf4",n,e,em,0,1,1),tm("cn1",n,e,em,-1,0,-1),tm("cn2",n,e,em,1,0,-1),tm("cn3",n,e,em,0,-1,-1),tm("cn4",n,e,em,0,1,-1),e.getAttribute("position").needsUpdate=!0}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc);function tm(e,n,t,r,a,i,o){Kp.set(a,i,o).unproject(r);var l=n[e];if(void 0!==l)for(var s=t.getAttribute("position"),c=0,u=l.length;c<u;c++)s.setXYZ(l[c],Kp.x,Kp.y,Kp.z)}var rm,am,im=new Br,om=function(e){w(t,e);var n=k(t);function t(e){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16776960;y(this,t);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),o=new Float32Array(24),l=new yi;return l.setIndex(new ni(i,1)),l.setAttribute("position",new ni(o,3)),(r=n.call(this,l,new jc({color:a,toneMapped:!1}))).object=e,r.type="BoxHelper",r.matrixAutoUpdate=!1,r.update(),r}return _(t,[{key:"update",value:function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&im.setFromObject(this.object),!im.isEmpty()){var n=im.min,t=im.max,r=this.geometry.attributes.position,a=r.array;a[0]=t.x,a[1]=t.y,a[2]=t.z,a[3]=n.x,a[4]=t.y,a[5]=t.z,a[6]=n.x,a[7]=n.y,a[8]=t.z,a[9]=t.x,a[10]=n.y,a[11]=t.z,a[12]=t.x,a[13]=t.y,a[14]=n.z,a[15]=n.x,a[16]=t.y,a[17]=n.z,a[18]=n.x,a[19]=n.y,a[20]=n.z,a[21]=t.x,a[22]=n.y,a[23]=n.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}},{key:"setFromObject",value:function(e){return this.object=e,this.update(),this}},{key:"copy",value:function(e,n){return P(S(t.prototype),"copy",this).call(this,e,n),this.object=e.object,this}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc),lm=function(e){w(t,e);var n=k(t);function t(e){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16776960;y(this,t);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),o=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],l=new yi;return l.setIndex(new ni(i,1)),l.setAttribute("position",new ui(o,3)),(r=n.call(this,l,new jc({color:a,toneMapped:!1}))).box=e,r.type="Box3Helper",r.geometry.computeBoundingSphere(),r}return _(t,[{key:"updateMatrixWorld",value:function(e){var n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),P(S(t.prototype),"updateMatrixWorld",this).call(this,e))}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc),sm=function(e){w(t,e);var n=k(t);function t(e){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16776960;y(this,t);var o=i,l=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],s=new yi;s.setAttribute("position",new ui(l,3)),s.computeBoundingSphere(),(r=n.call(this,s,new jc({color:o,toneMapped:!1}))).type="PlaneHelper",r.plane=e,r.size=a;var c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new yi;return u.setAttribute("position",new ui(c,3)),u.computeBoundingSphere(),r.add(new Ai(u,new $a({color:o,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1}))),r}return _(t,[{key:"updateMatrixWorld",value:function(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),P(S(t.prototype),"updateMatrixWorld",this).call(this,e)}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}]),t}(Pc),cm=new Ar,um=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ar(0,0,1),a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ar(0,0,0),i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:16776960,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.2*i,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.2*l;return y(this,t),(e=n.call(this)).type="ArrowHelper",void 0===rm&&((rm=new yi).setAttribute("position",new ui([0,0,0,0,1,0],3)),(am=new bu(0,.5,1,5,1)).translate(0,-.5,0)),e.position.copy(a),e.line=new Pc(rm,new jc({color:o,toneMapped:!1})),e.line.matrixAutoUpdate=!1,e.add(e.line),e.cone=new Ai(am,new $a({color:o,toneMapped:!1})),e.cone.matrixAutoUpdate=!1,e.add(e.cone),e.setDirection(r),e.setLength(i,l,s),e}return _(t,[{key:"setDirection",value:function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{cm.set(e.z,0,-e.x).normalize();var n=Math.acos(e.y);this.quaternion.setFromAxisAngle(cm,n)}}},{key:"setLength",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2*e,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.2*n;this.line.scale.set(1,Math.max(1e-4,e-n),1),this.line.updateMatrix(),this.cone.scale.set(t,n,t),this.cone.position.y=e,this.cone.updateMatrix()}},{key:"setColor",value:function(e){this.line.material.color.set(e),this.cone.material.color.set(e)}},{key:"copy",value:function(e){return P(S(t.prototype),"copy",this).call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}},{key:"dispose",value:function(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}]),t}(Ia),vm=function(e){w(t,e);var n=k(t);function t(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;y(this,t);var a=[0,0,0,r,0,0,0,0,0,0,r,0,0,0,0,0,0,r],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],o=new yi;o.setAttribute("position",new ui(a,3)),o.setAttribute("color",new ui(i,3));var l=new jc({vertexColors:!0,toneMapped:!1});return(e=n.call(this,o,l)).type="AxesHelper",e}return _(t,[{key:"setColors",value:function(e,n,t){var r=new Sr,a=this.geometry.attributes.color.array;return r.set(e),r.toArray(a,0),r.toArray(a,3),r.set(n),r.toArray(a,6),r.toArray(a,9),r.set(t),r.toArray(a,12),r.toArray(a,15),this.geometry.attributes.color.needsUpdate=!0,this}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),t}(zc),fm=function(){function e(){y(this,e),this.type="ShapePath",this.color=new Sr,this.subPaths=[],this.currentPath=null}return _(e,[{key:"moveTo",value:function(e,n){return this.currentPath=new hu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,n),this}},{key:"lineTo",value:function(e,n){return this.currentPath.lineTo(e,n),this}},{key:"quadraticCurveTo",value:function(e,n,t,r){return this.currentPath.quadraticCurveTo(e,n,t,r),this}},{key:"bezierCurveTo",value:function(e,n,t,r,a,i){return this.currentPath.bezierCurveTo(e,n,t,r,a,i),this}},{key:"splineThru",value:function(e){return this.currentPath.splineThru(e),this}},{key:"toShapes",value:function(e){function n(e,n){for(var t=n.length,r=!1,a=t-1,i=0;i<t;a=i++){var o=n[a],l=n[i],s=l.x-o.x,c=l.y-o.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(o=n[i],s=-s,l=n[a],c=-c),e.y<o.y||e.y>l.y)continue;if(e.y===o.y){if(e.x===o.x)return!0}else{var u=c*(e.x-o.x)-s*(e.y-o.y);if(0===u)return!0;if(u<0)continue;r=!r}}else{if(e.y!==o.y)continue;if(l.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=l.x)return!0}}return r}var t,r,a,i=tv.isClockWise,o=this.subPaths;if(0===o.length)return[];var l=[];if(1===o.length)return r=o[0],(a=new Cu).curves=r.curves,l.push(a),l;var s=!i(o[0].getPoints());s=e?!s:s;var c,u,v=[],f=[],p=[],m=0;f[m]=void 0,p[m]=[];for(var d=0,h=o.length;d<h;d++)t=i(c=(r=o[d]).getPoints()),(t=e?!t:t)?(!s&&f[m]&&m++,f[m]={s:new Cu,p:c},f[m].s.curves=r.curves,s&&m++,p[m]=[]):p[m].push({h:r,p:c[0]});if(!f[0])return function(e){for(var n=[],t=0,r=e.length;t<r;t++){var a=e[t],i=new Cu;i.curves=a.curves,n.push(i)}return n}(o);if(f.length>1){for(var g=!1,x=0,y=0,b=f.length;y<b;y++)v[y]=[];for(var _=0,w=f.length;_<w;_++)for(var S=p[_],U=0;U<S.length;U++){for(var M=S[U],j=!0,k=0;k<f.length;k++)n(M.p,f[k].p)&&(_!==k&&x++,j?(j=!1,v[k].push(M)):g=!0);j&&v[_].push(M)}x>0&&!1===g&&(p=v)}for(var T=0,C=f.length;T<C;T++){a=f[T].s,l.push(a);for(var R=0,F=(u=p[T]).length;R<F;R++)a.holes.push(u[R].h)}return l}}]),e}(),pm=mm();function mm(){for(var e=new ArrayBuffer(4),n=new Float32Array(e),t=new Uint32Array(e),r=new Uint32Array(512),a=new Uint32Array(512),i=0;i<256;++i){var o=i-127;o<-27?(r[i]=0,r[256|i]=32768,a[i]=24,a[256|i]=24):o<-14?(r[i]=1024>>-o-14,r[256|i]=1024>>-o-14|32768,a[i]=-o-1,a[256|i]=-o-1):o<=15?(r[i]=o+15<<10,r[256|i]=o+15<<10|32768,a[i]=13,a[256|i]=13):o<128?(r[i]=31744,r[256|i]=64512,a[i]=24,a[256|i]=24):(r[i]=31744,r[256|i]=64512,a[i]=13,a[256|i]=13)}for(var l=new Uint32Array(2048),s=new Uint32Array(64),c=new Uint32Array(64),u=1;u<1024;++u){for(var v=u<<13,f=0;0===(8388608&v);)v<<=1,f-=8388608;v&=-8388609,f+=947912704,l[u]=v|f}for(var p=1024;p<2048;++p)l[p]=939524096+(p-1024<<13);for(var m=1;m<31;++m)s[m]=m<<23;s[31]=1199570944,s[32]=2147483648;for(var d=33;d<63;++d)s[d]=2147483648+(d-32<<23);s[63]=3347054592;for(var h=1;h<64;++h)32!==h&&(c[h]=1024);return{floatView:n,uint32View:t,baseTable:r,shiftTable:a,mantissaTable:l,exponentTable:s,offsetTable:c}}var dm=Object.freeze({__proto__:null,toHalfFloat:function(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=Qt(e,-65504,65504),pm.floatView[0]=e;var n=pm.uint32View[0],t=n>>23&511;return pm.baseTable[t]+((8388607&n)>>pm.shiftTable[t])},fromHalfFloat:function(e){var n=e>>10;return pm.uint32View[0]=pm.mantissaTable[pm.offsetTable[n]+(1023&e)]+pm.exponentTable[n],pm.floatView[0]}});function hm(){console.error("THREE.ImmediateRenderObject has been removed.")}var gm=function(e){w(t,e);var n=k(t);function t(e,r,a){var i;return y(this,t),console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),(i=n.call(this,e,r,a)).samples=4,i}return _(t)}(Rr),xm=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),n.call(this,e,r,a,i)}return _(t)}(Fr),ym=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),n.call(this,e,r,a,i)}return _(t)}(Dr),bm=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l){return y(this,t),console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),n.call(this,e,r,a,i,o,l)}return _(t)}(Oi),_m=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),n.call(this,e,r,a,i)}return _(t)}(xu),wm=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),n.call(this,e,r,a,i)}return _(t)}(yu),Sm=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s){return y(this,t),console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),n.call(this,e,r,a,i,o,l,s)}return _(t)}(_u),Um=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s,c){return y(this,t),console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),n.call(this,e,r,a,i,o,l,s,c)}return _(t)}(bu),Mm=function(e){w(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),n.call(this,e,r)}return _(t)}(Su),jm=function(e){w(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),n.call(this,e,r)}return _(t)}(iv),km=function(e){w(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),n.call(this,e,r)}return _(t)}(lv),Tm=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),n.call(this,e,r,a,i)}return _(t)}(gu),Cm=function(e){w(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),n.call(this,e,r)}return _(t)}(sv),Rm=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),n.call(this,e,r,a,i)}return _(t)}(io),Fm=function(e){w(t,e);var n=k(t);function t(e,r,a,i){return y(this,t),console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),n.call(this,e,r,a,i)}return _(t)}(wu),Pm=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l){return y(this,t),console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),n.call(this,e,r,a,i,o,l)}return _(t)}(cv),Dm=function(e){w(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),n.call(this,e,r)}return _(t)}(uv),Em=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l,s){return y(this,t),console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),n.call(this,e,r,a,i,o,l,s)}return _(t)}(vv),zm=function(e){w(t,e);var n=k(t);function t(e,r){return y(this,t),console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),n.call(this,e,r)}return _(t)}(fv),Lm=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o){return y(this,t),console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),n.call(this,e,r,a,i,o)}return _(t)}(pv),Am=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o,l){return y(this,t),console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),n.call(this,e,r,a,i,o,l)}return _(t)}(mv),Im=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o){return y(this,t),console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),n.call(this,e,r,a,i,o)}return _(t)}(dv);"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:E}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=E);var Om=t(791),Bm=t.t(Om,2),Nm=t(585);function Gm(e){var n,t=new Set,r=function(e,r){var a="function"===typeof e?e(n):e;if(a!==n){var i=n;n=r?a:Object.assign({},n,a),t.forEach((function(e){return e(n,i)}))}},a=function(){return n},i={setState:r,getState:a,subscribe:function(e,r,i){return r||i?function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Object.is;console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");var o=r(n);function l(){var t=r(n);if(!i(o,t)){var a=o;e(o=t,a)}}return t.add(l),function(){return t.delete(l)}}(e,r,i):(t.add(e),function(){return t.delete(e)})},destroy:function(){return t.clear()}};return n=e(r,a,i),i}var Vm="undefined"===typeof window||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent)?Om.useEffect:Om.useLayoutEffect;var qm=t(258),Hm=t.n(qm),Wm=t(545);function Xm(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(e,n){return e===n};if(e===n)return!0;if(!e||!n)return!1;var r=e.length;if(n.length!==r)return!1;for(var a=0;a<r;a++)if(!t(e[a],n[a]))return!1;return!0}var Ym=[];function Zm(e,n){var t,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=f(Ym);try{for(i.s();!(t=i.n()).done;){var o=t.value;if(Xm(n,o.keys,o.equal)){if(r)return;if(Object.prototype.hasOwnProperty.call(o,"error"))throw o.error;if(Object.prototype.hasOwnProperty.call(o,"response"))return o.response;if(!r)throw o.promise}}}catch(s){i.e(s)}finally{i.f()}var l={keys:n,equal:a.equal,promise:e.apply(void 0,g(n)).then((function(e){return l.response=e})).then((function(){a.lifespan&&a.lifespan>0&&setTimeout((function(){var e=Ym.indexOf(l);-1!==e&&Ym.splice(e,1)}),a.lifespan)})).catch((function(e){return l.error=e}))};if(Ym.push(l),!r)throw l.promise}var Jm,Qm,$m=["children","key","ref"],Km=["children","key","ref"],ed=["args","attach"],nd=["args","children"],td=["args","children"],rd=["params"],ad=function(e){return e&&e.isOrthographicCamera},id="undefined"!==typeof window&&(null!=(Jm=window.document)&&Jm.createElement||"ReactNative"===(null==(Qm=window.navigator)?void 0:Qm.product))?Om.useLayoutEffect:Om.useEffect;function od(e){var n=Om.useRef(e);return id((function(){n.current=e}),[e]),n}function ld(e){var n=e.set;return id((function(){return n(new Promise((function(){return null}))),function(){return n(!1)}}),[n]),null}var sd=function(e){w(t,e);var n=k(t);function t(){var e;y(this,t);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(e=n.call.apply(n,[this].concat(a))).state={error:!1},e}return _(t,[{key:"componentDidCatch",value:function(e){this.props.set(e)}},{key:"render",value:function(){return this.state.error?null:this.props.children}}]),t}(Om.Component);sd.getDerivedStateFromError=function(){return{error:!0}};var cd="__default";function ud(e){var n="undefined"!==typeof window?window.devicePixelRatio:1;return Array.isArray(e)?Math.min(Math.max(e[0],n),e[1]):e}var vd=function(e){var n;return null==(n=e.__r3f)?void 0:n.root.getState()},fd={obj:function(e){return e===Object(e)&&!fd.arr(e)&&"function"!==typeof e},fun:function(e){return"function"===typeof e},str:function(e){return"string"===typeof e},num:function(e){return"number"===typeof e},boo:function(e){return"boolean"===typeof e},und:function(e){return void 0===e},arr:function(e){return Array.isArray(e)},equ:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=t.arrays,a=void 0===r?"shallow":r,i=t.objects,o=void 0===i?"reference":i,l=t.strict,s=void 0===l||l;if(typeof e!==typeof n||!!e!==!!n)return!1;if(fd.str(e)||fd.num(e))return e===n;var c=fd.obj(e);if(c&&"reference"===o)return e===n;var u,v=fd.arr(e);if(v&&"reference"===a)return e===n;if((v||c)&&e===n)return!0;for(u in e)if(!(u in n))return!1;for(u in s?n:e)if(e[u]!==n[u])return!1;if(fd.und(u)){if(v&&0===e.length&&0===n.length)return!0;if(c&&0===Object.keys(e).length&&0===Object.keys(n).length)return!0;if(e!==n)return!1}return!0}};function pd(e){var n={nodes:{},materials:{}};return e&&e.traverse((function(e){e.name&&(n.nodes[e.name]=e),e.material&&!n.materials[e.material.name]&&(n.materials[e.material.name]=e.material)})),n}function md(e,n){var t=e;return(null!=n&&n.primitive||!t.__r3f)&&(t.__r3f=v({type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null},n)),e}function dd(e,n){var t=e;if(n.includes("-")){var r=n.split("-"),a=r.pop();return t=r.reduce((function(e,n){return e[n]}),e),{target:t,key:a}}return{target:t,key:n}}var hd=/-\d+$/;function gd(e,n,t){if(fd.str(t)){if(hd.test(t)){var r=dd(e,t.replace(hd,"")),a=r.target,i=r.key;Array.isArray(a[i])||(a[i]=[])}var o=dd(e,t),l=o.target,s=o.key;n.__r3f.previousAttach=l[s],l[s]=n}else n.__r3f.previousAttach=t(e,n)}function xd(e,n,t){var r,a;if(fd.str(t)){var i=dd(e,t),o=i.target,l=i.key,s=n.__r3f.previousAttach;void 0===s?delete o[l]:o[l]=s}else null==(r=n.__r3f)||null==r.previousAttach||r.previousAttach(e,n);null==(a=n.__r3f)||delete a.previousAttach}function yd(e,n){n.children,n.key,n.ref;var t,a=r(n,$m),i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(i.children,i.key,i.ref,r(i,Km)),l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=null!=(t=null==e?void 0:e.__r3f)?t:{},u=Object.entries(a),f=[];if(l)for(var p=Object.keys(o),m=0;m<p.length;m++)a.hasOwnProperty(p[m])||u.unshift([p[m],cd+"remove"]);u.forEach((function(n){var t,r=s(n,2),i=r[0],l=r[1];if((null==(t=e.__r3f)||!t.primitive||"object"!==i)&&!fd.equ(l,o[i])){if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(i))return f.push([i,l,!0,[]]);var c=[];for(var u in i.includes("-")&&(c=i.split("-")),f.push([i,l,!1,c]),a){var v=a[u];u.startsWith("".concat(i,"-"))&&f.push([u,v,!1,u.split("-")])}}}));var d=v({},a);return c.memoizedProps&&c.memoizedProps.args&&(d.args=c.memoizedProps.args),c.memoizedProps&&c.memoizedProps.attach&&(d.attach=c.memoizedProps.attach),{memoized:d,changes:f}}function bd(e,n){var t,r,a,i,o=null!=(t=e.__r3f)?t:{},l=o.root,c=null!=(r=null==l||null==l.getState?void 0:l.getState())?r:{},u=(i=n)&&i.memoized&&i.changes?n:yd(e,n),v=u.memoized,f=u.changes,p=o.eventCount;e.__r3f&&(e.__r3f.memoizedProps=v);for(var m=0;m<f.length;m++){var h,y=s(f[m],4),b=y[0],_=y[1],w=y[2],S=y[3],U=e,M=U[b];if(S.length&&(M=S.reduce((function(e,n){return e[n]}),e),!M||!M.set)){var j=x(S.reverse()),k=j[0];U=j.slice(1).reverse().reduce((function(e,n){return e[n]}),e),b=k}if(_===cd+"remove")if(M&&M.constructor)_=d(M.constructor,g(null!=(h=v.args)?h:[]));else if(U.constructor){var T,C=d(U.constructor,g(null!=(T=U.__r3f.memoizedProps.args)?T:[]));_=C[M],C.dispose&&C.dispose()}else _=0;if(w)_?o.handlers[b]=_:delete o.handlers[b],o.eventCount=Object.keys(o.handlers).length;else if(M&&M.set&&(M.copy||M instanceof Ua)){var R;if(Array.isArray(_))M.fromArray?M.fromArray(_):(R=M).set.apply(R,g(_));else if(M.copy&&_&&_.constructor&&M.constructor.name===_.constructor.name)M.copy(_);else if(void 0!==_){var F=M instanceof Sr;!F&&M.setScalar?M.setScalar(_):M instanceof Ua&&_ instanceof Ua?M.mask=_.mask:M.set(_);0}}else U[b]=_,!c.linear&&U[b]instanceof Tr&&(U[b].encoding=ct);_d(e)}if(o.parent&&c.internal&&e.raycast&&p!==o.eventCount){var P=c.internal.interaction.indexOf(e);P>-1&&c.internal.interaction.splice(P,1),o.eventCount&&c.internal.interaction.push(e)}return f.length&&null!=(a=e.__r3f)&&a.parent&&wd(e),e}function _d(e){var n,t,r=null==(n=e.__r3f)||null==(t=n.root)||null==t.getState?void 0:t.getState();r&&0===r.internal.frames&&r.invalidate()}function wd(e){null==e.onUpdate||e.onUpdate(e)}function Sd(e,n){e.manual||(ad(e)?(e.left=n.width/-2,e.right=n.width/2,e.top=n.height/2,e.bottom=n.height/-2):e.aspect=n.width/n.height,e.updateProjectionMatrix(),e.updateMatrixWorld())}function Ud(e,n,t){var r=t.pop(),a=t.reduce((function(e,n){return e[n]}),e);return a[r]=n}function Md(e){return(e.eventObject||e.object).uuid+"/"+e.index+e.instanceId}function jd(e,n,t,r){var a=t.get(n);a&&(t.delete(n),0===t.size&&(e.delete(r),a.target.releasePointerCapture(r)))}function kd(e){function n(e){return e.filter((function(e){return["Move","Over","Enter","Out","Leave"].some((function(n){var t;return null==(t=e.__r3f)?void 0:t.handlers["onPointer"+n]}))}))}function t(n){var t,r=e.getState().internal,a=f(r.hovered.values());try{var i=function(){var e=t.value;if(!n.length||!n.find((function(n){return n.object===e.object&&n.index===e.index&&n.instanceId===e.instanceId}))){var a=e.eventObject.__r3f,i=null==a?void 0:a.handlers;if(r.hovered.delete(Md(e)),null!=a&&a.eventCount){var o=v(v({},e),{},{intersections:n});null==i.onPointerOut||i.onPointerOut(o),null==i.onPointerLeave||i.onPointerLeave(o)}}};for(a.s();!(t=a.n()).done;)i()}catch(o){a.e(o)}finally{a.f()}}function r(e,n){for(var t=0;t<n.length;t++){var r=n[t].__r3f;null==r||null==r.handlers.onPointerMissed||r.handlers.onPointerMissed(e)}}return{handlePointer:function(a){switch(a){case"onPointerLeave":case"onPointerCancel":return function(){return t([])};case"onLostPointerCapture":return function(n){var r=e.getState().internal;"pointerId"in n&&r.capturedMap.has(n.pointerId)&&(r.capturedMap.delete(n.pointerId),t([]))}}return function(i){var o=e.getState(),l=o.onPointerMissed,s=o.internal;s.lastEvent.current=i;var c="onPointerMove"===a,u="onClick"===a||"onContextMenu"===a||"onDoubleClick"===a,p=function(n,t){for(var r=e.getState(),a=new Set,i=[],o=t?t(r.internal.interaction):r.internal.interaction,l=0;l<o.length;l++){var s=vd(o[l]);s&&(s.raycaster.camera=void 0)}r.previousRoot||null==r.events.compute||r.events.compute(n,r);var c=o.flatMap((function(e){var t,r=vd(e);return r&&r.events.enabled&&null!==r.raycaster.camera?(void 0===r.raycaster.camera&&(null==r.events.compute||r.events.compute(n,r,null==(t=r.previousRoot)?void 0:t.getState()),void 0===r.raycaster.camera&&(r.raycaster.camera=null)),r.raycaster.camera?r.raycaster.intersectObject(e,!0):[]):[]})).sort((function(e,n){var t=vd(e.object),r=vd(n.object);return t&&r&&r.events.priority-t.events.priority||e.distance-n.distance})).filter((function(e){var n=Md(e);return!a.has(n)&&(a.add(n),!0)}));r.events.filter&&(c=r.events.filter(c,r));var u,p=f(c);try{for(p.s();!(u=p.n()).done;)for(var m=u.value,d=m.object;d;){var h;null!=(h=d.__r3f)&&h.eventCount&&i.push(v(v({},m),{},{eventObject:d})),d=d.parent}}catch(b){p.e(b)}finally{p.f()}if("pointerId"in n&&r.internal.capturedMap.has(n.pointerId)){var g,x=f(r.internal.capturedMap.get(n.pointerId).values());try{for(x.s();!(g=x.n()).done;){var y=g.value;a.has(Md(y.intersection))||i.push(y.intersection)}}catch(b){x.e(b)}finally{x.f()}}return i}(i,c?n:void 0),m=u?function(n){var t=e.getState().internal,r=n.offsetX-t.initialClick[0],a=n.offsetY-t.initialClick[1];return Math.round(Math.sqrt(r*r+a*a))}(i):0;"onPointerDown"===a&&(s.initialClick=[i.offsetX,i.offsetY],s.initialHits=p.map((function(e){return e.eventObject}))),u&&!p.length&&m<=2&&(r(i,s.interaction),l&&l(i)),c&&t(p),function(n,r,a,i){var o=e.getState();n.length&&function(){var e,l={stopped:!1},s=f(n);try{var c=function(){var s=e.value,c=vd(s.object)||o,u=c.raycaster,f=c.pointer,p=c.camera,m=c.internal,d=new Ar(f.x,f.y,0).unproject(p),h=function(e){var n,t;return null!=(n=null==(t=m.capturedMap.get(e))?void 0:t.has(s.eventObject))&&n},x=function(e){var n={intersection:s,target:r.target};m.capturedMap.has(e)?m.capturedMap.get(e).set(s.eventObject,n):m.capturedMap.set(e,new Map([[s.eventObject,n]])),r.target.setPointerCapture(e)},y=function(e){var n=m.capturedMap.get(e);n&&jd(m.capturedMap,s.eventObject,n,e)},b={};for(var _ in r){var w=r[_];"function"!==typeof w&&(b[_]=w)}var S=v(v(v({},s),b),{},{pointer:f,intersections:n,stopped:l.stopped,delta:a,unprojectedPoint:d,ray:u.ray,camera:p,stopPropagation:function(){var e="pointerId"in r&&m.capturedMap.get(r.pointerId);if((!e||e.has(s.eventObject))&&(S.stopped=l.stopped=!0,m.hovered.size&&Array.from(m.hovered.values()).find((function(e){return e.eventObject===s.eventObject})))){var a=n.slice(0,n.indexOf(s));t([].concat(g(a),[s]))}},target:{hasPointerCapture:h,setPointerCapture:x,releasePointerCapture:y},currentTarget:{hasPointerCapture:h,setPointerCapture:x,releasePointerCapture:y},nativeEvent:r});if(i(S),!0===l.stopped)return"break"};for(s.s();!(e=s.n()).done&&"break"!==c(););}catch(u){s.e(u)}finally{s.f()}}()}(p,i,m,(function(e){var n=e.eventObject,t=n.__r3f,o=null==t?void 0:t.handlers;if(null!=t&&t.eventCount)if(c){if(o.onPointerOver||o.onPointerEnter||o.onPointerOut||o.onPointerLeave){var l=Md(e),v=s.hovered.get(l);v?v.stopped&&e.stopPropagation():(s.hovered.set(l,e),null==o.onPointerOver||o.onPointerOver(e),null==o.onPointerEnter||o.onPointerEnter(e))}null==o.onPointerMove||o.onPointerMove(e)}else{var f=o[a];f?u&&!s.initialHits.includes(n)||(r(i,s.interaction.filter((function(e){return!s.initialHits.includes(e)}))),f(e)):u&&s.initialHits.includes(n)&&r(i,s.interaction.filter((function(e){return!s.initialHits.includes(e)})))}}))}}}}var Td={};var Cd,Rd=function(e){return!(null==e||!e.render)},Fd=Om.createContext(null);var Pd,Dd,Ed=new Set,zd=new Set,Ld=new Set;function Ad(e,n){if(e.size){var t,r=f(e.values());try{for(r.s();!(t=r.n()).done;){(0,t.value.callback)(n)}}catch(a){r.e(a)}finally{r.f()}}}function Id(e,n){switch(e){case"before":return Ad(Ed,n);case"after":return Ad(zd,n);case"tail":return Ad(Ld,n)}}function Od(e,n,t){var r=n.clock.getDelta();for("never"===n.frameloop&&"number"===typeof e&&(r=e-n.clock.elapsedTime,n.clock.oldTime=n.clock.elapsedTime,n.clock.elapsedTime=e),Pd=n.internal.subscribers,Cd=0;Cd<Pd.length;Cd++)(Dd=Pd[Cd]).ref.current(Dd.store.getState(),r,t);return!n.internal.priority&&n.gl.render&&n.gl.render(n.scene,n.camera),n.internal.frames=Math.max(0,n.internal.frames-1),"always"===n.frameloop?1:n.internal.frames}function Bd(){var e=Om.useContext(Fd);if(!e)throw new Error("R3F: Hooks can only be used within the Canvas component!");return e}function Nd(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=Bd(),r=t.getState().internal.subscribe,a=od(e);return id((function(){return r(a,n,t)}),[n,r,t]),null}function Gd(e,n){return function(t){var r=new t;e&&e(r);for(var a=arguments.length,i=new Array(a>1?a-1:0),o=1;o<a;o++)i[o-1]=arguments[o];return Promise.all(i.map((function(e){return new Promise((function(t,a){return r.load(e,(function(e){e.scene&&Object.assign(e,pd(e.scene)),t(e)}),n,(function(n){return a(new Error("Could not load ".concat(e,": ").concat(n.message,")")))}))}))})))}}function Vd(e,n,t,r){var a=Array.isArray(n)?n:[n],i=function(e,n,t){return Zm(e,n,!1,t)}(Gd(t,r),[e].concat(g(a)),{equal:fd.equ});return Array.isArray(n)?i:i[0]}Vd.preload=function(e,n,t){var r=Array.isArray(n)?n:[n];return function(e,n,t){Zm(e,n,!0,t)}(Gd(t),[e].concat(g(r)))},Vd.clear=function(e,n){var t=Array.isArray(n)?n:[n];return function(e){if(void 0===e||0===e.length)Ym.splice(0,Ym.length);else{var n=Ym.find((function(n){return Xm(e,n.keys,n.equal)}));if(n){var t=Ym.indexOf(n);-1!==t&&Ym.splice(t,1)}}}([e].concat(g(t)))};var qd=new Map,Hd=function(e){var n,t,r,a=!1;function i(o){t=requestAnimationFrame(i),a=!0,n=0,Id("before",o);var l,s=f(e.values());try{for(s.s();!(l=s.n()).done;){var c,u=l.value;!(r=u.store.getState()).internal.active||!("always"===r.frameloop||r.internal.frames>0)||null!=(c=r.gl.xr)&&c.isPresenting||(n+=Od(o,r))}}catch(v){s.e(v)}finally{s.f()}if(Id("after",o),0===n)return Id("tail",o),a=!1,cancelAnimationFrame(t)}return{loop:i,invalidate:function n(t){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!t)return e.forEach((function(e){return n(e.store.getState())}),o);null!=(r=t.gl.xr)&&r.isPresenting||!t.internal.active||"never"===t.frameloop||(t.internal.frames=Math.min(60,t.internal.frames+o),a||(a=!0,requestAnimationFrame(i)))},advance:function(n){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(t&&Id("before",n),r)Od(n,r,a);else{var i,o=f(e.values());try{for(o.s();!(i=o.n()).done;){var l=i.value;Od(n,l.store.getState())}}catch(s){o.e(s)}finally{o.f()}}t&&Id("after",n)}}}(qd),Wd=Hd.invalidate,Xd=Hd.advance,Yd=function(e,n){function t(e,n,t){var a,i=n.args,o=void 0===i?[]:i,l=n.attach,s=r(n,ed),c="".concat(e[0].toUpperCase()).concat(e.slice(1));if("primitive"===e){if(void 0===s.object)throw new Error("R3F: Primitives without 'object' are invalid!");a=md(s.object,{type:e,root:t,attach:l,primitive:!0})}else{var u=Td[c];if(!u)throw new Error("R3F: ".concat(c," is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively"));if(!Array.isArray(o))throw new Error("R3F: The args prop must be an array!");a=md(d(u,g(o)),{type:e,root:t,attach:l,memoizedProps:{args:o}})}return void 0===a.__r3f.attach&&(a instanceof yi?a.__r3f.attach="geometry":a instanceof Qa&&(a.__r3f.attach="material")),"inject"!==c&&bd(a,s),a}function a(e,n){var t,r,a=!1;n&&(null!=(t=n.__r3f)&&t.attach?gd(e,n,n.__r3f.attach):n.isObject3D&&e.isObject3D&&(e.add(n),a=!0),a||null==(r=e.__r3f)||r.objects.push(n),n.__r3f||md(n,{}),n.__r3f.parent=e,wd(n),_d(n))}function i(e,n,t){var r=!1;if(n){var a,i;if(null!=(a=n.__r3f)&&a.attach)gd(e,n,n.__r3f.attach);else if(n.isObject3D&&e.isObject3D){n.parent=e,n.dispatchEvent({type:"added"});var o=e.children.filter((function(e){return e!==n})),l=o.indexOf(t);e.children=[].concat(g(o.slice(0,l)),[n],g(o.slice(l))),r=!0}r||null==(i=e.__r3f)||i.objects.push(n),n.__r3f||md(n,{}),n.__r3f.parent=e,wd(n),_d(n)}}function o(e,n){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e&&g(e).forEach((function(e){return l(n,e,t)}))}function l(e,n,t){if(n){var r,a,i;if(n.__r3f&&(n.__r3f.parent=null),null!=(r=e.__r3f)&&r.objects&&(e.__r3f.objects=e.__r3f.objects.filter((function(e){return e!==n}))),null!=(a=n.__r3f)&&a.attach)xd(e,n,n.__r3f.attach);else if(n.isObject3D&&e.isObject3D){var l;e.remove(n),null!=(l=n.__r3f)&&l.root&&function(e,n){var t=e.getState().internal;t.interaction=t.interaction.filter((function(e){return e!==n})),t.initialHits=t.initialHits.filter((function(e){return e!==n})),t.hovered.forEach((function(e,r){e.eventObject!==n&&e.object!==n||t.hovered.delete(r)})),t.capturedMap.forEach((function(e,r){jd(t.capturedMap,n,e,r)}))}(n.__r3f.root,n)}var s,c=null==(i=n.__r3f)?void 0:i.primitive,u=void 0===t?null!==n.dispose&&!c:t;if(!c)o(null==(s=n.__r3f)?void 0:s.objects,n,u),o(n.children,n,u);n.__r3f&&(delete n.__r3f.root,delete n.__r3f.objects,delete n.__r3f.handlers,delete n.__r3f.memoizedProps,c||delete n.__r3f),u&&n.dispose&&"Scene"!==n.type&&(0,Wm.unstable_scheduleCallback)(Wm.unstable_IdlePriority,(function(){try{n.dispose()}catch(e){}})),_d(e)}}var c=function(){return console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.")};return{reconciler:Hm()({createInstance:t,removeChild:l,appendChild:a,appendInitialChild:a,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:function(e,n){if(n){var t=e.getState().scene;t.__r3f&&(t.__r3f.root=e,a(t,n))}},removeChildFromContainer:function(e,n){n&&l(e.getState().scene,n)},insertInContainerBefore:function(e,n,t){if(n&&t){var r=e.getState().scene;r.__r3f&&i(r,n,t)}},getRootHostContext:function(){return null},getChildHostContext:function(e){return e},finalizeInitialChildren:function(e){var n,t=null!=(n=null==e?void 0:e.__r3f)?n:{};return Boolean(t.handlers)},prepareUpdate:function(e,n,t,a){if(e.__r3f.primitive&&a.object&&a.object!==e)return[!0];var i=a.args,o=void 0===i?[]:i,l=(a.children,r(a,nd)),s=t.args,c=void 0===s?[]:s,u=(t.children,r(t,td));if(!Array.isArray(o))throw new Error("R3F: the args prop must be an array!");if(o.some((function(e,n){return e!==c[n]})))return[!0];var v=yd(e,l,u,!0);return v.changes.length?[!1,v]:null},commitUpdate:function(e,n,r,i,o,c){var u=s(n,2),v=u[0],p=u[1];v?function(e,n,r,i){var o,s=null==(o=e.__r3f)?void 0:o.parent;if(s){var c=t(n,r,e.__r3f.root);if(e.children){var u,v=f(e.children);try{for(v.s();!(u=v.n()).done;){var p=u.value;p.__r3f&&a(c,p)}}catch(m){v.e(m)}finally{v.f()}e.children=e.children.filter((function(e){return!e.__r3f}))}e.__r3f.objects.forEach((function(e){return a(c,e)})),e.__r3f.objects=[],l(s,e),a(s,c),c.raycast&&c.__r3f.eventCount&&c.__r3f.root.getState().internal.interaction.push(c),[i,i.alternate].forEach((function(e){null!==e&&(e.stateNode=c,e.ref&&("function"===typeof e.ref?e.ref(c):e.ref.current=c))}))}}(e,r,o,c):bd(e,p)},commitMount:function(e,n,t,r){var a,i=null!=(a=e.__r3f)?a:{};e.raycast&&i.handlers&&i.eventCount&&e.__r3f.root.getState().internal.interaction.push(e)},getPublicInstance:function(e){return e},prepareForCommit:function(){return null},preparePortalMount:function(e){return md(e.getState().scene)},resetAfterCommit:function(){},shouldSetTextContent:function(){return!1},clearContainer:function(){return!1},hideInstance:function(e){var n,t=null!=(n=e.__r3f)?n:{},r=t.attach,a=t.parent;r&&a&&xd(a,e,r),e.isObject3D&&(e.visible=!1),_d(e)},unhideInstance:function(e,n){var t,r=null!=(t=e.__r3f)?t:{},a=r.attach,i=r.parent;a&&i&&gd(i,e,a),(e.isObject3D&&null==n.visible||n.visible)&&(e.visible=!0),_d(e)},createTextInstance:c,hideTextInstance:c,unhideTextInstance:c,getCurrentEventPriority:function(){return n?n():Nm.DefaultEventPriority},beforeActiveInstanceBlur:function(){},afterActiveInstanceBlur:function(){},detachDeletedInstance:function(){},now:"undefined"!==typeof performance&&fd.fun(performance.now)?performance.now:fd.fun(Date.now)?Date.now:function(){return 0},scheduleTimeout:fd.fun(setTimeout)?setTimeout:void 0,cancelTimeout:fd.fun(clearTimeout)?clearTimeout:void 0}),applyProps:bd}}(0,(function(){var e,n="undefined"!==typeof self&&self||"undefined"!==typeof window&&window;if(!n)return Nm.DefaultEventPriority;switch(null==(e=n.event)?void 0:e.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Nm.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Nm.ContinuousEventPriority;default:return Nm.DefaultEventPriority}})),Zd=Yd.reconciler,Jd=Yd.applyProps,Qd={objects:"shallow",strict:!1},$d=function(e,n){var t="function"===typeof e?e(n):e;return Rd(t)?t:new zs(v({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0},e))};function Kd(e,n){if(n)return n;if(e instanceof HTMLCanvasElement&&e.parentElement){var t=e.parentElement.getBoundingClientRect();return{width:t.width,height:t.height,top:t.top,left:t.left}}return{width:0,height:0,top:0,left:0}}function eh(e){var t=qd.get(e),a=null==t?void 0:t.fiber,i=null==t?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");var o,l="function"===typeof reportError?reportError:console.error,c=i||function(e,n){var t=function(e){var n="function"===typeof e?Gm(e):e,t=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.getState,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object.is,a=s((0,Om.useReducer)((function(e){return e+1}),0),2)[1],i=n.getState(),o=(0,Om.useRef)(i),l=(0,Om.useRef)(t),c=(0,Om.useRef)(r),u=(0,Om.useRef)(!1),v=(0,Om.useRef)();void 0===v.current&&(v.current=t(i));var f=!1;(o.current!==i||l.current!==t||c.current!==r||u.current)&&(e=t(i),f=!r(v.current,e)),Vm((function(){f&&(v.current=e),o.current=i,l.current=t,c.current=r,u.current=!1}));var p=(0,Om.useRef)(i);Vm((function(){var e=function(){try{var e=n.getState(),t=l.current(e);c.current(v.current,t)||(o.current=e,v.current=t,a())}catch(r){u.current=!0,a()}},t=n.subscribe(e);return n.getState()!==p.current&&e(),t}),[]);var m=f?e:v.current;return(0,Om.useDebugValue)(m),m};return Object.assign(t,n),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");var e=[t,n];return{next:function(){var n=e.length<=0;return{value:e.shift(),done:n}}}},t}((function(t,r){var a=new Ar,i=new Ar,o=new Ar;function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r().camera,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r().size,l=t.width,s=t.height,c=t.top,u=t.left,v=l/s;n instanceof Ar?o.copy(n):o.set.apply(o,g(n));var f=e.getWorldPosition(a).distanceTo(o);if(ad(e))return{width:l/e.zoom,height:s/e.zoom,top:c,left:u,factor:1,distance:f,aspect:v};var p=e.fov*Math.PI/180,m=2*Math.tan(p/2)*f,d=m*(l/s);return{width:d,height:m,top:c,left:u,factor:l/d,distance:f,aspect:v}}var s=void 0,c=function(e){return t((function(n){return{performance:v(v({},n.performance),{},{current:e})}}))},u=new or,f={set:t,get:r,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,invalidate:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return e(r(),n)},advance:function(e,t){return n(e,t,r())},legacy:!1,linear:!1,flat:!1,scene:md(new Bs),controls:null,clock:new Xf,pointer:u,mouse:u,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:function(){var e=r();s&&clearTimeout(s),e.performance.current!==e.performance.min&&c(e.performance.min),s=setTimeout((function(){return c(r().performance.max)}),e.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:l},setEvents:function(e){return t((function(n){return v(v({},n),{},{events:v(v({},n.events),e)})}))},setSize:function(e,n,a,o,s){var c=r().camera,u={width:e,height:n,top:o||0,left:s||0,updateStyle:a};t((function(e){return{size:u,viewport:v(v({},e.viewport),l(c,i,u))}}))},setDpr:function(e){return t((function(n){var t=ud(e);return{viewport:v(v({},n.viewport),{},{dpr:t,initialDpr:n.viewport.initialDpr||t})}}))},setFrameloop:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"always",n=r().clock;n.stop(),n.elapsedTime=0,"never"!==e&&(n.start(),n.elapsedTime=0),t((function(){return{frameloop:e}}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Om.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:function(e,n,t){var a=r().internal;return a.priority=a.priority+(n>0?1:0),a.subscribers.push({ref:e,priority:n,store:t}),a.subscribers=a.subscribers.sort((function(e,n){return e.priority-n.priority})),function(){var t=r().internal;null!=t&&t.subscribers&&(t.priority=t.priority-(n>0?1:0),t.subscribers=t.subscribers.filter((function(n){return n.ref!==e})))}}}};return f})),r=t.getState(),a=r.size,i=r.viewport.dpr,o=r.camera;return t.subscribe((function(){var e=t.getState(),n=e.camera,r=e.size,l=e.viewport,s=e.gl,c=e.set;r===a&&l.dpr===i||(a=r,i=l.dpr,Sd(n,r),s.setPixelRatio(l.dpr),s.setSize(r.width,r.height,r.updateStyle)),n!==o&&(o=n,c((function(e){return{viewport:v(v({},e.viewport),e.viewport.getCurrentViewport(n))}})))})),t.subscribe((function(n){return e(n)})),t}(Wd,Xd),u=a||Zd.createContainer(c,Nm.ConcurrentRoot,null,!1,null,"",l,null);t||qd.set(e,{fiber:u,store:c});var f=!1;return{configure:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=t.gl,i=t.size,l=t.events,s=t.onCreated,u=t.shadows,p=void 0!==u&&u,m=t.linear,d=void 0!==m&&m,h=t.flat,g=void 0!==h&&h,x=t.legacy,y=void 0!==x&&x,b=t.orthographic,_=void 0!==b&&b,w=t.frameloop,S=void 0===w?"always":w,U=t.dpr,M=void 0===U?[1,2]:U,j=t.performance,k=t.raycaster,T=t.camera,C=t.onPointerMissed,R=c.getState(),F=R.gl;R.gl||R.set({gl:F=$d(a,e)});var P=R.raycaster;P||R.set({raycaster:P=new Mp});var D=k||{},E=D.params,z=r(D,rd);if(fd.equ(z,P,Qd)||Jd(P,v({},z)),fd.equ(E,P.params,Qd)||Jd(P,{params:v(v({},P.params),E)}),!R.camera){var L=T instanceof qi,A=L?T:_?new ho(0,0,0,0,.1,1e3):new Hi(75,0,.1,1e3);L||(A.position.z=5,T&&Jd(A,T),null!=T&&T.rotation||A.lookAt(0,0,0)),R.set({camera:A})}if(!R.xr){var I=function(e,n){var t=c.getState();"never"!==t.frameloop&&Xd(e,!0,t,n)},O=function(){var e=c.getState();e.gl.xr.enabled=e.gl.xr.isPresenting,e.gl.xr.setAnimationLoop(e.gl.xr.isPresenting?I:null),e.gl.xr.isPresenting||Wd(e)},B={connect:function(){var e=c.getState().gl;e.xr.addEventListener("sessionstart",O),e.xr.addEventListener("sessionend",O)},disconnect:function(){var e=c.getState().gl;e.xr.removeEventListener("sessionstart",O),e.xr.removeEventListener("sessionend",O)}};F.xr&&B.connect(),R.set({xr:B})}if(F.shadowMap){var N=fd.boo(p);if(N&&F.shadowMap.enabled!==p||!fd.equ(p,F.shadowMap,Qd)){var G=F.shadowMap.enabled;F.shadowMap.enabled=!!p,N?F.shadowMap.type=V:Object.assign(F.shadowMap,p),G!==F.shadowMap.enabled&&(F.shadowMap.needsUpdate=!0)}}Ud(n,y,["ColorManagement","legacyMode"]);var q=d?st:ct,H=g?ke:Fe;F.outputEncoding!==q&&(F.outputEncoding=q),F.toneMapping!==H&&(F.toneMapping=H),R.legacy!==y&&R.set((function(){return{legacy:y}})),R.linear!==d&&R.set((function(){return{linear:d}})),R.flat!==g&&R.set((function(){return{flat:g}})),!a||fd.fun(a)||Rd(a)||fd.equ(a,F,Qd)||Jd(F,a),l&&!R.events.handlers&&R.set({events:l(c)}),M&&R.viewport.dpr!==ud(M)&&R.setDpr(M);var W=Kd(e,i);return fd.equ(W,R.size,Qd)||R.setSize(W.width,W.height,W.updateStyle,W.top,W.left),R.frameloop!==S&&R.setFrameloop(S),R.onPointerMissed||R.set({onPointerMissed:C}),j&&!fd.equ(j,R.performance,Qd)&&R.set((function(e){return{performance:v(v({},e.performance),j)}})),o=s,f=!0,this},render:function(n){return f||this.configure(),Zd.updateContainer(Om.createElement(nh,{store:c,children:n,onCreated:o,rootElement:e}),u,null,(function(){})),c},unmount:function(){th(e)}}}function nh(e){var n=e.store,t=e.children,r=e.onCreated,a=e.rootElement;return id((function(){var e=n.getState();e.set((function(e){return{internal:v(v({},e.internal),{},{active:!0})}})),r&&r(e),n.getState().events.connected||null==e.events.connect||e.events.connect(a)}),[]),Om.createElement(Fd.Provider,{value:n},t)}function th(e,n){var t=qd.get(e),r=null==t?void 0:t.fiber;if(r){var a=null==t?void 0:t.store.getState();a&&(a.internal.active=!1),Zd.updateContainer(null,r,null,(function(){a&&setTimeout((function(){try{var t,r,i,o;null==a.events.disconnect||a.events.disconnect(),null==(t=a.gl)||null==(r=t.renderLists)||null==r.dispose||r.dispose(),null==(i=a.gl)||null==i.forceContextLoss||i.forceContextLoss(),null!=(o=a.gl)&&o.xr&&a.xr.disconnect(),function(e){for(var n in e.dispose&&"Scene"!==e.type&&e.dispose(),e)null==n.dispose||n.dispose(),delete e[n]}(a),qd.delete(e),n&&n(e)}catch(l){}}),500)}))}}Zd.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Om.version});Om.unstable_act;function rh(){return rh=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},rh.apply(this,arguments)}var ah=t(494),ih=t.n(ah);function oh(e){var n=void 0===e?{debounce:0,scroll:!1,offsetSize:!1}:e,t=n.debounce,r=n.scroll,a=n.polyfill,i=n.offsetSize,o=a||("undefined"===typeof window?_((function e(){y(this,e)})):window.ResizeObserver);if(!o)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");var l=s((0,Om.useState)({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),2),c=l[0],u=l[1],v=(0,Om.useRef)({element:null,scrollContainers:null,resizeObserver:null,lastBounds:c}),f=t?"number"===typeof t?t:t.scroll:null,p=t?"number"===typeof t?t:t.resize:null,m=(0,Om.useRef)(!1);(0,Om.useEffect)((function(){return m.current=!0,function(){m.current=!1}}));var d=s((0,Om.useMemo)((function(){var e=function(){if(v.current.element){var e=v.current.element.getBoundingClientRect(),n={left:e.left,top:e.top,width:e.width,height:e.height,bottom:e.bottom,right:e.right,x:e.x,y:e.y};v.current.element instanceof HTMLElement&&i&&(n.height=v.current.element.offsetHeight,n.width=v.current.element.offsetWidth),Object.freeze(n),m.current&&!ch(v.current.lastBounds,n)&&u(v.current.lastBounds=n)}};return[e,p?ih()(e,p):e,f?ih()(e,f):e]}),[u,i,f,p]),3),h=d[0],g=d[1],x=d[2];function b(){v.current.scrollContainers&&(v.current.scrollContainers.forEach((function(e){return e.removeEventListener("scroll",x,!0)})),v.current.scrollContainers=null),v.current.resizeObserver&&(v.current.resizeObserver.disconnect(),v.current.resizeObserver=null)}function w(){v.current.element&&(v.current.resizeObserver=new o(x),v.current.resizeObserver.observe(v.current.element),r&&v.current.scrollContainers&&v.current.scrollContainers.forEach((function(e){return e.addEventListener("scroll",x,{capture:!0,passive:!0})})))}var S,U,M;return S=x,U=Boolean(r),(0,Om.useEffect)((function(){if(U){var e=S;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),function(){window.removeEventListener("scroll",e,!0)}}}),[S,U]),M=g,(0,Om.useEffect)((function(){var e=M;return window.addEventListener("resize",e),function(){window.removeEventListener("resize",e)}}),[M]),(0,Om.useEffect)((function(){b(),w()}),[r,x,g]),(0,Om.useEffect)((function(){return b}),[]),[function(e){e&&e!==v.current.element&&(b(),v.current.element=e,v.current.scrollContainers=lh(e),w())},c,h]}function lh(e){var n=[];if(!e||e===document.body)return n;var t=window.getComputedStyle(e);return[t.overflow,t.overflowX,t.overflowY].some((function(e){return"auto"===e||"scroll"===e}))&&n.push(e),[].concat(n,g(lh(e.parentElement)))}var sh=["x","y","top","bottom","left","right","width","height"],ch=function(e,n){return sh.every((function(t){return e[t]===n[t]}))},uh=Object.defineProperty,vh=Object.defineProperties,fh=Object.getOwnPropertyDescriptors,ph=Object.getOwnPropertySymbols,mh=Object.prototype.hasOwnProperty,dh=Object.prototype.propertyIsEnumerable,hh=function(e,n,t){return n in e?uh(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t},gh=function(e,n){for(var t in n||(n={}))mh.call(n,t)&&hh(e,t,n[t]);if(ph){var r,a=f(ph(n));try{for(a.s();!(r=a.n()).done;){t=r.value;dh.call(n,t)&&hh(e,t,n[t])}}catch(i){a.e(i)}finally{a.f()}}return e};function xh(e,n,t){if(e){if(!0===t(e))return e;for(var r=n?e.return:e.child;r;){var a=xh(r,n,t);if(a)return a;r=n?null:r.sibling}}}function yh(e){try{return Object.defineProperties(e,{_currentRenderer:{get:function(){return null},set:function(){}},_currentRenderer2:{get:function(){return null},set:function(){}}})}catch(n){return e}}var bh=yh(Om.createContext(null)),_h=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t,[{key:"render",value:function(){return Om.createElement(bh.Provider,{value:this._reactInternals},this.props.children)}}]),t}(Om.Component),wh=Om.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Sh=wh.ReactCurrentOwner,Uh=wh.ReactCurrentDispatcher;function Mh(){var e=Om.useContext(bh);if(!e)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");var n=Om.useId(),t=Om.useMemo((function(){var t;return null!=(t=Sh.current)?t:xh(e,!1,(function(e){for(var t=e.memoizedState;t;){if(t.memoizedState===n)return!0;t=t.next}}))}),[e,n]);return t}var jh=[],kh=new WeakMap;function Th(){var e,n=Mh();jh.splice(0,jh.length),xh(n,!0,(function(e){var n,t=null==(n=e.type)?void 0:n._context;t&&t!==bh&&jh.push(yh(t))}));var t,r=f(jh);try{for(r.s();!(t=r.n()).done;){var a=t.value,i=null==(e=Uh.current)?void 0:e.readContext(a);kh.set(a,i)}}catch(o){r.e(o)}finally{r.f()}return Om.useMemo((function(){return jh.reduce((function(e,n){return function(t){return Om.createElement(e,null,Om.createElement(n.Provider,(r=gh({},t),a={value:kh.get(n)},vh(r,fh(a)))));var r,a}}),(function(e){return Om.createElement(_h,gh({},e))}))}),[])}var Ch=["children","fallback","resize","style","gl","events","eventSource","eventPrefix","shadows","linear","flat","legacy","orthographic","frameloop","dpr","performance","raycaster","camera","onPointerMissed","onCreated"],Rh={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function Fh(e){var n=kd(e).handlePointer;return{priority:1,enabled:!0,compute:function(e,n,t){n.pointer.set(e.offsetX/n.size.width*2-1,-e.offsetY/n.size.height*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Rh).reduce((function(e,t){return v(v({},e),{},c({},t,n(t)))}),{}),connect:function(n){var t,r=e.getState(),a=r.set,i=r.events;null==i.disconnect||i.disconnect(),a((function(e){return{events:v(v({},e.events),{},{connected:n})}})),Object.entries(null!=(t=i.handlers)?t:[]).forEach((function(e){var t=s(e,2),r=t[0],a=t[1],i=s(Rh[r],2),o=i[0],l=i[1];n.addEventListener(o,a,{passive:l})}))},disconnect:function(){var n,t=e.getState(),r=t.set,a=t.events;a.connected&&(Object.entries(null!=(n=a.handlers)?n:[]).forEach((function(e){var n=s(e,2),t=n[0],r=n[1];if(a&&a.connected instanceof HTMLElement){var i=s(Rh[t],1)[0];a.connected.removeEventListener(i,r)}})),r((function(e){return{events:v(v({},e.events),{},{connected:void 0})}})))}}}var Ph,Dh=Om.forwardRef((function(e,t){var a=e.children,i=e.fallback,o=e.resize,l=e.style,c=e.gl,u=e.events,f=void 0===u?Fh:u,p=e.eventSource,m=e.eventPrefix,d=e.shadows,h=e.linear,g=e.flat,x=e.legacy,y=e.orthographic,b=e.frameloop,_=e.dpr,w=e.performance,S=e.raycaster,U=e.camera,M=e.onPointerMissed,j=e.onCreated,k=r(e,Ch);Om.useMemo((function(){return e=n,void(Td=v(v({},Td),e));var e}),[]);var T=Th(),C=s(oh(v({scroll:!0,debounce:{scroll:50,resize:0}},o)),2),R=C[0],F=C[1],P=Om.useRef(null),D=Om.useRef(null),E=s(Om.useState(null),2),z=E[0],L=E[1];Om.useImperativeHandle(t,(function(){return P.current}));var A=od(M),I=s(Om.useState(!1),2),O=I[0],B=I[1],N=s(Om.useState(!1),2),G=N[0],V=N[1];if(O)throw O;if(G)throw G;var q=Om.useRef(null);F.width>0&&F.height>0&&z&&(q.current||(q.current=eh(z)),q.current.configure({gl:c,events:f,shadows:d,linear:h,flat:g,legacy:x,orthographic:y,frameloop:b,dpr:_,performance:w,raycaster:S,camera:U,size:F,onPointerMissed:function(){return null==A.current?void 0:A.current.apply(A,arguments)},onCreated:function(e){var n;null==e.events.connect||e.events.connect(p?(n=p)&&n.hasOwnProperty("current")?p.current:p:D.current),m&&e.setEvents({compute:function(e,n){var t=e[m+"X"],r=e[m+"Y"];n.pointer.set(t/n.size.width*2-1,-r/n.size.height*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)}}),null==j||j(e)}}),q.current.render(Om.createElement(T,null,Om.createElement(sd,{set:V},Om.createElement(Om.Suspense,{fallback:Om.createElement(ld,{set:B})},a))))),id((function(){L(P.current)}),[]),Om.useEffect((function(){if(z)return function(){return th(z)}}),[z]);var H=p?"none":"auto";return Om.createElement("div",rh({ref:D,style:v({position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:H},l)},k),Om.createElement("div",{ref:R,style:{width:"100%",height:"100%"}},Om.createElement("canvas",{ref:P,style:{display:"block"}},i)))})),Eh=Om.forwardRef((function(e,n){return Om.createElement(_h,null,Om.createElement(Dh,rh({},e,{ref:n})))})),zh=t(250);function Lh(){return Lh=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},Lh.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(Ph||(Ph={}));var Ah,Ih="popstate";function Oh(e,n){if(!1===e||null===e||"undefined"===typeof e)throw new Error(n)}function Bh(e,n){if(!e){"undefined"!==typeof console&&console.warn(n);try{throw new Error(n)}catch(t){}}}function Nh(e,n){return{usr:e.state,key:e.key,idx:n}}function Gh(e,n,t,r){return void 0===t&&(t=null),Lh({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof n?qh(n):n,{state:t,key:n&&n.key||r||Math.random().toString(36).substr(2,8)})}function Vh(e){var n=e.pathname,t=void 0===n?"/":n,r=e.search,a=void 0===r?"":r,i=e.hash,o=void 0===i?"":i;return a&&"?"!==a&&(t+="?"===a.charAt(0)?a:"?"+a),o&&"#"!==o&&(t+="#"===o.charAt(0)?o:"#"+o),t}function qh(e){var n={};if(e){var t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));var r=e.indexOf("?");r>=0&&(n.search=e.substr(r),e=e.substr(0,r)),e&&(n.pathname=e)}return n}function Hh(e,n,t,r){void 0===r&&(r={});var a=r,i=a.window,o=void 0===i?document.defaultView:i,l=a.v5Compat,s=void 0!==l&&l,c=o.history,u=Ph.Pop,v=null,f=p();function p(){return(c.state||{idx:null}).idx}function m(){u=Ph.Pop;var e=p(),n=null==e?null:e-f;f=e,v&&v({action:u,location:h.location,delta:n})}function d(e){var n="null"!==o.location.origin?o.location.origin:o.location.href,t="string"===typeof e?e:Vh(e);return Oh(n,"No window.location.(origin|href) available to create URL for href: "+t),new URL(t,n)}null==f&&(f=0,c.replaceState(Lh({},c.state,{idx:f}),""));var h={get action(){return u},get location(){return e(o,c)},listen:function(e){if(v)throw new Error("A history only accepts one active listener");return o.addEventListener(Ih,m),v=e,function(){o.removeEventListener(Ih,m),v=null}},createHref:function(e){return n(o,e)},createURL:d,encodeLocation:function(e){var n=d(e);return{pathname:n.pathname,search:n.search,hash:n.hash}},push:function(e,n){u=Ph.Push;var r=Gh(h.location,e,n);t&&t(r,e);var a=Nh(r,f=p()+1),i=h.createHref(r);try{c.pushState(a,"",i)}catch(l){if(l instanceof DOMException&&"DataCloneError"===l.name)throw l;o.location.assign(i)}s&&v&&v({action:u,location:h.location,delta:1})},replace:function(e,n){u=Ph.Replace;var r=Gh(h.location,e,n);t&&t(r,e);var a=Nh(r,f=p()),i=h.createHref(r);c.replaceState(a,"",i),s&&v&&v({action:u,location:h.location,delta:0})},go:function(e){return c.go(e)}};return h}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(Ah||(Ah={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function Wh(e,n,t){void 0===t&&(t="/");var r=ng(("string"===typeof n?qh(n):n).pathname||"/",t);if(null==r)return null;var a=Xh(e);!function(e){e.sort((function(e,n){return e.score!==n.score?n.score-e.score:function(e,n){var t=e.length===n.length&&e.slice(0,-1).every((function(e,t){return e===n[t]}));return t?e[e.length-1]-n[n.length-1]:0}(e.routesMeta.map((function(e){return e.childrenIndex})),n.routesMeta.map((function(e){return e.childrenIndex})))}))}(a);for(var i=null,o=0;null==i&&o<a.length;++o)i=$h(a[o],eg(r));return i}function Xh(e,n,t,r){void 0===n&&(n=[]),void 0===t&&(t=[]),void 0===r&&(r="");var a=function(e,a,i){var o={relativePath:void 0===i?e.path||"":i,caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};o.relativePath.startsWith("/")&&(Oh(o.relativePath.startsWith(r),'Absolute route path "'+o.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(r.length));var l=tg([r,o.relativePath]),s=t.concat(o);e.children&&e.children.length>0&&(Oh(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+l+'".'),Xh(e.children,n,s,l)),(null!=e.path||e.index)&&n.push({path:l,score:Qh(l,e.index),routesMeta:s})};return e.forEach((function(e,n){var t;if(""!==e.path&&null!=(t=e.path)&&t.includes("?")){var r,i=f(Yh(e.path));try{for(i.s();!(r=i.n()).done;){var o=r.value;a(e,n,o)}}catch(l){i.e(l)}finally{i.f()}}else a(e,n)})),n}function Yh(e){var n=e.split("/");if(0===n.length)return[];var t=x(n),r=t[0],a=t.slice(1),i=r.endsWith("?"),o=r.replace(/\?$/,"");if(0===a.length)return i?[o,""]:[o];var l=Yh(a.join("/")),s=[];return s.push.apply(s,g(l.map((function(e){return""===e?o:[o,e].join("/")})))),i&&s.push.apply(s,g(l)),s.map((function(n){return e.startsWith("/")&&""===n?"/":n}))}var Zh=/^:\w+$/,Jh=function(e){return"*"===e};function Qh(e,n){var t=e.split("/"),r=t.length;return t.some(Jh)&&(r+=-2),n&&(r+=2),t.filter((function(e){return!Jh(e)})).reduce((function(e,n){return e+(Zh.test(n)?3:""===n?1:10)}),r)}function $h(e,n){for(var t=e.routesMeta,r={},a="/",i=[],o=0;o<t.length;++o){var l=t[o],s=o===t.length-1,c="/"===a?n:n.slice(a.length)||"/",u=Kh({path:l.relativePath,caseSensitive:l.caseSensitive,end:s},c);if(!u)return null;Object.assign(r,u.params);var v=l.route;i.push({params:r,pathname:tg([a,u.pathname]),pathnameBase:rg(tg([a,u.pathnameBase])),route:v}),"/"!==u.pathnameBase&&(a=tg([a,u.pathnameBase]))}return i}function Kh(e,n){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});var t=function(e,n,t){void 0===n&&(n=!1);void 0===t&&(t=!0);Bh("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');var r=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,(function(e,n){return r.push(n),"/([^\\/]+)"}));e.endsWith("*")?(r.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):t?a+="\\/*$":""!==e&&"/"!==e&&(a+="(?:(?=\\/|$))");return[new RegExp(a,n?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),r=s(t,2),a=r[0],i=r[1],o=n.match(a);if(!o)return null;var l=o[0],c=l.replace(/(.)\/+$/,"$1"),u=o.slice(1);return{params:i.reduce((function(e,n,t){if("*"===n){var r=u[t]||"";c=l.slice(0,l.length-r.length).replace(/(.)\/+$/,"$1")}return e[n]=function(e,n){try{return decodeURIComponent(e)}catch(t){return Bh(!1,'The value for the URL param "'+n+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}(u[t]||"",n),e}),{}),pathname:l,pathnameBase:c,pattern:e}}function eg(e){try{return decodeURI(e)}catch(n){return Bh(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}function ng(e,n){if("/"===n)return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;var t=n.endsWith("/")?n.length-1:n.length,r=e.charAt(t);return r&&"/"!==r?null:e.slice(t)||"/"}var tg=function(e){return e.join("/").replace(/\/\/+/g,"/")},rg=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},ag=function(e){w(t,e);var n=k(t);function t(){return y(this,t),n.apply(this,arguments)}return _(t)}(T(Error));function ig(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}var og=["post","put","patch","delete"],lg=(new Set(og),["get"].concat(og));new Set(lg),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function sg(){return sg=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},sg.apply(this,arguments)}var cg=Om.createContext(null);var ug=Om.createContext(null);var vg=Om.createContext(null);var fg=Om.createContext(null);var pg=Om.createContext(null);var mg=Om.createContext({outlet:null,matches:[],isDataRoute:!1});var dg=Om.createContext(null);function hg(){return null!=Om.useContext(pg)}function gg(){return hg()||Oh(!1),Om.useContext(pg).location}function xg(e,n,t){hg()||Oh(!1);var r,a=Om.useContext(fg).navigator,i=Om.useContext(mg).matches,o=i[i.length-1],l=o?o.params:{},s=(o&&o.pathname,o?o.pathnameBase:"/"),c=(o&&o.route,gg());if(n){var u,v="string"===typeof n?qh(n):n;"/"===s||(null==(u=v.pathname)?void 0:u.startsWith(s))||Oh(!1),r=v}else r=c;var f=r.pathname||"/",p=Wh(e,{pathname:"/"===s?f:f.slice(s.length)||"/"});var m=Mg(p&&p.map((function(e){return Object.assign({},e,{params:Object.assign({},l,e.params),pathname:tg([s,a.encodeLocation?a.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?s:tg([s,a.encodeLocation?a.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])})})),i,t);return n&&m?Om.createElement(pg.Provider,{value:{location:sg({pathname:"/",search:"",hash:"",state:null,key:"default"},r),navigationType:Ph.Pop}},m):m}function yg(){var e=function(){var e,n=Om.useContext(dg),t=jg(_g.UseRouteError),r=kg(_g.UseRouteError);if(n)return n;return null==(e=t.errors)?void 0:e[r]}(),n=ig(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),t=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",a={padding:"0.5rem",backgroundColor:r};return Om.createElement(Om.Fragment,null,Om.createElement("h2",null,"Unexpected Application Error!"),Om.createElement("h3",{style:{fontStyle:"italic"}},n),t?Om.createElement("pre",{style:a},t):null,null)}var bg,_g,wg=Om.createElement(yg,null),Sg=function(e){w(t,e);var n=k(t);function t(e){var r;return y(this,t),(r=n.call(this,e)).state={location:e.location,revalidation:e.revalidation,error:e.error},r}return _(t,[{key:"componentDidCatch",value:function(e,n){console.error("React Router caught the following error during render",e,n)}},{key:"render",value:function(){return this.state.error?Om.createElement(mg.Provider,{value:this.props.routeContext},Om.createElement(dg.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}],[{key:"getDerivedStateFromError",value:function(e){return{error:e}}},{key:"getDerivedStateFromProps",value:function(e,n){return n.location!==e.location||"idle"!==n.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||n.error,location:n.location,revalidation:e.revalidation||n.revalidation}}}]),t}(Om.Component);function Ug(e){var n=e.routeContext,t=e.match,r=e.children,a=Om.useContext(cg);return a&&a.static&&a.staticContext&&(t.route.errorElement||t.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=t.route.id),Om.createElement(mg.Provider,{value:n},r)}function Mg(e,n,t){var r;if(void 0===n&&(n=[]),void 0===t&&(t=null),null==e){var a;if(null==(a=t)||!a.errors)return null;e=t.matches}var i=e,o=null==(r=t)?void 0:r.errors;if(null!=o){var l=i.findIndex((function(e){return e.route.id&&(null==o?void 0:o[e.route.id])}));l>=0||Oh(!1),i=i.slice(0,Math.min(i.length,l+1))}return i.reduceRight((function(e,r,a){var l=r.route.id?null==o?void 0:o[r.route.id]:null,s=null;t&&(s=r.route.errorElement||wg);var c=n.concat(i.slice(0,a+1)),u=function(){var n;return n=l?s:r.route.Component?Om.createElement(r.route.Component,null):r.route.element?r.route.element:e,Om.createElement(Ug,{match:r,routeContext:{outlet:e,matches:c,isDataRoute:null!=t},children:n})};return t&&(r.route.ErrorBoundary||r.route.errorElement||0===a)?Om.createElement(Sg,{location:t.location,revalidation:t.revalidation,component:s,error:l,children:u(),routeContext:{outlet:null,matches:c,isDataRoute:!0}}):u()}),null)}function jg(e){var n=Om.useContext(ug);return n||Oh(!1),n}function kg(e){var n=function(e){var n=Om.useContext(mg);return n||Oh(!1),n}(),t=n.matches[n.matches.length-1];return t.route.id||Oh(!1),t.route.id}!function(e){e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate"}(bg||(bg={})),function(e){e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId"}(_g||(_g={}));var Tg;Bm.startTransition;function Cg(e){Oh(!1)}function Rg(e){var n=e.basename,t=void 0===n?"/":n,r=e.children,a=void 0===r?null:r,i=e.location,o=e.navigationType,l=void 0===o?Ph.Pop:o,s=e.navigator,c=e.static,u=void 0!==c&&c;hg()&&Oh(!1);var v=t.replace(/^\/*/,"/"),f=Om.useMemo((function(){return{basename:v,navigator:s,static:u}}),[v,s,u]);"string"===typeof i&&(i=qh(i));var p=i,m=p.pathname,d=void 0===m?"/":m,h=p.search,g=void 0===h?"":h,x=p.hash,y=void 0===x?"":x,b=p.state,_=void 0===b?null:b,w=p.key,S=void 0===w?"default":w,U=Om.useMemo((function(){var e=ng(d,v);return null==e?null:{location:{pathname:e,search:g,hash:y,state:_,key:S},navigationType:l}}),[v,d,g,y,_,S,l]);return null==U?null:Om.createElement(fg.Provider,{value:f},Om.createElement(pg.Provider,{children:a,value:U}))}function Fg(e){var n=e.children,t=e.location;return xg(Dg(n),t)}!function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(Tg||(Tg={}));var Pg=new Promise((function(){}));Om.Component;function Dg(e,n){void 0===n&&(n=[]);var t=[];return Om.Children.forEach(e,(function(e,r){if(Om.isValidElement(e)){var a=[].concat(g(n),[r]);if(e.type!==Om.Fragment){e.type!==Cg&&Oh(!1),e.props.index&&e.props.children&&Oh(!1);var i={id:e.props.id||a.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(i.children=Dg(e.props.children,a)),t.push(i)}else t.push.apply(t,Dg(e.props.children,a))}})),t}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);var Eg=Bm.startTransition;function zg(e){var n,t=e.basename,r=e.children,a=e.future,i=e.window,o=Om.useRef();null==o.current&&(o.current=(void 0===(n={window:i,v5Compat:!0})&&(n={}),Hh((function(e,n){var t=e.location;return Gh("",{pathname:t.pathname,search:t.search,hash:t.hash},n.state&&n.state.usr||null,n.state&&n.state.key||"default")}),(function(e,n){return"string"===typeof n?n:Vh(n)}),null,n)));var l=o.current,c=s(Om.useState({action:l.action,location:l.location}),2),u=c[0],v=c[1],f=(a||{}).v7_startTransition,p=Om.useCallback((function(e){f&&Eg?Eg((function(){return v(e)})):v(e)}),[v,f]);return Om.useLayoutEffect((function(){return l.listen(p)}),[l,p]),Om.createElement(Rg,{basename:t,children:r,location:u.location,navigationType:u.action,navigator:l})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var Lg,Ag;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher"})(Lg||(Lg={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Ag||(Ag={}));var Ig="\n\n    float sdNumHorizontal(vec2 p)\n    {\n        vec2 newUv = p;\n        newUv.x += 0.125;\n        newUv.y -= 0.25;\n        vec2 uv1 = newUv;\n        vec2 uv2 = newUv;\n        uv1 = Rot(uv1, PI * 0.5);\n        uv1 /= .5;\n        uv1 -= 1.;\n\n        uv2 = Rot(uv2, -PI* .5);\n        uv2 /= .5;\n        uv2 -= 1.;\n        float shape1 = sdEqTriangle(uv1, 0.15);\n        shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n        float shape2 = sdBox(vec2(uv1.x + 0.5, uv1.y+0.75), vec2(0.33, 0.2815));\n        shape2 = 1. - smoothstep(0.1, 0.11, shape2);\n\n        float shape3 = sdEqTriangle(vec2(uv2.x, uv2.y-0.5), 0.15);\n        shape3 = 1. - smoothstep(0.1, 0.11, shape3);\n\n        return shape1 + shape2 + shape3;\n    }\n\n    float sdNumVertical(vec2 p){\n        vec2 newUv = p;\n        newUv.x += 0.125;\n        newUv.y -= 0.25;\n        vec2 uv1 = newUv;\n        vec2 uv3 = newUv;\n        vec2 uv4 = newUv;\n        uv1 = Rot(uv1, PI * 0.5);\n        uv1 /= .5;\n        uv1 -= 1.;\n\n        uv3 = Rot(uv3, PI * 1.5);\n        uv3 /= .5;\n        uv3 -= 1.;\n        uv3.x -= 0.2;\n        uv3.y += 0.1;\n\n        uv4 = Rot(uv4, PI * 1.5);\n        uv4 /= .5;\n        uv4 -= 1.;\n        uv4.y += 0.1;\n        uv4.x -= 0.52;\n\n        float shape1 = sdEqTriangle(vec2(uv1.x + 0.36125, uv1.y-0.01), 0.125);\n        shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n        float shape4 = sdEqTriangle(vec2(uv3.x, uv3.y), 0.14);\n        shape4 = 1. - smoothstep(0.1, 0.11, shape4);\n\n        float shape5 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.35, 0.325));\n        shape5 = 1. - smoothstep(0.1, 0.11, shape5);\n\n        float shape6 = sdEqTriangle(vec2(uv4), 0.14);\n        shape6 = 1. - smoothstep(0.1, 0.11, shape6);\n\n        float tri = ((shape4 + shape6 + shape1 ) );\n        float sq = sdBox(vec2(uv1.x + 0.859, uv1.y +0.442), vec2(0.3));\n        sq = 1. - smoothstep(0.1, 0.11, sq);\n        float shape7 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.3));\n        shape7 = 1. - smoothstep(0.1, 0.11, shape7);\n\n        return tri ;\n    }\n\n    float numNine(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeNine = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triRB;\n\n        return shapeNine;\n    }\n\n    float numEight(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeEight = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeEight;\n    }\n\n    float numSeven(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeSeven = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triR + triRB;\n\n        return shapeSeven;\n    }\n\n    float numSix(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeSix = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeSix;\n    }\n\n    float numFive(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeFive = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeFive;\n    }\n\n    float numFour(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRT = sdEqTriangle(vec2(p3.x + 0.79, p3.y-0.265), 0.14);\n        triRT = 1. - smoothstep(0.1, 0.11, triRT);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float triLT = sdEqTriangle(vec2(p4.x - 0.79, p4.y-0.265), 0.14);\n        triLT = 1. - smoothstep(0.1, 0.11, triLT);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeFour = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triRT + triRB + triLT;\n\n        return shapeFour;\n    }\n\n    float numThree(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        // shapevertical4 *= 0.1;\n        \n        float shapeThree = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeThree;\n    }\n\n    float numTwo(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        // shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n        // shapevertical3 *= 0.1;\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        shapevertical4 *= 0.1;\n        \n        float shapeTwo = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4;\n\n        return shapeTwo;\n    }\n\n    float numOne(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float triRT = sdEqTriangle(vec2(p3.x + 0.79, p3.y-0.265), 0.14);\n        triRT = 1. - smoothstep(0.1, 0.11, triRT);\n\n        float triRB = sdEqTriangle(vec2(p3.x - 0.635, p3.y-0.265), 0.14);\n        triRB = 1. - smoothstep(0.1, 0.11, triRB);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        \n        float shapeOne = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triR + triRT + triRB;\n\n        return shapeOne;\n    }\n\n    float numZero(vec2 p){\n\n        vec2 p2 = p;\n        vec2 p3 = p;\n        vec2 p4 = p;\n        p = p * 1.5 - 0.25;\n        p.y -= 0.15;\n\n        p2 = Rot(p2, PI);\n        p2 = p2 * 1.5 - 0.25;\n\n        p3 = Rot(p3, -PI* .5);\n        p3 = p3 * 1.5 - 0.25;\n        p3 /= .5;\n        p3 -= 1.;\n\n        p4 = Rot(p4, PI* .5);\n        p4 = p4 * 1.5 - 0.25;\n        p4 /= .5;\n        p4 -= 1.;\n\n        float triR = sdEqTriangle(vec2(p3.x + 0.079, p3.y-0.265), 0.14);\n        triR = 1. - smoothstep(0.1, 0.11, triR);\n\n        float triL = sdEqTriangle(vec2(p4.x - 0.081, p4.y-0.265), 0.14);\n        triL = 1. - smoothstep(0.1, 0.11, triL);\n\n        float shapehorizontal = sdNumHorizontal(p);\n        // shapehorizontal *= 0.1;\n\n        float shapehorizontal2 = sdNumHorizontal(vec2(p.x, p.y + 0.36));\n        shapehorizontal2 *= 0.1;\n\n        float shapehorizontal3 = sdNumHorizontal(vec2(p.x, p.y + 0.72));\n        // shapehorizontal3 *= 0.1;\n\n        float shapevertical = sdNumVertical(p);\n        // shapevertical *= 0.1;\n\n        float shapevertical2 = sdNumVertical(vec2(p.x, p.y + 0.36));\n        // shapevertical2 *= 0.1;\n\n        float shapevertical3 = sdNumVertical(vec2(p2.x, p2.y + 0.29));\n\n        float shapevertical4 = sdNumVertical(vec2(p2.x, p2.y - 0.07));\n        \n        float shapeZero = shapehorizontal + shapehorizontal2 + shapehorizontal3 + shapevertical + shapevertical2 + shapevertical3 + shapevertical4 + triR + triL;\n\n        return shapeZero;\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.4), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.61), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.02, z1);\n        z2 = 1. - smoothstep(0.01, 0.02, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.01, 0.02, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.01, 0.02, x1);\n        x2 = 1. - smoothstep(0.01, 0.02, x2);\n        x3 = 1. - smoothstep(0.01, 0.02, x3);\n        x4 = 1. - smoothstep(0.01, 0.02, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        p = p * 1.05;\n        p.x -= 0.05;\n        p.y -= 0.02;\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.02, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float sdSix(vec2 p)\n    {\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float s1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        s1 = 1. - smoothstep(0.01, 0.02, s1);\n        s2 = 1. - smoothstep(0.01, 0.02, s2);\n        s3 = 1. - smoothstep(0.01, 0.02, s3);\n        float s4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return s1 + s2 + s3 + s4;\n    }\n\n    float sdSeven(vec2 p)\n    {\n        vec2 p2 = p;\n        float s1 = sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        p2 = Rot(p2, PI * -0.127);\n        float s2 = sdRoundedBox((vec2(p2.x-0.016, p2.y+0.001)), vec2(0.08, 0.44), vec4(0.075));\n        return s1 + s2;\n    }\n\n    float sdEight(vec2 p)\n    {\n        p *= 4.;\n        vec2 p2 = p;\n        p2 = Rot(p2, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float e1 = sdArc(vec2(p.x - 2., p.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e2 = sdArc(vec2(p2.x+1., p2.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e3 = sdArc(vec2(p.x - 2., p.y - 2.45), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e4 = sdArc(vec2(p2.x+1., p2.y+1.5 * 0.95), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        e1 = 1. - smoothstep(0.01, 0.02, e1);\n        e2 = 1. - smoothstep(0.01, 0.02, e2);\n        e3 = 1. - smoothstep(0.01, 0.02, e3);\n        e4 = 1. - smoothstep(0.01, 0.02, e4);\n        return e1 + e2 + e3 + e4;\n    }\n\n    float sdNine(vec2 p)\n    {\n        p = Rot(p, PI);\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float n1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        n1 = 1. - smoothstep(0.01, 0.02, n1);\n        n2 = 1. - smoothstep(0.01, 0.02, n2);\n        n3 = 1. - smoothstep(0.01, 0.02, n3);\n        float n4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return n1 + n2 + n3 + n4;\n    }\n",Og="\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    // precision highp float;\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n",Bg="\n//iquilezles.org/articls/distfunctions2d\nfloat sdRoundedBox(vec2 p, vec2 b, vec4 r)\n{\n    //p - point\n    //b - size of box\n    //r - round box - top right, bottom right, top left, bottom left\n    p = p * 2.0 - 1.;\n    r.xy = (p.x > 0.0) ? r.xy : r.zw;\n    r.x = (p.y > 0.0) ? r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n    return 1. - smoothstep(0.01, 0.015, v);\n}\n\nfloat sdSpiral(vec2 p, float w, float k)\n{\n    float r = length(p);\n    float a = atan(p.y, p.x);\n    float n = floor(0.5/w + (log2(r/w)*k-a)/TWO_PI);\n    float ra = w * exp2((a+TWO_PI * (min(n+0., 0.) - 0.5))/k);\n    float rb = w * exp2((a+TWO_PI * (min(n+1., 0.) - 0.5))/k);\n    float d = min(abs(r-ra), abs(r-rb));\n    float spiral = min(d, length(p + vec2(w, 0.0)));\n    return 1. - smoothstep(0.01, 0.011, spiral);\n}\n\nfloat sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n{\n    //x - thickness\n    float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n    float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n    return (c - a);\n    \n}\n\nfloat sdBoxOutline(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float y = length(max(d, 0.0)) + min(max(d.x + 0.05, d.y + 0.05), 0.0);\n    // x = 1. - smoothstep(0.01, 0.02, x);\n    // y = 1. - smoothstep(0.01, 0.02, y);\n    return 1.  - smoothstep(0.01, 0.2, y / x);\n}\n\nfloat rect( vec2 vUv, float height, float width)\n{\n    float left = smoothstep(((1.0 - width)/ 2.0), ((1.0 - width)/ 2.0) + 0.001, vUv.x);\n    float right = smoothstep(((1.0 - width)/2.0), ((1.0 - width)/ 2.0) + 0.001, 1. - vUv.x);\n    float top = smoothstep(((1.0 - height)/2.0), ((1.0 - height)/2.0) + 0.001, 1. - vUv.y);\n    float bottom = smoothstep(((1.0 - height)/2.0), ((1.0 - height)/2.0) + 0.001, vUv.y);\n    // return left * right * top * bottom;\n    float x = left * right * top * bottom;\n    // float y = x ;\n    return x;\n}\n\nfloat rectOutline(vec2 vUv, float height, float width)\n{\n    float y = rect(vUv, height, width);\n    float x = rect(vUv, height + 0.01, width + 0.01);\n    return x - y;\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    return smoothstep(0.01, 0.012, x);\n}\n\nfloat quadraticBezier (float x, vec2 a){\n    // adapted from BEZMATH.PS (1993)\n    // by Don Lancaster, SYNERGETICS Inc. \n    // http://www.tinaja.com/text/bezmath.html\n  \n    float epsilon = 0.00001;\n    a.x = clamp(a.x,0.0,1.0); \n    a.y = clamp(a.y,0.0,1.0); \n    if (a.x == 0.5){\n      a += epsilon;\n    }\n    \n    // solve t from x (an inverse operation)\n    float om2a = 1.0 - 2.0 * a.x;\n    float t = (sqrt(a.x*a.x + om2a*x) - a.x)/om2a;\n    float y = (1.0-2.0*a.y)*(t*t) + (2.0*a.y)*t;\n    return y;\n}\n\n// float random (vec2 st) {\n//     return fract(sin(dot(st.xy,\n//                          vec2(12.9898,78.233)))*\n//         43758.5453123);\n// }\n\nfloat IterateMandelbrot( in vec2 c )\n{\n    const float B = 256.0;\n\n    float n = 0.0;\n    vec2 z  = vec2(0.);\n    for( int i=0; i<120; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c; // z = z\xb2 + c\n        if( dot(z,z)>(B*B) ) break;\n        n += 1.0 * u_time;\n    }\n\n    // float sn = n - log(log(length(z))/log(B))/log(2.0); // smooth iteration count\n    float sn = n - log2(log2(dot(z,z))) + 4.0;  // equivalent optimized smooth iteration count\n    \n    return sn;\n}\n\nfloat plot(vec2 p, float line, float thickness)\n{\n    return smoothstep(line - thickness, line, p.y) -\n           smoothstep(line, line + thickness, p.y);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    return 1. - smoothstep(0.01, 0.03, x);\n}\n\nfloat sdCircleOutline(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    float y = length(p) - r + 0.05;\n    float x1 = 1. - smoothstep(0.01, 0.03, x);\n    float y1 = 1. - smoothstep(0.01, 0.03, y);\n    return x1 - y1;\n}\n\nfloat circle(vec2 vUv, float radius)\n{\n    vec2 dist = vUv - vec2(0.5);\n    return 1. - smoothstep(radius - (radius * 0.05), radius + (radius * 0.05), dot(dist, dist) * 4.);\n}\n\nfloat cirOutline(vec2 vUv, float r)\n{\n    vec2 dist = vUv - vec2(0.5);\n    float a = 1. - smoothstep(r - (r * 0.05), r + (r * 0.05), dot(dist, dist) * 4.);\n    // float b = 1. - smoothstep(r + 0.01 - ((r + 0.01)), r + 0.01 + ((r + 0.02)), dot(dist, dist) * 4.);\n    float b = 1. - smoothstep(r + 0.01 - ((r + 0.01) * 0.01), r + 0.01 + ((r + 0.011) * 0.012), dot(dist, dist) * 4.);\n    return b - a;\n}\n\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n    float v = length(pa - ba * h);\n    return 1. - smoothstep(0.01, 0.015, v);\n}\n\nvec2 Rot(vec2 vUv, float a){\n    vUv -= 0.5;\n    vUv = mat2(cos(a), -sin(a),\n            sin(a), cos(a)) * vUv;\n    vUv += 0.5;\n    return vUv;\n}\n\nfloat ndot(vec2 a, vec2 b)\n{\n    return a.x * b.x - a.y * b.y;\n}\n\nfloat sdRhombus(vec2 p, vec2 b)\n{\n    p = abs(p);\n    float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n    float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n    return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n}\n\nfloat dot2(vec2 a)\n{\n    return dot(a.x, a.y);\n}\n\nfloat trapezoid(vec2 p, float r1, float r2, float he)\n{\n    vec2 k1 = vec2(r2, he);\n    vec2 k2 = vec2(r2-r1, 2.0 * he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n    float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n    return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n}\n\nfloat sdEqTriangle(vec2 p, float size)\n{\n    p = p / size;\n    float k = sqrt(3.);\n    p.x = abs(p.x) - 1.;\n    p.y = p.y + 1.0/k;\n    if(p.x+k*p.y > 0.)\n    {\n        p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n    }\n    p.x -= clamp(p.x, -2., 0.);\n    return -length(p) * sign(p.y);\n}\n\nfloat sdEqTriangleOutline(vec2 p, float size)\n{\n    float x = 1. - sdEqTriangle(p, size);\n    float y = 1. - sdEqTriangle(p, size + 0.025);\n    x = smoothstep(0.01, 0.021, x);\n    y = smoothstep(0.01, 0.021, y);\n    return y - x;\n}\n\nfloat sdArc(vec2 p, vec2 sc, float ra, float rb){\n    //sc is arc's aperture\n    p.x = abs(p.x);\n    sc = vec2(sin(sc.x), cos(sc.y));\n    if (sc.y * p.x > sc.x * p.y){\n        return length(p - sc*ra) - rb;\n    }\n    else {\n        return abs(length(p) - ra) - rb;\n    }\n}\n\nfloat sdTriIsosceles(vec2 p, vec2 q)\n{\n    p = Rot(p, PI);\n    p.x = abs(p.x);\n    vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n    vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n    float s = -sign(q.y);\n    vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                vec2(dot(b,b), s*(p.y-q.y)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdHexagram(vec2 p, float r)\n{\n    vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0 * min(dot(k.xy, p), 0.0) * k.xy;\n    p -= 2.0 * min(dot(k.yx, p), 0.0) * k.yx;\n    p -= vec2(clamp(p.x, r*k.z, r*k.w), r);\n    return length(p) * sign(p.y);\n}\n\nfloat sdEgg(vec2 p, float ra, float rb)\n{\n    float k = sqrt(3.);\n    p.x = abs(p.x);\n    float r = ra - rb;\n    return ((p.y < 0.0) ? length(vec2(p.x, p.y)) - r :\n            (k * (p.x + r) < p.y) ? length(vec2(p.x, p.y - k * r)) :\n            length(vec2(p.x + r, p.y)) -2.0 * r) - rb;\n}\n\nfloat sdPolygon(vec2 p, int sides, float scale)\n{\n    p = p * 2. - 1.;\n    float angle = atan(p.x, p.y) + PI;\n    float radius = TWO_PI/float(sides);\n    float d = cos(floor(.5 + angle/ radius) * radius - angle) * length(p);\n    return 1. - smoothstep(scale, scale + 0.01, d); \n}\n\nfloat sdPolygonOutline(vec2 p, int sides, float scale)\n{\n    float x = sdPolygon(p, sides, scale);\n    float y = sdPolygon(p, sides, scale + 0.05);\n    return y - x;\n}\n\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n    vec3 Pi0 = floor(P); // Integer part for indexing\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n    Pi0 = mod(Pi0, 289.0);\n    Pi1 = mod(Pi1, 289.0);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 / 7.0;\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 / 7.0;\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n    return 2.2 * n_xyz;\n}\n\n",Ng=t(184),Gg=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color = vec3(vUv.x, vUv.y, 0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Vg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Gg,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qg=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float circleSDF(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF2(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF3(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF4(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF5(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float circleSDF6(vec2 vUv){\n        return length(vUv - .5) * 2.;\n    }\n    \n    float stroke(float x, float s, float w){\n        float d = step(s, x+w*.5) -\n                  step(s, x-w*.5);\n        return clamp(d, 0., 1.);\n    }\n    \n    \n    \n    void main(){\n        vec3 color = vec3(0.);\n    \n        color.rg += stroke(circleSDF(vec2(vUv.x + .125, vUv.y - 0.08)), 0.2, 0.03);\n        color.b += stroke(circleSDF2(vec2(vUv.x + .3 - .05, vUv.y - .2)), 0.2, 0.03);\n        color += stroke(circleSDF(vec2(vUv.x , vUv.y - .2)), 0.2, 0.03);\n        color.g += stroke(circleSDF(vec2(vUv.x - .124, vUv.y - .08)), 0.2, 0.03);\n        color.r += stroke(circleSDF(vec2(vUv.x  - .4 + .15, vUv.y - .2)), 0.2, 0.03);;\n        //color += stroke(circleSDF6(vec2(vUv)), 0.5, 0.02);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Hg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:qg,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Wg=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Xg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Wg,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yg=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n\n// 2D Random\nfloat random(in vec2 st){\n    return fract(sin(dot(st.xy,\n                vec2(12.9898,78.233)))\n            *43758.5453123);\n        }\n\nfloat noise(in vec2 st){\n    vec2 i=floor(st);\n    vec2 f=fract(st);\n    \n    // Four corners in 2D of a tile\n    float a=random(i);\n    float b=random(i+vec2(1.,0.));\n    float c=random(i+vec2(0.,1.));\n    float d=random(i+vec2(1.,1.));\n    \n    // Smooth Interpolation\n    \n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u=f*f*(3.-2.*f);\n    // u = smoothstep(0.,1.,f);\n    \n    // Mix 4 coorners percentages\n    return mix(a,b,u.x)+\n    (c-a)*u.y*(1.-u.x)+\n    (d-b)*u.x*u.y;\n}\n\nvoid main(){\n    vec3 color = vec3(0.);\n    vec2 pos = vec2(vUv * 5.);\n    float n = step(noise(pos + u_time), vUv.x);\n    float x = cnoise(vec3(n * vUv.y * u_time));\n    color += x * n - abs(sin(u_time));\n    color *= x + n + abs(sin(u_time));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Zg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Yg,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Jg=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot(vec2 vUv){\n        return smoothstep(0.02, 0.0, abs(vUv.y - vUv.x));\n    }\n    \n    float plot2(vec2 vUv){\n        return smoothstep(.02,0.,abs(1. - vUv.y-vUv.x));\n    }\n    \n    \n    void main(){\n        float y = (sin(vUv.x) + abs(cos(u_time)) - 0.5);\n        vec3 color = vec3(y);\n        float pct = plot(vUv);\n        float pct2=plot2(vUv);\n        color = (0.5 - pct) * color + pct* vec3(1., 0., 0.);\n        color+=(0.5 - pct2)*color+pct2*vec3(1.,0.,0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Qg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Jg,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $g=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // float plot(vec2 st){\n//     return smoothstep(0.02, 0.0, abs(st.y - st.x));\n// }\n\nfloat plot2(vec2 st, float pct){\n    return smoothstep(pct - 0.02, pct, st.y) - \n            smoothstep(pct, pct + 0.02, st.y);\n}\n\n// float plot(vec2 vUv, float pct){\n//     return smoothstep(pct-0.02, pct, vUv.y) - \n//            smoothstep(pct, pct+0.02, vUv.y);\n// }\n\nvoid main(){\n    //float y = vUv.x;\n    //float y2 = pow(vUv.x, 20.0);\n    //float y2 = sqrt(vUv.x * PI);\n    //float y = smoothstep(vUv, y);\n    float y2 = smoothstep(0.01, 0.9, abs(vUv.x * sin(u_time)));\n\n    vec3 color = vec3(y2);\n\n    float pct2 = plot2(vUv, y2);\n    color = (1.0 - pct2) * color + pct2 * vec3(1., 0., 0.);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Kg(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:$g,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ex=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot( vec2 st, float pct){\n        return smoothstep(pct - 0.02, pct, st.y) - \n               smoothstep(pct, pct + 0.02, st.y);\n    }\n    \n    void main(){\n        float y = abs(sin((vUv.x * PI) + u_time) * 0.5) ;\n        y /= abs(cos((vUv.y * PI) + u_time) * 0.5);\n        vec3 color = vec3(tan(y + u_time));\n        gl_FragColor = vec4(color, 0.2);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function nx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ex,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    void main(){\n        float y = smoothstep(0.2, 0.5, vUv.x) - smoothstep(0.5, 0.8, vUv.x);\n        y+= smoothstep(0.2, 0.5, vUv.y) - smoothstep(0.5, 0.8, vUv.y);\n        y -= abs(cos(u_time * 0.5));\n        vec3 color = vec3(abs(sin(y + u_time)));\n        color.x = sin(u_time);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function rx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:tx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ax=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    void main(){\n        float y = step(distance(abs(sin(u_time)), abs(sin(PI))), vUv.x);\n        float x = step(distance(abs(sin(u_time)), abs(cos(PI))), vUv.y);\n        vec3 color = vec3(y * x);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ix(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ax,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ox=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    void main(){\n        //float y=step(.5,vUv.x);\n        float y = step(abs(sin(u_time * 0.2)),vUv.y);\n        float x =step(abs(cos(u_time * 0.8)),vUv.x);\n        float z =step(abs(sin(u_time * 0.5)),vUv.y);\n    \n    \n        vec3 color=vec3(y, x, z);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function lx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ox,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot(vec2 st,float pct){\n        return abs(smoothstep(pct-.1,pct,st.y)-\n        smoothstep(pct,pct+.1,st.y));\n    }\n    \n    void main(){\n        float y = smoothstep(0.01, 0.99, vUv.x);\n        float x=smoothstep(.01,.99,vUv.y);\n        vec3 color = vec3(0.);\n    \n        float pct = plot(sin(vUv * u_time * PI),sin(y * u_time * 0.5 * PI));\n        float pct2 =plot(cos(vUv * u_time),cos(x * u_time * 0.5));\n    \n        color = (1. - pct) * color + pct * vec3(0., 1., 0.);\n        color *=(1.-pct2)*color+pct2*vec3(0.,1.,0.);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function cx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:sx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ux=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot(vec2 vUv, float pct){\n        return smoothstep(pct-0.01, pct, vUv.y) - \n                smoothstep(pct, pct + 0.1, vUv.y);\n    }\n    \n    \n    void main(){\n        float y = smoothstep(0.1 + abs(atan(u_time)), 0.9 - abs(atan(u_time)) , 0.5 + abs(tan(vUv.x * 20. * abs(cos(u_time * 0.25)))));\n        float x = smoothstep(0.9 - abs(atan(u_time)), 0.1 + abs(atan(u_time)),0.5 +  abs(tan(vUv.y * 20. *abs(cos(u_time * 0.25)))));\n        vec3 color = vec3(y * x);\n    \n        float pct = plot(vUv, (y * x) );\n        color = (1.0 - pct) * color + pct * vec3(0., 1., 0.);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function vx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ux,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    void main(){\n        float y = step(vUv.x, abs(cos((vUv.y + u_time))) * abs(cos((vUv.y + u_time) * 1.)) * abs(sin(vUv.y + u_time)) * abs(sin((vUv.y + u_time) * 2.)));\n        vec3  color = vec3(y);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function px(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:fx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    void main(){\n        float y = mod(cos(vUv.y * u_time) + 1., cos(PI +PI +sin(u_time)));\n        float x = mod(cos(vUv.x * u_time) + 1., cos(PI + PI +sin(u_time)));\n        vec3 color = vec3(y-x, x/y, x*y);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function dx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:mx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    vec2 getRadialUv(vec2 vUv){\n        float angle = atan(vUv.x, vUv.y);\n        vec2 radialUv = vec2(0.);\n        radialUv.x = angle/(PI * 2. ) + .9 *abs(cos(u_time));\n        radialUv.y = 1. - pow(1. - length(vUv), 4.);\n        return radialUv;\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        vec2 radialUv = getRadialUv(vUv);\n        vec2 color = vec2(radialUv);\n        gl_FragColor = vec4(color, 1., 0.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function gx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:hx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var xx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //Exponential impulse iquilezles.org\nfloat expImpulse(float x, float k){\n    float h = k*x;\n    return h* exp(1.-h);\n}\n\n//sinc curve original iquilezles.org\n// float sinc(float x,float k)\n// {\n//     float a=PI*((k*x-1.);\n//     return sin(a)/a;\n// }\n\n//Sinc curve  - modified\nfloat sinc(float x, float k){\n    float a = PI * ((k*x - 0.5));\n    return abs(sin(a))/ abs(cos(a));\n}\n\nvoid main(){\n    // float y = expImpulse(vUv.x, vUv.y / sin(u_time * 0.02) * 10.0);\n    float y=sinc(sin(vUv.y * 20.), sin(u_time * 0.25));\n    float x=sinc(sin(vUv.x * 20.), sin(u_time * 0.25));\n    vec3 color = vec3(cos(y) + sin(x));\n    gl_FragColor = vec4(y * x + vUv.x, vUv.y, 0.5, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function yx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:xx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var bx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n      }\n      \n      void main(){\n          float y = 0.1 * cos((10.0 * vUv.x) + (5. *  u_time));\n          float line = smoothstep(1. - clamp(distance(y + (sin(vUv.y)), 0.5) * 1., 0., 1.), 1., 0.99);\n          float line2 = smoothstep(1. - clamp(distance(y + (cos(vUv.y)), 0.5) * 1., 0., 1.), 1., 0.99);\n          vec3 color = vec3(line + line2);\n      \n          float pct = plot(vUv, sin(line));\n          color = (1. - line) * color + sin(pct) * vec3(0., 0., 0.);\n      \n          gl_FragColor = vec4(color, 1.);\n      }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function _x(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:bx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var wx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float sinc(float x, float k){\n        float a = PI * ((k * x) - 1.);\n        return sin(a)/a;\n    }\n    \n    //plot function from bookofshaders.com\n    float plot(vec2 vUv, float pct){\n        return smoothstep(pct - 0.01, pct, vUv.y) -\n               smoothstep(pct, pct + 0.1, vUv.y);\n    }\n    \n    \n    void main(){\n        float y = sinc(u_time, vUv.x);\n        vec3 color = vec3(y);\n        float pct = plot(vUv * 1.75 -0.5, y);\n        color = vec3(1. - pct);\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Sx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:wx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ux=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float sinc(float x,float k){\n        float a=PI*((k*x)-1.);\n        return sin(a)/a;\n    }\n    \n    //exponential impulse iquilezles.org\n    float expImpulse(float x,float k)\n    {\n        float h=k*x;\n        return h*exp(1.-h);\n    }\n    float expImpulse2(float x,float k)\n    {\n        float h=(k + 0.25)*x;\n        return h*exp(1.-h);\n    }\n    float expImpulse3(float x,float k)\n    {\n        float h=(k + 0.5)*x;\n        return h*exp(1.-h);\n    }\n    \n    //plot function from bookofshaders.com\n    float plot(vec2 vUv,float pct){\n        return smoothstep(pct-.01,pct,vUv.y)-\n        smoothstep(pct,pct+.1,vUv.y);\n    }\n    \n    void main(){\n        float y=expImpulse(u_time,clamp(vUv.x, 0.0, 1.0));\n        float x=expImpulse2(u_time,clamp(vUv.x, 0.0, 1.0));\n        float z=expImpulse3(u_time,clamp(vUv.x,0.,1.));\n    \n        vec3 color=vec3(y);\n        float pct=plot(vUv*1.75-.5,y);\n        float pct2=plot(vUv*1.75-.5,x);\n        float pct3=plot(vUv*1.75-.5,z);\n        color=vec3(1.-pct);\n        color*=vec3(1.-pct2);\n        color*=vec3(1.-pct3);\n        gl_FragColor=vec4(color,1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Mx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ux,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n      }\n      \n      void main(){\n          float a = sin(vUv.x * u_time) * 0.25 + 0.5;//sin\n          float b = cos(vUv.x * u_time) * 0.25 + 0.5;//cos\n      \n          vec3 color = vec3(1.0);\n      \n          float pct = plot(vUv, a);\n          float pct2 = plot(vUv, b);\n      \n          color *= (1.0 - pct) * color + pct * vec3(1.0, 0.0, 0.0);\n          color *= (1.0 - pct2) * color + pct2 * vec3(0.0, 0.0, 1.0);\n          \n          gl_FragColor = vec4(color, 1.);\n      }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function kx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:jx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Tx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n      }\n      \n      //parabola iquilezles.org\n      float parabola( float x, float k ){\n          return pow(4.0 * x * (1.0 - x), k);\n      }\n      \n      \n      void main(){\n          float y = parabola(vUv.x, 2. + (sin(u_time)));\n          float x = parabola(vUv.x, 4. + (sin(u_time)));\n          float z = parabola(vUv.x, 8. + (sin(u_time)));\n          vec3 color = vec3(0.);\n      \n          float pct = plot(vUv, y);\n          float pct2 = plot(vUv, x);\n          float pct3 = plot(vUv, z);\n      \n          color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n          color += (1.0-pct2)*color+pct2*vec3(1.0,0.0,0.0);\n          color += (1.0-pct3)*color+pct3*vec3(0.0,0.0,1.0);\n      \n          gl_FragColor = vec4(color, 1.);\n      }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Cx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Tx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //plot function bookofshaders\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, st.y) -\n                smoothstep( pct, pct+0.02, st.y);\n    }\n    \n    //easing functions easings.net/#easeInElastic\n    float easeInElastic(float x){\n        float y = (2.0 * PI) / 3.;\n        return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * u_time * (0.25)))) ;\n    }\n    \n    void main(){\n        float y = easeInElastic(vUv.x) - 0.5;\n    \n        vec3 color = vec3(y);\n    \n        float pct = plot(vUv, y);\n        color = pct * vec3(0., 1., 0.);\n    \n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Fx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Rx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Px=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-0.2, pct, st.y + 0.5) -\n            smoothstep( pct, pct+0.2, st.y + 0.5);\n  }\n  \n  float plotX(vec2 st, float pct){\n    return  smoothstep( pct-0.2, pct, st.x + 0.5) -\n            smoothstep( pct, pct+0.2, st.x + 0.5);\n  }\n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * 2.0 ))) ;\n  }\n  \n  void main(){\n      float y =  easeInElastic(vUv.x) - 0.25;\n      float x =  easeInElastic(vUv.y) - 0.25;\n      float z = easeInElastic(1. - vUv.x) - 0.5;\n      float a = easeInElastic(1. - vUv.y) - 0.5;\n  \n      vec3 color = vec3(y);\n  \n      float pct = plotY(vUv, y + 0.25);\n      float pct2 = plotX(vUv, x + 0.25);\n      float pct3 = plotY(vUv, z);\n      float pct4 = plotX(vUv, a);\n  \n      color = pct * vec3(1., 0., 0.);\n      color *= pct2 * vec3(1., 1., 0.);\n      //color *= pct3 * vec3(0., 1., 0.);\n      //color += pct4 * vec3(1., 0., 0.);\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Dx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Px,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ex=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //book of shaders plot function\nfloat plot(vec2 st,float pct){\n    return smoothstep(pct-.8,pct,st.y)-\n    smoothstep(pct,pct+.8,st.y);\n}\n\nvoid main(){\n    vec2 vUv = vec2(atan(vUv.x - 0.5, vUv.y - 0.5) * u_time * sin(u_time * 0.5));\n    float x = sin(vUv.x);\n    float y = sin(vUv.y);\n    vec3 color = vec3(x);\n    color += vec3(y);\n\n    //float pct = plot(vUv, y);\n    //color += pct * vec3(0.0, 1.0, 1.0);\n\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function zx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ex,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Lx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //sinc curve iquilezles.org\nfloat sinc(float x,float k){\n    float a=PI*((k*x)-1.);\n    return sin(a)/a ;\n}\n\n//plot function bookofshaders\nfloat plot(vec2 st, float pct){\n  \n  return  smoothstep( pct-0.02, pct, st.x + 0.5) -\n          smoothstep( pct, pct+0.2, st.x + 0.5);\n}\n\nfloat plot2(vec2 st, float pct){\n  \n  return  smoothstep( pct-0.02, pct, st.y + 0.5) -\n          smoothstep( pct, pct+0.2, st.y + 0.5);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv);\n    vUv -= 0.5; \n    float y = sinc((vUv.y - 0.5 * PI), u_time  * 0.5);\n    float x = sinc((vUv.x - 0.5 * PI), u_time  * 0.5);\n    \n    vec3 color = vec3(0.);\n\n    float pct = plot(vUv - 0.5, y);\n    float pct2 = plot2(vUv - 0.5, x);\n\n    color += pct * vec3(1., 0., 0.);\n    color *= pct2 * vec3(1., 0., 0.);\n\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ax(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Lx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ix=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-0.02, pct, st.y +2.5) -\n            smoothstep( pct, pct+0.25, st.y + 2.5);\n  }\n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * 1.5 ))) ;\n  }\n  \n  void main(){\n      vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.7);\n      vUv *= 2.75;\n      float y = easeInElastic(abs(sin(vUv.x)) * 1.25);\n      float x = easeInElastic(abs(cos(vUv.y)) * 1.25);\n  \n      vec3 color = vec3(0.);\n  \n      float pct = plotY(vUv, y * x);\n      color += pct  * vec3(0., 1., 1.);\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ox(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ix,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //plot function bookofshaders\nfloat plotY(vec2 st, float pct){\n    return  smoothstep( pct-.02, pct, st.y + 0.5) -\n            smoothstep( pct, pct+.25, st.y + 0.5);\n  }\n  \n  float plotX(vec2 st, float pct){\n    return  smoothstep( pct-.02, pct, st.x + 0.5) -\n            smoothstep( pct, pct+.25, st.x + 0.5);\n  }\n  \n  \n  //easing functions easings.net/#easeInElastic\n  float easeInElastic(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * cos((x * 10. - 10.75) * y - (u_time * 2.0 ))) ;\n  }\n  \n  float easeInElastic2(float x){\n      float y = (2.0 * PI) / 3.;\n      return (1.0 - pow(2., 10. * x - 10.) * sin((x * 10. - 10.75) * y - (u_time * 2.0 ))) ;\n  }\n  \n  void main(){\n      vec2 vUv = vec2(vUv.x, vUv.y);\n      vUv *= 0.5;\n      vUv += 0.3;\n  \n      float y =  easeInElastic(vUv.x);\n      float x =  easeInElastic2(vUv.y);\n  \n      vec3 color = vec3(y);\n  \n      float pct = 1. -plotY(vUv, y);\n      float pct2 = 1. - plotX(vUv, x);\n    \n      color = pct * vec3(1., 0., 0.);\n      color += pct2 * vec3(1., 0., 0.);\n  \n      gl_FragColor = vec4(color, 1.);\n  }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Nx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Bx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    vec3 colorA = vec3(0.788, 0.262, 0.250);\nvec3 colorB = vec3(0.250, 0.474, 0.788);\n\nfloat easeInQuad(float x){\n    return x * x;\n}\n\nvoid main(){\n    vec3 color = vec3(0.);\n    float pct = easeInQuad(vUv.x);\n    pct += sin(u_time);\n    color = mix(colorA, colorB, pct);\n    color -= mix(colorB, colorA, pct);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Vx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Gx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    vec3 colorA = vec3(0.149,0.141,0.912);\nvec3 colorB = vec3(1.000,0.833,0.224);\n\nfloat plot (vec2 st, float pct){\n  return  smoothstep( pct-0.01, pct, st.y) -\n          smoothstep( pct, pct+0.01, st.y);\n}\n\n//bookofshaders\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 3.0;\n    vec3 color = vec3(0.0);\n    color = rgb2hsb(vec3(vUv.x, vUv.y, abs(sin(u_time * 0.5))));\n    color -= rgb2hsb(vec3(vUv.x, vUv.y, abs(cos(u_time * 0.5))));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Hx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:qx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Wx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 centeredUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    centeredUv *= 10.0;\n    float t = u_time * .05;\n    //vUv += M;\n    centeredUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(sin(centeredUv.y), sin(centeredUv.x));\n    float radius = length(centeredUv) * 200.0;\n    color = 1. - hsb2rgb(vec3((angle * abs(tan(sin(u_time * 0.25)))) - 0.25, radius, 1.));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Xx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Wx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb(in vec3 c){\n    vec3 rgb=clamp(abs(mod(c.x*6.+vec3(3.8,1.,7.),\n6.)-3.)-1.,\n0.,\n1.);\nrgb=rgb*rgb*(3.-2.*rgb);\nreturn c.z*mix(vec3(1.),rgb,c.y);\n}\n\nmat2 Rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid main(){\n    vec2 centeredUv=vec2(vUv.x-.5,vUv.y-.5);\n    centeredUv*=10.;\n    float t=u_time*.05;\n    centeredUv*=Rot(t*10.);\n    vec3 color=vec3(0.);\n    float angle=abs(tan(dot(abs(cos(centeredUv.x)), abs(sin(centeredUv.y)))) * abs(cos(u_time * 0.5)));\n    float radius=length(centeredUv)*2000.;\n    color=1. - hsb2rgb(vec3((angle/(TWO_PI /3.))+.5,radius, 1.));\n    gl_FragColor=vec4(color.x , color.y, color.z ,1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Zx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Yx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Jx=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    mat2 Rot(float a){\n        float s=sin(a);\n        float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n    void main(){\n        vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n        vUv *= 25.0;\n        float t = u_time * 0.25;\n        vUv*=Rot(t*1.);\n        vec3 color=vec3(0.);\n        float angle=abs(tan(dot(abs(cos(vUv.x)),abs(sin(vUv.y))))*abs(cos(u_time*.25)));\n        float radius=length(vUv) * 0.5;\n        color = vec3(((angle * radius)/ PI) + (cos(u_time)), tan(radius * angle) , tan(radius * angle));\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Qx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Jx,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $x=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 10.0;\n    float t = u_time * .05;\n    vUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(sin(vUv.y), sin(vUv.x));\n    float radius = length(vUv) * 2.0;\n    color = 1. - hsb2rgb(vec3((angle * abs(tan(sin(u_time * 0.5)))), abs(tan(angle + u_time)) , u_time * 0.5));\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Kx(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:$x,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ey=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    mat2 Rot(float a){\n        float s = sin(a);\n        float c = cos(a);\n        return mat2(c, -s, s, c);\n    }\n    \n    void main(){\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vUv -= 0.5;\n        vUv *= 10.0;\n        float t = u_time * .05;\n        vUv *= Rot(t * 5.0);\n        vec3 color = vec3(0.);\n        float radius = length(tan(vUv + (sin(vUv.y))) * 0.08);\n        color = vec3(tan(vUv.x + cos(vUv.y + u_time)), tan(1. - vUv.x + cos(vUv.y + u_time)), tan(vUv.x + cos(vUv.y + u_time)));\n        vec3 newColor = vec3(color.x * radius, color.y * radius, color.z * radius);\n        gl_FragColor = vec4(newColor, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ny(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ey,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ty=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid main(){\n    vec2 vUv = vec2(vUv.x - 0.5, vUv.y - 0.5);\n    vUv *= 10.0;\n    float t = u_time * .05;\n    vUv *= Rot(t * 10.0);\n    vec3 color = vec3(0.);\n    float angle = dot(cos(vUv.y), cos(vUv.x));\n    float radius = length(vUv) * 200.0;\n    color = vec3(vUv.x * angle, vUv.y * angle, 1.);\n    gl_FragColor = vec4(color, 1.);\n}\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ry(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ty,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ay=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function iy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ay,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var oy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ly(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:oy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function cy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:sy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var uy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function vy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:uy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function py(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:fy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var my=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function dy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:my,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function gy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:hy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var xy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function yy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:xy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var by=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function _y(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:by,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var wy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Sy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:wy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Uy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function My(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Uy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ky(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:jy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ty=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Cy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ty,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ry=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Fy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ry,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Py=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Dy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Py,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ey=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function zy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ey,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ly=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ay(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ly,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Iy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Oy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Iy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var By=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ny(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:By,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Vy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Gy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Hy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:qy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Wy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Xy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Wy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Zy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Yy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Jy=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Qy(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Jy,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $y=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ky(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:$y,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var eb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function nb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:eb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function rb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:tb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ab=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ib(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ab,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ob=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function lb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ob,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function cb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:sb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ub=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function vb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ub,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function pb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:fb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function db(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:mb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var hb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function gb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:hb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var xb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function yb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:xb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var bb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function _b(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:bb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var wb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Sb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:wb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ub=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Mb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ub,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var jb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function kb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:jb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Tb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Cb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Tb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Rb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Fb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Rb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Pb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Db(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Pb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Eb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function zb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Eb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Lb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ab(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Lb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ib=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ob(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ib,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Bb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Nb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Bb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Gb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Vb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Gb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var qb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Hb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:qb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Wb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Xb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Wb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Yb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Zb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Yb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Jb=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Qb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Jb,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $b=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Kb(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:$b,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var e_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function n_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:e_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var t_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function r_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:t_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var a_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function i_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:a_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var o_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function l_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:o_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var s_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function c_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:s_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var u_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function v_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:u_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var f_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function p_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:f_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var m_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function d_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:m_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var h_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function g_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:h_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var x_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function y_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:x_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var b_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function __(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:b_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var w_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function S_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:w_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var U_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function M_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:U_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var j_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function k_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:j_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var T_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function C_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:T_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var R_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function F_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:R_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var P_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function D_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:P_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var E_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function z_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:E_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var L_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function A_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:L_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var I_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function O_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:I_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var B_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function N_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:B_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var G_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function V_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:G_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var q_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function H_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:q_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var W_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function X_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:W_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Y_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Z_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Y_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var J_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Q_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:J_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var $_=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function K_(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:$_,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ew=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function nw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ew,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var tw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function rw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:tw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var aw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function iw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:aw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ow=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function lw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ow,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var sw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function cw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:sw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var uw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function vw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:uw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var fw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function pw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:fw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var mw="\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",dw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _w=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ww(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_w,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Uw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Sw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Mw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Mw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Tw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Rw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Cw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Fw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Pw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Fw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ew(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Dw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Lw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Aw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Iw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Aw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ow=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Bw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ow,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Nw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Gw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Nw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Vw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Vw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ww(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Hw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Xw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Yw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Xw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Zw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Jw(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Zw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $w(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Qw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Kw=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Kw,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _S=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_S,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function US(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ES(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JS(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $S(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KS=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KS,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _U=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_U,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JU(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $U(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KU=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KU,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _M=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_M,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JM(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $M(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KM=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ej(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KM,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ij=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ij,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _j=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_j,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Uj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Sj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Mj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Mj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Tj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Rj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Cj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Fj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Pj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Fj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ej(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Dj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Lj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Aj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ij(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Aj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Oj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Bj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Oj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Nj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Gj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Nj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Vj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Vj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Wj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Hj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Xj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Yj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Xj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Zj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Jj(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Zj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $j(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Qj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Kj=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ek(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Kj,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ak(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ik=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ok(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ik,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ck=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ck,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _k=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_k,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Uk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Sk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Mk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Mk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Tk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ck=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Rk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ck,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Fk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Pk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Fk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ek(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Dk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Lk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ak=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ik(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ak,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Ok=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Bk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Ok,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Nk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Gk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Nk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Vk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Vk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Wk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Hk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Xk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Yk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Xk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Zk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Jk(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Zk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $k(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Qk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Kk=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Kk,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    //uniform float u_time;\n\n    //varying vec2 vUv;\n\n    //book of shaders example\n        float random (in vec2 _st) {\n            return fract(sin(dot(_st.xy,\n                                vec2(12.9898,78.233)))*\n                43758.5453123);\n        }\n\n        // Based on Morgan McGuire @morgan3d\n        // https://www.shadertoy.com/view/4dS3Wd\n        float noise (in vec2 _st) {\n            vec2 i = floor(_st);\n            vec2 f = fract(_st);\n\n            // Four corners in 2D of a tile\n            float a = random(i);\n            float b = random(i + vec2(1.0, 0.0));\n            float c = random(i + vec2(0.0, 1.0));\n            float d = random(i + vec2(1.0, 1.0));\n\n            vec2 u = f * f * (3.0 - 2.0 * f);\n\n            return mix(a, b, u.x) +\n                    (c - a)* u.y * (1.0 - u.x) +\n                    (d - b) * u.x * u.y;\n        }\n\n        #define NUM_OCTAVES 5\n\n        float fbm(vec2 vUv){\n            float v = 0.;\n            float a = .45;\n            vec2 shift = vec2(1.);\n            mat2 rot = mat2(cos(0.5), sin(0.5),\n                            -sin(0.5), cos(0.5));\n            for(int i = 0; i < NUM_OCTAVES; i++){\n                v += a / noise(vUv - u_time * 0.2);\n                vUv = rot * PI * 0.25 * vUv * 3. + shift + (u_time * 0.5);\n                a *= .95 * noise(vUv);\n            }\n            return 1. -  v / 4.;\n        }\n\n        void main(){\n            vec2 vUv = vec2(vUv.x, vUv.y);\n            vUv *= 2.;\n            vUv.x += u_time * 0.1;\n            vec3 color = vec3(0.);\n\n            vec2 q = vec2(0.);\n            q.x = fbm(vUv);\n            q.y = fbm(vUv + vec2(1.));\n\n            vec2 r = vec2(0.);\n            r.x = fbm(vUv + 1.0 * q + vec2(1.7, 9.2) + 0.15 * u_time);\n            r.y = fbm(vUv + 1.0 * q + vec2(8.3, 2.8) + 0.16 * u_time);\n\n            float f = fbm(vUv + fbm(vUv + fbm(vUv)));\n            float f2 = fbm(vUv * 1.2 + fbm(vUv * 1.2 + fbm(vUv)));\n\n            //f(p) = fbm( p + fbm( p + fbm( p ) ) )\n            color = mix(vec3(0.901961,0.619608,0.666667),\n                        vec3(0.966667,0.666667,0.098039),\n                        clamp((f*f)*5.0,0.0,1.0));\n\n            color *= mix(vec3(0.901961,0.619608,0.666667),\n                        vec3(0.966667,0.666667,0.098039),\n                        clamp((f2*f2)*5.0,0.0,1.0));\n\n            // color = mix(color,\n            //             vec3(0.,.8,0.94706),\n            //             clamp(length(q),0.0,1.0));\n\n            // color = mix(color,\n            //             vec3(0.166667,.1,0.2),\n            //             clamp(length(r.x),0.0,.2));\n\n            float x = f + f2 + noise(vUv + u_time);\n\n        gl_FragColor = vec4(color * x,1.);\n        }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _T=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_T,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ST=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ST,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ET(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JT(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $T(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KT=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KT,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _C=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_C,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JC(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $C(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KC=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KC,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _R=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_R,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ER(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JR(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $R(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KR=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KR,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _F=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_F,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JF(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $F(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KF=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    // uniform float u_time;\n\n    // varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KF,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _P=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_P,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n    uniform float u_time;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 color = vec3(0.);\n        color.gb += vUv.x - (sin(u_time) ) * 0.35;\n        color.gb *= vUv.y - (sin(u_time) ) * 0.35;\n        color.gb -= 0.1;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n        varying vec2 vUv;\n        #define PI 3.14159265359\n        #define TWO_PI 6.28318530718\n        uniform float u_time;\n        uniform vec2 u_resolution;\n\n        //iquilezles.org/articls/distfunctions2d\n        float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n        {\n            //p - point\n            //b - size of box\n            //r - round box - top right, bottom right, top left, bottom left\n            p = p * 2.0 - 1.;\n            r.xy = (p.x > 0.0) ? r.xy : r.zw;\n            r.x = (p.y > 0.0) ? r.x : r.y;\n            vec2 q = abs(p)-b+r.x;\n            float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n            return 1. - smoothstep(0.01, 0.02, v);\n        }\n\n        float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n        {\n            //x - thickness\n            float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n            float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n            return (c - a);\n        }\n\n        float sdBox(vec2 p, vec2 b)\n        {\n            //p - point \n            //b -\n            p = p * 2.0 - 1.; \n            vec2 d = abs(p) - b;\n            float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n            float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n            return smoothstep(0.01, 0.11, y / x);\n        }\n\n        float sdCircle(vec2 p, float r)\n        {\n            p = p * 2.0 - 1.;\n            float x = length(p) - r;\n            return 1. - smoothstep(0.01, 0.02, x);\n        }\n\n        float sdSegment(vec2 p, vec2 a, vec2 b)\n        {\n            vec2 pa = p-a;\n            vec2 ba = b-a;\n            float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n            return length(pa - ba * h);\n        }\n\n        vec2 Rot(vec2 vUv, float a){\n            vUv -= 0.5;\n            vUv = mat2(cos(a), -sin(a),\n                    sin(a), cos(a)) * vUv;\n            vUv += 0.5;\n            return vUv;\n        }\n\n        float ndot(vec2 a, vec2 b)\n        {\n            return a.x * b.x - a.y * b.y;\n        }\n\n        float sdRhombus(vec2 p, vec2 b)\n        {\n            p = abs(p);\n            float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n            float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n            return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n        }\n\n        float dot2(vec2 a)\n        {\n            return dot(a.x, a.y);\n        }\n\n        float trapezoid(vec2 p, float r1, float r2, float he)\n        {\n            vec2 k1 = vec2(r2, he);\n            vec2 k2 = vec2(r2-r1, 2.0 * he);\n            p.x = abs(p.x);\n            vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n            vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n            float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n            return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n        }\n\n        float sdEqTriangle(vec2 p, float size)\n        {\n            p = p / size;\n            float k = sqrt(3.);\n            p.x = abs(p.x) - 1.;\n            p.y = p.y + 1.0/k;\n            if(p.x+k*p.y > 0.)\n            {\n                p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n            }\n            p.x -= clamp(p.x, -2., 0.);\n            return -length(p) * sign(p.y);\n        }\n\n        float sdEqTriangleOutline(vec2 p, float size)\n        {\n            float x = 1. - sdEqTriangle(p, size);\n            float y = 1. - sdEqTriangle(p, size + 0.025);\n            x = smoothstep(0.01, 0.021, x);\n            y = smoothstep(0.01, 0.021, y);\n            return y - x;\n        }\n\n        float sdTriIsosceles(vec2 p, vec2 q)\n        {\n            p = Rot(p, PI);\n            p.x = abs(p.x);\n            vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n            vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n            float s = -sign(q.y);\n            vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                        vec2(dot(b,b), s*(p.y-q.y)));\n            return -sqrt(d.x)*sign(d.y);\n        }\n\n        void main()\n        {\n            vec2 vUv = vec2(vUv.x, vUv.y);\n            vUv = vUv * 2.;\n            //vUv.y -= 0.25;\n            vec2 vUv2 = vUv;\n            vUv2 -= 1.;\n            vUv2 = Rot(vUv2, PI);\n            vec3 color = vec3(0.);\n            float y = sdTriIsosceles(vUv, vec2(0.25 +(sin(u_time)/4.), 0.5 +(cos(u_time)/4.)));\n            float x = sdTriIsosceles(vUv2, vec2(0.25 +(cos(u_time)/4.), 0.5 +(sin(u_time)/4.)));\n            y = 1. - smoothstep(0.01, 0.021, y);\n            x = 1. - smoothstep(0.01, 0.021, x);\n            color += y;\n            color += x;\n            gl_FragColor = vec4(color, 1.);\n        }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n//iquilezles.org/articls/distfunctions2d\nfloat sdRoundedBox(vec2 p, vec2 b, vec4 r)\n{\n    //p - point\n    //b - size of box\n    //r - round box - top right, bottom right, top left, bottom left\n    p = p * 2.0 - 1.;\n    r.xy = (p.x > 0.0) ? r.xy : r.zw;\n    r.x = (p.y > 0.0) ? r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n    return 1. - smoothstep(0.01, 0.02, v);\n}\n\nfloat sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n{\n    //x - thickness\n    float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n    float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n    return (c - a);\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n    return smoothstep(0.01, 0.11, y / x);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    return 1. - smoothstep(0.01, 0.02, x);\n}\n\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n    return length(pa - ba * h);\n}\n\nvec2 Rot(vec2 vUv, float a){\n    vUv -= 0.5;\n    vUv = mat2(cos(a), -sin(a),\n               sin(a), cos(a)) * vUv;\n    vUv += 0.5;\n    return vUv;\n}\n\nfloat ndot(vec2 a, vec2 b)\n{\n    return a.x * b.x - a.y * b.y;\n}\n\nfloat sdRhombus(vec2 p, vec2 b)\n{\n    p = abs(p);\n    float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n    float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n    return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n}\n\nfloat dot2(vec2 a)\n{\n    return dot(a.x, a.y);\n}\n\nfloat trapezoid(vec2 p, float r1, float r2, float he)\n{\n    vec2 k1 = vec2(r2, he);\n    vec2 k2 = vec2(r2-r1, 2.0 * he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n    float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n    return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n}\n\nfloat sdEqTriangle(vec2 p, float size)\n{\n    p = p / size;\n    float k = sqrt(3.);\n    p.x = abs(p.x) - 1.;\n    p.y = p.y + 1.0/k;\n    if(p.x+k*p.y > 0.)\n    {\n        p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n    }\n    p.x -= clamp(p.x, -2., 0.);\n    return -length(p) * sign(p.y);\n}\n\nfloat sdEqTriangleOutline(vec2 p, float size)\n{\n    float x = 1. - sdEqTriangle(p, size);\n    float y = 1. - sdEqTriangle(p, size + 0.025);\n    x = smoothstep(0.01, 0.021, x);\n    y = smoothstep(0.01, 0.021, y);\n    return y - x;\n}\n\nfloat sdTriIsosceles(vec2 p, vec2 q)\n{\n    p = Rot(p, PI);\n    p.x = abs(p.x);\n    vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n    vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n    float s = -sign(q.y);\n    vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                 vec2(dot(b,b), s*(p.y-q.y)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nvoid main()\n{\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vUv = Rot(vUv, u_time * 0.2);\n    vUv = vUv * 2.;\n    \n    //vUv.y -= 0.25;\n    vec2 vUv2 = vUv;\n    vUv2 -= 1.;\n    vec2 vUv3 = vUv;\n    vUv3 -= 1.;\n    vUv3.y += 1.;\n    vec2 vUv4 = vUv;\n    vUv4 -= 1.;\n    vUv4.x += 1.;\n    vUv2 = Rot(vUv2, PI);\n    vUv3 = Rot(vUv3, PI * 0.5);\n    \n    vUv4 = Rot(vUv4, PI * -0.5);\n    vec3 color = vec3(0.);\n    float y = sdTriIsosceles(vUv, vec2(0.25 +(sin(u_time)/4.), 0.5 +(cos(u_time)/4.)));\n    float x = sdTriIsosceles(vUv2, vec2(0.25 +(cos(u_time)/4.), 0.5 +(sin(u_time)/4.)));\n    float y2 = sdTriIsosceles(vUv3, vec2(0.25 +(cos(u_time)/4.), 0.5 +(sin(u_time)/4.)));\n    float x2 = sdTriIsosceles(vUv4, vec2(0.25 +(sin(u_time)/4.), 0.5 +(cos(u_time)/4.)));\n    y = 1. - smoothstep(0.01, 0.021, y);\n    x = 1. - smoothstep(0.01, 0.021, x);\n    y2 = 1. - smoothstep(0.01, 0.021, y2);\n    x2 = 1. - smoothstep(0.01, 0.021, x2);\n    color.g += y + y2;\n    color.r += x + x2;\n    gl_FragColor = vec4(color, 1.);\n}\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n//iquilezles.org/articls/distfunctions2d\nfloat sdRoundedBox(vec2 p, vec2 b, vec4 r)\n{\n    //p - point\n    //b - size of box\n    //r - round box - top right, bottom right, top left, bottom left\n    p = p * 2.0 - 1.;\n    r.xy = (p.x > 0.0) ? r.xy : r.zw;\n    r.x = (p.y > 0.0) ? r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n    return 1. - smoothstep(0.01, 0.02, v);\n}\n\nfloat sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n{\n    //x - thickness\n    float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n    float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n    return (c - a);\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    //p - point \n    //b -\n    p = p * 2.0 - 1.; \n    vec2 d = abs(p) - b;\n    float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n    return smoothstep(0.01, 0.11, y / x);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    p = p * 2.0 - 1.;\n    float x = length(p) - r;\n    return 1. - smoothstep(0.01, 0.02, x);\n}\n\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n    return length(pa - ba * h);\n}\n\nvec2 Rot(vec2 vUv, float a){\n    vUv -= 0.5;\n    vUv = mat2(cos(a), -sin(a),\n               sin(a), cos(a)) * vUv;\n    vUv += 0.5;\n    return vUv;\n}\n\nfloat ndot(vec2 a, vec2 b)\n{\n    return a.x * b.x - a.y * b.y;\n}\n\nfloat sdRhombus(vec2 p, vec2 b)\n{\n    p = abs(p);\n    float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n    float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n    return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n}\n\nfloat dot2(vec2 a)\n{\n    return dot(a.x, a.y);\n}\n\nfloat trapezoid(vec2 p, float r1, float r2, float he)\n{\n    vec2 k1 = vec2(r2, he);\n    vec2 k2 = vec2(r2-r1, 2.0 * he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n    float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n    return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n}\n\nfloat sdEqTriangle(vec2 p, float size)\n{\n    p = p / size;\n    float k = sqrt(3.);\n    p.x = abs(p.x) - 1.;\n    p.y = p.y + 1.0/k;\n    if(p.x+k*p.y > 0.)\n    {\n        p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n    }\n    p.x -= clamp(p.x, -2., 0.);\n    return -length(p) * sign(p.y);\n}\n\nfloat sdEqTriangleOutline(vec2 p, float size)\n{\n    float x = 1. - sdEqTriangle(p, size);\n    float y = 1. - sdEqTriangle(p, size + 0.025);\n    x = smoothstep(0.01, 0.021, x);\n    y = smoothstep(0.01, 0.021, y);\n    return y - x;\n}\n\nfloat sdArc(vec2 p, vec2 sc, float ra, float rb){\n    //sc is arc's aperture\n    p.x = abs(p.x);\n    sc = vec2(sin(sc.x), cos(sc.y));\n    if (sc.y * p.x > sc.x * p.y){\n        return length(p - sc*ra) - rb;\n    }\n    else {\n        return abs(length(p) - ra) - rb;\n    }\n}\n\nfloat sdTriIsosceles(vec2 p, vec2 q)\n{\n    p = Rot(p, PI);\n    p.x = abs(p.x);\n    vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n    vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n    float s = -sign(q.y);\n    vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                 vec2(dot(b,b), s*(p.y-q.y)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nvoid main()\n{\n    vec2 vUv = vec2(vUv.x, vUv.y);\n    vec3 color = vec3(0.);\n    vec2 onevUv = vUv;\n    vec2 vUvy2 = vUv;\n    vUv = vUv * 2. - 0.5;\n    vec2 twovUv = vUv;\n    twovUv = twovUv * 2. - 1.;\n    twovUv.x -= 0.5;\n    \n    onevUv = Rot(onevUv, PI * -0.25);\n    float one = sdRoundedBox(vec2(vUv.x + 0.275, vUv.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n    float oneP = sdRoundedBox(vec2(onevUv.x + 0.24, onevUv.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n    \n    // color += one;\n    float a = PI * (0.5 + 0.25);\n    float b = 0.2 *(0.5 + 0.5);\n    twovUv = Rot(twovUv, PI * 1.85);\n    float y1 = sdArc(vec2(twovUv.x - 0.1, twovUv.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n    y1 = smoothstep(0.0, 0.015, y1); //yellow\n    vUvy2 = Rot(vUvy2, PI * -0.22);\n    float y2 = sdRoundedBox(vec2(vUvy2.x - 0.122, vUvy2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n    float y3 = sdRoundedBox(vec2(vUv.x - 0.25, vUv.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n    color += y1;\n    color -= one;\n    color -= y2;\n    color -= y3; \n    color -= oneP;\n    gl_FragColor = vec4(color, 1.);\n}\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.02, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.2;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        // vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x + 0.35, vUv.y));\n        // color += one;\n        float two = sdTwo(vec2(vUv.x + 0.05, vUv.y));\n        // color += two;\n        float three = sdThree(vec2(vUv.x, vUv.y));\n        color += three;\n        // color += one;\n        // color += two;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.02, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.2;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x + 0.5 * sin(u_time), vUv.y - 0.5 * cos(u_time)));\n        color += one;\n        float two = sdTwo(vec2(vUv.x + 0.5 * sin(u_time), vUv.y + 0.5 * cos(u_time)));\n        color += two;\n        float three = sdThree(vec2(vUv.x - 0.5 * cos(u_time), vUv.y - 0.5 * sin(u_time)));\n        color += three;\n        float four = sdFour(vec2(vUv.x - 0.5 * cos(u_time), vUv.y + 0.5 * sin(u_time)));\n        color += four;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.02, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.015, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x + 0.5 * sin(u_time), vUv.y - 0.5 * cos(u_time)));\n        color += one;\n        float two = sdTwo(vec2(vUv.x + 0.5 * sin(u_time), vUv.y + 0.5 * cos(u_time)));\n        color += two;\n        float three = sdThree(vec2(vUv.x - 0.5 * cos(u_time), vUv.y - 0.5 * sin(u_time)));\n        color += three;\n        float four = sdFour(vec2(vUv.x - 0.5 * cos(u_time), vUv.y + 0.5 * sin(u_time)));\n        color += four;\n        float five = sdFive(vec2(vUv.x + (sin(u_time)*0.5), vUv.y));\n        color += five;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.015, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.35), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.015, z1);\n        z2 = 1. - smoothstep(0.01, 0.015, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.015, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 15.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1.0, floor(u_time * 5. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float one = sdOne(b);\n        float zero = sdZero(b);\n        float shape;\n        if(str > .5 )\n        {\n            shape = smoothstep(0.01, 0.011, one);\n        } else {\n            shape = smoothstep(0.01, 0.011, zero);\n        }\n        \n        return vec3(shape * str );\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        // vUv = vUv * 2. - 0.5;\n        float one = sdOne(vec2(vUv.x , vUv.y ));\n        // color += one;\n        float zero = sdZero(vUv);\n        // color += zero;\n        // float two = sdTwo(vec2(vUv.x + 0.5 * sin(u_time), vUv.y + 0.5 * cos(u_time)));\n        // color += two;\n        // float three = sdThree(vec2(vUv.x - 0.5 * cos(u_time), vUv.y - 0.5 * sin(u_time)));\n        // color += three;\n        // float four = sdFour(vec2(vUv.x - 0.5 * cos(u_time), vUv.y + 0.5 * sin(u_time)));\n        // color += four;\n        // float five = sdFive(vec2(vUv.x + (sin(u_time)*0.5), vUv.y));\n        // color += five;\n        vec3 m = matrix(vUv);\n        color.g += m.x * 1.5;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n#ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.015, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.35), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.015, z1);\n        z2 = 1. - smoothstep(0.01, 0.015, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.0, 0.015, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.0, 0.015, x1);\n        x2 = 1. - smoothstep(0.0, 0.015, x2);\n        x3 = 1. - smoothstep(0.0, 0.015, x3);\n        x4 = 1. - smoothstep(0.0, 0.015, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.015, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float sdSix(vec2 p)\n    {\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float s1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        s1 = 1. - smoothstep(0.01, 0.015, s1);\n        s2 = 1. - smoothstep(0.01, 0.015, s2);\n        s3 = 1. - smoothstep(0.01, 0.015, s3);\n        float s4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return s1 + s2 + s3 + s4;\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 8.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1.0, floor(u_time * 5. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float shape;\n        float zero = sdZero(b);\n        float one = sdOne(b);\n        float two = sdTwo(b);\n        float three = sdThree(b);\n        float four = sdFour(b);\n        float five = sdFive(b);\n        float six = sdSix(b);\n         if(str > 0.0 && str < 0.1 ){\n            shape = smoothstep(0.01, 0.011, zero);\n        }if(str > 0.1 && str < 0.2 ) {\n            shape = smoothstep(0.01, 0.011, one);\n        }if(str > 0.2 && str < 0.3 ) {\n            shape = smoothstep(0.01, 0.011, two);\n        }if(str > 0.3 && str < 0.4 ) {\n            shape = smoothstep(0.01, 0.011, three);\n        }if(str > 0.4 && str < 0.5 ) {\n            shape = smoothstep(0.01, 0.011, four);\n        }if(str > 0.5 && str < 0.6 ) {\n            shape = smoothstep(0.01, 0.011, five);\n        }if(str > 0.6 && str < 0.7 ) {\n            shape = smoothstep(0.01, 0.011, six);\n        }if(str > 0.7 && str < 0.8 ) {\n            shape = smoothstep(0.01, 0.011, two);\n        }if(str > 0.8 && str < 0.9 ) {\n            shape = smoothstep(0.01, 0.011, three);\n        }if(str > 0.9 && str < 1.0 ) {\n            shape = smoothstep(0.01, 0.011, four);\n        }\n        \n        return vec3(shape * str );\n    }\n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec3 m = matrix(vUv);\n        m.x *= sin(u_time * 0.25);\n        m.y *= cos(u_time * 0.25);\n        color = m * 2.5;\n       \n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n#ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    varying vec2 vUv;\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    //iquilezles.org/articls/distfunctions2d\n    float sdRoundedBox(vec2 p, vec2 b, vec4 r)\n    {\n        //p - point\n        //b - size of box\n        //r - round box - top right, bottom right, top left, bottom left\n        p = p * 2.0 - 1.;\n        r.xy = (p.x > 0.0) ? r.xy : r.zw;\n        r.x = (p.y > 0.0) ? r.x : r.y;\n        vec2 q = abs(p)-b+r.x;\n        float v =  min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n        return 1. - smoothstep(0.01, 0.015, v);\n    }\n\n    float sdRoundedBoxOutline(vec2 p, vec2 b, vec4 r, float x)\n    {\n        //x - thickness\n        float a = sdRoundedBox(vec2(p), vec2(b), vec4(r));\n        float c = sdRoundedBox(vec2(p), vec2(b.x + x, b.y + x), vec4(r));\n        return (c - a);\n    }\n\n    float sdBox(vec2 p, vec2 b)\n    {\n        //p - point \n        //b -\n        p = p * 2.0 - 1.; \n        vec2 d = abs(p) - b;\n        float x = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n        float y = length(max(d, 0.0)) + min(max(d.x + 0.01, d.y + 0.01), 0.0);\n        return smoothstep(0.01, 0.11, y / x);\n    }\n\n    float sdCircle(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 0.02, x);\n    }\n\n    float sdSegment(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p-a;\n        vec2 ba = b-a;\n        float h = clamp(dot(pa, ba)/dot(ba,ba), 0., 1.);\n        return length(pa - ba * h);\n    }\n\n    vec2 Rot(vec2 vUv, float a){\n        vUv -= 0.5;\n        vUv = mat2(cos(a), -sin(a),\n                sin(a), cos(a)) * vUv;\n        vUv += 0.5;\n        return vUv;\n    }\n\n    float ndot(vec2 a, vec2 b)\n    {\n        return a.x * b.x - a.y * b.y;\n    }\n\n    float sdRhombus(vec2 p, vec2 b)\n    {\n        p = abs(p);\n        float h = clamp(ndot(b-2. *p, b) / dot(b, b), -1., 1.);\n        float d = length(p - 0.5* b*vec2(1.0-h, 1.0+h));\n        return d * sign(p.x * b.y + p.y * b.x - b.x*b.y);\n    }\n\n    float dot2(vec2 a)\n    {\n        return dot(a.x, a.y);\n    }\n\n    float trapezoid(vec2 p, float r1, float r2, float he)\n    {\n        vec2 k1 = vec2(r2, he);\n        vec2 k2 = vec2(r2-r1, 2.0 * he);\n        p.x = abs(p.x);\n        vec2 ca = vec2(p.x-min(p.x, (p.y<0.)?r1:r2), abs(p.y)-he);\n        vec2 cb = p - k1 + k2 * clamp(dot(k1-p,k2)/dot2(k2), 0., 1.);\n        float s = (cb.x < 0. && ca.y<0.)? -1.: 1.;\n        return s*sqrt(min(dot(ca, ca),dot(cb, cb)));\n    }\n\n    float sdEqTriangle(vec2 p, float size)\n    {\n        p = p / size;\n        float k = sqrt(3.);\n        p.x = abs(p.x) - 1.;\n        p.y = p.y + 1.0/k;\n        if(p.x+k*p.y > 0.)\n        {\n            p = vec2(p.x-k*p.y, -k*p.x-p.y)/2.0; \n        }\n        p.x -= clamp(p.x, -2., 0.);\n        return -length(p) * sign(p.y);\n    }\n\n    float sdEqTriangleOutline(vec2 p, float size)\n    {\n        float x = 1. - sdEqTriangle(p, size);\n        float y = 1. - sdEqTriangle(p, size + 0.025);\n        x = smoothstep(0.01, 0.021, x);\n        y = smoothstep(0.01, 0.021, y);\n        return y - x;\n    }\n\n    float sdArc(vec2 p, vec2 sc, float ra, float rb){\n        //sc is arc's aperture\n        p.x = abs(p.x);\n        sc = vec2(sin(sc.x), cos(sc.y));\n        if (sc.y * p.x > sc.x * p.y){\n            return length(p - sc*ra) - rb;\n        }\n        else {\n            return abs(length(p) - ra) - rb;\n        }\n    }\n\n    float sdTriIsosceles(vec2 p, vec2 q)\n    {\n        p = Rot(p, PI);\n        p.x = abs(p.x);\n        vec2 a = p - q * clamp(dot(p,q)/dot(q,q), 0.0, 1.0);\n        vec2 b = p - q * vec2( clamp(p.x/q.x, 0., 1.), 1.);\n        float s = -sign(q.y);\n        vec2 d = min(vec2(dot(a,a), s*(p.x*q.y-p.y*q.x)), \n                    vec2(dot(b,b), s*(p.y-q.y)));\n        return -sqrt(d.x)*sign(d.y);\n    }\n\n    float sdZero(vec2 p)\n    {\n        vec2 p2 = p;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float z1 = sdArc(vec2(p2.x - 2., p2.y - 2.35), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        float z2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.7, a * 0.7), .36, b * 0.85 );\n        z1 = 1. - smoothstep(0.01, 0.02, z1);\n        z2 = 1. - smoothstep(0.01, 0.02, z2);\n        float z3=sdRoundedBox((vec2(p.x+0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        float z4=sdRoundedBox((vec2(p.x-0.088, p.y)), vec2(0.082, 0.275), vec4(0.075));\n        return z1 + z2 + z3 + z4;\n    }\n\n    float sdOne(vec2 p)\n    {\n        p.x -= 0.15;\n        vec2 vUv2 = p;\n        p = p * 2. - 0.5;\n        vUv2 = Rot(vUv2, PI * -0.25);\n        float x1 = sdRoundedBox(vec2(p.x + 0.275, p.y), vec2(0.17, 0.85), vec4(0.1, 0.1, 0.1, 0.1));\n        float x2 = sdRoundedBox(vec2(vUv2.x + 0.24, vUv2.y + 0.05), vec2(0.07, 0.2), vec4(0.1, 0.075, 0.1, 0.075));\n        return x1 + x2;\n    }\n\n    float sdTwo(vec2 p)\n    {\n        p.x += 0.1;\n        vec2 p2 = p;\n        p = p * 2. - 0.5;\n        vec2 p3 = p;\n        p3 = p3 * 2. - 1.;\n        p3.x -= 0.5;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        p3 = Rot(p3, PI * 1.85);\n        float x1 = sdArc(vec2(p3.x - 0.1, p3.y - 0.15), vec2(a * 0.8, a * 0.8), .35, b * 0.84 );\n        x1 = smoothstep(0.01, 0.02, x1);\n        p2 = Rot(p2, PI * -0.22);\n        float x2 = sdRoundedBox(vec2(p2.x - 0.122, p2.y - 0.05), vec2(0.075, 0.35), vec4(0.2, 0.1, 0.1, 0.1));\n        float x3 = sdRoundedBox(vec2(p.x - 0.25, p.y + 0.335), vec2(0.5, 0.155), vec4(0.1, 0.1, 0.1, 0.1));\n        return 1. - x1 + x2 + x3;\n    }\n\n    float sdThree(vec2 p)\n    {\n        p = p * 2. - 0.5;\n        p *= 1.2;\n        p.y += 0.125;\n        p = Rot(p, PI * -0.5);\n        p = p * 2. - 1.;\n        vec2 p2 = p;\n        vec2 p3 = p;\n        p2 = Rot(p2, PI * -0.7);\n        p3 = Rot(p3, PI * -0.7 * 2.);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n\n        float x1 = sdArc(vec2(p.x, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x2 = sdArc(vec2(p.x + 0.9, p.y), vec2(a * 0.8, a * 0.8), .45, b * 0.85 );\n        float x3 = sdArc(vec2(p2.x - 1.2, p2.y - 0.39), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n        float x4 = sdArc(vec2(p3.x - 0.43, p3.y - 1.99), vec2(a * 0.1, a * 0.1), .45, b * 0.85 );\n\n        x1 = 1. - smoothstep(0.01, 0.02, x1);\n        x2 = 1. - smoothstep(0.01, 0.02, x2);\n        x3 = 1. - smoothstep(0.01, 0.02, x3);\n        x4 = 1. - smoothstep(0.01, 0.02, x4);\n\n        return x1 + x2 + x3 + x4;\n    }\n\n    float sdFour(vec2 p)\n    {\n        float f1 = sdRoundedBox(vec2(p.x + 0.125, p.y - 0.09), vec2(0.07, 0.25), vec4(0.075));\n        float f2 = sdRoundedBox(vec2(p.x - 0.05, p.y + 0.), vec2(0.07, 0.425), vec4(0.075));\n        float f3 = sdRoundedBox(vec2(p.x + 0.00125, p.y - 0.0), vec2(0.3, 0.07), vec4(0.075));\n        return f1 + f2 + f3;\n    }\n\n    float sdFive(vec2 p)\n    {\n        float f1=sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        float f2=sdRoundedBox((vec2(p.x + 0.03, p.y+0.17)), vec2(0.225, 0.08), vec4(0.075));\n        float f3=sdRoundedBox((vec2(p.x + 0.03, p.y+0.005)), vec2(0.245, 0.08), vec4(0.075));\n        float f4=sdRoundedBox((vec2(p.x+0.112, p.y-0.09)), vec2(0.08, 0.225), vec4(0.075));\n        vec2 p2 = p;\n        p2 = Rot(p2, PI * -0.5);\n        p2 *=4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float f5 = sdArc(vec2(p2.x - 2.35, p2.y - 2.09), vec2(a * 0.5, a * 0.5), .36, b * 0.85 );\n        f5 = 1. - smoothstep(0.0, 0.02, f5);\n        return f1 + f2 + f3 + f4 + f5;\n    }\n\n    float sdSix(vec2 p)\n    {\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float s1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float s3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        s1 = 1. - smoothstep(0.01, 0.02, s1);\n        s2 = 1. - smoothstep(0.01, 0.02, s2);\n        s3 = 1. - smoothstep(0.01, 0.02, s3);\n        float s4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return s1 + s2 + s3 + s4;\n    }\n\n    float sdSeven(vec2 p)\n    {\n        vec2 p2 = p;\n        float s1 = sdRoundedBox((vec2(p.x+0.01, p.y-0.17)), vec2(0.275, 0.08), vec4(0.075));\n        p2 = Rot(p2, PI * -0.127);\n        float s2 = sdRoundedBox((vec2(p2.x-0.016, p2.y+0.001)), vec2(0.08, 0.44), vec4(0.075));\n        return s1 + s2;\n    }\n\n    float sdEight(vec2 p)\n    {\n        p *= 4.;\n        vec2 p2 = p;\n        p2 = Rot(p2, PI);\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float e1 = sdArc(vec2(p.x - 2., p.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e2 = sdArc(vec2(p2.x+1., p2.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e3 = sdArc(vec2(p.x - 2., p.y - 2.5), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float e4 = sdArc(vec2(p2.x+1., p2.y+1.5), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        e1 = 1. - smoothstep(0.01, 0.02, e1);\n        e2 = 1. - smoothstep(0.01, 0.02, e2);\n        e3 = 1. - smoothstep(0.01, 0.02, e3);\n        e4 = 1. - smoothstep(0.01, 0.02, e4);\n        return e1 + e2 + e3 + e4;\n    }\n\n    float sdNine(vec2 p)\n    {\n        p = Rot(p, PI);\n        vec2 p2 = p;\n        vec2 p4 = p2;\n        p2 *= 4.;\n        vec2 p3 = p2;\n        p3 = Rot(p3, PI);\n        // p4 = Rot(p4, PI * 0.125);\n        p4 *= 4.;\n        float a = PI * (0.5 + 0.25);\n        float b = 0.2 *(0.5 + 0.5);\n        float n1 = sdArc(vec2(p2.x - 2., p2.y - 1.7), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n2 = sdArc(vec2(p3.x+1., p3.y+0.65), vec2(a * 0.72, a * 0.72), .36, b * 0.82 );\n        float n3 = sdArc(vec2(p4.x - 1.945, p4.y - 2.35), vec2(a * 0.4, a * 0.4), .36, b * 0.82 );\n        n1 = 1. - smoothstep(0.01, 0.02, n1);\n        n2 = 1. - smoothstep(0.01, 0.02, n2);\n        n3 = 1. - smoothstep(0.01, 0.02, n3);\n        float n4=sdRoundedBox((vec2(p.x+0.092, p.y-0.035)), vec2(0.0725, 0.275), vec4(0.075));\n        return n1 + n2 + n3 + n4;\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 15.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1., floor(u_time * 6. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float shape;\n        float zero = sdZero(b);\n        float one = sdOne(b);\n        float two = sdTwo(b);\n        float three = sdThree(b);\n        float four = sdFour(b);\n        float five = sdFive(b);\n        float six = sdSix(b);\n        float seven = sdSeven(b);\n        float eight = sdEight(b);\n        float nine = sdNine(b);\n         if(str >= 0.0 && str < 0.1 ){\n            shape = zero;\n        }if(str >= 0.1 && str < 0.2 ) {\n            shape = one;\n        }if(str >= 0.2 && str < 0.3 ) {\n            shape = two;\n        }if(str >= 0.3 && str < 0.4 ) {\n            shape = three;\n        }if(str >= 0.4 && str < 0.5 ) {\n            shape = four;\n        }if(str >= 0.5 && str < 0.6 ) {\n            shape = five;\n        }if(str >= 0.6 && str < 0.7 ) {\n            shape = six;\n        }if(str >= 0.7 && str < 0.8 ) {\n            shape = seven;\n        }if(str >= 0.8 && str < 0.9 ) {\n            shape = eight;\n        }if(str >= 0.9 && str < 1.0 ) {\n            shape = nine;\n        }\n        return vec3(shape);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec3 m = matrix(vUv);\n        // m.x *= sin(u_time * 0.25) + 2.;\n        // m.y *= cos(u_time * 0.25) ;\n        color = m;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZP=new Vi({vertexShader:"\n    varying vec2 vUv;\n    \n    void main()\n    {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }",fragmentShader:Og+Bg+Ig+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdFive(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float hexagramOutline(vec2 p, float size)\n    {\n        float x = sdHexagram(p, size);\n        x = 1. - smoothstep(0.01, 0.02, x);\n        float y = sdHexagram(p, size * 0.95);\n        y = 1. - smoothstep(0.01, 0.02, y);\n        return x - y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time);\n        newUv = newUv * 2. - 1.;\n        vec2 uv2 = newUv;\n        uv2 *= ((sin(u_time) / 1.25) - 2.);\n        float hexagram = sdHexagram(newUv, 0.25);\n        hexagram = 1. - smoothstep(0.01, 0.02, hexagram);\n        color += hexagram;\n        float hexOutline = hexagramOutline(newUv, 0.28);\n        color += hexOutline;\n        float hexOutline2 = hexagramOutline(uv2, 0.2);\n        color -= hexOutline2;\n        float shaderLabel = label(vUv);\n        color += shaderLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n    ",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JP(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdSix(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        vec2 vUv2 = vUv;\n        float s1 = sdSegment(vUv, vec2(0.5 + (sin(u_time)/2.5),0.5 + (cos(u_time) / 2.5)), vec2(0.5, 0.5));\n        float s2 = sdSegment(vUv2, vec2(0.5 + (sin(u_time * 0.5)/5.), 0.5 + (cos(u_time * 0.5) / 5.)), vec2(0.5, 0.5));\n        s1 = 1. - smoothstep(0.01, 0.012, s1);\n        s2 = 1. - smoothstep(0.01, 0.012, s2);\n        color.r += s1;\n        color.g += s2;\n        float shaderLabel = label(vUv);\n        color += shaderLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $P(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KP=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdSeven(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 evUv = vUv;\n        evUv = evUv * 2. - 1.;\n        float e1 = sdEgg(evUv, 0.5, 0.25);\n        e1 = 1. - smoothstep(0.01, 0.02, e1);\n        color += e1;\n\n        float s1 = sdSegment(vUv, vec2(0.45, 0.5), vec2(0.45, 0.1));\n        float s2 = sdSegment(vUv, vec2(0.55, 0.5), vec2(0.55, 0.1));\n        s1 = 1. - smoothstep(0.01, 0.015, s1);\n        s2 = 1. - smoothstep(0.01, 0.015, s2);\n        color += s1 + s2;\n\n        float numberLabel = label(vUv);\n        color += numberLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KP,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdEight(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 5. - 2.5;\n        p.y -= 1.25;\n        p.x += 0.5;\n        float c;\n        float steps = 15.;\n        for(float i = 1.; i < steps; i++)\n        {\n            c += sdCircle(vec2(p.x  + i/ 4. * (sin(u_time * i * 0.25)), p.y + i / 4. ), a);\n        }\n        \n        return c;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float x = newfunc(vUv, 0.25);\n        color += x;\n        float num = label(vUv);\n        color += num;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdTwo(vec2(p.x, p.y));\n        float right = sdNine(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 4.;\n        //p.y -= 1.25;\n        p.x += 0.5;\n        p.y += 0.5;\n        float c;\n        float steps = 25.;\n        for(float i = 1.; i < steps; i++)\n        {\n            c += sdCircle(vec2(p.x  + i/ 4. * (sin(u_time * i * 0.25)), p.y + i / 12. * (cos(u_time * i * 0.25)) ), a);\n        }\n        return c;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        float y = newfunc(vUv, 0.25);\n        color += y;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdZero(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n    float sdCircleHighlight(vec2 p, float r)\n    {\n        p = p * 2.0 - 1.;\n        float x = length(p) - r;\n        return 1. - smoothstep(0.01, 1.5, x);\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 4.;\n        //p.y -= 1.25;\n        p.x += 0.5;\n        p.y += 0.5;\n        float c;\n        float d;\n        float e;\n        float f;\n        float steps = 25.;\n        for(float i = 1.; i < steps; i++)\n        {\n            c += sdCircle(vec2(p.x  + i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y + i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            d += sdCircle(vec2(p.x  - i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y - i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            e += sdCircleHighlight(vec2(p.x  + i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y + i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            f += sdCircleHighlight(vec2(p.x  - i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y - i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n        }\n        e *= 0.25;\n        f *= 0.25;\n        return c + d + e + f ;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdOne(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n    \n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 4.;\n        // //p.y -= 1.25;\n        p.x += 0.5;\n        p.y += 0.5;\n        p*= 0.5;\n        // float c;\n        // float d;\n        // float steps = 25.;\n        // for(float i = 1.; i < steps; i++)\n        // {\n        //     c += sdCircle(vec2(p.x  + i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y + i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n        //     d += sdCircle(vec2(p.x  - i/ 5. * (sin(u_time * i * 0.5 * 0.2)), p.y - i / 5. * (cos(u_time * i * 0.5 * 0.2)) ), a);\n            \n        // }\n        // return c + d;\n        float b;\n        float steps = 30.;\n        for(float i = 1.; i<steps; i++)\n        {\n            b += sdSegment(vec2(p.x, p.y), vec2(0.25 + i/20. * (cos(u_time * i * 0.015)) , 0.25 + i/20. * (sin(u_time * i * 0.05)) ), vec2(0.75 + i/20. * (cos(u_time * i * 0.025)), 0.75 + i/20. * (sin(u_time * i * 0.05)) ));\n            \n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 12. - 6.;\n        // //p.y -= 1.25;\n        // p.x += 0.5;\n        // p.y += 0.5;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            b += sdEqTriangleOutline(vec2(p.x + i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n            b += sdEqTriangleOutline(vec2(p.x - i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 12. - 6.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            b += sdCircleOutline(vec2(p.x + i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n            b += sdCircleOutline(vec2(p.x - i / 10. * sin(u_time + i / 5. ), p.y + i / 10. * cos(u_time + i / 10.)), a);\n            b += sdCircleOutline(vec2(p.x + i / 10. * cos(u_time + i / 5. ), p.y + i / 10. * sin(u_time + i / 10.)), a);\n            b += sdCircleOutline(vec2(p.x - i / 10. * cos(u_time + i / 5. ), p.y + i / 10. * sin(u_time + i / 10.)), a);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdFour(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 100. - 50.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, sin(u_time * i/1.));\n            b += 1. - sdBox(vec2(p.x + i + sin(u_time * i), p.y + sin(u_time * i)), vec2(1.5, 0.5));\n            b += 1. - sdBox(vec2(p.x - i + cos(u_time * i), p.y + sin(u_time * i)), vec2(1.5, 0.5));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i), p.y + i + cos(u_time * i)), vec2(0.5, 1.5));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i) , p.y - i + sin(u_time * i)), vec2(0.5, 1.5));\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdFive(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 100. - 50.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, cos(u_time * i/25.));\n            b += 1. - sdBox(vec2(p.x + i + sin(u_time * i / 50.), p.y + sin(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n            b += 1. - sdBox(vec2(p.x - i + cos(u_time * i / 50.), p.y + sin(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i / 50.), p.y + i + cos(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n            b += 1. - sdBox(vec2(p.x + sin(u_time * i / 50.) , p.y - i + sin(u_time * i / 50.)), vec2(2.5 * i/50., 2.5 * i/50.));\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdSix(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 100. - 50.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 30.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/10.)));\n            b += sdCircle(vec2(p.x + i /1.75 + sin(u_time * i / 150.), p.y + sin(u_time * i / 150.)),  2.5 * i/50.);\n            b += sdCircle(vec2(p.x - i/1.75 + cos(u_time * i / 150.), p.y + sin(u_time * i / 150.)),  2.5 * i/50.);\n            b += sdCircle(vec2(p.x + sin(u_time * i / 150.), p.y + i/1.75 + cos(u_time * i / 150.)),  2.5 * i/50.);\n            b += sdCircle(vec2(p.x + sin(u_time * i / 150.) , p.y - i/1.75 + sin(u_time * i / 150.)),  2.5 * i/50.);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float y = newfunc(vUv, 0.25);\n        color += y;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    } \n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.1;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdSeven(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 10. - 5.;\n        // //p.y -= 1.25;\n        p.x += 1.;\n        p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 30.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/15.)));\n            b += sdSegment(p, vec2(0.25 * i + ((sin(u_time) * 2.) - 12.5), 0.25 ), vec2(2.75 * i, 2.75));\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _D=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdEight(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 2.;\n\n        // //p.y -= 1.25;\n        // p.x += 1.;\n        // p.y += 1.;\n        p*= 0.5;\n        float b;\n        float steps = 15.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/15.)));\n            b += rectOutline(vec2(p.x, p.y), 0.5 * i / 15., 0.5 * i / 15.);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_D,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdThree(vec2(p.x -0.05, p.y));\n        float right = sdNine(vec2(p.x - 0.36, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 3.;\n        p*= 0.5;\n        float b;\n        float steps = 15.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            p = Rot(p, (sin(u_time * i/15.)));\n            b += cirOutline(vec2(p.x + sin(u_time * i/15. + i), p.y + cos(u_time * i/15. + i)), 0.5 * (i + sin(u_time)) * 0.25);\n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdZero(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = p * 8. - 3.;\n        p*= 0.5;\n        float b;\n        float steps = 25.;\n        for(float i = 1.; i<steps; i++)\n        {\n            // p = p * sin(u_time);\n            // if(i < 12.)\n            // {\n            //     p = Rot(p, (cos(u_time * i/50.)));\n            // } else \n            // {\n            //     p = Rot(p, (sin(u_time * i/50.)));\n            // }\n\n            p = Rot(p, (sin(u_time * i/50.)));\n            b += cirOutline(vec2(p.x + 0.75, p.y + sin(u_time * i/25. + 5.)), 0.5);\n            b += cirOutline(vec2(p.x - 0.75, p.y + sin(u_time * i/25. + 5.)), 0.5);\n\n           \n        }\n        return b;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n        float n = newfunc(vUv, 0.5);\n        color += n;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdOne(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        // vUv = vUv * 4. - 2.;\n        float x = random(vUv);\n        float y = sin(vUv.x);\n        vec2 cp = vec2(cos(u_time), sin(u_time  )) * 0.45 + 0.5;\n        y = quadraticBezier(y, cp);\n        // y += mod(vUv.x, 0.5);\n        float line = plot(vec2(vUv.x, vUv.y) , y, 0.01);\n        float line2 = plot(vec2(vUv.x, vUv.y) , y / x, 0.1);\n        float line3 = plot(vec2(vUv.x, vUv.y), y * x, 0.001);\n        color += line + line2 + line3;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // vec3 sdgBox(vec2 p, vec2 b)\n    // {\n    //     vec2 w = abs(p) - b;\n    //     vec2 s = vec2(p.y < 0. ? -1. : 1., p.x < 0. ? -1. : 1.);\n    //     float g = max(w.x, w.y);\n    //     vec2 q = max(w, 0.0);\n    //     float l = length(q);\n    //     vec3 x = vec3((g > 0.0) ? l : g, s * ((g > 0.0) ? q /l : ((w.x > w.y) ? vec2(1., 0.) : vec2(0., 1.))));\n    //     return smoothstep(0.01, 0.02, x);\n    // }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        \n        vUv = Rot(vUv, u_time);\n        vUv = vUv * 6. - 3.;\n        \n        float ra = 0.5;\n        vec3 cir = 1. - sdgCircle(vUv, ra);\n        float d = cir.x;\n        vec2 g = cir.yz;\n        \n        color += (d > 0.) ? vec3(1.) : vec3(0.0);\n        color *= 1.0 + vec3(0.5 * g, 0.0);\n        color *= 1.0 - 0.5 * exp(-16.0 * abs(d));\n        color *= 0.5 + 0.1 * cos(150.0 * d);\n        color = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.01, abs(d)));\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    vec3 sdgBox(vec2 p, vec2 b)\n    {\n        vec2 w = abs(p) - b;\n        vec2 s = vec2(p.y < 0. ? -1. : 1., p.x < 0. ? -1. : 1.);\n        float g = max(w.x, w.y);\n        vec2 q = max(w, 0.0);\n        float l = length(q);\n        vec3 x = vec3((g > 0.0) ? l : g, s * ((g > 0.0) ? q /l : ((w.x > w.y) ? vec2(1., 0.) : vec2(0., 1.))));\n        return x;\n    }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        \n        vUv = Rot(vUv, u_time);\n        vUv = vUv * 6. - 3.;\n        \n        float ra = 0.5;\n        vec3 cir = 1. - sdgCircle(vUv, ra);\n        vec3 box = 1. - sdgBox(vUv, vec2(0.5, 0.5));\n        float d = cir.x;\n        vec2 g = cir.yz;\n\n        d = box.x;\n        g = box.yz;\n        \n        color += (d > 0.) ? vec3(1.) : vec3(0.0);\n        color *= 1.0 + vec3(0.5 * g, 0.0);\n        color *= 1.0 - 0.5 * exp(-16.0 * abs(d));\n        color *= 0.5 + 0.1 * cos(150.0 * d);\n        color = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.01, abs(d)));\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    vec3 sdgBox(vec2 p, vec2 b)\n    {\n        vec2 w = abs(p) - b;\n        vec2 s = vec2(p.y < 0. ? -1. : 1., p.x < 0. ? -1. : 1.);\n        float g = max(w.x, w.y);\n        vec2 q = max(w, 0.0);\n        float l = length(q);\n        vec3 x = vec3((g > 0.0) ? l : g, s * ((g > 0.0) ? q /l : ((w.x > w.y) ? vec2(1., 0.) : vec2(0., 1.))));\n        return x;\n    }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n        \n        vUv = Rot(vUv, u_time);\n        vUv = vUv * 4. - 2.;\n        \n        float ra = 0.5;\n        vec3 cir = 1. - sdgCircle(vUv, ra);\n        vec3 box = 1. - sdgBox(vUv, vec2(0.5, 0.5));\n        float d = cir.x;\n        vec2 g = cir.yz;\n\n        d = box.x;\n        g = box.yz;\n        \n        color += (d > 0.) ? vec3(1.) : vec3(0.0);\n        // color *= 1.0 + vec3(0.5 * g, 0.0);\n        color *= 1.0 - 0.5 * exp(-16.0 * abs(d));\n        color *= 0.1 + 0.5 * cos(20.0 * d * (sin(u_time * 0.5) * 2.) + 5. );\n        color = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.01, abs(d)));\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ED(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdFive(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    vec3 sdgCircle(vec2 p, float r)\n    {\n        float d = length(p);\n        return vec3(d -r, p /d);\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n\n        vUv = vUv * 2. - 1.;\n        float k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\n        float spiral = sdSpiral(vUv, 1.0, k);\n        color += 1. - smoothstep(0.01, 0.02, spiral);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdSix(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = Rot(p , u_time);\n        p = p * 2. - 1.;\n        // //p.y -= 1.25;\n        // p.x += 1.;\n        // p.y += 1.;\n        // p*= 0.5;\n        float b;\n        float steps = 15.;\n        \n        for(float i = 1.; i<steps; i++)\n        {\n            // p = Rot(p, u_time * 0.25);\n            // p = p * 2. - 1.;\n            float k = 1. + i * (0.25 - 0.25 * cos(u_time * i * 0.025));\n            b += sdSpiral(p , a  * i, k + i * 0.2);\n        }\n        return b;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n\n        // vUv = vUv * 2. - 1.;\n        float k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\n        float spiral = sdSpiral(vUv, 1.0, k);\n        // color += spiral;\n        float func = newfunc(vUv, 1.0);\n        // color.g += func * 0.25;\n        color.r += func * 0.25 - abs(cos(u_time * 0.5));\n        color.b += func * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ID(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdSeven(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    float newfunc(vec2 p, float a)\n    {\n        p = Rot(p , u_time);\n        p = p * 2. - 1.;\n        // //p.y -= 1.25;\n        // p.x += 1.;\n        // p.y += 1.;\n        // p*= 0.5;\n        float b;\n        float steps = 15.;\n        \n        for(float i = 1.; i<steps; i++)\n        {\n            // p = Rot(p, u_time * 0.25);\n            // p = p * 2. - 1.;\n            p = p * i / (3. + sin(u_time * 0.5));\n            float k = 1. + i * (0.25 - 0.25 * cos(u_time * i * 0.025));\n            b += sdSpiral(p , a  * i, k + i * 0.2);\n        }\n        return b;\n    }\n\n    \n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        \n        vec3 color = vec3(0.);\n        float numLabel = label(vUv);\n\n        // vUv = vUv * 2. - 1.;\n        float k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\n        float spiral = sdSpiral(vUv, 1.0, k);\n        // color += spiral;\n        float func = newfunc(vUv, 1.0);\n        // color.g += func * 0.25;\n        color.r += func * 0.25 - abs(cos(u_time * 0.5));\n        color.b += func * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\n        color += numLabel + numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ND=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\nfloat label(vec2 p)\n{\n    p *= 10.;\n    p.x -= 0.25;\n    float left = sdFour(vec2(p.x + 0.3, p.y));\n    float center = sdFour(vec2(p.x -0.05, p.y));\n    float right = sdEight(vec2(p.x - 0.38, p.y));\n    return left + center + right;\n}\n\nfloat newfunc(vec2 p, float a)\n{\np = Rot(p , u_time);\np = p * 2. - 1.;\n// //p.y -= 1.25;\n// p.x += 1.;\n// p.y += 1.;\n// p*= 0.5;\nfloat b;\nfloat steps = 15.;\n\nfor(float i = 1.; i<steps; i++)\n{\n    // p = Rot(p, u_time * 0.25);\n    // p = p * 2. - 1.;\n    p = p * i / (3.);\n    float k = 1. + i * (0.25 - 0.25 * cos(u_time * i * 0.025));\n    b += sdSpiral(p * i, a  * i, k + i * 0.2);\n    b += sdSegment(p * i , vec2(0.0), vec2(0.25));\n}\nreturn b;\n}\n\nvoid main()\n{\nvec2 vUv = vec2(vUv.x, vUv.y);\nvec3 color = vec3(0.);\nfloat numLabel = label(vUv);\nvec2 newUv = vUv;\n// vUv = vUv * 2. - 1.;\nfloat k = 1. + 20. * (0.5 - 0.5 * cos(u_time + 1.5));\nfloat spiral = sdSpiral(vUv, 1.0, k);\n// color += spiral;\nvUv = Rot(vUv, u_time);\nnewUv = Rot(newUv, PI * 0.25);\nfloat func = newfunc(vUv, 1.0);\nfloat func2 = newfunc(newUv, 1.0);\n// color.g += func * 0.25;\ncolor.r += func * 0.25 - abs(cos(u_time * 0.5));\ncolor.r += func2 * 0.25 - abs(cos(u_time * 0.5));\ncolor.b += func * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\ncolor.b += func2 * 0.25 - (sin(u_time * 0.5)  /2.) - 0.5;\ncolor += numLabel + numLabel + numLabel;\ngl_FragColor = vec4(color, 1.);\n}\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ND,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFour(vec2(p.x -0.05, p.y));\n        float right = sdNine(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n\n        float y = (sin(noiseUv.x + u_time) )  / 2. ;\n        float line = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y, 0.01);\n        float line2 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n, 0.01);\n        float line3 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n * n, 0.01);\n        color += line;\n        color += line2;\n        color += line3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = newUv / 1.25 + 0.1;\n        float box = sdRoundedBoxOutline(newUv, vec2(0.5), vec4(\n            0.25 * n + (sin(u_time * (sin(n + u_time/5.))/50.) / 10.) + 0.2, \n            0.25 * n + (sin(u_time * (sin(n + u_time/5.))/50.) / 10.) + 0.2, \n            0.25 * n + (sin(u_time * (cos(n + u_time/5.))/50.) / 10.) + 0.2, \n            0.25 * n + (sin(u_time * (cos(n + u_time/5.))/50.) / 10.) + 0.2), \n            0.025);\n        float y = (sin(noiseUv.x + u_time) )  / 2. ;\n        float line = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y, 0.01);\n        float line2 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n, 0.01);\n        float line3 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n * n, 0.01);\n        // color += line;\n        // color += line2;\n        // color += line3;\n        color += box;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = newUv / 1.25 + 0.1;\n        float box = sdRoundedBox(newUv, vec2(0.5), vec4(\n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2, \n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2, \n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2, \n            0.25 * n + (sin(u_time + abs(sin(n * u_time * 0.5) + 125.0)/2.) / 2.) + 0.2));\n        float y = (sin(noiseUv.x + u_time) )  / 2. ;\n        float line = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y, 0.01);\n        float line2 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n, 0.01);\n        float line3 = plot(vec2(noiseUv.x, noiseUv.y - 0.5), y * n * n, 0.01);\n        // color += line;\n        // color += line2;\n        // color += line3;\n        color += box;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n       \n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        color += spiral;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JD(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        newUv = newUv * 2. - 1.;\n        vec2 newUv2 = vUv;\n        newUv2 = Rot(newUv2, u_time * 0.5);\n        newUv2 = newUv2 * 2. - 1.;\n        float tri = sdEqTriangleOutline(newUv, 0.35 + (n * 0.05 * sin(u_time)));\n        float tri2 = sdEqTriangleOutline(newUv2, 0.15 + (n * 0.05 * sin(u_time)));\n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        // color += spiral;\n        color += tri;\n        color += tri2;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $D(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KD=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        // newUv = newUv * 2. - 1.;\n        vec2 newUv2 = vUv;\n        newUv2 = Rot(newUv2, u_time * 0.5);\n        // newUv2 = newUv2 * 2. - 1.;\n        float c1 = cirOutline(newUv, 0.35 + (n * 0.05 * sin(u_time)));\n        float c2 = cirOutline(newUv2, 0.15 + (n * 0.05 * sin(u_time)));\n        float c3 = cirOutline(newUv, 0.5 + (n * 0.05 * sin(u_time)));\n        float c4 = cirOutline(newUv2, 0.25 + (n * 0.035 * sin(u_time)));\n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        // color += spiral;\n        color += c1;\n        color += c2 + c3 + c4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KD,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/25.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = newUv * 4. - 2.;\n        float y = sin(vUv.x + u_time + n);\n        float x = sin(vUv.y + u_time + n);\n        float line = plot(newUv, y, 0.5);\n        float line2 = plot(newUv, x, 0.25);\n        color += line;\n        color += line2;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 220. * 1.2)/10.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n       \n        float shape = rectOutline(vUv, 0.5 + n/5., 0.25);\n        color += shape;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 82. * 1.2)/15.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n       \n        float shape = rectOutline(vUv, 0.5 + n/5. * sin(u_time), 0.5 + n/5. * cos(u_time));\n        color += shape;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 82. * 1.2)/15.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        float shape = rectOutline(newUv, 0.5 + n/5. * sin(u_time), 0.5 + n/5. * cos(u_time));\n        float shape2 = cirOutline(vUv, 0.5 + n/5. * sin(u_time));\n        color += shape;\n        color += shape2;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 1580. * 1.2)/35.);\n        vec2 vUv2, vUv3, vUv4, vUv5;\n        vUv2 = vUv;\n        vUv2 = vUv2 * 2. - 0.5;\n        vUv2.x += 0.56;\n        vUv3 = vUv;\n        vUv3 = vUv3 * 2. - 0.5;\n        vUv3.x += 0.2;\n        vUv4 = vUv;\n        vUv4 = vUv4 * 2. - 0.5;\n        vUv4.x -= 0.05;\n        vUv5 = vUv;\n        vUv5 = vUv5 * 2. - 0.5;\n        vUv5.x -= 0.4;\n\n        float two = sdTwo(vUv2 * abs(sin(n + u_time)+ 25.)/25.);\n        float zero = sdZero(vUv3 * abs(cos(n + u_time) + 25.)/25.);\n        float two1 = sdTwo(vUv4 * abs(sin(n + u_time)+ 25.)/25.);\n        float three = sdThree(vUv5 * abs(cos(n + u_time)+ 25.)/25.);\n        color += two;\n        color += zero;\n        color += two1;\n        color += three;\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 82. * 1.2)/15.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        float shape = rect(newUv, 0.5 + n/5. * sin(u_time), 0.5 + n/5. * cos(u_time));\n        float shape2 = circle(vUv * 2. - 0.5, 0.5 + n/5. * sin(u_time));\n        float shape3 = circle(vUv * 2.5 - 0.75, 0.5 + n/5. * sin(u_time));        color += shape;\n        color += shape2;\n        color -= shape3;\n        float shape4 = rect(newUv, 0.45 + n/5. * sin(u_time), 0.45 + n/5. * cos(u_time));\n        color -= shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * ((u_time) / 5.) + 65.);\n        vec2 newUv = vUv;\n        float y = vUv.x * n;\n\n        float line = plot(vUv, y, 0.01);\n        // newUv = newUv * 2.;\n        float cir = cirOutline(newUv, 0.25); \n        // color += line;\n        color += cir;\n        color += line;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    \n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv + u_time);\n        // vUv.x += u_time;\n        float y = sin(vUv.x * n * u_time);\n\n        float line = plot(vUv, y, 0.5 + n);\n        color += line;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float n = noise(vUv * (u_time + 120.)/5.);\n        vec2 noiseUv = vUv;\n        noiseUv = noiseUv * 4. - 2.;\n        // noiseUv.y += 2.;\n        noiseUv = noiseUv * n;\n        vec2 newUv = vUv;\n        newUv = Rot(newUv, u_time * 0.25);\n        // newUv = newUv * 2. - 1.;\n        vec2 newUv2 = vUv;\n        newUv2 = Rot(newUv2, u_time * 0.5);\n        // newUv2 = newUv2 * 2. - 1.;\n        float c1 = circle(newUv, 0.35 + (n * 0.07 * sin(u_time)));\n        float c2 = circle(newUv2, 0.15 + (n * 0.05 * cos(u_time)));\n        float c3 = circle(newUv, 0.5 + (n * 0.04 * sin(u_time)));\n        float c4 = circle(newUv2, 0.25 + (n * 0.035 * cos(u_time)));\n        float k = 1. + 20. * (0.5 - 0.5 + (n * 0.025 + (sin(u_time) + 1.)/5.));\n        float spiral = sdSpiral(vec2(vUv.x * 2. - 1., vUv.y * 2. - 1. ), 1.0 + (sin(u_time) + 2.), k);\n        // color += spiral;\n        \n        color += c2;\n        color -= c1;\n        color += c3;\n        // color -= c3;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float shape1 = sdPolygonOutline(vUv, 7.0 + sin(u_time), 0.1);\n        float shape2 = sdPolygonOutline(vUv, 6.0 + sin(u_time), 0.2);\n        float shape3 = sdPolygonOutline(vUv, 5.0 + sin(u_time), 0.3);\n        float shape4 = sdPolygonOutline(vUv, 4.0 + sin(u_time), 0.4);\n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1 + shape2 + shape3 + shape4;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _E=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        for (int i=4; i<=15; i++)\n        {\n            shape1 += sdPolygonOutline(vUv, i, float(i) * 0.1 + (sin(u_time)/2.) - 0.95);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_E,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 0.5;\n        newvUv = Rot(newvUv, u_time * 0.25);\n        for (int i=4; i<=15; i++)\n        {\n            shape1 += sdPolygonOutline(vec2(newvUv.x, newvUv.y + sin(float(i)/2.)), i, float(i) * 0.1 + (sin(u_time)/4.) - 0.95);\n            shape2 += sdPolygonOutline(vec2(newvUv.x + cos(float(i)/2.), newvUv.y ), i, float(i) * 0.1 + (cos(u_time)/4.) - 0.95);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color += shape2;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ME=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 0.5;\n        newvUv = Rot(newvUv, u_time * 0.25);\n        for (int i=3; i<=7; i++)\n        {\n            shape1 += sdPolygonOutline(vec2(newvUv.x, newvUv.y + sin(float(i)/1.)), i, float(i) * 0.1 + (sin(u_time * float(i) * 0.5)/1.) - 0.95);\n            shape2 += sdPolygonOutline(vec2(newvUv.x + cos(float(i)/1.), newvUv.y ), i, float(i) * 0.1 + (cos(u_time * float(i) * 0.5)/1.) - 0.95);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color += shape2;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ME,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 1.;\n        // newvUv = Rot(newvUv, u_time * 0.25);\n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=3; i<=7; i++)\n        {\n            shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            shape2 += sdSpiral(newvUv, 0.5* float(i), 5./k );\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color *= shape2;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSix(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 4. - 1.5;\n        // newvUv = Rot(newvUv, u_time * 0.25);\n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=3; i<=7; i++)\n        {\n            // shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            // shape2 += sdSpiral(newvUv, 0.5* float(i), 20./k );\n            // shape3 += sdSpiral(newvUv, 0.5* float(i), 100./k );\n            shape1 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.75), 0.5* float(i)), vec4(float(i)), 0.1);\n            shape2 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.25), 0.5* float(i)), vec4(float(i)), 0.1);\n            shape3 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.5), 0.5* float(i)), vec4(float(i)), 0.2);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color *= shape2;\n        color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 4. - 1.5;\n        newvUv = Rot(newvUv, u_time * 0.5);\n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=0; i<=10; i++)\n        {\n            // shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            // shape2 += sdSpiral(newvUv, 0.5* float(i), 20./k );\n            // shape3 += sdSpiral(newvUv, 0.5* float(i), 100./k );\n            shape1 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + sin(u_time * 0.35), 0.25* float(i)), vec4(float(i)), 0.1);\n            shape2 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.25), 0.5* float(i)), vec4(float(i)), 0.1);\n            shape3 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.35), 0.5* float(i)), vec4(float(i)), 0.1);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        color *= shape2;\n        color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * 0.5);\n        newvUv = newvUv * 4. - 2.;\n        \n        float k = 1. + 20. * (0.5 - 0.5 + (0.025 + (sin(u_time * 0.25) + .5)/015.));\n        for (int i=0; i<=10; i++)\n        {\n            // shape1 += sdSpiral(newvUv, 0.5* float(i), k);\n            // shape2 += sdSpiral(newvUv, 0.5* float(i), 20./k );\n            // shape3 += sdSpiral(newvUv, 0.5* float(i), 100./k );\n            shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            // shape2 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.25), 0.5* float(i)), vec4(float(i)), 0.1);\n            // shape3 += sdRoundedBoxOutline(newvUv, vec2(0.5* float(i) + cos(u_time * 0.35), 0.5* float(i)), vec4(float(i)), 0.1);\n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        color += shape1;\n        // color *= shape2;\n        // color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 3. - 1.;\n        newvUv = Rot(newvUv, u_time * 0.25);\n        \n        for (int i=4; i<=10; i++)\n        {\n            // shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            shape2 += sdPolygonOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.0725), newvUv.y + sin(float(i) * u_time * 0.0725)), 4, 0.1 * (float(i) - 0.125));\n            shape3 += sdPolygonOutline(vec2(newvUv.x - sin(float(i) * u_time * 0.0725), newvUv.y - sin(float(i) * u_time * 0.0725)), 4, 0.1 * (float(i) - 0.125));\n            \n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        // color += shape1;\n        color += shape2;\n        color *= shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 3. - 1.;\n        // newvUv = Rot(newvUv, u_time * 0.25);\n        \n        for (int i=4; i<=8; i++)\n        {\n            // shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            shape2 += sdPolygonOutline(vec2(newvUv.x - sin(float(i) * u_time * 0.25), newvUv.y + sin(float(i) * u_time * 0.125)), 4, 0.05 * (float(i) - 0.125));\n            shape3 += sdPolygonOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + sin(float(i) * u_time * 0.125)), 4, 0.05 * (float(i) - 0.125));\n            \n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        // color += shape1;\n        color += shape2;\n        color += shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = newvUv * 2. - 0.5;\n        \n        \n        for (int i=4; i<=15; i++)\n        {\n            newvUv = Rot(newvUv, u_time * 0.125);\n            // shape1 += sdEqTriangleOutline(vec2(newvUv.x + sin(float(i) * u_time * 0.25), newvUv.y + cos(float(i) * u_time * 0.25)), 0.3 * (float(i) * 0.1));\n            shape2 += sdPolygonOutline(vec2(newvUv), 3, 0.0525 * (float(i) - 0.125));\n            shape3 += sdPolygonOutline(vec2(newvUv.x + cos(float(i) * u_time * 0.125), newvUv.y + sin(float(i) * u_time * 0.125)), 3, 0.025 * (float(i) - 0.125));\n            \n        }\n        \n        \n        // float shape5 = sdPolygonOutline(vec2(vUv.x, vUv.y - 0.01), 3.0 + sin(u_time), 0.5);\n        // color += shape1;\n        color += shape2;\n        // color += shape3;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * 4.);\n        newvUv = newvUv / 2. - 0.25;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=4; i<=15; i++)\n        {\n            shape1 += sdSpiral(vec2(newvUv), 0.45, k);\n        }\n        \n        color += shape1;\n        shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2;\n        color += shape3;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * .25);\n        // newvUv = newvUv / 2. - 0.25;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=0; i<=10; i++)\n        {\n            shape1 += rectOutline(vec2(newvUv.x + (float(i) * (sin(u_time) / 2.)/ 20.), newvUv.y), 0.25, 0.25);\n            shape2 += rectOutline(vec2(newvUv.x , newvUv.y + (float(i) * (sin(u_time) / 2.)/ 20.)), 0.25, 0.25);\n            // shape3 += rectOutline(vec2(newvUv.x + (float(i) * (cos(u_time) / 2.)/ 20.), newvUv.y), 0.25, 0.25);\n            // shape4 += rectOutline(vec2(newvUv.x , newvUv.y + (float(i) * (cos(u_time) / 2.)/ 20.)), 0.25, 0.25);\n        }\n        \n        color += shape1;\n        // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2;\n        // color += shape3;\n        // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        newvUv = Rot(newvUv, u_time * .25);\n        // newvUv = newvUv / 2. +0.125;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=5; i<=15; i++)\n        {\n            shape1 += rectOutline(vec2(newvUv) , 0.0725 * float(i) * cos(u_time * float(i) * 0.01), 0.0725 * float(i) * sin(u_time * float(i) * 0.05));\n        //     shape2 += rectOutline(vec2(newvUv.x , newvUv.y), 0.025 * float(i), 0.25);\n        //     shape3 += rectOutline(vec2(newvUv.x , newvUv.y), 0.025 * float(i), 0.25);\n        //     shape4 += rectOutline(vec2(newvUv.x , newvUv.y), 0.025 * float(i), 0.25);\n        }\n        \n        color += shape1;\n        // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2;\n        color += shape3;\n        color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        // newvUv = Rot(newvUv, u_time * .25);\n        newvUv = newvUv * 4. - 1.5;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=0; i<=13; i++)\n        {\n            shape1 += circle(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5), newvUv.y +  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n            shape2 += circle(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5) , newvUv.y -  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n            shape3 += cirOutline(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5), newvUv.y +  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n            shape4 += cirOutline(vec2(newvUv.x + sin(u_time * float(i) * 0.1 + 0.5) , newvUv.y -  float(i) * 0.1), 0.15 * (sin(float(i) * u_time * 0.1))+0.15);\n        }\n        \n        color += shape1 * shape3;\n        // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        color += shape2 * shape4;\n        // color *= shape3;\n        // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdSeven(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        // newvUv = Rot(newvUv, u_time * .25);\n        newvUv = newvUv * 3. - 1.5;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=1; i<=15; i++)\n        {\n            shape1 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.5 * (sin(u_time * float(i) * 0.1)), 0.75 * (cos(u_time * float(i) * 0.21))));\n            shape2 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.5 * (sin(u_time * float(i) * 0.1)), 0.75 * (cos(u_time * float(i) * 0.21))));\n            shape3 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.75 * (cos(u_time * float(i) * 0.21)), 0.75 * (sin(u_time * float(i) * 0.21))));\n            shape4 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.75 * (cos(u_time * float(i) * 0.21)), 0.75 * (sin(u_time * float(i) * 0.21))));\n        }\n        \n        // color += shape1;\n        color += shape1 * shape3;\n        color += shape2 * shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JE(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        // newvUv = Rot(newvUv, u_time * .25);\n        newvUv = newvUv * 3. - 1.5;\n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        for (int i=1; i<=15; i++)\n        {\n            shape1 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.25 * (sin(u_time * float(i) * 0.1)), 0.25 * (cos(u_time * float(i) * 0.1))));\n            shape2 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.15 + (sin(u_time * float(i) * 0.1)), 0.15 + (cos(u_time * float(i) * 0.1))));\n            shape3 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(0.15 + (sin(u_time * float(i) * 0.1)), -0.15 + (cos(u_time * float(i) * 0.1))));\n            shape4 += sdSegment(vec2(newvUv), vec2(0. + (sin(u_time * float(i) * 0.1)), 0. + (cos(u_time * float(i) * 0.1))), vec2(-0.15 + (sin(u_time * float(i) * 0.1)), 0.15 + (cos(u_time * float(i) * 0.1))));\n        }\n        \n        // color += shape1;\n        color += shape1; \n        color += shape3;\n        color += shape2;\n        color += shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $E(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KE=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        \n        newvUv = newvUv * 2. - 0.5;\n        newvUv.y -= 0.7;\n        newvUv = Rot(newvUv, PI * 0.25);\n        float k = 1. + 20. * (0.25 - 0.125);\n        vec2 uv2 = newvUv;\n        \n        uv2.x += 1.;\n        uv2.y -0.2;\n        uv2 = Rot(uv2, PI * 0.5);\n        \n        for (int i=1; i<=15; i++)\n        {\n            shape1 += sdSegment(vec2(newvUv.x + sin(float(i) * u_time * 0.1), newvUv.y + cos(float(i) * u_time * 0.1)), vec2(0. + sin(u_time * float(i) * (0.1))), vec2(0.0 + cos(u_time * float(i) * 0.1)));\n            \n        }\n        \n        // color += shape1;\n        color += shape1; \n        color += shape3;\n        color += shape2;\n        color += shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function ez(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KE,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 newvUv = vUv;\n        vec2 uv2 = newvUv;\n        newvUv = Rot(newvUv, PI * 0.5);\n        uv2 = Rot(uv2, PI *0.5);\n        newvUv = newvUv * 2. - 0.5;\n        newvUv.y -= 0.7;\n        newvUv = Rot(newvUv, PI * 0.25);\n        uv2 = uv2 * 2. - 0.5;\n        uv2.y -= 0.7;\n        \n        float k = 1. + 20. * (0.25 - 0.125);\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        \n        for (int i=1; i<=15; i++)\n        {\n            uv2 = Rot(uv2, PI * 0.25 + u_time * 0.1);\n            shape1 += sdSegment(vec2(newvUv.x + cos(float(i) * u_time * 0.01), newvUv.y + sin(float(i) * u_time * 0.1)), vec2(0. + cos(u_time * float(i) * (0.1))), vec2(0.0 + sin(u_time * float(i) * 0.1)));\n            shape2 += sdSegment(vec2(uv2.x + cos(float(i) * u_time * 0.01), uv2.y + sin(float(i) * u_time * 0.1)), vec2(0. + cos(u_time * float(i) * (0.1))), vec2(0.0 + sin(u_time * float(i) * 0.0)));\n            \n        }\n        \n        // color += shape1;\n        color += shape1; \n        color += shape3;\n        color += shape2;\n        color += shape4;\n        // // shape2 = rect(vec2(vUv.x, vUv.y), 1., 0.01);\n        // // shape3 = rect(vec2(vUv.x, vUv.y), 0.01, 1.);\n        \n        // // color *= shape3;\n        // // color += shape4;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.39, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=15; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += sdSegment(vec2(uv2.x + float(i) /10. - 0.25, uv2.y + float(i) /10. - 0.25), vec2(0.0), vec2(0.25));\n            \n        }\n        \n        color += shape1; \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function az(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.25;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=15; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += sdSegment(vec2(uv2.x + (float(i) * sin(u_time) /10. ) , uv2.y + (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            shape2 += sdSegment(vec2(uv2.x - (float(i) * sin(u_time) /10. ) , uv2.y - (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            shape3 += sdSegment(vec2(uv2.x + (float(i) * sin(u_time) /10. ) , uv2.y - (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            shape4 += sdSegment(vec2(uv2.x - (float(i) * sin(u_time) /10. ) , uv2.y + (float(i) * cos(u_time) /10. )), vec2(0.0), vec2(0.5));\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=0; i<=20; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += circle(vec2(uv2.x + float(i) / 10. + sin(u_time*(float(i)/15.)), uv2.y - float(i) / 150. + cos(u_time*(float(i)/10.))), 0.25);\n            shape2 += cirOutline(vec2(uv2.x + float(i) / 10. + sin(u_time*(float(i)/15.)), uv2.y - float(i) / 150. + cos(u_time*(float(i)/10.))), 0.25);\n            \n        }\n        \n        color += shape1; \n        color *= shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.05 * float(i));\n            shape1 += circle(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * cos(u_time)), 0.005);\n            shape2 += circle(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * sin(u_time)), 0.005);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.1);\n        for (int i=1; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, u_time * 0.0000005 * float(i));\n            shape1 += circle(vec2(uv2.x + sin(u_time*(float(i)/25.)) - sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) + cos(u_time)), 0.005);\n            shape2 += circle(vec2(uv2.x + cos(u_time*(float(i)/25.)) - cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) + sin(u_time)), 0.005);\n            shape3 += circle(vec2(uv2.x + sin(u_time*(float(i)/12.5)) + sin(u_time), uv2.y - cos(u_time*(float(i)/12.5)) - cos(u_time)), 0.005);\n            shape4 += circle(vec2(uv2.x - cos(u_time*(float(i)/12.5)) + cos(u_time), uv2.y + sin(u_time*(float(i)/12.5)) - sin(u_time)), 0.005);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=45; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.0000005 * float(i));\n            shape1 += circle(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) + sin(u_time)), 0.005);\n            shape2 += circle(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) + sin(u_time)), 0.005);\n            shape3 += circle(vec2(uv2.x + sin(u_time*(float(i)/12.5)) * cos(u_time), uv2.y - cos(u_time*(float(i)/12.5)) - cos(u_time)), 0.005);\n            shape4 += circle(vec2(uv2.x + cos(u_time*(float(i)/12.5)) * sin(u_time), uv2.y + sin(u_time*(float(i)/12.5)) - sin(u_time)), 0.005);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdEight(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=50; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, u_time * 0.0000005 * float(i));\n            shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape2 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape3 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * cos(u_time)), 0.25, 0.25);\n            shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * sin(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=40; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, ((u_time * 0.5) * float(i/25))/200825.);\n            // shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape2 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5)), uv2.y + sin(u_time*(float(i)/5.)) * abs(sin(u_time * 0.5))), 0.0525, 0.0525);\n            shape3 += rectOutline(vec2(uv2.x + (sin(u_time*(float(i)/5.))) * (sin(u_time * 0.5)), uv2.y + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5))), 0.0525, 0.0525);\n            // shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * cos(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=40; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, ((u_time * 0.5) * float(i/25))/200825.);\n            // shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) * sin(u_time), uv2.y + cos(u_time*(float(i)/25.)) * sin(u_time)), 0.25, 0.25);\n            shape2 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/5.)) + abs(cos(u_time * 0.5)), uv2.y + sin(u_time*(float(i)/5.)) * abs(sin(u_time * 0.5))), 0.0525, 0.0525);\n            shape3 += rectOutline(vec2(uv2.x + (sin(u_time*(float(i)/5.))) - (sin(u_time * 0.5)), uv2.y + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5))), 0.0525, 0.0525);\n            // shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * cos(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _z=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=1; i<=40; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, ((u_time * 0.5) * float(i/25))/200825.);\n            shape1 += rectOutline(vec2(uv2.x + sin(u_time*(float(i)/25.)) + sin(u_time), uv2.y + cos(u_time*(float(i)/15.)) - cos(u_time * float(i/10))), 0.25, 0.25);\n            // shape2 += rectOutline(vec2(uv2.x / cos(u_time*(float(i)/5.)) + abs(cos(u_time * 0.5)), uv2.y + sin(u_time*(float(i)/5.)) * abs(sin(u_time * 0.5))), 0.0525, 0.0525);\n            // shape3 += rectOutline(vec2(uv2.x * (sin(u_time*(float(i)/5.))) - (sin(u_time * 0.5)), uv2.y + cos(u_time*(float(i)/5.)) * abs(cos(u_time * 0.5))), 0.0525, 0.0525);\n            // shape4 += rectOutline(vec2(uv2.x + cos(u_time*(float(i)/25.)) * cos(u_time), uv2.y + sin(u_time*(float(i)/25.)) * cos(u_time)), 0.05, 0.05);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_z,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Sz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.5);\n        for (int i=0; i<=10; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            \n            shape1 += circle(vec2(uv2.x + sin(float(i) + u_time) * 2. , uv2.y), 0.0525);\n            shape2 += circle(vec2(uv2.x  , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Uz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Sz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Mz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=5; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.15));\n            shape1 += circle(vec2(uv2.x + cos(float(i) + u_time) * 2. , uv2.y), 0.0525);\n            shape2 += circle(vec2(uv2.x  , uv2.y - sin(float(i) + u_time) * 2.), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) + u_time) * 2. , uv2.y + sin(float(i) + u_time) * 2.), 0.0525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Mz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=5; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, sin(u_time * 0.15 * (float(i))));\n            shape1 += circle(vec2(uv2.x + cos(float(i) + u_time) - float(i)/10. , uv2.y + sin(float(i) + u_time) + float(i)/10.), 0.0525);\n            shape2 += circle(vec2(uv2.x + cos(float(i) + u_time) + float(i)/10.  , uv2.y - sin(float(i) + u_time) - float(i)/10.), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) + u_time) + float(i)/10. , uv2.y + cos(float(i) + u_time) - float(i)/10.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) + u_time) + float(i)/10. , uv2.y + cos(float(i) + u_time) - float(i)/10.), 0.0525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Tz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Cz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=5; i<=150; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.0125 * (float(i))));\n            shape1 += circle(vec2(uv2.x + cos(float(i) + u_time) - float(i)/50. , uv2.y ), 0.0525);\n            shape2 += circle(vec2(uv2.x + cos(float(i) + u_time) + float(i)/50. , uv2.y ), 0.0525);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Rz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Cz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Fz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=0; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, sin(u_time * 0.0125));\n            shape1 += cirOutline(vec2(uv2.x + sin(float(i) * u_time/12.) - float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10.), 0.0525);\n            shape2 += cirOutline(vec2(uv2.x - sin(float(i) * u_time/12.) + float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10. ), 0.0525);\n            shape3 += circle(vec2(uv2.x + sin(float(i) * u_time/12.) - float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10.), 0.0525);\n            shape4 += circle(vec2(uv2.x - sin(float(i) * u_time/12.) + float(i)/12. , uv2.y + sin(float(i) * u_time/12.) + float(i)/10. ), 0.0525);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color -= shape3; \n        color -= shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Pz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Fz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Dz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        for (int i=0; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.25));\n            shape1 += cirOutline(vec2(uv2.x + (float(i)/4.) + cos(u_time * 0.5 + (float(i))), uv2.y+ sin(float(i)/4.) + sin(u_time * 0.5 + (float(i)))), 0.0525);\n            shape2 += cirOutline(vec2(uv2.x + (float(i)/4.) + cos(u_time + (float(i)) ), uv2.y+ sin(float(i)/4.) + sin(u_time * 0.5 + (float(i)))), 0.0525);\n            shape3 += cirOutline(vec2(uv2.x + (float(i)/4.) + sin(u_time * 0.5 + (float(i))), uv2.y+ sin(float(i)/4.) + cos(u_time)), 0.0525);\n            shape4 += cirOutline(vec2(uv2.x + (float(i)/4.) + sin(u_time + (float(i))), uv2.y+ sin(float(i)/4.) + cos(u_time)), 0.0525);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Ez(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Dz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFour(vec2(p.x + 0.3, p.y));\n        float center = sdNine(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *8. - 3.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=0; i<=25; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.25));\n            float y = sin(u_time + uv2.x + (float(i) * sin(u_time + 25.) * 0.1));\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)), uv2.y), y, 0.05 );\n        }\n        \n        color += shape1; \n        color += shape2;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Lz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Az=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=0; i<=20; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.125) + 2.5);\n            float y = abs(sin(u_time + uv2.x + (float(i) * cos(u_time + 025.) * 0.00161)) + 1.5);\n            float x = abs(cos(u_time + uv2.x + (float(i) * sin(u_time + 025.) * 0.00161)) + 1.5);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)), uv2.y), x / y, 0.0375 );\n        }\n        \n        color += shape1; \n        color += shape2;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Iz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Az,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Oz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=0; i<=20; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.125) + 2.5);\n            float y = abs(sin(u_time + uv2.x + (float(i) * cos(u_time + 025.) * 0.00161)) + .05);\n            float x = abs(cos(u_time + uv2.x + (float(i) * sin(u_time + 025.) * 0.00161)) + .05);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i) * u_time), uv2.y), x, 0.04575 );\n        }\n        \n        color += shape1; \n        color += shape2;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Bz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Oz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Nz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=8; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            uv2 = Rot(uv2, sin(u_time * 0.25) + 10.5);\n            float y = (sin(u_time + uv2.x + (float(i) * cos(u_time * 25.) * 0.00161)) + .05);\n            float x = (cos(u_time + uv2.x + (float(i) * sin(u_time * 25.) * 0.00161)) + .05);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), x, 0.04575 );\n        }\n\n        float z = circle(uv2, 10.5);\n        \n        color += shape1; \n        color += shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Gz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Nz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Vz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=8; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, cos(u_time * 0.025) + 10.5 / 1.);\n            float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05);\n            float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05);\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), x * y, 0.04575 );\n        }\n\n        float z = circle(uv2, 10.5);\n        \n        color += shape1; \n        color += shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Vz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Hz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *5. - 2.;\n        // uv2.x -= 1.;\n        uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=5; i++)\n        {\n            // uv2 = uv2 * 1.1 - 0.1;\n            // uv2 = Rot(uv2, cos(u_time * 0.025) + 10.5 / 1.);\n            float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            float z = (cos(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            float a = (cos(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), y * x, 0.075 );\n            shape2 += plot(vec2(uv2.x + cos(u_time + float(i)/100. * u_time), uv2.y), z * a, 0.075 );\n        }\n\n        float z = circle(uv2, 10.5);\n        \n        color += shape1; \n        color *= shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Wz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Hz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Xz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, PI * 0.5);\n        uv2 = uv2 *15. - 15.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=10; i++)\n        {\n            for(int j=1; j<=10; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), sin(u_time + 0.075 * float(j + i))*4.);\n                float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(1.));\n                \n                shape1 += line;\n            }\n            // uv2 = uv2 * 1.1 - 0.1;\n            \n            // float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // float z = (cos(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float a = (cos(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), y * x, 0.075 );\n            // shape2 += plot(vec2(uv2.x + cos(u_time + float(i)/100. * u_time), uv2.y), z * a, 0.075 );\n        }\n\n        float z = circle(uv3, 0.75);\n        \n        color += shape1; \n        // color *= shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Yz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Xz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Zz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *25. - 25.5;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=20; i++)\n        {\n            for(int j=1; j<=20; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), sin(u_time + 0.075 * float(j * i)/4.)*4.);\n                float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                \n                shape1 += line;\n            }\n            // uv2 = uv2 * 1.1 - 0.1;\n            \n            // float y = (sin(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float x = (sin(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // float z = (cos(u_time + uv2.x + (float(i) * sin(u_time * .5) * 0.161)) + .05)/1.25;\n            // float a = (cos(u_time * 0.005 * uv2.x + (float(i) * (u_time * .05))) + .05)/1.25;\n            // shape1 += plot(vec2(uv2.x + sin(u_time + float(i)/100. + u_time), uv2.y), y * x, 0.075 );\n            // shape2 += plot(vec2(uv2.x + cos(u_time + float(i)/100. * u_time), uv2.y), z * a, 0.075 );\n        }\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color *= shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function Jz(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Zz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Qz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *25. - 24.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=15; i++)\n        {\n            for(int j=1; j<=15; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), cos(u_time + 0.08 * float(j * i)/5.) + 0.53*1.9);\n                float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                float r = rect(vec2(newUv), 0.45, 3.);\n                shape1 += r;\n            }\n        }\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color *= shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $z(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Qz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var Kz=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        vec2 uv3 = vUv;\n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *15. - 15.;\n        // uv2.x -= 1.;\n        // uv2 = Rot(uv2, u_time * 0.15);\n        \n        for (int i=1; i<=15; i++)\n        {\n            for(int j=1; j<=15; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 1.5, newUv.y + float(j) * 1.5), cos(u_time + 0.08 * float(j * i)/5.) + 0.53*1.9);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                shape1 += c;\n            }\n        }\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color *= shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:Kz,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdZero(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - 0.5;\n        // uv2.x -= 1.;\n        vec2 uv3 = uv2;\n        uv2 = Rot(uv2, u_time * 0.75);\n        uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<=5; i++)\n        {\n            for(int j=1; j<=15; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i) * 0.085, newUv.y + float(i) * .085), (u_time + 0.08 * float(j * i)/5.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                shape1 += rectOutline(vec2(newUv), 0.5, 0.5);\n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *1.5 - 0.5;\n        uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<=13; i++)\n        {\n            for(int j=1; j<=10; j++)\n            {\n                \n                vec2 newUv = uv2;\n                newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<=5; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, (u_time * float(i * j) * 0.025)/11. + 100.);\n                shape1 += circle(vec2(uv2.x + sin(float(i) + u_time)  , uv2.y), 0.00525);\n                shape2 += circle(vec2(uv2.x  , uv2.y + sin(float(i) + u_time)), 0.00525);\n                shape3 += circle(vec2(uv2.x + sin(float(i) + u_time), uv2.y + sin(float(i) + u_time)), 0.00525);\n                shape4 += circle(vec2(uv2.x - sin(float(i) + u_time), uv2.y + sin(float(i) + u_time)), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<7; i++)\n        {\n            for(int j=1; j<=7; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, sin(u_time * 0.000115));\n                shape1 += circle(vec2(uv2.x + sin(float(i * j) + (u_time * 0.5))  , uv2.y), 0.00525);\n                shape2 += circle(vec2(uv2.x  , uv2.y + cos(float(i - j) + (u_time * 0.5))), 0.00525);\n                shape3 += circle(vec2(uv2.x + sin(float(j -i  ) + (u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n                shape4 += circle(vec2(uv2.x - sin(float(j * i) +(u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        color += shape3; \n        color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<15; i++)\n        {\n            for(int j=1; j<=10; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, sin(u_time * 0.00115 * float(i)));\n                shape1 += circle(vec2(uv2.x + sin(float(i - j)/30. + (u_time * 0.25)) * 2. , uv2.y), 0.00525);\n                shape2 += circle(vec2(uv2.x  , uv2.y + cos(float(i - j) + (u_time * 0.5))), 0.00525);\n                shape3 += circle(vec2(uv2.x + sin(float(j -i  ) + (u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n                shape4 += circle(vec2(uv2.x - sin(float(j * i) +(u_time * 0.5)), uv2.y + cos(float(j * i) + (u_time * 0.5))), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<15; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                // newUv = Rot(vec2(newUv.x + float(i /2) * 0.085, newUv.y + float(j) * .085), sin(u_time + 0.05 * float(j * i)/2.) + 0.53*1.);\n                // float line = sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.));\n                // float line = sdPolygonOutline(vec2(newUv.x , newUv.y ), int(3), float(0.5 + sin(u_time * 0.125)/5.));\n                // float r = rect(vec2(newUv), 0.45, 3.);\n                // float c = sdCircleOutline(vec2(newUv), float(i - j) * sin(u_time)/2. + 1.);\n                // shape1 += c;\n                // shape1 += rectOutline(vec2(newUv), 0.15, 0.15);\n                // for (int i=0; i<=10; i++)\n                \n            // uv2 = uv2 * 1.1 - 0.1;\n                uv2 = Rot(uv2, (sin(u_time * 0.0525)));\n                // shape1 += circle(vec2(uv2.x + sin(float(i * j)/30. + (u_time * 0.25)) * 1. , uv2.y), 0.00525);\n                shape1 += sdSegment(vec2(newUv.x , newUv.y ), vec2(0.0), vec2(0.5 + sin(u_time * 0.125)/5.) * sin(float(i + j)));\n                // shape2 += circle(vec2(uv2.x  , uv2.y + cos(float(i - j) + (u_time * 0.5))), 0.00525);\n                // shape3 += circle(vec2(uv2.x + sin(float(j ) + (u_time * 0.5)), uv2.y + cos(float(j) + (u_time * 0.5))), 0.00525);\n                // shape4 += circle(vec2(uv2.x - sin(float(j) +(u_time * 0.5)), uv2.y + cos(float(j ) + (u_time * 0.5))), 0.00525);\n            // uv2 = Rot(uv2, u_time * 0.25 * float(i)/5.);\n            \n        \n                // shape2 += rectOutline(vec2(uv3), 0.5, 0.5);\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *4. - 1.5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<15; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, ((u_time * 0.01525) + 10.));\n                uv2 = noise(uv2) * 0.08 + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y ), vec2(0.0), vec2(2.));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - .5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=2; i<5; i++)\n        {\n            for(int j=2; j<=5; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, (sin(u_time * 1.525)/5. - 10.2));\n                // uv2 = (noise(uv2) * 0.15) + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0 + noise(uv2) * (cos(u_time)/1. + 2.) * 0.2, 0.0 + noise(uv2) * (sin(u_time)/1. + 2.)), vec2(0.0 + noise(uv2) * (cos(u_time)/1. + 2.), 0.0 + noise(uv2) * (sin(u_time)/1. + 2.)));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        // float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        // color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - .5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<14; i++)\n        {\n            for(int j=1; j<=4; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, (sin(u_time * .175)/4. + 11.0));\n                uv2 = (noise(uv2) * 0.15) + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.01 * float(i + j), 0.01 * float(i +j)));\n                shape2 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.015 * float(j + i), 0.015 * float(j + i)));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        // float z = circle(uv3, 0.95);\n        \n        color += shape1; \n        color += shape2;\n        // color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        \n        // uv2.x += 1.;\n        // uv2.y -0.2;\n        // uv2 = Rot(uv2, 0.15 * u_time);\n        uv2 = uv2 *2. - .5;\n        // uv2.y -= .2;\n        vec2 uv3 = uv2;\n        // uv2 = Rot(uv2, u_time * 0.75);\n        // uv3 = Rot(uv3, u_time * 0.5 + PI * 0.25);\n\n        for (int i=1; i<5; i++)\n        {\n            for(int j=1; j<=4; j++)\n            {\n                \n                vec2 newUv = uv2;\n                \n                uv2 = Rot(uv2, (sin(u_time * .175)/6. + 11.0));\n                uv2 = (noise(uv2) * 0.15) + uv2;\n                shape1 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.05 * float(i) + cos(u_time), 0.05 / float(i) + cos(u_time)));\n                shape2 += sdSegment(vec2(uv2.x , uv2.y), vec2(0.0), vec2(0.05 * float(i) + sin(u_time), 0.05 / float(i) + sin(u_time)));\n                \n\n            }\n        }\n       \n        \n        \n        // shape1 += box;\n        // shape2 += box2;\n\n        float z = circle(uv3, 2.);\n        \n        color += shape1; \n        color += shape2;\n        color *= z;\n        // color += shape3; \n        // color += shape4;  \n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _L=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdOne(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    float semi (vec2 p, float n)\n    {\n        float c = circle(vec2(p), n);\n        float c2 = circle(vec2(p), n + n * 0.05);\n        float r = rect(vec2(p.x, p.y- n * 0.45), n - n * 0.1, n + n * 0.5);\n        float r2= rect(vec2(p.x, p.y -0.2), n, n * 0.3);\n        float shape = r * c * 2.;\n        float shape2 = r2 * c2* 2.;\n        return shape;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        uv2 = uv2 *2. - .5;\n\n        for(int i = 1; i < 20; i++)\n        {\n            uv2 = Rot(uv2, ((u_time * .175)/1. + 1.0));\n            vec2 newUv = uv2;\n            shape1 += semi(newUv, float(i)/10. + 0.5);\n            shape2 -= semi(newUv, float(i)/10. + 0.45);\n        }\n        \n        \n        color += shape1; \n        color += shape2;\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_L,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    float semi (vec2 p, float n)\n    {\n        float c = circle(vec2(p), n);\n        float c2 = circle(vec2(p), n + n * 0.05);\n        float r = rect(vec2(p.x, p.y- n * 0.45), n - n * 0.1, n + n * 0.5);\n        float r2= rect(vec2(p.x, p.y -0.2), n, n * 0.3);\n        float shape = r * c * 2.;\n        float shape2 = r2 * c2* 2.;\n        return shape;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        uv2 = uv2 *2. - .5;\n\n        for(int i = 0; i < 20; i++)\n        {\n            uv2 = Rot(uv2, ((u_time * .275)));\n            vec2 newUv = uv2;\n            float n = noise(newUv) + u_time;\n            \n            shape1 += semi(newUv, float(i)/5. + 0.5);\n            shape2 -= semi(newUv, float(i)/5. + 0.45);\n            shape3 += semi(newUv, float(i)/10. + 0.52);\n            shape4 -= semi(newUv, float(i)/10. + 0.45);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color *= shape3 * 1.5; \n        color += shape4;\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ML=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    float semi (vec2 p, float n)\n    {\n        float c = circle(vec2(p), n);\n        float c2 = circle(vec2(p), n + n * 0.05);\n        float r = rect(vec2(p.x, p.y- n * 0.45), n - n * 0.1, n + n * 0.5);\n        float r2= rect(vec2(p.x, p.y -0.2), n, n * 0.3);\n        float shape = r * c * 2.;\n        float shape2 = r2 * c2* 2.;\n        return shape;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float shape1;\n        float shape2;\n        float shape3;\n        float shape4;\n        vec2 uv2 = vUv;\n        \n        uv2 = uv2 *3. - 1.;\n\n        for(int i = 1; i < 80; i++)\n        {\n            uv2 = Rot(uv2, ((u_time * .275 )));\n            // uv2 *= 2. - 1.;\n            vec2 newUv = uv2;\n            // float n = noise(newUv) * u_time;\n            // newUv += n * 0.0005;\n            shape1 += semi(newUv, float(i)/5. + 0.5);\n            shape2 -= semi(newUv, float(i)/5. + 0.45);\n            shape3 += semi(newUv, float(i)/10. + 0.52);\n            shape4 -= semi(newUv, float(i)/10. + 0.45);\n        }\n        \n        color += shape1; \n        color += shape2;\n        color *= shape3 * 2.5; \n        color += shape4;\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ML,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 4.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 1.;\n        float seg;\n        float shape;\n\n        for(int y = -2; y <=2; y++){\n            for(int x = -2; x <=2; x++){\n                vec2 n = vec2(float(x), float(y));\n                vec2 p = random2(iUv + n);\n                p = 0.5 + 0.5 * sin(u_time + TWO_PI * p);\n                vec2 dif = n + p - fUv;\n                float dist = length(dif);\n                m_dist = min(m_dist, dist);\n                shape = min(m_dist, dist);\n                // m_dist = smoothstep(0.05, 0.051, m_dist);\n                \n                // seg = sdSegment(fUv, dif, dif * dis);\n            }\n        }\n        color += seg;\n        color += shape;\n        // color += smoothstep(0.9, 0.11, shape);\n        // color += 1. - m_dist;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n    \n        vec2 mg,mr;\n        float md=1.;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.75)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=0.5;\n        for(int i=-5;i<=5;i++){\n            for(int j=-5;j<=5;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.75)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.001){\n                    md=min(md,dot(.25*(mr+r),normalize(r-mr)));\n                    \n                }\n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 5.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float seg;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        float dd = length(s.yz);\n\n        color+=mix(vec3(1.), color, smoothstep(0.002, 0.05, dd * s.x));\n        // color += 1. - smoothstep(0.01, 0.012, s.x);\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n    \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 10.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float seg;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        float dd = length(s.yz) + 0.;\n\n        color+=mix(vec3(1.), color, smoothstep(0.09, 0.061, dd * s.x));\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float seg;\n        vec2 uv2 = vUv;\n\n        uv2 *= 5.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/4., uv2.y  + cos(u_time)/4.));\n        float dd = length(s.yz) + 0.;\n        seg = sdSegment(fUv, vec2(s2.yz), vec2(s.yz));\n        color+=mix(vec3(1.), color, smoothstep(0.01, 0.021, s.x));\n        color+= mix(vec3(1.), color,smoothstep(0.01, 0.021, s2.x));\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n        // color += seg;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float seg;\n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.1);\n        uv2 *= 10.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        float dd = length(s.yz) + 0.;\n        seg = sdSegment(fUv, vec2(s2.yz), vec2(s.yz));\n        color.r+= 1. - smoothstep(0.01 * 2., 0.021 * 2., s.x);\n        color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 4., s2.x);\n        color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 4., s3.x);\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n        // color += seg;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        float seg;\n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.1);\n        uv2 *= 5.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 50.;\n        float shape;\n\n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        float dd = length(s.yz) + 0.;\n        seg = sdSegment(fUv, vec2(s2.yz), vec2(s.yz));\n        color.r+= 1. - smoothstep(0.01 * 2., 0.021 * 2.,  dd);\n        color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 4., dd);\n        color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 4., s3.x / dd);\n        // color += 1. - smoothstep(0.01, 0.02, s.x);\n        \n        // color += seg;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    // 2D Random\n    float random (in vec2 st) {\n        return fract(sin(dot(st.xy,\n                            vec2(12.9898,78.233)))\n                    * 43758.5453123);\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    // 2D Noise based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        // Smooth Interpolation\n\n        // Cubic Hermine Curve.  Same as SmoothStep()\n        vec2 u = f*f*(3.0-2.0*f);\n        // u = smoothstep(0.,1.,f);\n\n        // Mix 4 coorners percentages\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n\n        uv2 *= 4.;\n\n        vec2 iUv = floor(uv2);\n        vec2 fUv = fract(uv2);\n\n        float m_dist = 1.;\n        float seg;\n        float shape;\n\n        for(int y = -2; y <=2; y++){\n            for(int x = -2; x <=2; x++){\n                vec2 n = vec2(float(x), float(y));\n                vec2 p = random2(iUv + n);\n                p = 0.25 + 0.25 * sin(u_time + TWO_PI * p );\n                vec2 dif = n + p - fUv;\n                float dist = length(dif);\n                m_dist = min(m_dist, dist);\n                shape = min(m_dist, dist);\n                // m_dist = smoothstep(0.05, 0.051, m_dist);\n                \n                seg = sdSegment(p, vec2(m_dist /dist), vec2(m_dist));\n                color += seg;\n            }\n        }\n        \n        // color += shape;\n        // color += smoothstep(0.9, 0.11, shape);\n        // color += 1. - m_dist;\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdTwo(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    #define S(a, b, t) smoothstep(a, b, t)\n\n    float DistLine(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p - a;\n        vec2 ba = b - a;\n        float t = clamp(dot(pa, ba)/ dot(ba, ba), 0., 1.);\n        return length(pa - ba * t);\n    }\n\n    float N21(vec2 p)\n    {\n        p = fract(p * vec2(445.23, 789.92));\n        p += dot(p, p + 54.23 );\n        return fract(p.x * p.y);\n    }\n\n    vec2 N22(vec2 p)\n    {\n        float n = N21(p);\n        return vec2(n, N21(p + n));\n    }\n\n    vec2 GetPos(vec2 id, vec2 offset)\n    {\n        vec2 n = N22(id+offset) * u_time;\n        // float x = sin(u_time* n.x);\n        // float y = cos(u_time*n.y);\n        return offset + sin(n) * .4;\n    }\n\n    float Line(vec2 p, vec2 a, vec2 b)\n    {\n        float d = DistLine(p, a, b);\n        float m = S(.03, 0.01, d);\n        m *= S(1.2, .8, length(a -b));\n        return m;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n        \n        // float d = DistLine(uv2, vec2(0.), vec2(1.));\n        float m = 0.;\n        \n        uv2 *= 8.;\n        vec2 gv = fract(uv2) - 0.5;\n        vec2 id = floor(uv2);\n\n        // vec2 p = N22(id) - 0.5;\n\n        vec2 p[9];\n\n        // vec2 p = GetPos(id);\n        // float d = length(gv - p);\n        // m = S(0.1, 0.05, d);\n\n        int i = 0;\n        for(float y=-1.; y <=1.; y++)\n        {\n            for(float x=-1.; x<=1.; x++)\n            {\n                p[i++]= GetPos(id, vec2(x, y));\n            }\n        }\n\n        float t = u_time * 10.;\n\n        for(int i=0; i < 9; i++)\n        {\n            m += Line(gv, p[4], p[i]);\n            \n            vec2 j = (p[i] - gv) * 40.;\n            float sparkle = 1. / dot(j, j);\n\n            m += sparkle * (sin(t+p[i].x * 10.) * .5 + .5);\n        }\n        m += Line(gv, p[1], p[3]);\n        m += Line(gv, p[1], p[5]);\n        m += Line(gv, p[7], p[3]);\n        m += Line(gv, p[7], p[5]);\n\n        vec3 col = vec3(m);\n        // col.rg = gv;\n\n        // color.rg = col.rg;\n\n        // color += m;\n        // if(gv.x > .48 || gv.y > .48) col = vec3(1., 0, 0);\n        color += col;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    #define S(a, b, t) smoothstep(a, b, t)\n\n    float DistLine(vec2 p, vec2 a, vec2 b)\n    {\n        vec2 pa = p - a;\n        vec2 ba = b - a;\n        float t = clamp(dot(pa, ba)/ dot(ba, ba), 0., 1.);\n        return length(pa - ba * t);\n    }\n\n    float N21(vec2 p)\n    {\n        p = fract(p * vec2(445.23, 789.92));\n        p += dot(p, p + 54.23 );\n        return fract(p.x * p.y);\n    }\n\n    vec2 N22(vec2 p)\n    {\n        float n = N21(p);\n        return vec2(n, N21(p + n));\n    }\n\n    vec2 GetPos(vec2 id, vec2 offset)\n    {\n        vec2 n = N22(id+offset) * u_time;\n        // float x = sin(u_time* n.x);\n        // float y = cos(u_time*n.y);\n        return offset + sin(n) * .4;\n    }\n\n    float Line(vec2 p, vec2 a, vec2 b)\n    {\n        float d = DistLine(p, a, b);\n        float m = S(.03, 0.01, d);\n        float d2 = length(a - b);\n        m *= S(1.2, .8, d2) * .5 + S(.05, .03, abs(d2-.75));\n        return m;\n    }\n\n    float Layer(vec2 uv2)\n    {\n        float m;\n        vec2 gv = fract(uv2) - 0.5;\n        vec2 id = floor(uv2);\n\n        // vec2 p = N22(id) - 0.5;\n\n        vec2 p[9];\n\n        // vec2 p = GetPos(id);\n        // float d = length(gv - p);\n        // m = S(0.1, 0.05, d);\n\n        int i = 0;\n        for(float y=-1.; y <=1.; y++)\n        {\n            for(float x=-1.; x<=1.; x++)\n            {\n                p[i++]= GetPos(id, vec2(x, y));\n            }\n        }\n\n        float t = u_time * 10.;\n\n        for(int i=0; i < 9; i++)\n        {\n            m += Line(gv, p[4], p[i]);\n            \n            vec2 j = (p[i] - gv) * 40.;\n            float sparkle = 1. / dot(j, j);\n\n            m += sparkle * (sin(t+fract(p[i].x) * 10.) * .5 + .5);\n        }\n        m += Line(gv, p[1], p[3]);\n        m += Line(gv, p[1], p[5]);\n        m += Line(gv, p[7], p[3]);\n        m += Line(gv, p[7], p[5]);\n\n        return m;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.1);\n        uv2 -= 0.5;\n        \n        // float d = DistLine(uv2, vec2(0.), vec2(1.));\n        float m = 0.;\n        float t = u_time * 0.05;\n        \n        for(float i =0.; i <1.; i+= 1./4.)\n        {\n            float z = fract(i + t);//reuse layers\n            float size = mix(20., .1, z);\n            float fade = S(0., 0.5, z) * S(1., 0.8, z);\n            m += Layer(uv2 * size + i * 20.) * fade;\n        }\n        \n\n        vec3 base = sin(t * vec3(.345, .456, .678)) * .4 + .6;\n        vec3 col = m * base;\n        col += uv2.y * base * 0.2;\n        col -= uv2.x  * base * 0.2;\n        color += col;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.4, p.y));\n        return left + center + right;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float GetDist(vec3 p)\n    {\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p.y;\n\n        float d = min(sphereDist, planeDist);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(0, 5, 6);\n        lightPos.xz += vec2(sin(u_time), cos(u_time)) * 2.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 1, 0);//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p.y;\n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, .5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(-3, .75, 6), vec3(.5));\n        float cyld = sdCylinder(p, vec3(0, .3, 3), vec3(3, 1, 6), 0.2);\n\n        // float d = min(sphereDist, planeDist);\n        float d = min(cd, planeDist);\n        d = min(d, td);\n        d = min(d, bd);\n        d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(0, 5, 6);\n        lightPos.xz += vec2(sin(u_time), cos(u_time)) * 2.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(sin(u_time), 3, -2.-cos(u_time));//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p.y;\n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0, 2.75, 6.+ sin(u_time) * 2.), vec3(.5));\n        float bd2 = sdBox(p - vec3(0, 2.75+ cos(u_time * 2.) * 2., 6.), vec3(.5));\n        float bd3 = sdBox(p - vec3(0. + cos(u_time * 2.) * 2., 0.75, 6.), vec3(.5));\n        float cyld = sdCylinder(p, vec3(0, .3, 3), vec3(3, 1, 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd, d);\n        d = min(bd3, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 5, -2.-cos(u_time));//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JL(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 2.75, 6.+ sin(u_time) * 2.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(0, 2.75+ cos(u_time * 2.) * 2., 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3(0. + cos(u_time * 2.) * 2., 0.75, 6.), vec3(.5));\n        float cyld = sdCylinder(p, vec3(0, .3, 3), vec3(3, 1, 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd, d);\n        d = min(bd3, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5, -6.);//camera\n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2, 1));//ray direction\n\n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n\n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $L(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KL=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 2.75 + sin(u_time), 6.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(-2. + sin(u_time), 2.75, 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3(2. + sin(u_time), 2.75, 6.), vec3(.5));\n        float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(cyld, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5., -6.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KL,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 4.75 - sin(u_time), 6.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(-2. + sin(u_time), 2.75, 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3(2. - sin(u_time), 2.75, 6.), vec3(.5));\n        float bd4 = sdBox(p2 - vec3(0. , 1.75 + sin(u_time), 6.), vec3(.5));\n        float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        float d = min(bd, planeDist);\n        // float d = min(bd, planeDist);\n        d = min(bd, d);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(bd4, d);\n        // d = min(cyld, d);\n        // d = min(d, cyld);\n        return d;\n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5., -6.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p2 - vec3(0, 4.75 - sin(u_time), 6.), vec3(.5));\n        float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float shape;\n        for(int i =0; i<= 5; i++)\n        {\n            // shape = sdBox(p2 - vec3(0., 0.+ (float(i)), 5.), vec3(.5));\n            // float d = min(shape, planeDist);\n            float d = min(sdBox(p2 - vec3(0. , 0. + 2., 6.), vec3(.5)), planeDist);\n            // d = min(bd, d);\n            d = min(bd2, d);\n            d = min(bd3, d);\n            d = min(bd4, d);\n        // d = min(cyld, d);\n        // d = min(d, cyld);\n            return d;\n            // return d;\n        }\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(-1, 5., -6.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, u_time);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0, 3. , 6.), vec3(.5));\n        float bd2 = sdBox2(p - vec3(0, 4.5 , 6.), vec3(.5));\n        float bd3 = sdBox3(p - vec3(0, 1.5 , 6.), vec3(.5));\n        float bd4 = sdBox3(p - vec3(-1.5, 3. , 6.), vec3(.5));\n        float bd5 = sdBox(p - vec3(-1.5, 4.5 , 6.), vec3(.5));\n        float bd6 = sdBox2(p - vec3(-1.5, 1.5 , 6.), vec3(.5));\n        float bd7 = sdBox2(p - vec3(1.5, 3. , 6.), vec3(.5));\n        float bd8 = sdBox3(p - vec3(1.5, 4.5 , 6.), vec3(.5));\n        float bd9 = sdBox(p - vec3(1.5, 1.5 , 6.), vec3(.5));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(bd, planeDist);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(bd4, d);\n        d = min(bd5, d);\n        d = min(bd6, d);\n        d = min(bd7, d);\n        d = min(bd8, d);\n        d = min(bd9, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdThree(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        p.x += sin(u_time);\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    mat3 identity() {\n        return mat3(\n            vec3(1, 0, 0),\n            vec3(0, 1, 0),\n            vec3(0, 0, 1)\n        );\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 1.5, 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0. + sin(u_time), 3. + cos(u_time), 6.), vec3(.5));\n        float bd2 = sdBox2(p - vec3(0. + cos(u_time), 4.5 + cos(u_time) , 6.), vec3(.5));\n        float bd3 = sdBox3(p - vec3(0. + sin(u_time), 1.5 + cos(u_time), 6.), vec3(.5));\n        float bd4 = sdBox3(p - vec3(-1.5 + sin(u_time), 3. + cos(u_time) , 6.), vec3(.5));\n        float bd5 = sdBox(p - vec3(-1.5, 4.5 , 6.), vec3(.5));\n        float bd6 = sdBox2(p - vec3(-1.5, 1.5 , 6.), vec3(.5));\n        float bd7 = sdBox2(p - vec3(1.5 + sin(u_time), 3. + sin(u_time) , 6.), vec3(.5));\n        float bd8 = sdBox3(p - vec3(1.5, 4.5 , 6.), vec3(.5));\n        float bd9 = sdBox(p - vec3(1.5, 1.5 , 6.), vec3(.5));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(bd, planeDist);\n        d = min(bd2, d);\n        d = min(bd3, d);\n        d = min(bd4, d);\n        // d = min(bd5, d);\n        // d = min(bd6, d);\n        d = min(bd7, d);\n        // d = min(bd8, d);\n        // d = min(bd9, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus2(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 3., 6), vec2(1., 0.3));\n        float bd = sdBox(p - vec3(0., 3., 6.), vec3(.5));\n        float td2 = sdTorus2(p-vec3(0, 3., 6), vec2(.4, 0.2));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(td, planeDist);\n\n        d = min(td2, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus2(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus3(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateZ(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus4(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time *2.));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 3., 6), vec2(1., 0.2));\n        float bd = sdBox(p - vec3(0., 3., 6.), vec3(.5));\n        float td2 = sdTorus2(p-vec3(0, 3., 6), vec2(.4, 0.1));\n        float td3 = sdTorus3(p-vec3(0, 3., 6), vec2(1.5, 0.1));\n        float td4 = sdTorus4(p-vec3(0, 3., 6), vec2(2.0, 0.2));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(td, planeDist);\n\n        d = min(td2, d);\n        d = min(td3, d);\n        d = min(td4, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    // mat3 rotateY(float theta) {\n    //     float c = cos(theta);\n    //     float s = sin(theta);\n    //     return mat3(\n    //         vec3(c, 0, s),\n    //         vec3(0, 1, 0),\n    //         vec3(-s, 0, c)\n    //     );\n    // }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    float sdCapsule(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        t = clamp(t, 0., 1.);\n\n        vec3 c = a + t * ab;\n        return length(p - c) - r;\n    }\n\n    float sdCylinder(vec3 p, vec3 a, vec3 b, float r)\n    {\n        vec3 ab = b-a;\n        vec3 ap = p-a;\n\n        float t = dot(ab, ap)/dot(ab, ab);\n        // t = clamp(t, 0., 1.); //infinite\n\n        vec3 c = a + t * ab;\n        float x = length(p - c) - r;\n        float y = (abs(t - .5) - .5) * length(ab);\n        float e = length(max(vec2(x,y), 0.));\n        float i = min(max(x, y), 0.);\n\n        return e + i;\n    }\n\n    float sdTorus(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus2(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus3(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateZ(p, (u_time));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdTorus4(vec3 p, vec2 r)\n    {\n        // p.x += sin(u_time);\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time *2.));\n        \n        float x = length(p.xz) - r.x;\n        return length(vec2(x, p.y)) - r.y;\n    }\n\n    float sdBox(vec3 p, vec3 s)\n    {\n        p = rotateY(p, (u_time));\n        p = rotateX(p, (u_time));\n        p = rotateZ(p, (u_time));\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox2(vec3 p, vec3 s)\n    {\n        p = rotateX(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float sdBox3(vec3 p, vec3 s)\n    {\n        p = rotateZ(p, sin(u_time)*2.);\n        return length(max(abs(p) - s, 0.));\n    }\n\n    float GetDist(vec3 p)\n    {\n        \n        vec3 p2 = vec3(p);\n        // p2 = rotateY(p2, sin(u_time)*0.5);\n        // mat3 i = identity(p2);\n        vec4 s = vec4(0, 1, 6, 1);\n        float sphereDist = length(p -s.xyz) - s.w;\n        float planeDist = p2.y;\n\n        // float shape; \n        float n = cnoise(p + u_time) * 0.15;\n        float cd = sdCapsule(p, vec3(0, 1, 6), vec3(1, 2, 6), 0.2);\n        float td = sdTorus(p-vec3(0, 3., 6) + n, vec2(1., 0.2));\n        float bd = sdBox(p - vec3(0., 3., 6.) + n, vec3(.5));\n        float td2 = sdTorus2(p-vec3(0, 3., 6), vec2(.4, 0.1));\n        float td3 = sdTorus3(p-vec3(0, 3., 6), vec2(1.5, 0.1));\n        float td4 = sdTorus4(p-vec3(0, 3., 6) + n, vec2(2.0, 0.2));\n        // float bd2 = sdBox(p2 - vec3(1. + sin(u_time), 4., 6.), vec3(.5));\n        // float bd3 = sdBox(p2 - vec3( sin(u_time)-1., 4., 6.), vec3(.5));\n        // float bd4 = sdBox(p2 - vec3(0. , 2. + abs(sin(u_time)), 6.), vec3(.5));\n        // float cyld = sdCylinder(p2, vec3(0.  + sin(u_time) * 2., .3 , 3), vec3(3, 1. , 6), 0.2);\n\n        \n        float d = min(bd, planeDist);\n\n        // d = min(td2, d);\n        // d = min(td3, d);\n        d = min(td4, d);\n\n        return d;\n\n        \n        \n    }\n\n    float RayMarch(vec3 ro, vec3 rd)\n    {\n        float dO=0.;\n\n        for(int i=0; i <MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * dO;\n            float dS = GetDist(p);\n            dO += dS;\n            if(dO>MAX_DIST || dS<SURF_DIST) break;\n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d = GetDist(p);\n        vec2 e = vec2(0.01, 0);\n        vec3 n = d - vec3(\n            GetDist(p-e.xyy),\n            GetDist(p-e.yxy),\n            GetDist(p-e.yyx)\n        );\n        return normalize(n);\n    }\n\n    float GetLight(vec3 p)\n    {\n        vec3 lightPos = vec3(2, 15, 3);\n        // lightPos.xz += vec2(sin(u_time), cos(u_time)) * 4.;\n        vec3 l = normalize(lightPos - p);\n        vec3 n = GetNormal(p);\n\n        float dif = clamp(dot(n, l), 0., 1.);\n\n        float d = RayMarch(p + n * SURF_DIST * 2., l);\n        if(d < length(lightPos -p)) dif *= .1;\n\n        return dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0, 4., 0.);//camera\n        \n        vec3 rd = normalize(vec3(uv2.x, uv2.y - .2 , 1));//ray direction\n        \n        float d = RayMarch(ro, rd);\n\n        vec3 p = ro + rd * d;\n        \n        float dif = GetLight(p);\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.35, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        float d = max(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 unionSDF(vec4 a, vec4 b) {\n        float d = min(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        float d = max(a.w, -b.w);\n        return d == a.w ? a : vec4(b.rgb,-b.w);\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,1.05));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0);\n     \n    csg0 = differenceSDF(b0,s0); // Intersect box with sphere creating a CSG object.\n\n    \n     \n    // csg1 = unionSDF(c0,c1); // Unite cylinders\n    // csg1 = unionSDF(csg1,c2);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg0, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(5.*sin(u_time),5.,5.*cos(u_time));// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,2.5,-3.5); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdFour(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        float d = max(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 unionSDF(vec4 a, vec4 b) {\n        float d = min(a.w, b.w);\n        return d == a.w? a : b;\n    }\n    \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        float d = max(a.w, -b.w);\n        return d == a.w ? a : vec4(b.rgb,-b.w);\n    }\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.85,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .2);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .2);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,1.05));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0);\n     \n    csg0 = differenceSDF(b0, b1); // Intersect box with sphere creating a CSG object.\n\n    \n     \n    csg1 = differenceSDF(csg0,b2);\n\n    // csg1 = unionSDF(csg1,c2);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg1, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,5.,0.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,2.5,-3.5); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdFive(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.85,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .2);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .2);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,0.5,1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, s0, 0.15 + sin(u_time * 1.5)/8.);\n     \n    csg2 = smoothDifferenceSDF(csg1, s1, 0.15 + cos(u_time * 1.5)/8.);\n\n    csg3 = smoothDifferenceSDF(csg2, b2, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,5.,0.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _A=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdSix(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(1,0,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1.); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .4);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,0.5,1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0);\n     \n    csg0 = smoothUnionSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s0, 0.25);\n     \n    // csg2 = smoothDifferenceSDF(csg1, s1, 0.15 + cos(u_time * 1.5)/8.);\n\n    csg3 = smoothUnionSDF(csg1, b2, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_A,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdSeven(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(1,0,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(u_time * .4);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2. - sin(u_time),1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,2. + sin(u_time),1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s1, 0.25);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.25);\n\n    csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg5, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdEight(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(1,0,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.0175,1.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2. - sin(u_time),1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0. + sin(u_time),2. ,1.);\n    s1p=p-s1p;\n    s1p.xz *=Rotate(0.1);\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, p0, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s1, 0.25);\n     \n    // csg2 = smoothUnionSDF(csg1, s1, 0.25);\n\n    // csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg1, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFour(vec2(p.x -0.035, p.y));\n        float right = sdNine(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.0175,1.75,1.5); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + sin(u_time));\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(1.5,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(2.,2. - sin(u_time),2.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0. + sin(u_time) * 2.,2. ,.5);\n    s1p=p-s1p;\n    s1p.xz *=Rotate(0.1);\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, p0, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, s1, 0.25);\n     \n    // csg2 = smoothUnionSDF(csg1, s1, 0.25);\n\n    // csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg1, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdZero(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(1,0,0,1);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(BoxColor1.rgb,roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(2.,2. - sin(u_time),2.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, p0, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b2, 0.25);\n     \n    csg2 = smoothDifferenceSDF(csg1, b1, 0.25);\n\n    // csg3 = smoothUnionSDF(csg2, s1, 0.25);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg0, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdOne(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(1.25,.5,.75);\n    vec3 b3p = vec3(0., 1.5, 1.);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2. - sin(u_time),0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothUnionSDF(b1, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b2, 0.125);\n     \n    csg2 = unionSDF(csg1, b3);\n\n    csg3 = smoothUnionSDF(csg2, s0, 0.125);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothDifferenceSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdTwo(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,0.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.0,0.75);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p,1.5 + sin(u_time)/2. - 0.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, s1, 0.125); // Intersect box with sphere creating a CSG object.\n\n    // csg1 = smoothDifferenceSDF(csg0, s1, 0.125);\n     \n    // csg2 = unionSDF(csg1, b3);\n\n    // csg3 = smoothUnionSDF(csg2, s0, 0.125);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothUnionSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg0, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.035, p.y));\n        float right = sdThree(vec2(p.x - 0.38, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.,1. ); // box position\n    b0p = p-b0p;\n    b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.25 + sin(u_time)/5.)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.75); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,0.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.0,0.75);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p,1.5 + sin(u_time)/2. - 0.5));\n\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, s1, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothUnionSDF(csg0, b1, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, b2, 0.125);\n\n    // csg3 = smoothUnionSDF(csg2, s0, 0.125);\n\n    // csg4 = smoothUnionSDF(csg3, b2, 0.25);\n\n    // csg5 = smoothUnionSDF(csg4, b1, 0.25);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg2, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdFour(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.65,2.5,-0.45);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.65,2.5,-0.45);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.1);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b0, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg6, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,10.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function IA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdFive(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,2.,-0.65 ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.65,2.5,-0.45);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.65,2.5,-0.45);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.1);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg6, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdSix(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,0.6,-0.7 - sin(u_time)/15. ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI * 2.);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.65,2.24,-0.45);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.65,2.24,-0.6);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.24,-0.1);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.125));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.24,-0.1);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.125));\n\n      vec4 s6 = vec4(vec3(0, 0, 0), sphereSDF(s5p, 0.125));\n      vec4 s7 = vec4(vec3(0, 0, 0), sphereSDF(s4p, 0.125));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0), csg7 = vec4(0), csg8 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n\n    csg7 = smoothUnionSDF(csg6, s6, 0.15);\n\n    csg8 = smoothUnionSDF(csg7, s7, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg8, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 t = vUv;\n        vUv -= 0.5;\n        // t *= 0.5;\n\n        for(int i = 0; i < 20; i++) {\n            float t = 2.0 * PI * float(i) / 30.0 * u_time * 0.5;\n            float x = cos(0.0*t);\n\t\t    float y = sin(2.0*t);\n            vec2 o = 0.40 * vec2(x + sin(u_time) - 1., y);\n            float r = fract(x);\n            float g = 1.0 - r;\n            color += 0.003 / (length(vUv - o)) * vec3(r, g, 0.9);\n        }\n        for(int i = 0; i < 20; i++) {\n            float t = 2.0 * PI * float(i) / 30.0 * u_time * 0.5;\n            float x = cos(2.0*t);\n\t\t    float y = sin(0.0*t);\n            vec2 o = 0.40 * vec2(x , y - sin(u_time) );\n            float r = fract(x);\n            float g = 1.0 - r;\n            color += 0.003 / (length(vUv - o)) * vec3(r, g, 0.9);\n        }\n        for(int i = 0; i < 20; i++) {\n            float t = 2.0 * PI * float(i) / 30.0 * u_time * 0.5;\n            float x = cos(2.0*t);\n\t\t    float y = sin(2.0*t);\n            vec2 o = 0.40 * vec2(x , y );\n            float r = fract(x);\n            float g = 1.0 - r;\n            color += 0.003 / (length(vUv - o)) * vec3(r, g, 0.9);\n        }\n\n        float numLabel = label(t);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdEight(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    // Octahedron - exact\n    float octahedronSDF(vec3 p,float s) {\n    p=abs(p);\n    float m=p.x+p.y+p.z-s;\n    vec3 q;\n    if(3.*p.x<m)q=p.xyz;\n    else if(3.*p.y<m)q=p.yzx;\n    else if(3.*p.z<m)q=p.zxy;\n    else return m*.57735027;\n \n    float k=clamp(.5*(q.z-q.y+s),0.,s);\n    return length(vec3(q.x,q.y-s+k,q.z-k));\n}\n\n    vec4 GetDist(vec3 p)\n    {\n        //octahedron\n\n        vec3 op = vec3(0, 2.5, 0);\n        op = p - op;\n        op.xy *= Rotate(-u_time);\n        op.xz *= Rotate(-u_time);\n\n        float r = fract(BoxColor.b);\n        float g = 1.0 - r;\n        vec4 o = vec4(BoxColor.rgb + vec3(r * cos(u_time), g * sin(u_time), 0.9 * sin(u_time)), octahedronSDF(op, 1.));\n\n        vec4 scene = vec4(0);\n\n        vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n        scene = unionSDF(p0, o);\n        \n        \n    \n        return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = sdFive(vec2(p.x + 0.35, p.y));\n        float center = sdFive(vec2(p.x -0.03, p.y));\n        float right = sdNine(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    // float sdNumHorizontal(vec2 p)\n    // {\n    //     vec2 newUv = p;\n    //     newUv.x += 0.125;\n    //     newUv.y -= 0.25;\n    //     vec2 uv1 = newUv;\n    //     vec2 uv2 = newUv;\n    //     uv1 = Rot(uv1, PI * 0.5);\n    //     uv1 /= .5;\n    //     uv1 -= 1.;\n\n    //     uv2 = Rot(uv2, -PI* .5);\n    //     uv2 /= .5;\n    //     uv2 -= 1.;\n    //     float shape1 = sdEqTriangle(uv1, 0.15);\n    //     shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n    //     float shape2 = sdBox(vec2(uv1.x + 0.5, uv1.y+0.75), vec2(0.33, 0.2815));\n    //     shape2 = 1. - smoothstep(0.1, 0.11, shape2);\n\n    //     float shape3 = sdEqTriangle(vec2(uv2.x, uv2.y-0.5), 0.15);\n    //     shape3 = 1. - smoothstep(0.1, 0.11, shape3);\n\n    //     return shape1 + shape2 + shape3;\n    // }\n\n    // float sdNumVertical(vec2 p){\n    //     vec2 newUv = p;\n    //     newUv.x += 0.125;\n    //     newUv.y -= 0.25;\n    //     vec2 uv1 = newUv;\n    //     vec2 uv3 = newUv;\n    //     vec2 uv4 = newUv;\n    //     uv1 = Rot(uv1, PI * 0.5);\n    //     uv1 /= .5;\n    //     uv1 -= 1.;\n\n    //     uv3 = Rot(uv3, PI * 1.5);\n    //     uv3 /= .5;\n    //     uv3 -= 1.;\n    //     uv3.x -= 0.2;\n    //     uv3.y += 0.1;\n\n    //     uv4 = Rot(uv4, PI * 1.5);\n    //     uv4 /= .5;\n    //     uv4 -= 1.;\n    //     uv4.y += 0.1;\n    //     uv4.x -= 0.52;\n\n    //     float shape1 = sdEqTriangle(vec2(uv1.x + 0.36125, uv1.y-0.01), 0.125);\n    //     shape1 = 1. - smoothstep(0.1, 0.11, shape1);\n\n    //     float shape4 = sdEqTriangle(vec2(uv3.x, uv3.y), 0.14);\n    //     shape4 = 1. - smoothstep(0.1, 0.11, shape4);\n\n    //     float shape5 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.35, 0.325));\n    //     shape5 = 1. - smoothstep(0.1, 0.11, shape5);\n\n    //     float shape6 = sdEqTriangle(vec2(uv4), 0.14);\n    //     shape6 = 1. - smoothstep(0.1, 0.11, shape6);\n\n    //     float tri = ((shape4 + shape6 + shape1 ) );\n    //     float sq = sdBox(vec2(uv1.x + 0.859, uv1.y +0.442), vec2(0.3));\n    //     sq = 1. - smoothstep(0.1, 0.11, sq);\n    //     float shape7 = sdBox(vec2(uv1.x + 0.859, uv1.y+0.442), vec2(0.3));\n    //     shape7 = 1. - smoothstep(0.1, 0.11, shape7);\n\n    //     return tri ;\n    // }\n\n   \n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float z = sdZero(vUv);\n        // color += z;\n\n        float zero = numZero(vUv);\n        // color += zero;\n        \n        float one = numOne(vUv);\n        color += one;\n\n        float two = numTwo(vUv);\n        // color += two;\n\n        float three = numThree(vUv);\n        // color += three;\n\n        float four = numFour(vUv);\n        // color += four;\n\n        float five = numFive(vUv);\n        // color += five;\n\n        float six = numSix(vUv);\n        // color += six;\n\n        float seven = numSeven(vUv);\n        // color += seven;\n\n        float eight = numEight(vUv);\n        // color += eight;\n        \n        float nine = numNine(vUv);\n        // color += nine;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n  \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        float zero = numZero(vUv);\n        float one = numOne(vUv);\n        float two = numTwo(vUv);\n        float three = numThree(vUv);\n        float four = numFour(vUv);\n        float five = numFive(vUv);\n        float six = numSix(vUv);\n        float seven = numSeven(vUv);\n        float eight = numEight(vUv);\n        float nine = numNine(vUv);\n        // color += zero;\n\n        \n        // color += one;\n\n        float t = u_time;\n        t = t * 0.5;\n\n        if(fract(t) < 0.1)\n        {\n            color += zero;\n        }\n        if(fract(t) <= 0.2)\n        {\n            if(fract(t) > 0.1)\n            {\n                color += one;\n            }\n            \n        }\n        if(fract(t) <= 0.3)\n        {\n            if(fract(t) > 0.2)\n            {\n                color += two;\n            }\n        }\n        if(fract(t) <= 0.4)\n        {\n            if(fract(t) > 0.3)\n            {\n                color += three;\n            }\n        }\n        if(fract(t) <= 0.5)\n        {\n            if(fract(t) > 0.4)\n            {\n                color += four;\n            }\n        }\n        if(fract(t) <= 0.6)\n        {\n            if(fract(t) > 0.5)\n            {\n                color += five;\n            }\n        }\n        if(fract(t) <= 0.7)\n        {\n            if(fract(t) > 0.6)\n            {\n                color += six;\n            }\n        }\n        if(fract(t) <= 0.8)\n        {\n            if(fract(t) > 0.7)\n            {\n                color += seven;\n            }\n        }\n        if(fract(t) <= 0.9)\n        {\n            if(fract(t) > 0.8)\n            {\n                color += eight;\n            }\n        }\n        if(fract(t) <= 1.)\n        {\n            if(fract(t) > 0.9)\n            {\n                color += nine;\n            }\n        }\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JA(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right;\n    }\n\n    float tile(vec2 uv, float zoom)\n    {\n        uv *= zoom;\n\n        float index = 0.;\n        index += step(1., mod(uv.x, 3.));\n        index += step(1., mod(uv.y, 3.)) * 2.;\n        \n        uv = fract(uv);\n        float c;\n        float zero = numZero(uv);\n        float one = numOne(uv);\n        float two = numTwo(uv);\n        float three = numThree(uv);\n        float four = numFour(uv);\n        float five = numFive(uv);\n        float six = numSix(uv);\n        float seven = numSeven(uv);\n        float eight = numEight(uv);\n        float nine = numNine(uv);\n\n        float t = u_time;\n        t = t / 2.;\n\n        if(index == 0.)\n        {\n            c = zero;\n        } else if (index == 1.){\n            if(fract(t) < 0.1)\n            {\n                c += zero;\n            }\n            if(fract(t) <= 0.2)\n            {\n                if(fract(t) > 0.1)\n                {\n                    c += one;\n                }\n                \n            }\n            if(fract(t) <= 0.3)\n            {\n                if(fract(t) > 0.2)\n                {\n                    c += two;\n                }\n            }\n            if(fract(t) <= 0.4)\n            {\n                if(fract(t) > 0.3)\n                {\n                    c += three;\n                }\n            }\n            if(fract(t) <= 0.5)\n            {\n                if(fract(t) > 0.4)\n                {\n                    c += four;\n                }\n            }\n            if(fract(t) <= 0.6)\n            {\n                if(fract(t) > 0.5)\n                {\n                    c += five;\n                }\n            }\n            if(fract(t) <= 0.7)\n            {\n                if(fract(t) > 0.6)\n                {\n                    c += six;\n                }\n            }\n            if(fract(t) <= 0.8)\n            {\n                if(fract(t) > 0.7)\n                {\n                    c += seven;\n                }\n            }\n            if(fract(t) <= 0.9)\n            {\n                if(fract(t) > 0.8)\n                {\n                    c += eight;\n                }\n            }\n            if(fract(t) <= 1.)\n            {\n                if(fract(t) > 0.9)\n                {\n                    c += nine;\n                }\n            }\n        } else if (index == 2.){\n            c = two;\n        } else if (index == 3.){\n            c = three;\n        } else if (index == 4.){\n            c = four;\n        }else if (index == 5.){\n            c = five;\n        } else if (index == 6.){\n            c = six;\n        }\n\n        return c;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        float x = tile(uv2, 3.);\n        color += x;\n\n        float count = numZero(vec2(uv2.x + 0.2, uv2.y)) + numZero(vec2(uv2.x-0.2, uv2.y));\n\n        // color += count;\n        \n        // float zero = numZero(uv2);\n        // float one = numOne(uv2);\n        // float two = numTwo(uv2);\n        // float three = numThree(uv2);\n        // float four = numFour(uv2);\n        // float five = numFive(uv2);\n        // float six = numSix(uv2);\n        // float seven = numSeven(uv2);\n        // float eight = numEight(uv2);\n        // float nine = numNine(uv2);\n        // color += zero;\n\n        \n        // color += one;\n\n        // float t = u_time;\n        // t = t / 2.;\n\n        // if(fract(t) < 0.1)\n        // {\n        //     color += zero;\n        // }\n        // if(fract(t) <= 0.2)\n        // {\n        //     if(fract(t) > 0.1)\n        //     {\n        //         color += one;\n        //     }\n            \n        // }\n        // if(fract(t) <= 0.3)\n        // {\n        //     if(fract(t) > 0.2)\n        //     {\n        //         color += two;\n        //     }\n        // }\n        // if(fract(t) <= 0.4)\n        // {\n        //     if(fract(t) > 0.3)\n        //     {\n        //         color += three;\n        //     }\n        // }\n        // if(fract(t) <= 0.5)\n        // {\n        //     if(fract(t) > 0.4)\n        //     {\n        //         color += four;\n        //     }\n        // }\n        // if(fract(t) <= 0.6)\n        // {\n        //     if(fract(t) > 0.5)\n        //     {\n        //         color += five;\n        //     }\n        // }\n        // if(fract(t) <= 0.7)\n        // {\n        //     if(fract(t) > 0.6)\n        //     {\n        //         color += six;\n        //     }\n        // }\n        // if(fract(t) <= 0.8)\n        // {\n        //     if(fract(t) > 0.7)\n        //     {\n        //         color += seven;\n        //     }\n        // }\n        // if(fract(t) <= 0.9)\n        // {\n        //     if(fract(t) > 0.8)\n        //     {\n        //         color += eight;\n        //     }\n        // }\n        // if(fract(t) <= 1.)\n        // {\n        //     if(fract(t) > 0.9)\n        //     {\n        //         color += nine;\n        //     }\n        // }\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $A(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KA=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,2.,-0.65 ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.5,2.5,-0.5);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.5,2.5,-0.5);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.15);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n\n      // Sphere.\n      vec3 s6p=vec3(-0.15,2.,-0.75);\n      s6p=p-s6p;\n      vec4 s6 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s6p, 0.012525));\n\n      vec3 s7p=vec3(0.15,2.,-0.75);\n      s7p=p-s7p;\n      vec4 s7 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s7p, 0.012525));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0), csg7 = vec4(0), csg8 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n\n    csg7 = smoothDifferenceSDF(csg6, s6, 0.15);\n\n    csg8 = smoothDifferenceSDF(csg7, s7, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg8, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KA,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    // const vec4 uvColor = vec4(vUv.x, vUv.y, 0., 1.);\n    const vec4 SphereColor = vec4(0,0,1,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    // float dot2( in vec2 v ) { return dot(v,v); }\n    // float dot2( in vec3 v ) { return dot(v,v); }\n    // float ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.0005,0.25); //box size\n    vec3 b0p = vec3(0.,1.5,-0.4 ); // box position\n    b0p = p-b0p;\n    // b0p.xz *=Rotate(0.1 + (u_time));\n    vec4 b0 = vec4(BoxColor.rgb,roundedBoxSDF(b0p,b0s, 0.045 + sin(u_time)/8. + 0.2)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.5,0.5,.175); //box size\n    vec3 b1p = vec3(0.,1.,1.); // box position\n    b1p = p-b1p;\n    // b1p.xz *=Rotate(u_time * .4);\n    vec4 b1 = vec4(vec3(vUv.x, vUv.y, 0.),roundedBoxSDF(b1p,b1s, 0.25)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(1.5,.5,0.75); //box size\n    vec3 b2p = vec3(0.,1.,1.); // box position\n    b2p = p-b2p;\n    // b2p.xz *=Rotate(u_time * .4);\n    vec4 b2 = vec4(vec3(vUv.x, vUv.y, 0.),boxSDF(b2p,b2s)); // Box Color, box distance \n\n    //boxframe\n    vec3 b3s = vec3(.5);\n    vec3 b3p = vec3(0, 1, 2);\n    vec4 b3 = vec4(BoxColor1.rgb, boxFrameSDF(b3p, b3s, 0.025));\n\n    // p.xz *=Rotate(u_time * .2);\n\n    //smile\n    vec3 b4s = vec3(.5);\n    vec3 b4p = vec3(0.,2.,-0.65 ); // box position\n    b4p = p-b4p;\n    b4p.zy *=Rotate(PI);\n    vec4 b4 = vec4(BoxColor1.rgb, cappedTorusSDF(b4p, vec2(.65 + abs(sin(u_time))/5., 0.5), 0.8, 0.075 ));\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    s0p=p-s0p;\n    vec4 s0 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s0p,1.5));\n\n     // Sphere.\n     vec3 s1p=vec3(0.,2.1,-0.45);\n     s1p=p-s1p;\n     vec4 s1 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s1p, 0.35));\n\n     // Sphere.\n     vec3 s2p=vec3(-0.5,2.5,-0.5);\n     s2p=p-s2p;\n    //  s2p.xz *=Rotate(u_time * .4);\n     vec4 s2 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s2p, 0.35));\n\n     // Sphere.\n     vec3 s3p=vec3(0.5,2.5,-0.5);\n     s3p=p-s3p;\n     vec4 s3 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s3p, 0.35));\n\n      // Sphere.\n      vec3 s4p=vec3(-0.65,2.5,-0.15);\n      s4p=p-s4p;\n     //  s2p.xz *=Rotate(u_time * .4);\n      vec4 s4 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s4p, 0.25));\n \n      // Sphere.\n      vec3 s5p=vec3(0.65,2.5,-0.15);\n      s5p=p-s5p;\n      vec4 s5 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s5p, 0.25));\n\n      // Sphere.\n      vec3 s6p=vec3(-0.15,2.,-0.75);\n      s6p=p-s6p;\n      vec4 s6 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s6p, 0.012525));\n\n      vec3 s7p=vec3(0.15,2.,-0.75);\n      s7p=p-s7p;\n      vec4 s7 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s7p, 0.012525));\n\n      // Sphere.\n      vec3 s8p=vec3(0.65,2.5,-0.35);\n      s8p=p-s8p;\n      vec4 s8 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s8p, 0.125));\n\n      vec3 s9p=vec3(-0.65,2.5,-0.35);\n      s9p=p-s9p;\n      vec4 s9 = vec4(vec3(vUv.x, vUv.y, 0.),sphereSDF(s9p, 0.125));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0), csg4 = vec4(0), csg5 = vec4(0), csg6 = vec4(0), csg7 = vec4(0), csg8 = vec4(0), csg9 = vec4(0), csg10 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, b4, 0.125);\n     \n    csg2 = smoothUnionSDF(csg1, s1, 0.125);\n\n    csg3 = smoothDifferenceSDF(csg2, s2, 0.5);\n\n    csg4 = smoothDifferenceSDF(csg3, s3, 0.5);\n\n    csg5 = smoothUnionSDF(csg4, s4, 0.15);\n\n    csg6 = smoothUnionSDF(csg5, s5, 0.15);\n\n    csg7 = smoothDifferenceSDF(csg6, s6, 0.15);\n\n    csg8 = smoothDifferenceSDF(csg7, s7, 0.15);\n     \n    csg9 = smoothDifferenceSDF(csg8, s8, 0.15);\n    csg10 = smoothDifferenceSDF(csg9, s9, 0.15);\n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = smoothUnionSDF(csg10, p0, 0.025);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        // rd.xz *= Rotate(.125);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    float displacement =  sin(2.0 * p.x + (u_time)/1.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/1.) * 0.37525;\n    s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 1.));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect \n\n    scene = smoothUnionSDF(s0, p0, 0.15);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,3.5,-5.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    float displacement =  sin(2.0 * p.x + (u_time)/1.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/1.) * 0.37525;\n    s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 1.));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5, 1.0,0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n\n    float b1 = boxSDF(p - vec3(-1.5,1.5,0), vec3(1));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    //shell\n    box = abs(box)-.1 + (sin(u_time * 0.5)/6.)-0.15;\n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(s0, p0, 0.125); // Intersect \n\n    scene = smoothIntersectSDF(box, plane, 0.15);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3 );\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(0.,1.75,0.75);\n    float displacement =  sin(2.0 * p.x + (u_time)/1.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/1.) * 0.37525;\n    s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 1.));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-1.5,1.5,0);\n    // b1p.yz *= Rotate((u_time));\n    float b1 = boxSDF(p - b1p, vec3(1));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    //shell\n    box = abs(box)-.1;\n    // box.xy *= Rotate(sin(u_time)); \n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0);\n     \n    csg0 = smoothIntersectSDF(box, plane, 0.125); // Intersect \n\n    scene = unionSDF(csg0, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(-1.5,1.5,0);\n    float displacement =  sin(2.0 * p.x + (u_time)/2.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/2.) * 0.37525;\n    // s0p=p-s0p + displacement;\n    \n    // s0p=p-s0p - displacement;\n    // s0p += displacement;\n    // s0p.z += sin(u_time);\n    float distortedSphere = distortSphere(p);\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 0.15));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-1.5,1.5,0);\n    // b1p.yz *= Rotate((u_time));\n    float b1 = boxSDF(p - b1p + displacement, vec3(1.25));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    //shell\n    box = abs(box)-.1;\n    // box.xy *= Rotate(sin(u_time)); \n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0);\n     \n    csg0 = smoothUnionSDF(box, p0, 0.125);\n    csg1 = smoothUnionSDF(csg0, s0, 0.125); \n\n    scene = smoothUnionSDF(box, p0, 0.25);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n        lightPos.zx *= Rotate(PI * 1.75);\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9 ,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(.0,1.5,0);\n    float displacement =  sin(3.0 * p.x + (u_time)/2.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/2.) * 0.137525;\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 0.05));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-.5,1.5,0);\n    b1p.xz *= Rotate((u_time));\n    \n    float s1 = sphereSDF(p - s0p + displacement, 1.75);\n    float s2 = sphereSDF(p - s0p + displacement, 0.5);\n    float b1 = boxSDF(p - b1p , vec3(1.25));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n    \n    vec4 sphere = vec4(ColorRed.rgb, s1);\n    vec4 sphere2 = vec4(ColorRed.rgb, s2);\n    //shell\n    box = abs(box)-.1;\n    // box.xy *= Rotate(sin(u_time)); \n    // box.a += displacement;\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0);\n     \n    csg0 = smoothUnionSDF(box, p0, 0.125);\n    csg1 = smoothDifferenceSDF(csg0, sphere, 0.125); \n    csg2 = smoothUnionSDF(csg1, sphere2, 0.125);\n    scene = smoothUnionSDF(csg2, p0, 0.25);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n        lightPos.zx *= Rotate(PI * 1.75);\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9 ,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSix(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 ColorRed = vec4(1,0,0,1);\n    const vec4 GroundColor = vec4(vec3(0.6), 1.);\n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        \n        return (length(p)-s);\n    }\n\n    float distortSphere(vec3 p)\n    {\n        float displacement = sin(5.0 * p.x) * sin(2.0 * p.y) * sin(5.0 * p.z) * 0.25;\n        float sphere_0 = sphereSDF(p, .25);\n\n        return sphere_0 + displacement;\n    }\n\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n\n    // Rounded Box - exact\n    float roundedBoxSDF( vec3 p, vec3 b, float r ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    //box frame\n    float boxFrameSDF( vec3 p, vec3 b, float e )\n    {\n           p = abs(p  )-b;\n      vec3 q = abs(p+e)-e;\n      return min(min(\n          length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n          length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n          length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n    }\n\n    float dot2( in vec3 v ) { return dot(v,v); }\n    float sdBoxFrame( vec3 p, vec3 b, float e){\n        p = abs(p  )-b;\n        vec3 q = abs(p+e)-e;\n        return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n                +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                max(p.y,max(q.z,q.x))),\n                max(p.z,max(q.x,q.y))));\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    //capped torus\n    float cappedTorusSDF(vec3 p, vec2 sc, float ra, float rb ){\n        p.x = abs(p.x);\n        float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n        return sqrt(dot(p,p) + ra*ra - 2.0 * ra * k ) - rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n    // Sphere.\n    vec3 s0p=vec3(.0,1.5,0);\n    float displacement =  sin(3.0 * p.x + (u_time)/2.) * sin(2.0 * p.y + (u_time)/2.) * sin(2.0 * p.z + (u_time)/2.) * 0.137525;\n    vec4 s0 = vec4(vec3(ColorRed),sphereSDF(s0p, 0.05));\n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n\n    float p1 = dot(p, normalize(vec3(1.5 + sin(u_time), 1.0 + sin(u_time),0.)));\n    vec4 plane = vec4(ColorRed.rgb, p1);\n    vec3 b1p = vec3(-0.5,1.5,0) ;\n    // b1p.xz *= Rotate((u_time));\n    float b1 = boxSDF(p - b1p * displacement , vec3(1.25 + sin(u_time * 0.25), .525 , 1.25 + cos(u_time * 0.25)));\n    vec4 box = vec4(ColorRed.rgb, b1 );\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0);\n     \n    csg0 = smoothUnionSDF(box, p0, 0.125);\n    scene = smoothUnionSDF(csg0, p0, 0.25);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(-2.,6.,-5.);// Light Position\n        lightPos.zx *= Rotate(PI * 1.75);\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(4.9 ,4.5,-4.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        rd.zx *= Rotate(PI*-.3);\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(1.0, 1.0, 1.0);\n        vec3 d = vec3(0.263,0.416 * u_time,0.557);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time *0.25);\n        uv2 -= 0.5;\n        vec2 uv3 = uv2;\n\n        \n        float d;\n        vec3 c;\n\n        for (float i = 0.; i < 4.; i++)\n        {\n            uv2 = fract(uv2 * 1.) - 0.5;\n            d = length(uv3) * exp(-length(uv2));\n            c = palette(length(uv2) + i * .4 + u_time * .4);\n            d = sin(d * 20. + u_time) / 8.;\n            d = abs(d);\n            d = pow(0.01/d, 1.2);\n            color += c * d;\n        }\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        // uv2 = Rot(uv2, u_time * 0.25);\n        uv2 -= 0.5;\n        vec2 uv3 = uv2;\n\n        \n        float d;\n        vec3 c;\n\n        for (float i = 0.; i < 4.; i++)\n        {\n            uv2 = fract(uv2 * (1.5 + sin(u_time * 0.25)/15.)) - 0.5;\n            d = length(uv3) * (-length(uv2));\n            c = palette(length(uv2) + i * .4 + u_time * .4);\n            d = sin(d * 15. + sin(u_time)) / 5.;\n            d = abs(d);\n            d = pow(0.01/d, 1.);\n            color += c * d;\n        }\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 = Rot(uv2, u_time * 0.25);\n        uv2 -= 0.5;\n        vec2 uv3 = uv2;\n\n        \n        float d;\n        float d2;\n        vec3 c;\n\n        for (float i = 0.; i < 4.; i++)\n        {\n            uv2 = fract(uv2 * (1.5 + sin(u_time * 0.25)/15.)) - 0.5;\n            d = length(uv3) * (length(uv2));\n            c = palette(length(uv2) + i * .4 + u_time * .4);\n            d2 = d;\n            d = sin(d * 5. + (u_time * 0.5)) / 5.;\n            d2 = tan(d * 5. + (u_time * 0.5)) / 5.;\n            d = abs(d);\n            d2 = abs(d2);\n            d = pow(0.005/d, 1.);\n            d2 = pow(0.002/d2, 1.);\n            color += c * d + d2;\n        }\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _I=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float variation(vec2 v1, vec2 v2, float strength, float speed) {\n        return sin(\n            dot(normalize(v1), normalize(v2)) * strength + u_time * speed\n        ) / 100.0;\n    }\n    \n    vec3 paintCircle (vec2 uv, vec2 center, float rad, float width) {\n        \n        vec2 diff = center-uv;\n        float len = length(diff);\n    \n        len += variation(diff, vec2(0.0, 1.0), 5.0, 2.0);\n        len -= variation(diff, vec2(1.0, 0.0), 5.0, 2.0);\n        \n        float circle = smoothstep(rad-width, rad, len) - smoothstep(rad, rad+width, len);\n\n        float segment = sdSegment(uv, vec2(0.), vec2(0.5));\n\n        return vec3(circle);\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        // uv2 = Rot(uv2, u_time * 0.25);\n        float m = 0.;\n        vec3 d;\n        uv2 -= 0.5;\n        float t = u_time * 0.05;\n        for(float i =0.; i <1.; i+= 1./2.)\n        {\n            float z = fract(i + t);//reuse layers\n            float size = mix(.5, .05, z);\n            float fade = S(0.0, 0.5, z) * S(.0, 1., z) ;\n            \n            \n            vec3 cir = paintCircle(uv2 , vec2(0.0) ,  fade  + 0.15 * 1.25 , 0.01 );\n            vec3 cir2 = paintCircle(uv2, vec2(0.0) ,  fade + 0.15 * 1.25, 0.04 );\n\n            vec3 cir3 = paintCircle(uv2, vec2(0.0) ,  fade + 0.1 * 1.25, 0.01);\n            vec3 cir4 = paintCircle(uv2, vec2(0.0) ,  fade + 0.1 * 1.25, 0.04);\n\n            vec3 cir5 = paintCircle(uv2, vec2(0.0) ,  fade + 0.05 * 1.25, 0.01);\n            vec3 cir6 = paintCircle(uv2, vec2(0.0) ,  fade + 0.05 * 1.25, 0.04 );\n\n            vec3 cir7 = paintCircle(uv2, vec2(0.0) ,  fade - 0.0 * 1.25, 0.01);\n            vec3 cir8 = paintCircle(uv2, vec2(0.0) ,  fade - 0.0 * 1.25, 0.04);\n\n            vec3 cir9 = paintCircle(uv2, vec2(0.0) ,  fade - 0.05 * 1.25, 0.01);\n            vec3 cir10 = paintCircle(uv2, vec2(0.0) ,  fade - 0.05 * 1.25, 0.04);\n\n            vec3 cir11 = paintCircle(uv2, vec2(0.0) , fade - 0.1 * 1.25, 0.01);\n            vec3 cir12 = paintCircle(uv2, vec2(0.0) , fade - 0.1 * 1.25, 0.04);\n\n            vec3 cir13 = paintCircle(uv2, vec2(0.0) , fade - 0.15  * 1.25, 0.01 );\n            vec3 cir14 = paintCircle(uv2, vec2(0.0) ,  fade - 0.15 * 1.25, 0.04);\n\n            cir += cir2;\n            color += cir2 * vec3(0.9, 0., 0.);\n            // m += Layer(uv2 * size + i * 20.) * fade;\n\n            cir3 += cir4;\n            color += cir4 * vec3(0.9, 0.5, 0.0);\n\n            cir5 += cir6;\n            color += cir6 * vec3(1., 1., 0.0);\n\n            cir7 += cir8;\n            color += cir8 * vec3(0., 1., 0.0);\n\n            cir9 += cir10;\n            color += cir10 * vec3(0., 0., 1.0);\n\n            cir11 += cir12;\n            color += cir12 * vec3(0.29, 0., 0.51);\n\n            cir13 += cir14;\n            color += cir14 * vec3(0.93, 0.51, 0.93);\n        }\n        \n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_I,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n        uv2.y -= 0.065;\n\n        float one = 1. - sdBox(vec2(uv2.x, uv2.y + (1./7.)), vec2(2.5, 1./7.));\n        float two = 1. - sdBox(vec2(uv2.x, uv2.y + (2./7.)), vec2(2.5, 1./7.));\n        float three = 1. - sdBox(vec2(uv2.x, uv2.y + 3./7.), vec2(2.5, 1./7.));\n        float four = 1. - sdBox(vec2(uv2.x, uv2.y + 4./7.), vec2(2.5, 1./7.));\n        float five = 1. - sdBox(vec2(uv2.x, uv2.y + 5./7.), vec2(2.5, 1./7.));\n        float six = 1. - sdBox(vec2(uv2.x, uv2.y + 6./7.), vec2(2.5, 1./7.));\n        float seven = 1. - sdBox(vec2(uv2.x, uv2.y + 7./7.), vec2(2.5, 1./7.));\n\n        color += one * vec3(0.9, 0., 0.);\n        color += two * vec3(0.9, 0.5, 0.0);\n        color += three * vec3(1., 1., 0.0);\n        color += four * vec3(0., 1., 0.0);\n        color += five * vec3(0., 0., 1.0);\n        color += six * vec3(0.29, 0., 0.51);\n        color += seven * vec3(0.93, 0.51, 0.93);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var MI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, - uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (TWO_PI * 2.0) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), 4.0);\n    \n    return radialUv;\n    }\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        vec2 uv3 = uv2;\n        vec2 uv4 = vUv;\n        uv4 -= 0.5;\n        uv4 = getRadialUv(uv4);\n        uv2 -= .5;\n        uv3 = Rot(uv3, PI * 2.);\n        uv3 -= 0.5;\n        \n\n        float an = -u_time * 0.15;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2);\n        float a = atan(uv2.y, uv2.x);\n        uv2 = vec2(0.3/r1 + 0.5 * u_time , a);\n        float r2 = length(uv3);\n        float a2 = atan(uv3.y, uv3.x);\n        uv3 = vec2(0.3/r2 + 0.5 * u_time, a2);\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv4 + 0.00*u_time);\n        q.y = fbm( uv4 + vec2(1.0));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv4 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv4 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r);\n        float f2 = fbm(uv3+r);\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.101961,0.619608,0.666667),\n                    vec3(0.666667,0.666667,0.498039),\n                    clamp((f*f)*4.0,0.0,1.0));\n\n        c = mix(color,\n                    vec3(0,0,0.164706),\n                    clamp(length(q),0.0,1.0));\n\n        c = mix(color,\n                    vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n        c *= f*f*f+.6*f *f + .5 *f * c ;\n        // c *= f2*f2*f2+.6*f2 *f2 + .5 *f2 * c ;\n\n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function jI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:MI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var kI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    // radialUv.x = angle / (PI) + 0.5;\n    // radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) + 0.0005 * u_time, angle );\n    \n    return radialUv;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n        \n        \n\n        float an = -u_time * 0.15;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2) ;\n        r1 = abs(r1);\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a);\n        uv2 = vec2(0.3/r1 + .95 * u_time , a);\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.00*u_time);\n        q.y = fbm( uv2 + vec2(1.0));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.101961,0.619608,0.666667),\n                    vec3(0.666667,0.666667,0.498039),\n                    clamp((f*f)*4.0,0.0,1.0));\n\n        c = mix(color,\n                    vec3(0,0,0.164706),\n                    clamp(length(q),0.0,1.0));\n\n        c = mix(color,\n                    vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n        c *= f*f*f+.6*f *f + .25 *f * c* f * c ;\n\n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function TI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:kI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var CI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (PI) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) * u_time, angle );\n    \n    return radialUv;\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.15;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 0.5) ;\n        r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.3/r1 + .95 - u_time * 1.25 , a);\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + vec2(50.01));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.619608,0.666667),\n                    vec3(0.666667,0.666667,0.498039),\n                    clamp((f*f)*5.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.9,0,0.164706),\n                    clamp(length(q),0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.966667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n        c *= f*f*f+.6*f *f + .25 *f * c* f * f ;\n\n        float cir = sdCircle(vUv, 0.0525);\n        \n\n        color += c * 2. * 2. + c;\n        color *=  c - cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function RI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:CI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var FI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (PI) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) * u_time, angle );\n    \n    return radialUv;\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.15;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 0.5) ;\n        r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.3/r1 + .95 + u_time * 2.25 , a);\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + vec2(50.01));\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.9666667,0.9666667,0.998039),\n                    clamp((f*f)*1.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.099,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,1),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color,\n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        c *= f ;\n\n        float cir = sdCircle(vUv, 0.125 * sin(1. /u_time));\n        \n\n        color += c * 2. * 2. + c;\n        color *=  c - cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function PI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:FI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var DI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numSeven(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 getRadialUv(vec2 uv)\n    {\n    float angle = atan(uv.x, uv.y);\n    angle = abs(angle);\n    \n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (PI) + 0.5;\n    radialUv.y = 1.0 - pow(1.0 - length(uv), .2);\n    radialUv = vec2(0.3/length(uv) * u_time, angle );\n    \n    return radialUv;\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1 + sin(u_time), a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color,\n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.125 ) * 0.65;\n        \n\n        color += c * 2. ;\n        color *=  c - cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function EI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:DI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var zI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1 + sin(u_time), a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color,\n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.125 );\n        \n        vec3 s = voronoi(uv2);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        color.rgb+= smoothstep(0.02 * 2., 0.031 * 2., s.x);\n        //color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        //color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function LI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:zI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var AI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1 + sin(u_time), a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.125 );\n        \n        vec3 s = voronoi(uv2 * 0.25);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        color.rgb+= smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f);\n        //color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        //color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function II(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:AI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var OI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1, a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        float cir = sdCircle(vUv, 0.0125 );\n        \n        vec3 s = voronoi(uv2 * 0.25);\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        color.rgb += smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f + s2.x);\n        color.g+= 1. - smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        color.b+= 1. - smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function BI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:OI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var NI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n\n    vec2 tile(vec2 uv, float zoom, float speed){\n        uv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > 0.5)\n        {\n            if(fract(uv.y * 0.5) > 0.5){\n                uv.x += fract(t) * 2.;\n            } else {\n                uv.x -= fract(t) * 2.;\n            }\n        } else {\n            if(fract(uv.x * 0.5) > 0.5)\n            {\n                uv.y += fract(t) * 2.;\n            } else {\n                uv.y -= fract(t) * 2.;\n            }\n        }\n        return fract(uv);\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1, a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        vec2 pattern = tile(uv2, 1., 0.5);\n        float x = numZero(pattern);\n        color.g += x;\n\n        float cir = sdCircle(vUv, 0.0125 );\n        \n        vec3 s = voronoi(uv2 );\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        // color.rgb += 1. - smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f + s.x);\n        // color.g+= smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        // color.b+= smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function GI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:NI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var VI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 5\n\n    \n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.65;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    vec2 random2( vec2 p ) {\n        return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n    }\n\n    vec3 voronoi(vec2 x)\n    {\n        vec2 n=floor(x);\n        vec2 f=fract(x);\n        \n        vec2 mg,mr;\n        float md=1.5;\n        \n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                float d=dot(r,r);\n                \n                if(d<md){\n                    md=d;\n                    mr=r;\n                    mg=g;\n                }\n                \n            }\n        }\n        md=1.;\n        for(int i=-1;i<=1;i++){\n            for(int j=-1;j<=1;j++){\n                vec2 g=vec2(float(j),float(i));\n                vec2 o=random2(n+g);\n                o=.5+.5*sin((u_time * 0.5)+TWO_PI*o);\n                \n                vec2 r=g+o-f;\n                if(dot(mr-r,mr-r)>.005){\n                    md=min(md,dot(.5*(mr+r),normalize(r-mr)));\n                    \n                }\n                \n            }\n        }\n        return vec3(md, mr);\n    }\n\n    vec2 position(float z) {\n        return vec2(\n            0.0 + sin(z * 0.1) * 1.0 + sin(cos(z * 0.031) * 4.0) * 1.0 + sin(sin(z * 0.0091) * 3.0) * 3.0,\n            0.0 + cos(z * 0.1) * 1.0 + cos(cos(z * 0.031) * 4.0) * 1.0 + cos(sin(z * 0.0091) * 3.0) * 3.0\n        ) * 1.0;\n    }\n\n    vec2 tile(vec2 uv, float zoom, float speed){\n        uv *= zoom;\n        float t = u_time * speed;\n        if(fract(t) > 0.5)\n        {\n            if(fract(uv.y * 0.5) > 0.5){\n                uv.x += fract(t) * 2.;\n            } else {\n                uv.x -= fract(t) * 2.;\n            }\n        } else {\n            if(fract(uv.x * 0.5) > 0.5)\n            {\n                uv.y += fract(t) * 2.;\n            } else {\n                uv.y -= fract(t) * 2.;\n            }\n        }\n        return fract(uv);\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= .5;\n        // uv2 = getRadialUv(uv2 );\n\n        float an = -u_time * 0.5;\n        uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(0.53/r1 + .95 + u_time * 1.25 + r1, a );\n\n        // uv2 = vec2(position(uv2.x) * position(uv2.y));\n\n        vec2 q = vec2(0.);\n        q.x = fbm( uv2 + 0.2*u_time);\n        q.y = fbm( uv2 + u_time * 0.4);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,9.2)+ 0.15*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(8.3,2.8)+ 0.126*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * 2.));\n\n        vec3 c = vec3(0.);\n        c = mix(vec3(0.91961,0.919608,0.966667),\n                    vec3(0.06667,0.666667,0.998039),\n                    clamp((f*f)*2.0,0.0,1.0));\n\n        c *= mix(color,\n                    vec3(0.299,0.50,0.964706),\n                    clamp(length(q),0.,1.0));\n\n        c *= mix(color,\n                    vec3(0.996667,0.9,0.),\n                clamp(length(r.y),0.0,1.0));\n\n        c += mix(color, \n            vec3(0.95,0.95,1.),\n        clamp(length(r.x),0.0, .25));\n\n        // c *= f * f * 2.;\n\n        vec2 pattern = tile(uv2, 1., 0.5);\n        float x = numTwo(pattern);\n        color.r += x;\n\n        \n        float cir = sdCircle(vUv, 0.0125 );\n        vec3 s = voronoi(uv2 );\n        vec3 s2 = voronoi(vec2(uv2.x  + sin(u_time)/8., uv2.y  + sin(u_time)/8.));\n        vec3 s3 = voronoi(vec2(uv2.x  + sin(u_time)/16., uv2.y  + sin(u_time)/16.));\n        \n        // color.rgb += 1. - smoothstep(0.02 * 2., 0.031 * 2., s.x * f * f + s.x);\n        // color.g+= smoothstep(0.0075 * 2., (0.021-0.0025) * 2., s2.x);\n        // color.b+= smoothstep(0.005 * 2., (0.021 -0.005) * 2., s3.x);\n        // color += c * 2. ;\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function qI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:VI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var HI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv -= 0.5;\n\n        float x = sdSpiral(newUv, 0.525, 2.525 + sin(u_time));\n        color += x;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function WI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:HI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var XI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv *= 0.25 + 0.75;\n        newUv = Rot(newUv, u_time * 4.5 + sin(u_time));\n        newUv -= 0.5;\n\n        float x;\n        for(float i=0.; i<2.; i++){\n            newUv*= 0.165;\n\n            x = sdSpiral(newUv, 0.82, 3.525 + sin(u_time + i/2. ));\n            color += x;\n\n            vec3 c = palette(x * i);\n            color -= c.xyz;\n        }\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function YI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:XI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var ZI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv *= 0.25 + 0.75;\n        newUv = Rot(newUv, u_time * 4.5 + sin(u_time));\n        newUv -= 0.5;\n\n        float x;\n        for(float i=0.; i<6.; i++){\n            newUv*= 0.165;\n\n            x = sdSpiral(vec2(newUv.x * 55.5 * i, newUv.y * 55.5 * i), i, 3.525 + sin(u_time + i/2. ));\n            color += x;\n\n            vec3 c = palette(x * i);\n            color -= c.xyz;\n        }\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function JI(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:ZI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var QI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        // newUv = Rot(newUv, u_time * 4.5 + sin(u_time));\n        // newUv -= 0.5;\n\n        float line = 0.;\n        // float x = plot(newUv, line, 0.02 );\n        float x = circle(newUv, 1.025);\n        float x1 = circle(vec2(newUv.x + sin(u_time)/4., newUv.y + cos(u_time)/4.), 0.275);\n        float x2 = circle(vec2(newUv.x + sin(u_time)/8., newUv.y + cos(u_time)/8.), 0.075);\n        float x3 = circle(vec2(newUv.x + sin(u_time)/16. , newUv.y + cos(u_time)/16.) , 0.022);\n        float x4 = circle(vec2(newUv.x + sin(u_time)/32. , newUv.y + cos(u_time)/32.) , 0.006);\n        float x5 = circle(vec2(newUv.x + sin(u_time)/64. , newUv.y + cos(u_time)/64.) , 0.002);\n\n        color.rgb += x;\n        color.rgb -= x1;\n        color.rgb += x2;\n        color.rgb -= x3;\n        color.rgb += x4;\n        color.rgb -= x5;\n        // color.rb -= x2;\n\n        \n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function $I(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:QI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var KI=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numEight(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float flower(vec2 vUv, float n, float zoom)\n    {\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * zoom;\n        float a = atan(pos.y, pos.x);\n        float f = cos(a * n );\n        return smoothstep(f, f + 0.25, r );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        vec2 newUv2 = newUv;\n        vec2 newUv3 = newUv;\n        newUv = Rot(newUv, u_time * 1.5 + sin(u_time));\n        newUv2 = Rot(newUv2, u_time * 1.5 + cos(u_time));\n        newUv3 = Rot(newUv2, u_time * 1. + cos(u_time));\n        // newUv -= 0.5;\n        // newUv2.x -= 0.2;\n\n        float line = 0.;\n        // float x = plot(newUv, line, 0.02 );\n        float x = flower(newUv, 5., 2.);\n        float x2 = flower(newUv2, 5., 2.);\n        float x3 = flower(newUv3, 5., 2.);\n        color += 1. - palette(x * 0.5);\n        color += 1. - palette(x2 * 0.25);\n        color += 1. - palette(x3 * 0.15);\n\n        // color.rb -= x2;\n\n        \n\n        float numLabel = label(vUv);\n        color *= 1. - numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function eO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:KI,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var nO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 3.28318*(c*t+d) * abs(sin(u_time/8. )- 0.25));\n    }\n\n    float flower(vec2 vUv, float n, float zoom)\n    {\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * zoom;\n        float a = atan(pos.y, pos.x);\n        float f = cos(a * n );\n        return smoothstep(f, f + 0.25, r );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        vec2 newUv2 = newUv;\n        vec2 newUv3 = newUv;\n        vec2 newUv4 = newUv;\n        vec2 newUv5 = newUv;\n        vec2 newUv6 = newUv;\n        vec2 newUv7 = newUv;\n        vec2 newUv8 = newUv;\n\n        newUv = Rot(newUv, u_time * 2.25 + cos(u_time));\n        newUv2 = Rot(newUv2, u_time * 2.0 + cos(u_time));\n        newUv3 = Rot(newUv3, u_time * 1.75 + cos(u_time));\n        newUv4 = Rot(newUv4, u_time * 1.5 + cos(u_time));\n        newUv5 = Rot(newUv5, u_time * 1.25 + cos(u_time));\n        newUv6 = Rot(newUv6, u_time * 1. + cos(u_time));\n        newUv7 = Rot(newUv7, u_time * 0.75 + cos(u_time));\n        newUv8 = Rot(newUv8, u_time * 0.5 + cos(u_time));\n        // newUv -= 0.5;\n        // newUv2.x -= 0.2;\n\n        float x = sdPolygonOutline(newUv, 6, 0.8); \n        float x2 = sdPolygonOutline(newUv2, 6, 0.7);\n        float x3 = sdPolygonOutline(newUv3, 6, 0.6); \n        float x4 = sdPolygonOutline(newUv4, 6, 0.5); \n        float x5 = sdPolygonOutline(newUv5, 6, 0.4); \n        float x6 = sdPolygonOutline(newUv6, 6, 0.3);\n        float x7 = sdPolygonOutline(newUv7, 6, 0.2); \n        float x8 = sdPolygonOutline(newUv8, 6, 0.1);  \n        \n        color += 1. - palette(x * 0.59);\n        color += 1. - palette(x2 * 0.58);\n        color += 1. - palette(x3 * 0.57);\n        color += 1. - palette(x4 * 0.56);\n        color += 1. - palette(x5 * 0.55);\n        color += 1. - palette(x6 * 0.54);\n        color += 1. - palette(x7 * 0.53);\n        color += 1. - palette(x8 * 0.52);\n\n        color *= 2.;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function tO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:nO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var rO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 3.28318*(c*t+d) * abs(sin(u_time/8. )- 0.25));\n    }\n\n    float flower(vec2 vUv, float n, float zoom)\n    {\n        vec2 pos = vec2(0.5) - vUv;\n        float r = length(pos) * zoom;\n        float a = atan(pos.y, pos.x);\n        float f = cos(a * n );\n        return smoothstep(f, f + 0.25, r );\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv *= 0.25 + 0.75;\n        vec2 newUv2 = newUv;\n        vec2 newUv3 = newUv;\n        vec2 newUv4 = newUv;\n        vec2 newUv5 = newUv;\n        vec2 newUv6 = newUv;\n        vec2 newUv7 = newUv;\n        vec2 newUv8 = newUv;\n\n        newUv = Rot(newUv,   u_time/4. * 2.25 + cos(u_time));\n        newUv2 = Rot(newUv2, u_time/4. * 2.00 + cos(u_time));\n        newUv3 = Rot(newUv3, u_time/4. * 1.75 + cos(u_time));\n        newUv4 = Rot(newUv4, u_time/4. * 1.50 + cos(u_time));\n        newUv5 = Rot(newUv5, u_time/4. * 1.25 + cos(u_time));\n        newUv6 = Rot(newUv6, u_time/4. * 1.00 + cos(u_time));\n        newUv7 = Rot(newUv7, u_time/4. * 0.75 + cos(u_time));\n        newUv8 = Rot(newUv8, u_time/4. * 0.50 + cos(u_time));\n        // newUv -= 0.5;\n        // newUv2.x -= 0.2;\n\n        float x = sdPolygonOutline(newUv,   4, 0.8); \n        float x2 = sdPolygonOutline(newUv2, 4, 0.7);\n        float x3 = sdPolygonOutline(newUv3, 4, 0.6); \n        float x4 = sdPolygonOutline(newUv4, 4, 0.5); \n        float x5 = sdPolygonOutline(newUv5, 4, 0.4); \n        float x6 = sdPolygonOutline(newUv6, 4, 0.3);\n        float x7 = sdPolygonOutline(newUv7, 4, 0.2); \n        float x8 = sdPolygonOutline(newUv8, 4, 0.1);  \n        \n        color += 1. - palette(x  * 0.59 * 2.2 * abs(sin(u_time) + 0.1));\n        color += 1. - palette(x2 * 0.58 * 2.2 * abs(cos(u_time) + 0.2));\n        color += 1. - palette(x3 * 0.57 * 2.2 * abs(sin(u_time) + 0.3));\n        color += 1. - palette(x4 * 0.56 * 2.2 * abs(cos(u_time) + 0.4));\n        color += 1. - palette(x5 * 0.55 * 2.2 * abs(sin(u_time) + 0.5));\n        color += 1. - palette(x6 * 0.54 * 2.2 * abs(cos(u_time) + 0.6));\n        color += 1. - palette(x7 * 0.53 * 2.2 * abs(sin(u_time) + 0.7));\n        color += 1. - palette(x8 * 0.52 * 2.2 * abs(cos(u_time) + 0.8));\n\n        // color *= 2.;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function aO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:rO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var iO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numTwo(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://iquilezles.org/articles/palettes/\n    vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(.9, .5, .0);\n        vec3 d = vec3(0.03,0.06,0.);\n\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float randFloat(float x){\n        return fract(sin(x) * 4748393.7585);\n    }\n    \n    float randVec2(vec2 vUv){\n        return fract(sin(dot(vUv.yx, vec2(48.48929, 76.83929))) * 727827.3738);\n    }\n    \n    vec3 matrix(vec2 vUv){\n        float rows = 15.0;\n        vec2 a = floor(vUv * rows);\n        a += vec2(1.0, floor(u_time * 5. * randFloat(a.x)));\n        vec2 b = fract(vUv * rows);\n        vec2 newUv = 0.5 - b;\n        float str = randVec2(a);\n        float one = sdOne(b);\n        float zero = sdZero(b);\n        float two = sdTwo(b);\n        float three = sdThree(b);\n        float four = sdFour(b);\n        float five = sdFive(b);\n        float six = sdSix(b);\n        float seven = sdSeven(b);\n        float eight = sdEight(b);\n        float nine = sdNine(b);\n        float shape;\n        if(str > .9 )\n        {\n            shape = smoothstep(0.01, 0.011, zero);\n        } else if(str > .8){\n            shape = smoothstep(0.01, 0.011, one);\n        } else if(str > .7){\n            shape = smoothstep(0.01, 0.011, two);\n        } else if(str > .6){\n            shape = smoothstep(0.01, 0.011, three);\n        } else if(str > .5){\n            shape = smoothstep(0.01, 0.011, four);\n        } else if(str > .4){\n            shape = smoothstep(0.01, 0.011, five);\n        } else if(str > .3){\n            shape = smoothstep(0.01, 0.011, six);\n        } else if(str > .2){\n            shape = smoothstep(0.01, 0.011, seven);\n        } else if(str > .1){\n            shape = smoothstep(0.01, 0.011, eight);\n        } else {\n            shape = smoothstep(0.01, 0.011, nine);\n        }\n        \n        return vec3(shape * str );\n    }\n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        newUv -= 0.5;\n    \n        float an = -u_time * 0.5;\n        // newUv = mat2(cos(an),-sin(an),sin(an),cos(an)) * newUv;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(newUv) ;\n        // r1 = abs(r1 );\n        float a = -atan(newUv.x, newUv.y) * 0.425;\n        // a = abs(a * 0.85);\n        newUv = vec2(0.5/r1 + .95 + u_time * 0.25 + r1, a );\n\n        vec3 mat = matrix(vec2(newUv.y, newUv.x));\n\n        color.g += mat.g;\n\n        float cir = sdCircle(vUv, 0.125 );\n        color *=  1.- cir;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function oO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:iO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var lO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numThree(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    float cloudscale = 1.1;\n    float speed = 0.03;\n    float clouddark = 0.5;\n    float cloudlight = 0.3;\n    float cloudcover = 0.2;\n    float cloudalpha = 8.0;\n    float skytint = 0.5;\n    vec3 skycolour1 = vec3(0.2, 0.4, 0.6);\n    vec3 skycolour2 = vec3(1.4, 0.7, 1.0);\n\n    const mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\n    vec2 hash( vec2 p ) {\n        p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n    \n    float noise( in vec2 p ) {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n        vec2 i = floor(p + (p.x+p.y)*K1);\t\n        vec2 a = p - i + (i.x+i.y)*K2;\n        vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n        vec2 b = a - o + K2;\n        vec2 c = a - 1.0 + 2.0*K2;\n        vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n        vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n        return dot(n, vec3(70.0));\t\n    }\n    \n    float fbm(vec2 n) {\n        float total = 0.0, amplitude = 0.1;\n        for (int i = 0; i < 7; i++) {\n            total += noise(n) * amplitude;\n            n = m * n;\n            amplitude *= 0.4;\n        }\n        return total;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 newUv = vUv;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv -= 0.5;\n        // newUv *= 20.5;\n        float t = u_time * speed;\n        float q = fbm(newUv * cloudscale * 0.5);\n\n        float r = 0.;\n        newUv *= cloudscale;\n        newUv -= q - t;\n        float weight = 0.8;\n        for(int i = 0; i < 8; i++){\n            r += abs(weight*noise(newUv));\n            newUv = m*newUv + t;\n            weight *= 0.7;\n        }\n        float f = 0.0;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv *= cloudscale;\n        newUv -= q - t;\n        weight = 0.7;\n        for (int i=0; i<8; i++){\n            f += weight*noise( newUv );\n            newUv = m*newUv + t;\n            weight *= 0.6;\n    }\n        f *= r + f;\n        float c = 0.0;\n        t = u_time * speed * 2.0;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv *= cloudscale*2.0;\n        newUv -= q - t;\n        weight = 0.4;\n        for (int i=0; i<7; i++){\n            c += weight*noise( newUv );\n            newUv = m*newUv + t;\n            weight *= 0.6;\n        }\n        float c1 = 0.0;\n        t = u_time * speed * 3.0;\n        // newUv = newUv*vec2(u_resolution.x/u_resolution.y,1.0);\n        newUv *= cloudscale*3.0;\n        newUv -= q - t;\n        weight = 0.4;\n        for (int i=0; i<7; i++){\n            c1 += abs(weight*noise( newUv ));\n            newUv = m*newUv + t;\n            weight *= 0.6;\n        }\n\n        c += c1;\n        \n        vec3 skycolour = mix(skycolour2, skycolour1, vUv.x);\n        vec3 cloudcolour = vec3(1.1, 1.1, 0.9) * clamp((clouddark + cloudlight*c), 0.0, 1.0);\n    \n        f = cloudcover + cloudalpha*f*r;\n\n        vec3 result = mix(skycolour, clamp(skytint * skycolour + cloudcolour, 0.0, 1.0), clamp(f + c, 0.0, 1.0));\n    \n        color += result;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function sO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:lO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var cO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numFour(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        uv2 -= 0.52;\n        uv2 *= 2.9;\n        uv2.x += u_time*0.1;\n        \n        vec2 q = vec2(0.);\n        q.y = fbm( uv2 + 0.2*u_time);\n        q.x = fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r ));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f),0.0,1.0));\n        color += c;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function uO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:cO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var vO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numFive(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        uv2 -= 0.52;\n        uv2 *= 3.9;\n        uv2.x += u_time*0.1;\n        uv2.y += u_time * 0.1;\n        \n        vec2 q = vec2(0.);\n        q.y = fbm( uv2 + 0.2*u_time);\n        q.x = fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function fO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:vO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var pO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numSix(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(1.83/r1 + .95 + u_time * 0.025 + r1, a );\n        uv2 -= 0.52;\n        uv2 *= 2.9;\n        uv2.x -= u_time*0.1;\n        uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        uv3 *= 1.2;\n        uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        vec2 cp0 = vec2(-0.5, 1.95);\n        vec2 cp1 = vec2(0.75, 0.5);\n        vec2 cp3 = vec2(0.5, 0.5);\n        float l = cubicBezierNearlyThroughTwoPoints(uv3.x*0.25, cp0, cp1);\n        float l2 = cubicBezierNearlyThroughTwoPoints(uv4.y*0.25, cp0, cp3);\n        float px = 1. / vUv.y;\n\n        float t1 = uv3.x*7.-2.*u_time+uv3.y*3.;\n        uv3.y += sin(t1) * 0.05;\n        float x = .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        float y = fbm(uv4 + r2 * fbm(uv4 + r2));\n        // color *= .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        \n        color *= vec3( smoothstep(l, l+0.025, vUv.y+0.6));\n        color.g += (1. - smoothstep(l, l+0.025, vUv.y+0.6))* 0.72 * x* y;\n        \n        // color -= vec3(1. - smoothstep(l2, l2, vUv.y+0.5));\n\n        \n        \n        // color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function mO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:pO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var dO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numSeven(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(1.83/r1 + .95 + u_time * 0.025 + r1, a );\n        uv2 -= 0.52;\n        uv2 *= 2.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        uv3 *= 1.2;\n        uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        vec2 cp0 = vec2(-0.5, 1.95);\n        vec2 cp1 = vec2(0.75, 0.5);\n        vec2 cp3 = vec2(0.5, 0.5);\n        float l = cubicBezierNearlyThroughTwoPoints(uv3.x*0.25, cp0, cp1);\n        float l2 = cubicBezierNearlyThroughTwoPoints(uv4.y*0.25, cp0, cp3);\n        float px = 1. / vUv.y;\n\n        float t1 = uv3.x*7.-2.*u_time+uv3.y*3.;\n        uv3.y += sin(t1) * 0.05;\n        float x = .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        float y = fbm(uv4 + r2 * fbm(uv4 + r2));\n        color *= .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        \n        color *= vec3( smoothstep(l, l+0.025, vUv.y+0.6));\n        color.g += (1. - smoothstep(l, l+0.025, vUv.y+0.6))* 0.72 * x* y;\n        \n        // color -= vec3(1. - smoothstep(l2, l2, vUv.y+0.5));\n\n        \n        \n        // color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function hO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:dO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var gO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n    uniform sampler2D u_texture;\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numEight(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n        \n        // vec2 pic = texture2D(u_texture);\n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * .75) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 2.5);\n        uv2 = vec2(1.83/r1 + .45 + -u_time * 0.125 + r1, a );\n        uv2 -= 0.52;\n        uv2 *= 1.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        uv3 *= 1.2;\n        uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * 0.85),0.0,1.0));\n        color += c;\n\n        vec2 cp0 = vec2(-0.65, 1.95);\n        vec2 cp1 = vec2(0.85, 0.4);\n        vec2 cp3 = vec2(0.5, 0.5);\n        float l = cubicBezierNearlyThroughTwoPoints(uv3.x*0.25, cp0, cp1);\n        float l2 = cubicBezierNearlyThroughTwoPoints(uv4.y*0.25, cp0, cp3);\n        float px = 1. / vUv.y;\n\n        float t1 = uv3.x*7.-2.*u_time+uv3.y*3.;\n        uv3.y += sin(t1) * 0.05;\n        float x = .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        float y = fbm(uv4 + r2 * fbm(uv4 + r2));\n        // color *= .7 + cos(t1) * .3 + noise(uv4 + u_time) * 0.5;\n        \n        color *= vec3( smoothstep(l, l+0.025, vUv.y+0.6));\n        // color.g += (1. - smoothstep(l, l+0.025, vUv.y+0.6))* 0.72 * x* y;\n        \n        // color -= vec3(1. - smoothstep(l2, l2, vUv.y+0.5));\n\n        \n        // color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        vec4 col = texture2D(u_texture, vec2(vUv.x, vUv.y + 0.305));\n        \n        col.xyz += color;\n        gl_FragColor = vec4(color, 1.);\n        // gl_FragColor = texture2D(u_texture, vUv);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function xO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:gO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var yO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n   \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numFive(vec2(p.x + 0.35, p.y));\n        float center = numNine(vec2(p.x -0.03, p.y));\n        float right = numNine(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.0, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n        uv2 -= 0.475;\n        // vec2 pic = texture2D(u_texture);\n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 2.75 +0.6) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 1.5);\n        uv2 = vec2(.000083/r1 + .45 + -u_time * 0.925 + r1, a );\n        // uv2.x -= 0.52;\n        // uv2 *= 1.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        // uv3 *= 1.2;\n        // uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1, skycolour2, clamp((f*f*f + f * f * 0.8),0.0,1.0));\n\n        \n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n        // gl_FragColor = texture2D(u_texture, vUv);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function bO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:yO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var _O=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n\n    #define S(a, b, t) smoothstep(a, b, t)\n   \n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numSix(vec2(p.x + 0.35, p.y));\n        float center = numZero(vec2(p.x -0.03, p.y));\n        float right = numZero(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    vec3 skycolour1 = vec3(0.5, 0.3, 0.8);\n    vec3 skycolour2 = vec3(0.8, 0.9, 1.0);\n\n    float random (in vec2 _st) {\n        return fract(sin(dot(_st.xy,\n                             vec2(12.9898,78.233)))*\n            43758.5453123);\n    }\n\n    // Based on Morgan McGuire @morgan3d\n    // https://www.shadertoy.com/view/4dS3Wd\n    float noise (in vec2 _st) {\n        vec2 i = floor(_st);\n        vec2 f = fract(_st);\n\n        // Four corners in 2D of a tile\n        float a = random(i);\n        float b = random(i + vec2(1.0, 0.0));\n        float c = random(i + vec2(0.0, 1.0));\n        float d = random(i + vec2(1.0, 1.0));\n\n        vec2 u = f * f * (3.0 - 2.0 * f);\n\n        return mix(a, b, u.x) +\n                (c - a)* u.y * (1.0 - u.x) +\n                (d - b) * u.x * u.y;\n    }\n\n    #define NUM_OCTAVES 4\n\n    float fbm ( in vec2 _st) {\n        float v = 0.0;\n        float a = 0.55;\n        vec2 shift = vec2(100.0);\n        // Rotate to reduce axial bias\n        mat2 rot = mat2(cos(0.5), sin(0.5),\n                        -sin(0.5), cos(0.50));\n        for (int i = 0; i < NUM_OCTAVES; ++i) {\n            v += a * noise(_st);\n            _st = rot * _st * 2.0 + shift;\n            a *= 0.5;\n        }\n        return v;\n    }\n\n    // Helper functions:\n    float slopeFromT (float t, float A, float B, float C){\n        float dtdx = 1.0/(3.0*A*t*t + 2.0*B*t + C); \n        return dtdx;\n    }\n    float xFromT (float t, float A, float B, float C, float D){\n        float x = A*(t*t*t) + B*(t*t) + C*t + D;\n        return x;\n    }\n    float yFromT (float t, float E, float F, float G, float H){\n        float y = E*(t*t*t) + F*(t*t) + G*t + H;\n        return y;\n    }\n    float B0 (float t){\n        return (1.0-t)*(1.0-t)*(1.0-t);\n    }\n    float B1 (float t){\n        return  3.0*t*(1.0-t)*(1.0-t);\n    }\n    float B2 (float t){\n        return 3.0*t*t* (1.0-t);\n    }\n    float B3 (float t){\n        return t*t*t;\n    }\n    float  findx (float t, float x0, float x1, float x2, float x3){\n        return x0*B0(t) + x1*B1(t) + x2*B2(t) + x3*B3(t);\n    }\n    float  findy (float t, float y0, float y1, float y2, float y3){\n        return y0*B0(t) + y1*B1(t) + y2*B2(t) + y3*B3(t);\n    }\n    \n    float cubicBezier(float x, vec2 a, vec2 b){\n        float y0a = 0.0; // initial y\n        float x0a = 0.0; // initial x \n        float y1a = a.y;    // 1st influence y   \n        float x1a = a.x;    // 1st influence x \n        float y2a = b.y;    // 2nd influence y\n        float x2a = b.x;    // 2nd influence x\n        float y3a = 1.0; // final y \n        float x3a = 1.0; // final x \n    \n        float A =   x3a - 3.0*x2a + 3.0*x1a - x0a;\n        float B = 3.0*x2a - 6.0*x1a + 3.0*x0a;\n        float C = 3.0*x1a - 3.0*x0a;   \n        float D =   x0a;\n    \n        float E =   y3a - 3.0*y2a + 3.0*y1a - y0a;    \n        float F = 3.0*y2a - 6.0*y1a + 3.0*y0a;             \n        float G = 3.0*y1a - 3.0*y0a;             \n        float H =   y0a;\n    \n        // Solve for t given x (using Newton-Raphelson), then solve for y given t.\n        // Assume for the first guess that t = x.\n        float currentt = x;\n        for (int i=0; i < 5; i++){\n        float currentx = xFromT (currentt, A,B,C,D); \n        float currentslope = slopeFromT (currentt, A,B,C);\n        currentt -= (currentx - x)*(currentslope);\n            currentt = clamp(currentt,0.0,1.0); \n        } \n    \n        float y = yFromT (currentt,  E,F,G,H);\n        return y;\n    }\n    \n    float cubicBezierNearlyThroughTwoPoints(float x, vec2 a, vec2 b){\n    \n        float y = 0.0;\n        float epsilon = 0.00001;\n        float min_param_a = 0.0 + epsilon;\n        float max_param_a = 1.0 - epsilon;\n        float min_param_b = 0.0 + epsilon;\n        float max_param_b = 1.0 - epsilon;\n        a.x = max(min_param_a, min(max_param_a, a.x));\n        a.y = max(min_param_b, min(max_param_b, a.y));\n    \n        float x0 = 0.0;  \n        float y0 = 0.0;\n        float x4 = a.x;  \n        float y4 = a.y;\n        float x5 = b.x;  \n        float y5 = b.y;\n        float x3 = 1.0;  \n        float y3 = 1.0;\n        float x1,y1,x2,y2; // to be solved.\n    \n        // arbitrary but reasonable \n        // t-values for interior control points\n        float t1 = 0.3;\n        float t2 = 0.7;\n    \n        float B0t1 = B0(t1);\n        float B1t1 = B1(t1);\n        float B2t1 = B2(t1);\n        float B3t1 = B3(t1);\n        float B0t2 = B0(t2);\n        float B1t2 = B1(t2);\n        float B2t2 = B2(t2);\n        float B3t2 = B3(t2);\n    \n        float ccx = x4 - x0*B0t1 - x3*B3t1;\n        float ccy = y4 - y0*B0t1 - y3*B3t1;\n        float ffx = x5 - x0*B0t2 - x3*B3t2;\n        float ffy = y5 - y0*B0t2 - y3*B3t2;\n    \n        x2 = (ccx - (ffx*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        y2 = (ccy - (ffy*B1t1)/B1t2) / (B2t1 - (B1t1*B2t2)/B1t2);\n        x1 = (ccx - x2*B2t1) / B1t1;\n        y1 = (ccy - y2*B2t1) / B1t1;\n    \n        x1 = max(0.0+epsilon, min(1.0-epsilon, x1));\n        x2 = max(0.0+epsilon, min(1.0-epsilon, x2));\n    \n        y = cubicBezier (x, vec2(x1,y1), vec2(x2,y2));\n        y = max(0.0, min(1.0, y));\n        return y;\n    }\n\n    \n\n    \n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n\n        vec2 uv2 = vUv;\n        \n        uv2 -= 0.475;\n        // vec2 pic = texture2D(u_texture);\n\n        // float an = -u_time * 0.5;\n        // uv2 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv2;\n        // uv3 = mat2(cos(an),-sin(an),sin(an),cos(an)) * uv3;\n        float r1 = length(uv2 * 2.75 +0.6) ;\n        // r1 = abs(r1 );\n        float a = atan(uv2.y, uv2.x);\n        a = abs(a * 8.5);\n        uv2 = vec2(.003/r1 + u_time * 0.925 + r1, a );\n        // uv2.x -= 0.52;\n        // uv2 *= 1.9;\n        // uv2.x -= u_time*0.1;\n        // uv2.y += u_time * 0.2;\n\n        vec2 uv3 = vUv;\n        // uv3 *= 1.2;\n        // uv3.y += 2.5;\n        uv3.x += 0.5;\n\n        vec2 uv4 = uv3;\n        float rand = random(uv4);\n        uv4 = uv4 * rand;\n        \n        vec2 q = vec2(0.);\n        q.y = -fbm( uv2 + 0.2*u_time);\n        q.x = -fbm( uv2 + u_time * 0.2);\n\n        vec2 r = vec2(0.);\n        r.x = fbm( uv2 + 1.0*q + vec2(1.7,0.2)+ 0.1*u_time );\n        r.y = fbm( uv2 + 1.0*q + vec2(0.3,0.8)+ 0.1*u_time);\n\n        vec2 r2 = vec2(0.);\n        r2.x = fbm( uv2 + 1.0*q - vec2(1.7,0.2)+ 0.1*u_time );\n        r2.y = fbm( uv2 + 1.0*q - vec2(0.3,0.8)+ 0.1*u_time);\n\n        float f = fbm(uv2+r * fbm(uv2 + r * fbm(uv2 + r)));\n        vec3 c = vec3(0.);\n        c = mix(skycolour1 + cos(u_time * 0.3), skycolour2 + abs(sin(u_time * 0.1)/5.) - 0.5, clamp((f*f*f + f * f * 0.8),0.,.8));\n\n        \n        color += c;\n        float numLabel = label(vUv);\n        color += numLabel;\n\n        gl_FragColor = vec4(color, 1.);\n        // gl_FragColor = texture2D(u_texture, vUv);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function wO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:_O,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}var SO=new Vi({vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}",fragmentShader:Og+Bg+Ig+"\n    float label(vec2 p)\n    {\n        p *= 10.;\n        p.x -= 0.25;\n        float left = numSix(vec2(p.x + 0.35, p.y));\n        float center = numZero(vec2(p.x -0.03, p.y));\n        float right = numOne(vec2(p.x - 0.42, p.y));\n        return left + center + right ;\n    }\n\n    //https://timcoster.com/2020/03/05/raymarching-shader-pt5-colors/\n\n    const vec4 BoxColor = vec4(1,0,0,1);\n    const vec4 BoxColor1 = vec4(0,0,1,1);\n    const vec4 SphereColor = vec4(0,1,0,1);\n    const vec4 CylinderColor = vec4(0,0,1,1);\n    const vec4 GroundColor = vec4(1);\n    \n    float colorIntensity = 1.;\n    vec3 difColor = vec3(1.0, 1.0, 1.0); // Diffuse Color\n\n    mat2 Rotate(float a) {\n        float s=sin(a); float c=cos(a);\n        return mat2(c,-s,s,c);\n    }\n\n    vec3 rotateY(vec3 p, float a)\n    {\n\n        float c = cos(a);\n        float s = sin(a);\n        p = mat3(\n            vec3(c, 0, s),\n            vec3(0, 1, 0),\n            vec3(-s, 0, c)\n        ) * p ;\n        \n        return p ;\n    }\n\n    vec3 rotateX(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          1.0, 0.0, 0.0,\n          0.0, c, s,\n          0.0, -s, c\n        ) * p;\n    }\n\n    vec3 rotateZ(vec3 p, float angle) {\n        float s = sin(angle);\n        float c = cos(angle);\n      \n        return mat3(\n          c, s, 0.0,\n          -s, c, 0.0,\n          0.0, 0.0, 1.0\n        ) * p;\n    }\n\n    ///////////////////////\n    // Boolean Operators\n    ///////////////////////\n    \n    vec4 intersectSDF(vec4 a, vec4 b) {\n        return a.w > b.w ? a : b;\n    }\n      \n    vec4 unionSDF(vec4 a, vec4 b) {\n        return a.w < b.w? a : b;\n    }\n     \n    vec4 differenceSDF(vec4 a, vec4 b) {\n        return a.w > -b.w? a : vec4(b.rgb,-b.w);\n    }\n\n    /////////////////////////////\n    // Smooth blending operators\n    /////////////////////////////\n    \n    vec4 smoothIntersectSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 - 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w,b.w,h) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothUnionSDF(vec4 a, vec4 b, float k ) \n    {\n        float h = clamp(0.5 + 0.5*(a.w-b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, b.w, h) - k*h*(1.-h); \n        \n        return vec4(c,d);\n    }\n    \n    vec4 smoothDifferenceSDF(vec4 a, vec4 b, float k) \n    {\n        float h = clamp(0.5 - 0.5*(a.w+b.w)/k, 0., 1.);\n        vec3 c = mix(a.rgb,b.rgb,h);\n        float d = mix(a.w, -b.w, h ) + k*h*(1.-h);\n        \n        return vec4(c,d);\n    }\n/////////////////////////\n\n    #define MAX_STEPS 100\n    #define MAX_DIST 100.\n    #define SURF_DIST .01\n\n    ///////////////////////\n// Primitives\n///////////////////////\n \n// Sphere - exact\n    float sphereSDF( vec3 p, float s ) {\n        return length(p)-s;\n    }\n    \n    // Box - exact\n    float boxSDF( vec3 p, vec3 b ) {\n        vec3 q = abs(p) - b;\n        return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n    }\n    \n    float cappedCylinderSDF( vec3 p, float h, float r ) {\n        vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n        return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n    \n    // Plane - exact\n    float planeSDF(vec3 p,vec4 n) {\n        // n must be normalized\n        return dot(p,n.xyz)+n.w;\n    }\n    \n    // Triangular Prism - exact\n    float triPrismSDF(vec3 p,vec2 h) {\n        const float k=sqrt(3.);\n        h.x*=.5*k;\n        p.xy/=h.x;\n        p.x=abs(p.x)-1.;\n        p.y=p.y+1./k;\n        if(p.x+k*p.y>0.)p.xy=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n        p.x-=clamp(p.x,-2.,0.);\n        float d1=length(p.xy)*sign(-p.y)*h.x;\n        float d2=abs(p.z)-h.y;\n        return length(max(vec2(d1,d2),0.))+min(max(d1,d2),0.);\n    }\n    \n    // Rounded Cylinder - exact\n    float roundedCylinderSDF(vec3 p,float ra,float rb,float h){\n        vec2 d=vec2(length(p.xz)-2.*ra+rb,abs(p.y)-h);\n        return min(max(d.x,d.y),0.)+length(max(d,0.))-rb;\n    }\n\n    vec4 GetDist(vec3 p)\n    {\n        // Rotate the whole scene\n    \n   \n    // Box0\n    vec3 b0s = vec3(.75,.75,.75); //box size\n    vec3 b0p = vec3(0.,1.2,1.); // box position\n    b0p = p-b0p;\n    b0p.yz *=Rotate(u_time * .2);\n    b0p.xz *=Rotate(u_time * .2);\n    vec4 b0 = vec4(BoxColor.rgb,boxSDF(b0p,b0s)); // Box Color, box distance field\n\n    //Box1\n    vec3 b1s = vec3(.85,.5,.5); //box size\n    vec3 b1p = vec3(0.,1.2,1.); // box position\n    b1p = p-b1p;\n    b1p.yz *=Rotate(u_time * .2);\n    b1p.xz *=Rotate(u_time * .2);\n    vec4 b1 = vec4(BoxColor1.rgb,boxSDF(b1p,b1s)); // Box Color, box distance \n\n    //Box2\n    vec3 b2s = vec3(.5,.5,.85); //box size\n    vec3 b2p = vec3(0.,1.2,1.); // box position\n    b2p = p-b2p;\n    b2p.yz *=Rotate(u_time * .2);\n    b2p.xz *=Rotate(u_time * .2);\n    vec4 b2 = vec4(BoxColor1.rgb,boxSDF(b2p,b2s)); // Box Color, box distance \n\n    // p.xz *=Rotate(u_time * .2);\n   \n    // Sphere.\n    vec3 s0p=vec3(0.,2.,1.);\n    s0p=p-s0p;\n    vec4 s0 = vec4(SphereColor.rgb,sphereSDF(s0p,.5));\n\n    vec3 s1p=vec3(0.,0.5,1.);\n    s1p=p-s1p;\n    vec4 s1 = vec4(SphereColor.rgb,sphereSDF(s1p,.5));\n     \n    // Cylinders\n    float c0h = 1.,c0r = .55; // Cylinder height, radius.\n    vec3 c0p = p - vec3 (0,1,2.); // Position\n    vec4 c0 = vec4(CylinderColor.rgb,cappedCylinderSDF(c0p,c0h,c0r)); \n     \n    float c1h = 1.,c1r = .55; \n    vec3 c1p = p - vec3 (0,1,0); \n    c1p.xy *= Rotate(PI*.5);  // Rotate\n    vec4 c1 = vec4(CylinderColor.rgb,cappedCylinderSDF(c1p,c1h,c1r)); \n     \n    float c2h = 1.,c2r = .55; \n    vec3 c2p = p - vec3 (0,1,0);\n    c2p.xy *= Rotate(PI*.5);  \n    c2p.yz *= Rotate(PI*.5);  \n    vec4 c2 = vec4(CylinderColor.rgb,cappedCylinderSDF(c2p,c2h,c2r)); \n   \n    // Plane\n    vec4 p0 = vec4(GroundColor.rgb,planeSDF(p,vec4(0,1,0,0)));\n \n    vec4 scene = vec4(0), csg0 = vec4(0), csg1 = vec4(0), csg2 = vec4(0), csg3 = vec4(0);\n     \n    csg0 = smoothDifferenceSDF(b0, b1, 0.15); // Intersect box with sphere creating a CSG object.\n\n    csg1 = smoothDifferenceSDF(csg0, s0, 0.15 + sin(u_time * 1.5)/8.);\n     \n    csg2 = smoothDifferenceSDF(csg1, s1, 0.15 + cos(u_time * 1.5)/8.);\n\n    csg3 = smoothDifferenceSDF(csg0, b2, 0.15);\n     \n    // csg0 = differenceSDF(csg0,csg1); // Subtract cylinders from boxsphere\n     \n    // scene = unionSDF(csg0,p0); // Use Union(min) on the CSG and the ground plane \n\n    scene = unionSDF(csg3, p0);\n \n    return scene;\n    }\n\n    float RayMarch(vec3 ro,vec3 rd, inout vec3 dColor)\n    {\n        float dO=0.;//Distane Origin\n        for(int i=0;i<MAX_STEPS;i++)\n        {\n            if(dO>MAX_DIST)\n                break;\n    \n            vec3 p=ro+rd*dO;\n            vec4 ds=GetDist(p);// ds is Distance Scene\n    \n            if(ds.w<SURF_DIST)\n            {\n                dColor = ds.rgb;\n                break;\n            }\n            dO+=ds.w;\n            \n        }\n        return dO;\n    }\n    \n    vec3 GetNormal(vec3 p)\n    {\n        float d=GetDist(p).w;// Distance\n        vec2 e=vec2(.01,0);// Epsilon\n        \n        vec3 n=d-vec3(\n            GetDist(p-e.xyy).w,// e.xyy is the same as vec3(.01,0,0). The x of e is .01. this is called a swizzle\n            GetDist(p-e.yxy).w,\n            GetDist(p-e.yyx).w);\n            \n        return normalize(n);\n    }\n\n    vec3 GetLight(vec3 p, vec3 c)\n    {\n        // Diffuse Color\n        vec3 color = c.rgb * colorIntensity;\n    \n        // Directional light\n        vec3 lightPos=vec3(4.,5.,0.);// Light Position\n    \n        vec3 l=normalize(lightPos-p);// Light Vector\n        vec3 n=GetNormal(p);// Normal Vector\n        \n        float dif=dot(n,l);// Diffuse light\n        dif=clamp(dif,0.,1.);// Clamp so it doesnt go below 0\n        \n        // Shadows\n        float d=RayMarch(p+n*SURF_DIST*2.,l,difColor);\n        \n        if(d<length(lightPos-p))dif*=.1;\n        \n        return color * dif;\n    }\n\n    \n\n    void main()\n    {\n        vec2 vUv = vec2(vUv.x, vUv.y);\n        vec3 color = vec3(0.);\n        \n        vec2 uv2 = vUv;\n        uv2 -= 0.5;\n\n        vec3 ro = vec3(0,2.,-2.0); // Ray Origin/Camera position\n        vec3 rd = normalize(vec3(uv2.x,uv2.y,1)); // Ray Direction\n\n        rd.zy *= Rotate(PI*-.1); // Rotate camera down on the x-axis\n        \n        float d=RayMarch(ro,rd,difColor);// Distance\n\n        vec3 p=ro+rd*d;\n        vec3 dif=GetLight(p,difColor);// Diffuse lighting\n        color  = vec3(dif);\n\n        // d /= 6.;\n        // color = vec3(d);\n\n        float numLabel = label(vUv);\n        color += numLabel;\n        gl_FragColor = vec4(color, 1.);\n    }\n",uniforms:{u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new or},u_mouse:{type:"v2",value:new or}}});function UO(){var e=(0,Om.useRef)();return Nd((function(n){var t=n.clock;e.current.material.uniforms.u_time.value=t.elapsedTime})),(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)("mesh",{ref:e,material:SO,children:(0,Ng.jsx)("boxGeometry",{args:[2,2,.1]})})})}function MO(){var e=[(0,Ng.jsx)(Vg,{}),(0,Ng.jsx)(Hg,{}),(0,Ng.jsx)(Xg,{}),(0,Ng.jsx)(Zg,{}),(0,Ng.jsx)(Qg,{}),(0,Ng.jsx)(Kg,{}),(0,Ng.jsx)(nx,{}),(0,Ng.jsx)(rx,{}),(0,Ng.jsx)(ix,{}),(0,Ng.jsx)(lx,{}),(0,Ng.jsx)(cx,{}),(0,Ng.jsx)(vx,{}),(0,Ng.jsx)(px,{}),(0,Ng.jsx)(dx,{}),(0,Ng.jsx)(gx,{}),(0,Ng.jsx)(yx,{}),(0,Ng.jsx)(_x,{}),(0,Ng.jsx)(Sx,{}),(0,Ng.jsx)(Mx,{}),(0,Ng.jsx)(kx,{}),(0,Ng.jsx)(Cx,{}),(0,Ng.jsx)(Fx,{}),(0,Ng.jsx)(Dx,{}),(0,Ng.jsx)(zx,{}),(0,Ng.jsx)(Ax,{}),(0,Ng.jsx)(Ox,{}),(0,Ng.jsx)(Nx,{}),(0,Ng.jsx)(Vx,{}),(0,Ng.jsx)(Hx,{}),(0,Ng.jsx)(Xx,{}),(0,Ng.jsx)(Zx,{}),(0,Ng.jsx)(Qx,{}),(0,Ng.jsx)(Kx,{}),(0,Ng.jsx)(ny,{}),(0,Ng.jsx)(ry,{}),(0,Ng.jsx)(iy,{}),(0,Ng.jsx)(ly,{}),(0,Ng.jsx)(cy,{}),(0,Ng.jsx)(vy,{}),(0,Ng.jsx)(py,{}),(0,Ng.jsx)(dy,{}),(0,Ng.jsx)(gy,{}),(0,Ng.jsx)(yy,{}),(0,Ng.jsx)(_y,{}),(0,Ng.jsx)(Sy,{}),(0,Ng.jsx)(My,{}),(0,Ng.jsx)(ky,{}),(0,Ng.jsx)(Cy,{}),(0,Ng.jsx)(Fy,{}),(0,Ng.jsx)(Dy,{}),(0,Ng.jsx)(zy,{}),(0,Ng.jsx)(Ay,{}),(0,Ng.jsx)(Oy,{}),(0,Ng.jsx)(Ny,{}),(0,Ng.jsx)(Vy,{}),(0,Ng.jsx)(Hy,{}),(0,Ng.jsx)(Xy,{}),(0,Ng.jsx)(Zy,{}),(0,Ng.jsx)(Qy,{}),(0,Ng.jsx)(Ky,{}),(0,Ng.jsx)(nb,{}),(0,Ng.jsx)(rb,{}),(0,Ng.jsx)(ib,{}),(0,Ng.jsx)(lb,{}),(0,Ng.jsx)(cb,{}),(0,Ng.jsx)(vb,{}),(0,Ng.jsx)(pb,{}),(0,Ng.jsx)(db,{}),(0,Ng.jsx)(gb,{}),(0,Ng.jsx)(yb,{}),(0,Ng.jsx)(_b,{}),(0,Ng.jsx)(Sb,{}),(0,Ng.jsx)(Mb,{}),(0,Ng.jsx)(kb,{}),(0,Ng.jsx)(Cb,{}),(0,Ng.jsx)(Fb,{}),(0,Ng.jsx)(Db,{}),(0,Ng.jsx)(zb,{}),(0,Ng.jsx)(Ab,{}),(0,Ng.jsx)(Ob,{}),(0,Ng.jsx)(Nb,{}),(0,Ng.jsx)(Vb,{}),(0,Ng.jsx)(Hb,{}),(0,Ng.jsx)(Xb,{}),(0,Ng.jsx)(Zb,{}),(0,Ng.jsx)(Qb,{}),(0,Ng.jsx)(Kb,{}),(0,Ng.jsx)(n_,{}),(0,Ng.jsx)(r_,{}),(0,Ng.jsx)(i_,{}),(0,Ng.jsx)(l_,{}),(0,Ng.jsx)(c_,{}),(0,Ng.jsx)(v_,{}),(0,Ng.jsx)(p_,{}),(0,Ng.jsx)(d_,{}),(0,Ng.jsx)(g_,{}),(0,Ng.jsx)(y_,{}),(0,Ng.jsx)(__,{}),(0,Ng.jsx)(S_,{}),(0,Ng.jsx)(M_,{}),(0,Ng.jsx)(k_,{}),(0,Ng.jsx)(C_,{}),(0,Ng.jsx)(F_,{}),(0,Ng.jsx)(D_,{}),(0,Ng.jsx)(z_,{}),(0,Ng.jsx)(A_,{}),(0,Ng.jsx)(O_,{}),(0,Ng.jsx)(N_,{}),(0,Ng.jsx)(V_,{}),(0,Ng.jsx)(H_,{}),(0,Ng.jsx)(X_,{}),(0,Ng.jsx)(Z_,{}),(0,Ng.jsx)(Q_,{}),(0,Ng.jsx)(K_,{}),(0,Ng.jsx)(nw,{}),(0,Ng.jsx)(rw,{}),(0,Ng.jsx)(iw,{}),(0,Ng.jsx)(lw,{}),(0,Ng.jsx)(cw,{}),(0,Ng.jsx)(vw,{}),(0,Ng.jsx)(pw,{}),(0,Ng.jsx)(mw,{}),(0,Ng.jsx)(hw,{}),(0,Ng.jsx)(xw,{}),(0,Ng.jsx)(bw,{}),(0,Ng.jsx)(ww,{}),(0,Ng.jsx)(Uw,{}),(0,Ng.jsx)(jw,{}),(0,Ng.jsx)(Tw,{}),(0,Ng.jsx)(Rw,{}),(0,Ng.jsx)(Pw,{}),(0,Ng.jsx)(Ew,{}),(0,Ng.jsx)(Lw,{}),(0,Ng.jsx)(Iw,{}),(0,Ng.jsx)(Bw,{}),(0,Ng.jsx)(Gw,{}),(0,Ng.jsx)(qw,{}),(0,Ng.jsx)(Ww,{}),(0,Ng.jsx)(Yw,{}),(0,Ng.jsx)(Jw,{}),(0,Ng.jsx)($w,{}),(0,Ng.jsx)(eS,{}),(0,Ng.jsx)(tS,{}),(0,Ng.jsx)(aS,{}),(0,Ng.jsx)(oS,{}),(0,Ng.jsx)(sS,{}),(0,Ng.jsx)(uS,{}),(0,Ng.jsx)(fS,{}),(0,Ng.jsx)(mS,{}),(0,Ng.jsx)(hS,{}),(0,Ng.jsx)(xS,{}),(0,Ng.jsx)(bS,{}),(0,Ng.jsx)(wS,{}),(0,Ng.jsx)(US,{}),(0,Ng.jsx)(jS,{}),(0,Ng.jsx)(TS,{}),(0,Ng.jsx)(RS,{}),(0,Ng.jsx)(PS,{}),(0,Ng.jsx)(ES,{}),(0,Ng.jsx)(LS,{}),(0,Ng.jsx)(IS,{}),(0,Ng.jsx)(BS,{}),(0,Ng.jsx)(GS,{}),(0,Ng.jsx)(qS,{}),(0,Ng.jsx)(WS,{}),(0,Ng.jsx)(YS,{}),(0,Ng.jsx)(JS,{}),(0,Ng.jsx)($S,{}),(0,Ng.jsx)(eU,{}),(0,Ng.jsx)(tU,{}),(0,Ng.jsx)(aU,{}),(0,Ng.jsx)(oU,{}),(0,Ng.jsx)(sU,{}),(0,Ng.jsx)(uU,{}),(0,Ng.jsx)(fU,{}),(0,Ng.jsx)(mU,{}),(0,Ng.jsx)(hU,{}),(0,Ng.jsx)(xU,{}),(0,Ng.jsx)(bU,{}),(0,Ng.jsx)(wU,{}),(0,Ng.jsx)(UU,{}),(0,Ng.jsx)(jU,{}),(0,Ng.jsx)(TU,{}),(0,Ng.jsx)(RU,{}),(0,Ng.jsx)(PU,{}),(0,Ng.jsx)(EU,{}),(0,Ng.jsx)(LU,{}),(0,Ng.jsx)(IU,{}),(0,Ng.jsx)(BU,{}),(0,Ng.jsx)(GU,{}),(0,Ng.jsx)(qU,{}),(0,Ng.jsx)(WU,{}),(0,Ng.jsx)(YU,{}),(0,Ng.jsx)(JU,{}),(0,Ng.jsx)($U,{}),(0,Ng.jsx)(eM,{}),(0,Ng.jsx)(tM,{}),(0,Ng.jsx)(aM,{}),(0,Ng.jsx)(oM,{}),(0,Ng.jsx)(sM,{}),(0,Ng.jsx)(uM,{}),(0,Ng.jsx)(fM,{}),(0,Ng.jsx)(mM,{}),(0,Ng.jsx)(hM,{}),(0,Ng.jsx)(xM,{}),(0,Ng.jsx)(bM,{}),(0,Ng.jsx)(wM,{}),(0,Ng.jsx)(UM,{}),(0,Ng.jsx)(jM,{}),(0,Ng.jsx)(TM,{}),(0,Ng.jsx)(RM,{}),(0,Ng.jsx)(PM,{}),(0,Ng.jsx)(EM,{}),(0,Ng.jsx)(LM,{}),(0,Ng.jsx)(IM,{}),(0,Ng.jsx)(BM,{}),(0,Ng.jsx)(GM,{}),(0,Ng.jsx)(qM,{}),(0,Ng.jsx)(WM,{}),(0,Ng.jsx)(YM,{}),(0,Ng.jsx)(JM,{}),(0,Ng.jsx)($M,{}),(0,Ng.jsx)(ej,{}),(0,Ng.jsx)(tj,{}),(0,Ng.jsx)(aj,{}),(0,Ng.jsx)(oj,{}),(0,Ng.jsx)(sj,{}),(0,Ng.jsx)(uj,{}),(0,Ng.jsx)(fj,{}),(0,Ng.jsx)(mj,{}),(0,Ng.jsx)(hj,{}),(0,Ng.jsx)(xj,{}),(0,Ng.jsx)(bj,{}),(0,Ng.jsx)(wj,{}),(0,Ng.jsx)(Uj,{}),(0,Ng.jsx)(jj,{}),(0,Ng.jsx)(Tj,{}),(0,Ng.jsx)(Rj,{}),(0,Ng.jsx)(Pj,{}),(0,Ng.jsx)(Ej,{}),(0,Ng.jsx)(Lj,{}),(0,Ng.jsx)(Ij,{}),(0,Ng.jsx)(Bj,{}),(0,Ng.jsx)(Gj,{}),(0,Ng.jsx)(qj,{}),(0,Ng.jsx)(Wj,{}),(0,Ng.jsx)(Yj,{}),(0,Ng.jsx)(Jj,{}),(0,Ng.jsx)($j,{}),(0,Ng.jsx)(ek,{}),(0,Ng.jsx)(tk,{}),(0,Ng.jsx)(ak,{}),(0,Ng.jsx)(ok,{}),(0,Ng.jsx)(sk,{}),(0,Ng.jsx)(uk,{}),(0,Ng.jsx)(fk,{}),(0,Ng.jsx)(mk,{}),(0,Ng.jsx)(hk,{}),(0,Ng.jsx)(xk,{}),(0,Ng.jsx)(bk,{}),(0,Ng.jsx)(wk,{}),(0,Ng.jsx)(Uk,{}),(0,Ng.jsx)(jk,{}),(0,Ng.jsx)(Tk,{}),(0,Ng.jsx)(Rk,{}),(0,Ng.jsx)(Pk,{}),(0,Ng.jsx)(Ek,{}),(0,Ng.jsx)(Lk,{}),(0,Ng.jsx)(Ik,{}),(0,Ng.jsx)(Bk,{}),(0,Ng.jsx)(Gk,{}),(0,Ng.jsx)(qk,{}),(0,Ng.jsx)(Wk,{}),(0,Ng.jsx)(Yk,{}),(0,Ng.jsx)(Jk,{}),(0,Ng.jsx)($k,{}),(0,Ng.jsx)(eT,{}),(0,Ng.jsx)(tT,{}),(0,Ng.jsx)(aT,{}),(0,Ng.jsx)(oT,{}),(0,Ng.jsx)(sT,{}),(0,Ng.jsx)(uT,{}),(0,Ng.jsx)(fT,{}),(0,Ng.jsx)(mT,{}),(0,Ng.jsx)(hT,{}),(0,Ng.jsx)(xT,{}),(0,Ng.jsx)(bT,{}),(0,Ng.jsx)(wT,{}),(0,Ng.jsx)(UT,{}),(0,Ng.jsx)(jT,{}),(0,Ng.jsx)(TT,{}),(0,Ng.jsx)(RT,{}),(0,Ng.jsx)(PT,{}),(0,Ng.jsx)(ET,{}),(0,Ng.jsx)(LT,{}),(0,Ng.jsx)(IT,{}),(0,Ng.jsx)(BT,{}),(0,Ng.jsx)(GT,{}),(0,Ng.jsx)(qT,{}),(0,Ng.jsx)(WT,{}),(0,Ng.jsx)(YT,{}),(0,Ng.jsx)(JT,{}),(0,Ng.jsx)($T,{}),(0,Ng.jsx)(eC,{}),(0,Ng.jsx)(tC,{}),(0,Ng.jsx)(aC,{}),(0,Ng.jsx)(oC,{}),(0,Ng.jsx)(sC,{}),(0,Ng.jsx)(uC,{}),(0,Ng.jsx)(fC,{}),(0,Ng.jsx)(mC,{}),(0,Ng.jsx)(hC,{}),(0,Ng.jsx)(xC,{}),(0,Ng.jsx)(bC,{}),(0,Ng.jsx)(wC,{}),(0,Ng.jsx)(UC,{}),(0,Ng.jsx)(jC,{}),(0,Ng.jsx)(TC,{}),(0,Ng.jsx)(RC,{}),(0,Ng.jsx)(PC,{}),(0,Ng.jsx)(EC,{}),(0,Ng.jsx)(LC,{}),(0,Ng.jsx)(IC,{}),(0,Ng.jsx)(BC,{}),(0,Ng.jsx)(GC,{}),(0,Ng.jsx)(qC,{}),(0,Ng.jsx)(WC,{}),(0,Ng.jsx)(YC,{}),(0,Ng.jsx)(JC,{}),(0,Ng.jsx)($C,{}),(0,Ng.jsx)(eR,{}),(0,Ng.jsx)(tR,{}),(0,Ng.jsx)(aR,{}),(0,Ng.jsx)(oR,{}),(0,Ng.jsx)(sR,{}),(0,Ng.jsx)(uR,{}),(0,Ng.jsx)(fR,{}),(0,Ng.jsx)(mR,{}),(0,Ng.jsx)(hR,{}),(0,Ng.jsx)(xR,{}),(0,Ng.jsx)(bR,{}),(0,Ng.jsx)(wR,{}),(0,Ng.jsx)(UR,{}),(0,Ng.jsx)(jR,{}),(0,Ng.jsx)(TR,{}),(0,Ng.jsx)(RR,{}),(0,Ng.jsx)(PR,{}),(0,Ng.jsx)(ER,{}),(0,Ng.jsx)(LR,{}),(0,Ng.jsx)(IR,{}),(0,Ng.jsx)(BR,{}),(0,Ng.jsx)(GR,{}),(0,Ng.jsx)(qR,{}),(0,Ng.jsx)(WR,{}),(0,Ng.jsx)(YR,{}),(0,Ng.jsx)(JR,{}),(0,Ng.jsx)($R,{}),(0,Ng.jsx)(eF,{}),(0,Ng.jsx)(tF,{}),(0,Ng.jsx)(aF,{}),(0,Ng.jsx)(oF,{}),(0,Ng.jsx)(sF,{}),(0,Ng.jsx)(uF,{}),(0,Ng.jsx)(fF,{}),(0,Ng.jsx)(mF,{}),(0,Ng.jsx)(hF,{}),(0,Ng.jsx)(xF,{}),(0,Ng.jsx)(bF,{}),(0,Ng.jsx)(wF,{}),(0,Ng.jsx)(UF,{}),(0,Ng.jsx)(jF,{}),(0,Ng.jsx)(TF,{}),(0,Ng.jsx)(RF,{}),(0,Ng.jsx)(PF,{}),(0,Ng.jsx)(EF,{}),(0,Ng.jsx)(LF,{}),(0,Ng.jsx)(IF,{}),(0,Ng.jsx)(BF,{}),(0,Ng.jsx)(GF,{}),(0,Ng.jsx)(qF,{}),(0,Ng.jsx)(WF,{}),(0,Ng.jsx)(YF,{}),(0,Ng.jsx)(JF,{}),(0,Ng.jsx)($F,{}),(0,Ng.jsx)(eP,{}),(0,Ng.jsx)(tP,{}),(0,Ng.jsx)(aP,{}),(0,Ng.jsx)(oP,{}),(0,Ng.jsx)(sP,{}),(0,Ng.jsx)(uP,{}),(0,Ng.jsx)(fP,{}),(0,Ng.jsx)(mP,{}),(0,Ng.jsx)(hP,{}),(0,Ng.jsx)(xP,{}),(0,Ng.jsx)(bP,{}),(0,Ng.jsx)(wP,{}),(0,Ng.jsx)(UP,{}),(0,Ng.jsx)(jP,{}),(0,Ng.jsx)(TP,{}),(0,Ng.jsx)(RP,{}),(0,Ng.jsx)(PP,{}),(0,Ng.jsx)(EP,{}),(0,Ng.jsx)(LP,{}),(0,Ng.jsx)(IP,{}),(0,Ng.jsx)(BP,{}),(0,Ng.jsx)(GP,{}),(0,Ng.jsx)(qP,{}),(0,Ng.jsx)(WP,{}),(0,Ng.jsx)(YP,{}),(0,Ng.jsx)(JP,{}),(0,Ng.jsx)($P,{}),(0,Ng.jsx)(eD,{}),(0,Ng.jsx)(tD,{}),(0,Ng.jsx)(aD,{}),(0,Ng.jsx)(oD,{}),(0,Ng.jsx)(sD,{}),(0,Ng.jsx)(uD,{}),(0,Ng.jsx)(fD,{}),(0,Ng.jsx)(mD,{}),(0,Ng.jsx)(hD,{}),(0,Ng.jsx)(xD,{}),(0,Ng.jsx)(bD,{}),(0,Ng.jsx)(wD,{}),(0,Ng.jsx)(UD,{}),(0,Ng.jsx)(jD,{}),(0,Ng.jsx)(TD,{}),(0,Ng.jsx)(RD,{}),(0,Ng.jsx)(PD,{}),(0,Ng.jsx)(ED,{}),(0,Ng.jsx)(LD,{}),(0,Ng.jsx)(ID,{}),(0,Ng.jsx)(BD,{}),(0,Ng.jsx)(GD,{}),(0,Ng.jsx)(qD,{}),(0,Ng.jsx)(WD,{}),(0,Ng.jsx)(YD,{}),(0,Ng.jsx)(JD,{}),(0,Ng.jsx)($D,{}),(0,Ng.jsx)(eE,{}),(0,Ng.jsx)(tE,{}),(0,Ng.jsx)(aE,{}),(0,Ng.jsx)(oE,{}),(0,Ng.jsx)(sE,{}),(0,Ng.jsx)(uE,{}),(0,Ng.jsx)(fE,{}),(0,Ng.jsx)(mE,{}),(0,Ng.jsx)(hE,{}),(0,Ng.jsx)(xE,{}),(0,Ng.jsx)(bE,{}),(0,Ng.jsx)(wE,{}),(0,Ng.jsx)(UE,{}),(0,Ng.jsx)(jE,{}),(0,Ng.jsx)(TE,{}),(0,Ng.jsx)(RE,{}),(0,Ng.jsx)(PE,{}),(0,Ng.jsx)(EE,{}),(0,Ng.jsx)(LE,{}),(0,Ng.jsx)(IE,{}),(0,Ng.jsx)(BE,{}),(0,Ng.jsx)(GE,{}),(0,Ng.jsx)(qE,{}),(0,Ng.jsx)(WE,{}),(0,Ng.jsx)(YE,{}),(0,Ng.jsx)(JE,{}),(0,Ng.jsx)($E,{}),(0,Ng.jsx)(ez,{}),(0,Ng.jsx)(tz,{}),(0,Ng.jsx)(az,{}),(0,Ng.jsx)(oz,{}),(0,Ng.jsx)(sz,{}),(0,Ng.jsx)(uz,{}),(0,Ng.jsx)(fz,{}),(0,Ng.jsx)(mz,{}),(0,Ng.jsx)(hz,{}),(0,Ng.jsx)(xz,{}),(0,Ng.jsx)(bz,{}),(0,Ng.jsx)(wz,{}),(0,Ng.jsx)(Uz,{}),(0,Ng.jsx)(jz,{}),(0,Ng.jsx)(Tz,{}),(0,Ng.jsx)(Rz,{}),(0,Ng.jsx)(Pz,{}),(0,Ng.jsx)(Ez,{}),(0,Ng.jsx)(Lz,{}),(0,Ng.jsx)(Iz,{}),(0,Ng.jsx)(Bz,{}),(0,Ng.jsx)(Gz,{}),(0,Ng.jsx)(qz,{}),(0,Ng.jsx)(Wz,{}),(0,Ng.jsx)(Yz,{}),(0,Ng.jsx)(Jz,{}),(0,Ng.jsx)($z,{}),(0,Ng.jsx)(eL,{}),(0,Ng.jsx)(tL,{}),(0,Ng.jsx)(aL,{}),(0,Ng.jsx)(oL,{}),(0,Ng.jsx)(sL,{}),(0,Ng.jsx)(uL,{}),(0,Ng.jsx)(fL,{}),(0,Ng.jsx)(mL,{}),(0,Ng.jsx)(hL,{}),(0,Ng.jsx)(xL,{}),(0,Ng.jsx)(bL,{}),(0,Ng.jsx)(wL,{}),(0,Ng.jsx)(UL,{}),(0,Ng.jsx)(jL,{}),(0,Ng.jsx)(TL,{}),(0,Ng.jsx)(RL,{}),(0,Ng.jsx)(PL,{}),(0,Ng.jsx)(EL,{}),(0,Ng.jsx)(LL,{}),(0,Ng.jsx)(IL,{}),(0,Ng.jsx)(BL,{}),(0,Ng.jsx)(GL,{}),(0,Ng.jsx)(qL,{}),(0,Ng.jsx)(WL,{}),(0,Ng.jsx)(YL,{}),(0,Ng.jsx)(JL,{}),(0,Ng.jsx)($L,{}),(0,Ng.jsx)(eA,{}),(0,Ng.jsx)(tA,{}),(0,Ng.jsx)(aA,{}),(0,Ng.jsx)(oA,{}),(0,Ng.jsx)(sA,{}),(0,Ng.jsx)(uA,{}),(0,Ng.jsx)(fA,{}),(0,Ng.jsx)(mA,{}),(0,Ng.jsx)(hA,{}),(0,Ng.jsx)(xA,{}),(0,Ng.jsx)(bA,{}),(0,Ng.jsx)(wA,{}),(0,Ng.jsx)(UA,{}),(0,Ng.jsx)(jA,{}),(0,Ng.jsx)(TA,{}),(0,Ng.jsx)(RA,{}),(0,Ng.jsx)(PA,{}),(0,Ng.jsx)(EA,{}),(0,Ng.jsx)(LA,{}),(0,Ng.jsx)(IA,{}),(0,Ng.jsx)(BA,{}),(0,Ng.jsx)(GA,{}),(0,Ng.jsx)(qA,{}),(0,Ng.jsx)(WA,{}),(0,Ng.jsx)(YA,{}),(0,Ng.jsx)(JA,{}),(0,Ng.jsx)($A,{}),(0,Ng.jsx)(eI,{}),(0,Ng.jsx)(tI,{}),(0,Ng.jsx)(aI,{}),(0,Ng.jsx)(oI,{}),(0,Ng.jsx)(sI,{}),(0,Ng.jsx)(uI,{}),(0,Ng.jsx)(fI,{}),(0,Ng.jsx)(mI,{}),(0,Ng.jsx)(hI,{}),(0,Ng.jsx)(xI,{}),(0,Ng.jsx)(bI,{}),(0,Ng.jsx)(wI,{}),(0,Ng.jsx)(UI,{}),(0,Ng.jsx)(jI,{}),(0,Ng.jsx)(TI,{}),(0,Ng.jsx)(RI,{}),(0,Ng.jsx)(PI,{}),(0,Ng.jsx)(EI,{}),(0,Ng.jsx)(LI,{}),(0,Ng.jsx)(II,{}),(0,Ng.jsx)(BI,{}),(0,Ng.jsx)(GI,{}),(0,Ng.jsx)(qI,{}),(0,Ng.jsx)(WI,{}),(0,Ng.jsx)(YI,{}),(0,Ng.jsx)(JI,{}),(0,Ng.jsx)($I,{}),(0,Ng.jsx)(eO,{}),(0,Ng.jsx)(tO,{}),(0,Ng.jsx)(aO,{}),(0,Ng.jsx)(oO,{}),(0,Ng.jsx)(sO,{}),(0,Ng.jsx)(uO,{}),(0,Ng.jsx)(fO,{}),(0,Ng.jsx)(mO,{}),(0,Ng.jsx)(hO,{}),(0,Ng.jsx)(xO,{}),(0,Ng.jsx)(bO,{}),(0,Ng.jsx)(wO,{}),(0,Ng.jsx)(UO,{})];return(0,Ng.jsx)(Ng.Fragment,{children:(0,Ng.jsx)(zg,{children:(0,Ng.jsxs)(Fg,{children:[(0,Ng.jsx)(Cg,{index:!0,element:e[e.length-1]}),(0,Ng.jsx)(Cg,{path:"001",element:(0,Ng.jsx)(Vg,{})}),(0,Ng.jsx)(Cg,{path:"017",element:(0,Ng.jsx)(Hg,{})}),(0,Ng.jsx)(Cg,{path:"018",element:(0,Ng.jsx)(Xg,{})}),(0,Ng.jsx)(Cg,{path:"019",element:(0,Ng.jsx)(Zg,{})}),(0,Ng.jsx)(Cg,{path:"020",element:(0,Ng.jsx)(Qg,{})}),(0,Ng.jsx)(Cg,{path:"021",element:(0,Ng.jsx)(Kg,{})}),(0,Ng.jsx)(Cg,{path:"022",element:(0,Ng.jsx)(nx,{})}),(0,Ng.jsx)(Cg,{path:"023",element:(0,Ng.jsx)(rx,{})}),(0,Ng.jsx)(Cg,{path:"024",element:(0,Ng.jsx)(ix,{})}),(0,Ng.jsx)(Cg,{path:"025",element:(0,Ng.jsx)(lx,{})}),(0,Ng.jsx)(Cg,{path:"026",element:(0,Ng.jsx)(cx,{})}),(0,Ng.jsx)(Cg,{path:"027",element:(0,Ng.jsx)(vx,{})}),(0,Ng.jsx)(Cg,{path:"028",element:(0,Ng.jsx)(px,{})}),(0,Ng.jsx)(Cg,{path:"029",element:(0,Ng.jsx)(dx,{})}),(0,Ng.jsx)(Cg,{path:"030",element:(0,Ng.jsx)(gx,{})}),(0,Ng.jsx)(Cg,{path:"031",element:(0,Ng.jsx)(yx,{})}),(0,Ng.jsx)(Cg,{path:"032",element:(0,Ng.jsx)(_x,{})}),(0,Ng.jsx)(Cg,{path:"033",element:(0,Ng.jsx)(Sx,{})}),(0,Ng.jsx)(Cg,{path:"034",element:(0,Ng.jsx)(Mx,{})}),(0,Ng.jsx)(Cg,{path:"035",element:(0,Ng.jsx)(kx,{})}),(0,Ng.jsx)(Cg,{path:"036",element:(0,Ng.jsx)(Cx,{})}),(0,Ng.jsx)(Cg,{path:"037",element:(0,Ng.jsx)(Fx,{})}),(0,Ng.jsx)(Cg,{path:"038",element:(0,Ng.jsx)(Dx,{})}),(0,Ng.jsx)(Cg,{path:"039",element:(0,Ng.jsx)(zx,{})}),(0,Ng.jsx)(Cg,{path:"040",element:(0,Ng.jsx)(Ax,{})}),(0,Ng.jsx)(Cg,{path:"041",element:(0,Ng.jsx)(Ox,{})}),(0,Ng.jsx)(Cg,{path:"042",element:(0,Ng.jsx)(Nx,{})}),(0,Ng.jsx)(Cg,{path:"043",element:(0,Ng.jsx)(Vx,{})}),(0,Ng.jsx)(Cg,{path:"044",element:(0,Ng.jsx)(Hx,{})}),(0,Ng.jsx)(Cg,{path:"045",element:(0,Ng.jsx)(Xx,{})}),(0,Ng.jsx)(Cg,{path:"046",element:(0,Ng.jsx)(Zx,{})}),(0,Ng.jsx)(Cg,{path:"047",element:(0,Ng.jsx)(Qx,{})}),(0,Ng.jsx)(Cg,{path:"048",element:(0,Ng.jsx)(Kx,{})}),(0,Ng.jsx)(Cg,{path:"049",element:(0,Ng.jsx)(ny,{})}),(0,Ng.jsx)(Cg,{path:"050",element:(0,Ng.jsx)(ry,{})}),(0,Ng.jsx)(Cg,{path:"051",element:(0,Ng.jsx)(iy,{})}),(0,Ng.jsx)(Cg,{path:"052",element:(0,Ng.jsx)(ly,{})}),(0,Ng.jsx)(Cg,{path:"053",element:(0,Ng.jsx)(cy,{})}),(0,Ng.jsx)(Cg,{path:"054",element:(0,Ng.jsx)(vy,{})}),(0,Ng.jsx)(Cg,{path:"055",element:(0,Ng.jsx)(py,{})}),(0,Ng.jsx)(Cg,{path:"056",element:(0,Ng.jsx)(dy,{})}),(0,Ng.jsx)(Cg,{path:"057",element:(0,Ng.jsx)(gy,{})}),(0,Ng.jsx)(Cg,{path:"058",element:(0,Ng.jsx)(yy,{})}),(0,Ng.jsx)(Cg,{path:"059",element:(0,Ng.jsx)(_y,{})}),(0,Ng.jsx)(Cg,{path:"060",element:(0,Ng.jsx)(Sy,{})}),(0,Ng.jsx)(Cg,{path:"061",element:(0,Ng.jsx)(My,{})}),(0,Ng.jsx)(Cg,{path:"062",element:(0,Ng.jsx)(ky,{})}),(0,Ng.jsx)(Cg,{path:"063",element:(0,Ng.jsx)(Cy,{})}),(0,Ng.jsx)(Cg,{path:"064",element:(0,Ng.jsx)(Fy,{})}),(0,Ng.jsx)(Cg,{path:"065",element:(0,Ng.jsx)(Dy,{})}),(0,Ng.jsx)(Cg,{path:"066",element:(0,Ng.jsx)(zy,{})}),(0,Ng.jsx)(Cg,{path:"067",element:(0,Ng.jsx)(Ay,{})}),(0,Ng.jsx)(Cg,{path:"068",element:(0,Ng.jsx)(Oy,{})}),(0,Ng.jsx)(Cg,{path:"069",element:(0,Ng.jsx)(Ny,{})}),(0,Ng.jsx)(Cg,{path:"070",element:(0,Ng.jsx)(Vy,{})}),(0,Ng.jsx)(Cg,{path:"071",element:(0,Ng.jsx)(Hy,{})}),(0,Ng.jsx)(Cg,{path:"072",element:(0,Ng.jsx)(Xy,{})}),(0,Ng.jsx)(Cg,{path:"073",element:(0,Ng.jsx)(Zy,{})}),(0,Ng.jsx)(Cg,{path:"074",element:(0,Ng.jsx)(Qy,{})}),(0,Ng.jsx)(Cg,{path:"075",element:(0,Ng.jsx)(Ky,{})}),(0,Ng.jsx)(Cg,{path:"076",element:(0,Ng.jsx)(nb,{})}),(0,Ng.jsx)(Cg,{path:"077",element:(0,Ng.jsx)(rb,{})}),(0,Ng.jsx)(Cg,{path:"078",element:(0,Ng.jsx)(ib,{})}),(0,Ng.jsx)(Cg,{path:"079",element:(0,Ng.jsx)(lb,{})}),(0,Ng.jsx)(Cg,{path:"080",element:(0,Ng.jsx)(cb,{})}),(0,Ng.jsx)(Cg,{path:"081",element:(0,Ng.jsx)(vb,{})}),(0,Ng.jsx)(Cg,{path:"082",element:(0,Ng.jsx)(pb,{})}),(0,Ng.jsx)(Cg,{path:"083",element:(0,Ng.jsx)(db,{})}),(0,Ng.jsx)(Cg,{path:"084",element:(0,Ng.jsx)(gb,{})}),(0,Ng.jsx)(Cg,{path:"085",element:(0,Ng.jsx)(yb,{})}),(0,Ng.jsx)(Cg,{path:"086",element:(0,Ng.jsx)(_b,{})}),(0,Ng.jsx)(Cg,{path:"087",element:(0,Ng.jsx)(Sb,{})}),(0,Ng.jsx)(Cg,{path:"088",element:(0,Ng.jsx)(Mb,{})}),(0,Ng.jsx)(Cg,{path:"089",element:(0,Ng.jsx)(kb,{})}),(0,Ng.jsx)(Cg,{path:"090",element:(0,Ng.jsx)(Cb,{})}),(0,Ng.jsx)(Cg,{path:"091",element:(0,Ng.jsx)(Fb,{})}),(0,Ng.jsx)(Cg,{path:"092",element:(0,Ng.jsx)(Db,{})}),(0,Ng.jsx)(Cg,{path:"093",element:(0,Ng.jsx)(zb,{})}),(0,Ng.jsx)(Cg,{path:"094",element:(0,Ng.jsx)(Ab,{})}),(0,Ng.jsx)(Cg,{path:"095",element:(0,Ng.jsx)(Ob,{})}),(0,Ng.jsx)(Cg,{path:"096",element:(0,Ng.jsx)(Nb,{})}),(0,Ng.jsx)(Cg,{path:"097",element:(0,Ng.jsx)(Vb,{})}),(0,Ng.jsx)(Cg,{path:"098",element:(0,Ng.jsx)(Hb,{})}),(0,Ng.jsx)(Cg,{path:"099",element:(0,Ng.jsx)(Xb,{})}),(0,Ng.jsx)(Cg,{path:"100",element:(0,Ng.jsx)(Zb,{})}),(0,Ng.jsx)(Cg,{path:"101",element:(0,Ng.jsx)(Qb,{})}),(0,Ng.jsx)(Cg,{path:"102",element:(0,Ng.jsx)(Kb,{})}),(0,Ng.jsx)(Cg,{path:"103",element:(0,Ng.jsx)(n_,{})}),(0,Ng.jsx)(Cg,{path:"104",element:(0,Ng.jsx)(r_,{})}),(0,Ng.jsx)(Cg,{path:"105",element:(0,Ng.jsx)(i_,{})}),(0,Ng.jsx)(Cg,{path:"106",element:(0,Ng.jsx)(l_,{})}),(0,Ng.jsx)(Cg,{path:"107",element:(0,Ng.jsx)(c_,{})}),(0,Ng.jsx)(Cg,{path:"108",element:(0,Ng.jsx)(v_,{})}),(0,Ng.jsx)(Cg,{path:"109",element:(0,Ng.jsx)(p_,{})}),(0,Ng.jsx)(Cg,{path:"110",element:(0,Ng.jsx)(d_,{})}),(0,Ng.jsx)(Cg,{path:"111",element:(0,Ng.jsx)(g_,{})}),(0,Ng.jsx)(Cg,{path:"112",element:(0,Ng.jsx)(y_,{})}),(0,Ng.jsx)(Cg,{path:"113",element:(0,Ng.jsx)(__,{})}),(0,Ng.jsx)(Cg,{path:"114",element:(0,Ng.jsx)(S_,{})}),(0,Ng.jsx)(Cg,{path:"115",element:(0,Ng.jsx)(M_,{})}),(0,Ng.jsx)(Cg,{path:"116",element:(0,Ng.jsx)(k_,{})}),(0,Ng.jsx)(Cg,{path:"117",element:(0,Ng.jsx)(C_,{})}),(0,Ng.jsx)(Cg,{path:"118",element:(0,Ng.jsx)(F_,{})}),(0,Ng.jsx)(Cg,{path:"119",element:(0,Ng.jsx)(D_,{})}),(0,Ng.jsx)(Cg,{path:"120",element:(0,Ng.jsx)(z_,{})}),(0,Ng.jsx)(Cg,{path:"121",element:(0,Ng.jsx)(A_,{})}),(0,Ng.jsx)(Cg,{path:"122",element:(0,Ng.jsx)(O_,{})}),(0,Ng.jsx)(Cg,{path:"123",element:(0,Ng.jsx)(N_,{})}),(0,Ng.jsx)(Cg,{path:"124",element:(0,Ng.jsx)(V_,{})}),(0,Ng.jsx)(Cg,{path:"125",element:(0,Ng.jsx)(H_,{})}),(0,Ng.jsx)(Cg,{path:"126",element:(0,Ng.jsx)(X_,{})}),(0,Ng.jsx)(Cg,{path:"127",element:(0,Ng.jsx)(Z_,{})}),(0,Ng.jsx)(Cg,{path:"128",element:(0,Ng.jsx)(Q_,{})}),(0,Ng.jsx)(Cg,{path:"129",element:(0,Ng.jsx)(K_,{})}),(0,Ng.jsx)(Cg,{path:"130",element:(0,Ng.jsx)(nw,{})}),(0,Ng.jsx)(Cg,{path:"131",element:(0,Ng.jsx)(rw,{})}),(0,Ng.jsx)(Cg,{path:"132",element:(0,Ng.jsx)(iw,{})}),(0,Ng.jsx)(Cg,{path:"133",element:(0,Ng.jsx)(lw,{})}),(0,Ng.jsx)(Cg,{path:"134",element:(0,Ng.jsx)(cw,{})}),(0,Ng.jsx)(Cg,{path:"135",element:(0,Ng.jsx)(vw,{})}),(0,Ng.jsx)(Cg,{path:"136",element:(0,Ng.jsx)(pw,{})}),(0,Ng.jsx)(Cg,{path:"137",element:(0,Ng.jsx)(mw,{})}),(0,Ng.jsx)(Cg,{path:"138",element:(0,Ng.jsx)(hw,{})}),(0,Ng.jsx)(Cg,{path:"139",element:(0,Ng.jsx)(xw,{})}),(0,Ng.jsx)(Cg,{path:"140",element:(0,Ng.jsx)(bw,{})}),(0,Ng.jsx)(Cg,{path:"141",element:(0,Ng.jsx)(ww,{})}),(0,Ng.jsx)(Cg,{path:"142",element:(0,Ng.jsx)(Uw,{})}),(0,Ng.jsx)(Cg,{path:"143",element:(0,Ng.jsx)(jw,{})}),(0,Ng.jsx)(Cg,{path:"144",element:(0,Ng.jsx)(Tw,{})}),(0,Ng.jsx)(Cg,{path:"145",element:(0,Ng.jsx)(Rw,{})}),(0,Ng.jsx)(Cg,{path:"146",element:(0,Ng.jsx)(Pw,{})}),(0,Ng.jsx)(Cg,{path:"147",element:(0,Ng.jsx)(Ew,{})}),(0,Ng.jsx)(Cg,{path:"148",element:(0,Ng.jsx)(Lw,{})}),(0,Ng.jsx)(Cg,{path:"149",element:(0,Ng.jsx)(Iw,{})}),(0,Ng.jsx)(Cg,{path:"150",element:(0,Ng.jsx)(Bw,{})}),(0,Ng.jsx)(Cg,{path:"151",element:(0,Ng.jsx)(Gw,{})}),(0,Ng.jsx)(Cg,{path:"152",element:(0,Ng.jsx)(qw,{})}),(0,Ng.jsx)(Cg,{path:"153",element:(0,Ng.jsx)(Ww,{})}),(0,Ng.jsx)(Cg,{path:"154",element:(0,Ng.jsx)(Yw,{})}),(0,Ng.jsx)(Cg,{path:"155",element:(0,Ng.jsx)(Jw,{})}),(0,Ng.jsx)(Cg,{path:"156",element:(0,Ng.jsx)($w,{})}),(0,Ng.jsx)(Cg,{path:"157",element:(0,Ng.jsx)(eS,{})}),(0,Ng.jsx)(Cg,{path:"158",element:(0,Ng.jsx)(tS,{})}),(0,Ng.jsx)(Cg,{path:"159",element:(0,Ng.jsx)(aS,{})}),(0,Ng.jsx)(Cg,{path:"160",element:(0,Ng.jsx)(oS,{})}),(0,Ng.jsx)(Cg,{path:"161",element:(0,Ng.jsx)(sS,{})}),(0,Ng.jsx)(Cg,{path:"162",element:(0,Ng.jsx)(uS,{})}),(0,Ng.jsx)(Cg,{path:"163",element:(0,Ng.jsx)(fS,{})}),(0,Ng.jsx)(Cg,{path:"164",element:(0,Ng.jsx)(mS,{})}),(0,Ng.jsx)(Cg,{path:"165",element:(0,Ng.jsx)(hS,{})}),(0,Ng.jsx)(Cg,{path:"166",element:(0,Ng.jsx)(xS,{})}),(0,Ng.jsx)(Cg,{path:"167",element:(0,Ng.jsx)(bS,{})}),(0,Ng.jsx)(Cg,{path:"168",element:(0,Ng.jsx)(wS,{})}),(0,Ng.jsx)(Cg,{path:"169",element:(0,Ng.jsx)(US,{})}),(0,Ng.jsx)(Cg,{path:"170",element:(0,Ng.jsx)(jS,{})}),(0,Ng.jsx)(Cg,{path:"171",element:(0,Ng.jsx)(TS,{})}),(0,Ng.jsx)(Cg,{path:"172",element:(0,Ng.jsx)(RS,{})}),(0,Ng.jsx)(Cg,{path:"173",element:(0,Ng.jsx)(PS,{})}),(0,Ng.jsx)(Cg,{path:"174",element:(0,Ng.jsx)(ES,{})}),(0,Ng.jsx)(Cg,{path:"175",element:(0,Ng.jsx)(LS,{})}),(0,Ng.jsx)(Cg,{path:"176",element:(0,Ng.jsx)(IS,{})}),(0,Ng.jsx)(Cg,{path:"177",element:(0,Ng.jsx)(BS,{})}),(0,Ng.jsx)(Cg,{path:"178",element:(0,Ng.jsx)(GS,{})}),(0,Ng.jsx)(Cg,{path:"179",element:(0,Ng.jsx)(qS,{})}),(0,Ng.jsx)(Cg,{path:"180",element:(0,Ng.jsx)(WS,{})}),(0,Ng.jsx)(Cg,{path:"181",element:(0,Ng.jsx)(YS,{})}),(0,Ng.jsx)(Cg,{path:"182",element:(0,Ng.jsx)(JS,{})}),(0,Ng.jsx)(Cg,{path:"183",element:(0,Ng.jsx)($S,{})}),(0,Ng.jsx)(Cg,{path:"184",element:(0,Ng.jsx)(eU,{})}),(0,Ng.jsx)(Cg,{path:"185",element:(0,Ng.jsx)(tU,{})}),(0,Ng.jsx)(Cg,{path:"186",element:(0,Ng.jsx)(aU,{})}),(0,Ng.jsx)(Cg,{path:"187",element:(0,Ng.jsx)(oU,{})}),(0,Ng.jsx)(Cg,{path:"188",element:(0,Ng.jsx)(sU,{})}),(0,Ng.jsx)(Cg,{path:"189",element:(0,Ng.jsx)(uU,{})}),(0,Ng.jsx)(Cg,{path:"190",element:(0,Ng.jsx)(fU,{})}),(0,Ng.jsx)(Cg,{path:"191",element:(0,Ng.jsx)(mU,{})}),(0,Ng.jsx)(Cg,{path:"192",element:(0,Ng.jsx)(hU,{})}),(0,Ng.jsx)(Cg,{path:"193",element:(0,Ng.jsx)(xU,{})}),(0,Ng.jsx)(Cg,{path:"194",element:(0,Ng.jsx)(bU,{})}),(0,Ng.jsx)(Cg,{path:"195",element:(0,Ng.jsx)(wU,{})}),(0,Ng.jsx)(Cg,{path:"196",element:(0,Ng.jsx)(UU,{})}),(0,Ng.jsx)(Cg,{path:"197",element:(0,Ng.jsx)(jU,{})}),(0,Ng.jsx)(Cg,{path:"198",element:(0,Ng.jsx)(TU,{})}),(0,Ng.jsx)(Cg,{path:"199",element:(0,Ng.jsx)(RU,{})}),(0,Ng.jsx)(Cg,{path:"200",element:(0,Ng.jsx)(PU,{})}),(0,Ng.jsx)(Cg,{path:"201",element:(0,Ng.jsx)(EU,{})}),(0,Ng.jsx)(Cg,{path:"202",element:(0,Ng.jsx)(LU,{})}),(0,Ng.jsx)(Cg,{path:"203",element:(0,Ng.jsx)(IU,{})}),(0,Ng.jsx)(Cg,{path:"204",element:(0,Ng.jsx)(BU,{})}),(0,Ng.jsx)(Cg,{path:"205",element:(0,Ng.jsx)(GU,{})}),(0,Ng.jsx)(Cg,{path:"206",element:(0,Ng.jsx)(qU,{})}),(0,Ng.jsx)(Cg,{path:"207",element:(0,Ng.jsx)(WU,{})}),(0,Ng.jsx)(Cg,{path:"208",element:(0,Ng.jsx)(YU,{})}),(0,Ng.jsx)(Cg,{path:"209",element:(0,Ng.jsx)(JU,{})}),(0,Ng.jsx)(Cg,{path:"210",element:(0,Ng.jsx)($U,{})}),(0,Ng.jsx)(Cg,{path:"211",element:(0,Ng.jsx)(eM,{})}),(0,Ng.jsx)(Cg,{path:"212",element:(0,Ng.jsx)(tM,{})}),(0,Ng.jsx)(Cg,{path:"213",element:(0,Ng.jsx)(aM,{})}),(0,Ng.jsx)(Cg,{path:"214",element:(0,Ng.jsx)(oM,{})}),(0,Ng.jsx)(Cg,{path:"215",element:(0,Ng.jsx)(sM,{})}),(0,Ng.jsx)(Cg,{path:"216",element:(0,Ng.jsx)(uM,{})}),(0,Ng.jsx)(Cg,{path:"217",element:(0,Ng.jsx)(fM,{})}),(0,Ng.jsx)(Cg,{path:"218",element:(0,Ng.jsx)(mM,{})}),(0,Ng.jsx)(Cg,{path:"219",element:(0,Ng.jsx)(hM,{})}),(0,Ng.jsx)(Cg,{path:"220",element:(0,Ng.jsx)(xM,{})}),(0,Ng.jsx)(Cg,{path:"221",element:(0,Ng.jsx)(bM,{})}),(0,Ng.jsx)(Cg,{path:"222",element:(0,Ng.jsx)(wM,{})}),(0,Ng.jsx)(Cg,{path:"223",element:(0,Ng.jsx)(UM,{})}),(0,Ng.jsx)(Cg,{path:"224",element:(0,Ng.jsx)(jM,{})}),(0,Ng.jsx)(Cg,{path:"225",element:(0,Ng.jsx)(TM,{})}),(0,Ng.jsx)(Cg,{path:"226",element:(0,Ng.jsx)(RM,{})}),(0,Ng.jsx)(Cg,{path:"227",element:(0,Ng.jsx)(PM,{})}),(0,Ng.jsx)(Cg,{path:"228",element:(0,Ng.jsx)(EM,{})}),(0,Ng.jsx)(Cg,{path:"229",element:(0,Ng.jsx)(LM,{})}),(0,Ng.jsx)(Cg,{path:"230",element:(0,Ng.jsx)(IM,{})}),(0,Ng.jsx)(Cg,{path:"231",element:(0,Ng.jsx)(BM,{})}),(0,Ng.jsx)(Cg,{path:"232",element:(0,Ng.jsx)(GM,{})}),(0,Ng.jsx)(Cg,{path:"233",element:(0,Ng.jsx)(qM,{})}),(0,Ng.jsx)(Cg,{path:"234",element:(0,Ng.jsx)(WM,{})}),(0,Ng.jsx)(Cg,{path:"235",element:(0,Ng.jsx)(YM,{})}),(0,Ng.jsx)(Cg,{path:"236",element:(0,Ng.jsx)(JM,{})}),(0,Ng.jsx)(Cg,{path:"237",element:(0,Ng.jsx)($M,{})}),(0,Ng.jsx)(Cg,{path:"238",element:(0,Ng.jsx)(ej,{})}),(0,Ng.jsx)(Cg,{path:"239",element:(0,Ng.jsx)(tj,{})}),(0,Ng.jsx)(Cg,{path:"240",element:(0,Ng.jsx)(aj,{})}),(0,Ng.jsx)(Cg,{path:"241",element:(0,Ng.jsx)(oj,{})}),(0,Ng.jsx)(Cg,{path:"242",element:(0,Ng.jsx)(sj,{})}),(0,Ng.jsx)(Cg,{path:"243",element:(0,Ng.jsx)(uj,{})}),(0,Ng.jsx)(Cg,{path:"244",element:(0,Ng.jsx)(fj,{})}),(0,Ng.jsx)(Cg,{path:"245",element:(0,Ng.jsx)(mj,{})}),(0,Ng.jsx)(Cg,{path:"246",element:(0,Ng.jsx)(hj,{})}),(0,Ng.jsx)(Cg,{path:"247",element:(0,Ng.jsx)(xj,{})}),(0,Ng.jsx)(Cg,{path:"248",element:(0,Ng.jsx)(bj,{})}),(0,Ng.jsx)(Cg,{path:"249",element:(0,Ng.jsx)(wj,{})}),(0,Ng.jsx)(Cg,{path:"250",element:(0,Ng.jsx)(Uj,{})}),(0,Ng.jsx)(Cg,{path:"251",element:(0,Ng.jsx)(jj,{})}),(0,Ng.jsx)(Cg,{path:"252",element:(0,Ng.jsx)(Tj,{})}),(0,Ng.jsx)(Cg,{path:"253",element:(0,Ng.jsx)(Rj,{})}),(0,Ng.jsx)(Cg,{path:"254",element:(0,Ng.jsx)(Pj,{})}),(0,Ng.jsx)(Cg,{path:"255",element:(0,Ng.jsx)(Ej,{})}),(0,Ng.jsx)(Cg,{path:"256",element:(0,Ng.jsx)(Lj,{})}),(0,Ng.jsx)(Cg,{path:"257",element:(0,Ng.jsx)(Ij,{})}),(0,Ng.jsx)(Cg,{path:"258",element:(0,Ng.jsx)(Bj,{})}),(0,Ng.jsx)(Cg,{path:"259",element:(0,Ng.jsx)(Gj,{})}),(0,Ng.jsx)(Cg,{path:"260",element:(0,Ng.jsx)(qj,{})}),(0,Ng.jsx)(Cg,{path:"261",element:(0,Ng.jsx)(Wj,{})}),(0,Ng.jsx)(Cg,{path:"262",element:(0,Ng.jsx)(Yj,{})}),(0,Ng.jsx)(Cg,{path:"263",element:(0,Ng.jsx)(Jj,{})}),(0,Ng.jsx)(Cg,{path:"264",element:(0,Ng.jsx)($j,{})}),(0,Ng.jsx)(Cg,{path:"265",element:(0,Ng.jsx)(ek,{})}),(0,Ng.jsx)(Cg,{path:"266",element:(0,Ng.jsx)(tk,{})}),(0,Ng.jsx)(Cg,{path:"267",element:(0,Ng.jsx)(ak,{})}),(0,Ng.jsx)(Cg,{path:"268",element:(0,Ng.jsx)(ok,{})}),(0,Ng.jsx)(Cg,{path:"269",element:(0,Ng.jsx)(sk,{})}),(0,Ng.jsx)(Cg,{path:"270",element:(0,Ng.jsx)(uk,{})}),(0,Ng.jsx)(Cg,{path:"271",element:(0,Ng.jsx)(fk,{})}),(0,Ng.jsx)(Cg,{path:"272",element:(0,Ng.jsx)(mk,{})}),(0,Ng.jsx)(Cg,{path:"273",element:(0,Ng.jsx)(hk,{})}),(0,Ng.jsx)(Cg,{path:"274",element:(0,Ng.jsx)(xk,{})}),(0,Ng.jsx)(Cg,{path:"275",element:(0,Ng.jsx)(bk,{})}),(0,Ng.jsx)(Cg,{path:"276",element:(0,Ng.jsx)(wk,{})}),(0,Ng.jsx)(Cg,{path:"277",element:(0,Ng.jsx)(Uk,{})}),(0,Ng.jsx)(Cg,{path:"278",element:(0,Ng.jsx)(jk,{})}),(0,Ng.jsx)(Cg,{path:"279",element:(0,Ng.jsx)(Tk,{})}),(0,Ng.jsx)(Cg,{path:"280",element:(0,Ng.jsx)(Rk,{})}),(0,Ng.jsx)(Cg,{path:"281",element:(0,Ng.jsx)(Pk,{})}),(0,Ng.jsx)(Cg,{path:"282",element:(0,Ng.jsx)(Ek,{})}),(0,Ng.jsx)(Cg,{path:"283",element:(0,Ng.jsx)(Lk,{})}),(0,Ng.jsx)(Cg,{path:"284",element:(0,Ng.jsx)(Ik,{})}),(0,Ng.jsx)(Cg,{path:"285",element:(0,Ng.jsx)(Bk,{})}),(0,Ng.jsx)(Cg,{path:"286",element:(0,Ng.jsx)(Gk,{})}),(0,Ng.jsx)(Cg,{path:"287",element:(0,Ng.jsx)(qk,{})}),(0,Ng.jsx)(Cg,{path:"288",element:(0,Ng.jsx)(Wk,{})}),(0,Ng.jsx)(Cg,{path:"289",element:(0,Ng.jsx)(Yk,{})}),(0,Ng.jsx)(Cg,{path:"290",element:(0,Ng.jsx)(Jk,{})}),(0,Ng.jsx)(Cg,{path:"291",element:(0,Ng.jsx)($k,{})}),(0,Ng.jsx)(Cg,{path:"292",element:(0,Ng.jsx)(eT,{})}),(0,Ng.jsx)(Cg,{path:"293",element:(0,Ng.jsx)(tT,{})}),(0,Ng.jsx)(Cg,{path:"294",element:(0,Ng.jsx)(aT,{})}),(0,Ng.jsx)(Cg,{path:"295",element:(0,Ng.jsx)(oT,{})}),(0,Ng.jsx)(Cg,{path:"296",element:(0,Ng.jsx)(sT,{})}),(0,Ng.jsx)(Cg,{path:"297",element:(0,Ng.jsx)(uT,{})}),(0,Ng.jsx)(Cg,{path:"298",element:(0,Ng.jsx)(fT,{})}),(0,Ng.jsx)(Cg,{path:"299",element:(0,Ng.jsx)(mT,{})}),(0,Ng.jsx)(Cg,{path:"300",element:(0,Ng.jsx)(hT,{})}),(0,Ng.jsx)(Cg,{path:"301",element:(0,Ng.jsx)(xT,{})}),(0,Ng.jsx)(Cg,{path:"302",element:(0,Ng.jsx)(bT,{})}),(0,Ng.jsx)(Cg,{path:"303",element:(0,Ng.jsx)(wT,{})}),(0,Ng.jsx)(Cg,{path:"304",element:(0,Ng.jsx)(UT,{})}),(0,Ng.jsx)(Cg,{path:"305",element:(0,Ng.jsx)(jT,{})}),(0,Ng.jsx)(Cg,{path:"306",element:(0,Ng.jsx)(TT,{})}),(0,Ng.jsx)(Cg,{path:"307",element:(0,Ng.jsx)(RT,{})}),(0,Ng.jsx)(Cg,{path:"308",element:(0,Ng.jsx)(PT,{})}),(0,Ng.jsx)(Cg,{path:"309",element:(0,Ng.jsx)(ET,{})}),(0,Ng.jsx)(Cg,{path:"310",element:(0,Ng.jsx)(LT,{})}),(0,Ng.jsx)(Cg,{path:"311",element:(0,Ng.jsx)(IT,{})}),(0,Ng.jsx)(Cg,{path:"312",element:(0,Ng.jsx)(BT,{})}),(0,Ng.jsx)(Cg,{path:"313",element:(0,Ng.jsx)(GT,{})}),(0,Ng.jsx)(Cg,{path:"314",element:(0,Ng.jsx)(qT,{})}),(0,Ng.jsx)(Cg,{path:"315",element:(0,Ng.jsx)(WT,{})}),(0,Ng.jsx)(Cg,{path:"316",element:(0,Ng.jsx)(YT,{})}),(0,Ng.jsx)(Cg,{path:"317",element:(0,Ng.jsx)(JT,{})}),(0,Ng.jsx)(Cg,{path:"318",element:(0,Ng.jsx)($T,{})}),(0,Ng.jsx)(Cg,{path:"319",element:(0,Ng.jsx)(eC,{})}),(0,Ng.jsx)(Cg,{path:"320",element:(0,Ng.jsx)(tC,{})}),(0,Ng.jsx)(Cg,{path:"321",element:(0,Ng.jsx)(aC,{})}),(0,Ng.jsx)(Cg,{path:"322",element:(0,Ng.jsx)(oC,{})}),(0,Ng.jsx)(Cg,{path:"323",element:(0,Ng.jsx)(sC,{})}),(0,Ng.jsx)(Cg,{path:"324",element:(0,Ng.jsx)(uC,{})}),(0,Ng.jsx)(Cg,{path:"325",element:(0,Ng.jsx)(fC,{})}),(0,Ng.jsx)(Cg,{path:"326",element:(0,Ng.jsx)(mC,{})}),(0,Ng.jsx)(Cg,{path:"327",element:(0,Ng.jsx)(hC,{})}),(0,Ng.jsx)(Cg,{path:"328",element:(0,Ng.jsx)(xC,{})}),(0,Ng.jsx)(Cg,{path:"329",element:(0,Ng.jsx)(bC,{})}),(0,Ng.jsx)(Cg,{path:"330",element:(0,Ng.jsx)(wC,{})}),(0,Ng.jsx)(Cg,{path:"331",element:(0,Ng.jsx)(UC,{})}),(0,Ng.jsx)(Cg,{path:"332",element:(0,Ng.jsx)(jC,{})}),(0,Ng.jsx)(Cg,{path:"333",element:(0,Ng.jsx)(TC,{})}),(0,Ng.jsx)(Cg,{path:"334",element:(0,Ng.jsx)(RC,{})}),(0,Ng.jsx)(Cg,{path:"335",element:(0,Ng.jsx)(PC,{})}),(0,Ng.jsx)(Cg,{path:"336",element:(0,Ng.jsx)(EC,{})}),(0,Ng.jsx)(Cg,{path:"337",element:(0,Ng.jsx)(LC,{})}),(0,Ng.jsx)(Cg,{path:"338",element:(0,Ng.jsx)(IC,{})}),(0,Ng.jsx)(Cg,{path:"339",element:(0,Ng.jsx)(BC,{})}),(0,Ng.jsx)(Cg,{path:"340",element:(0,Ng.jsx)(GC,{})}),(0,Ng.jsx)(Cg,{path:"341",element:(0,Ng.jsx)(qC,{})}),(0,Ng.jsx)(Cg,{path:"342",element:(0,Ng.jsx)(WC,{})}),(0,Ng.jsx)(Cg,{path:"343",element:(0,Ng.jsx)(YC,{})}),(0,Ng.jsx)(Cg,{path:"344",element:(0,Ng.jsx)(JC,{})}),(0,Ng.jsx)(Cg,{path:"345",element:(0,Ng.jsx)($C,{})}),(0,Ng.jsx)(Cg,{path:"346",element:(0,Ng.jsx)(eR,{})}),(0,Ng.jsx)(Cg,{path:"347",element:(0,Ng.jsx)(tR,{})}),(0,Ng.jsx)(Cg,{path:"348",element:(0,Ng.jsx)(aR,{})}),(0,Ng.jsx)(Cg,{path:"349",element:(0,Ng.jsx)(oR,{})}),(0,Ng.jsx)(Cg,{path:"350",element:(0,Ng.jsx)(sR,{})}),(0,Ng.jsx)(Cg,{path:"351",element:(0,Ng.jsx)(uR,{})}),(0,Ng.jsx)(Cg,{path:"352",element:(0,Ng.jsx)(fR,{})}),(0,Ng.jsx)(Cg,{path:"353",element:(0,Ng.jsx)(mR,{})}),(0,Ng.jsx)(Cg,{path:"354",element:(0,Ng.jsx)(hR,{})}),(0,Ng.jsx)(Cg,{path:"355",element:(0,Ng.jsx)(xR,{})}),(0,Ng.jsx)(Cg,{path:"356",element:(0,Ng.jsx)(bR,{})}),(0,Ng.jsx)(Cg,{path:"357",element:(0,Ng.jsx)(wR,{})}),(0,Ng.jsx)(Cg,{path:"358",element:(0,Ng.jsx)(UR,{})}),(0,Ng.jsx)(Cg,{path:"359",element:(0,Ng.jsx)(jR,{})}),(0,Ng.jsx)(Cg,{path:"360",element:(0,Ng.jsx)(TR,{})}),(0,Ng.jsx)(Cg,{path:"361",element:(0,Ng.jsx)(RR,{})}),(0,Ng.jsx)(Cg,{path:"362",element:(0,Ng.jsx)(PR,{})}),(0,Ng.jsx)(Cg,{path:"363",element:(0,Ng.jsx)(ER,{})}),(0,Ng.jsx)(Cg,{path:"364",element:(0,Ng.jsx)(LR,{})}),(0,Ng.jsx)(Cg,{path:"365",element:(0,Ng.jsx)(IR,{})}),(0,Ng.jsx)(Cg,{path:"366",element:(0,Ng.jsx)(BR,{})}),(0,Ng.jsx)(Cg,{path:"367",element:(0,Ng.jsx)(GR,{})}),(0,Ng.jsx)(Cg,{path:"368",element:(0,Ng.jsx)(qR,{})}),(0,Ng.jsx)(Cg,{path:"369",element:(0,Ng.jsx)(WR,{})}),(0,Ng.jsx)(Cg,{path:"370",element:(0,Ng.jsx)(YR,{})}),(0,Ng.jsx)(Cg,{path:"371",element:(0,Ng.jsx)(JR,{})}),(0,Ng.jsx)(Cg,{path:"372",element:(0,Ng.jsx)($R,{})}),(0,Ng.jsx)(Cg,{path:"373",element:(0,Ng.jsx)(eF,{})}),(0,Ng.jsx)(Cg,{path:"374",element:(0,Ng.jsx)(tF,{})}),(0,Ng.jsx)(Cg,{path:"375",element:(0,Ng.jsx)(aF,{})}),(0,Ng.jsx)(Cg,{path:"376",element:(0,Ng.jsx)(oF,{})}),(0,Ng.jsx)(Cg,{path:"377",element:(0,Ng.jsx)(sF,{})}),(0,Ng.jsx)(Cg,{path:"378",element:(0,Ng.jsx)(uF,{})}),(0,Ng.jsx)(Cg,{path:"379",element:(0,Ng.jsx)(fF,{})}),(0,Ng.jsx)(Cg,{path:"380",element:(0,Ng.jsx)(mF,{})}),(0,Ng.jsx)(Cg,{path:"381",element:(0,Ng.jsx)(hF,{})}),(0,Ng.jsx)(Cg,{path:"382",element:(0,Ng.jsx)(xF,{})}),(0,Ng.jsx)(Cg,{path:"383",element:(0,Ng.jsx)(bF,{})}),(0,Ng.jsx)(Cg,{path:"384",element:(0,Ng.jsx)(wF,{})}),(0,Ng.jsx)(Cg,{path:"385",element:(0,Ng.jsx)(UF,{})}),(0,Ng.jsx)(Cg,{path:"386",element:(0,Ng.jsx)(jF,{})}),(0,Ng.jsx)(Cg,{path:"387",element:(0,Ng.jsx)(TF,{})}),(0,Ng.jsx)(Cg,{path:"388",element:(0,Ng.jsx)(RF,{})}),(0,Ng.jsx)(Cg,{path:"389",element:(0,Ng.jsx)(PF,{})}),(0,Ng.jsx)(Cg,{path:"390",element:(0,Ng.jsx)(EF,{})}),(0,Ng.jsx)(Cg,{path:"391",element:(0,Ng.jsx)(LF,{})}),(0,Ng.jsx)(Cg,{path:"392",element:(0,Ng.jsx)(IF,{})}),(0,Ng.jsx)(Cg,{path:"393",element:(0,Ng.jsx)(BF,{})}),(0,Ng.jsx)(Cg,{path:"394",element:(0,Ng.jsx)(GF,{})}),(0,Ng.jsx)(Cg,{path:"395",element:(0,Ng.jsx)(qF,{})}),(0,Ng.jsx)(Cg,{path:"396",element:(0,Ng.jsx)(WF,{})}),(0,Ng.jsx)(Cg,{path:"397",element:(0,Ng.jsx)(YF,{})}),(0,Ng.jsx)(Cg,{path:"398",element:(0,Ng.jsx)(JF,{})}),(0,Ng.jsx)(Cg,{path:"399",element:(0,Ng.jsx)($F,{})}),(0,Ng.jsx)(Cg,{path:"400",element:(0,Ng.jsx)(eP,{})}),(0,Ng.jsx)(Cg,{path:"401",element:(0,Ng.jsx)(tP,{})}),(0,Ng.jsx)(Cg,{path:"402",element:(0,Ng.jsx)(aP,{})}),(0,Ng.jsx)(Cg,{path:"403",element:(0,Ng.jsx)(oP,{})}),(0,Ng.jsx)(Cg,{path:"404",element:(0,Ng.jsx)(sP,{})}),(0,Ng.jsx)(Cg,{path:"405",element:(0,Ng.jsx)(uP,{})}),(0,Ng.jsx)(Cg,{path:"406",element:(0,Ng.jsx)(fP,{})}),(0,Ng.jsx)(Cg,{path:"407",element:(0,Ng.jsx)(mP,{})}),(0,Ng.jsx)(Cg,{path:"408",element:(0,Ng.jsx)(hP,{})}),(0,Ng.jsx)(Cg,{path:"409",element:(0,Ng.jsx)(xP,{})}),(0,Ng.jsx)(Cg,{path:"410",element:(0,Ng.jsx)(bP,{})}),(0,Ng.jsx)(Cg,{path:"411",element:(0,Ng.jsx)(wP,{})}),(0,Ng.jsx)(Cg,{path:"412",element:(0,Ng.jsx)(UP,{})}),(0,Ng.jsx)(Cg,{path:"413",element:(0,Ng.jsx)(jP,{})}),(0,Ng.jsx)(Cg,{path:"414",element:(0,Ng.jsx)(TP,{})}),(0,Ng.jsx)(Cg,{path:"415",element:(0,Ng.jsx)(RP,{})}),(0,Ng.jsx)(Cg,{path:"416",element:(0,Ng.jsx)(PP,{})}),(0,Ng.jsx)(Cg,{path:"417",element:(0,Ng.jsx)(EP,{})}),(0,Ng.jsx)(Cg,{path:"418",element:(0,Ng.jsx)(LP,{})}),(0,Ng.jsx)(Cg,{path:"419",element:(0,Ng.jsx)(IP,{})}),(0,Ng.jsx)(Cg,{path:"420",element:(0,Ng.jsx)(BP,{})}),(0,Ng.jsx)(Cg,{path:"421",element:(0,Ng.jsx)(GP,{})}),(0,Ng.jsx)(Cg,{path:"422",element:(0,Ng.jsx)(qP,{})}),(0,Ng.jsx)(Cg,{path:"423",element:(0,Ng.jsx)(WP,{})}),(0,Ng.jsx)(Cg,{path:"424",element:(0,Ng.jsx)(YP,{})}),(0,Ng.jsx)(Cg,{path:"425",element:(0,Ng.jsx)(JP,{})}),(0,Ng.jsx)(Cg,{path:"426",element:(0,Ng.jsx)($P,{})}),(0,Ng.jsx)(Cg,{path:"427",element:(0,Ng.jsx)(eD,{})}),(0,Ng.jsx)(Cg,{path:"428",element:(0,Ng.jsx)(tD,{})}),(0,Ng.jsx)(Cg,{path:"429",element:(0,Ng.jsx)(aD,{})}),(0,Ng.jsx)(Cg,{path:"430",element:(0,Ng.jsx)(oD,{})}),(0,Ng.jsx)(Cg,{path:"431",element:(0,Ng.jsx)(sD,{})}),(0,Ng.jsx)(Cg,{path:"432",element:(0,Ng.jsx)(uD,{})}),(0,Ng.jsx)(Cg,{path:"433",element:(0,Ng.jsx)(fD,{})}),(0,Ng.jsx)(Cg,{path:"434",element:(0,Ng.jsx)(mD,{})}),(0,Ng.jsx)(Cg,{path:"435",element:(0,Ng.jsx)(hD,{})}),(0,Ng.jsx)(Cg,{path:"436",element:(0,Ng.jsx)(xD,{})}),(0,Ng.jsx)(Cg,{path:"437",element:(0,Ng.jsx)(bD,{})}),(0,Ng.jsx)(Cg,{path:"438",element:(0,Ng.jsx)(wD,{})}),(0,Ng.jsx)(Cg,{path:"439",element:(0,Ng.jsx)(UD,{})}),(0,Ng.jsx)(Cg,{path:"440",element:(0,Ng.jsx)(jD,{})}),(0,Ng.jsx)(Cg,{path:"441",element:(0,Ng.jsx)(TD,{})}),(0,Ng.jsx)(Cg,{path:"442",element:(0,Ng.jsx)(RD,{})}),(0,Ng.jsx)(Cg,{path:"443",element:(0,Ng.jsx)(PD,{})}),(0,Ng.jsx)(Cg,{path:"444",element:(0,Ng.jsx)(ED,{})}),(0,Ng.jsx)(Cg,{path:"445",element:(0,Ng.jsx)(LD,{})}),(0,Ng.jsx)(Cg,{path:"446",element:(0,Ng.jsx)(ID,{})}),(0,Ng.jsx)(Cg,{path:"447",element:(0,Ng.jsx)(BD,{})}),(0,Ng.jsx)(Cg,{path:"448",element:(0,Ng.jsx)(GD,{})}),(0,Ng.jsx)(Cg,{path:"449",element:(0,Ng.jsx)(qD,{})}),(0,Ng.jsx)(Cg,{path:"450",element:(0,Ng.jsx)(WD,{})}),(0,Ng.jsx)(Cg,{path:"451",element:(0,Ng.jsx)(YD,{})}),(0,Ng.jsx)(Cg,{path:"452",element:(0,Ng.jsx)(JD,{})}),(0,Ng.jsx)(Cg,{path:"453",element:(0,Ng.jsx)($D,{})}),(0,Ng.jsx)(Cg,{path:"454",element:(0,Ng.jsx)(eE,{})}),(0,Ng.jsx)(Cg,{path:"455",element:(0,Ng.jsx)(tE,{})}),(0,Ng.jsx)(Cg,{path:"456",element:(0,Ng.jsx)(aE,{})}),(0,Ng.jsx)(Cg,{path:"457",element:(0,Ng.jsx)(oE,{})}),(0,Ng.jsx)(Cg,{path:"458",element:(0,Ng.jsx)(sE,{})}),(0,Ng.jsx)(Cg,{path:"459",element:(0,Ng.jsx)(uE,{})}),(0,Ng.jsx)(Cg,{path:"460",element:(0,Ng.jsx)(fE,{})}),(0,Ng.jsx)(Cg,{path:"461",element:(0,Ng.jsx)(mE,{})}),(0,Ng.jsx)(Cg,{path:"462",element:(0,Ng.jsx)(hE,{})}),(0,Ng.jsx)(Cg,{path:"463",element:(0,Ng.jsx)(xE,{})}),(0,Ng.jsx)(Cg,{path:"464",element:(0,Ng.jsx)(bE,{})}),(0,Ng.jsx)(Cg,{path:"465",element:(0,Ng.jsx)(wE,{})}),(0,Ng.jsx)(Cg,{path:"466",element:(0,Ng.jsx)(UE,{})}),(0,Ng.jsx)(Cg,{path:"467",element:(0,Ng.jsx)(jE,{})}),(0,Ng.jsx)(Cg,{path:"468",element:(0,Ng.jsx)(TE,{})}),(0,Ng.jsx)(Cg,{path:"469",element:(0,Ng.jsx)(RE,{})}),(0,Ng.jsx)(Cg,{path:"470",element:(0,Ng.jsx)(PE,{})}),(0,Ng.jsx)(Cg,{path:"471",element:(0,Ng.jsx)(EE,{})}),(0,Ng.jsx)(Cg,{path:"472",element:(0,Ng.jsx)(LE,{})}),(0,Ng.jsx)(Cg,{path:"473",element:(0,Ng.jsx)(IE,{})}),(0,Ng.jsx)(Cg,{path:"474",element:(0,Ng.jsx)(BE,{})}),(0,Ng.jsx)(Cg,{path:"475",element:(0,Ng.jsx)(GE,{})}),(0,Ng.jsx)(Cg,{path:"476",element:(0,Ng.jsx)(qE,{})}),(0,Ng.jsx)(Cg,{path:"477",element:(0,Ng.jsx)(WE,{})}),(0,Ng.jsx)(Cg,{path:"478",element:(0,Ng.jsx)(YE,{})}),(0,Ng.jsx)(Cg,{path:"479",element:(0,Ng.jsx)(JE,{})}),(0,Ng.jsx)(Cg,{path:"480",element:(0,Ng.jsx)($E,{})}),(0,Ng.jsx)(Cg,{path:"481",element:(0,Ng.jsx)(ez,{})}),(0,Ng.jsx)(Cg,{path:"482",element:(0,Ng.jsx)(tz,{})}),(0,Ng.jsx)(Cg,{path:"483",element:(0,Ng.jsx)(az,{})}),(0,Ng.jsx)(Cg,{path:"484",element:(0,Ng.jsx)(oz,{})}),(0,Ng.jsx)(Cg,{path:"485",element:(0,Ng.jsx)(sz,{})}),(0,Ng.jsx)(Cg,{path:"486",element:(0,Ng.jsx)(uz,{})}),(0,Ng.jsx)(Cg,{path:"487",element:(0,Ng.jsx)(fz,{})}),(0,Ng.jsx)(Cg,{path:"488",element:(0,Ng.jsx)(mz,{})}),(0,Ng.jsx)(Cg,{path:"489",element:(0,Ng.jsx)(hz,{})}),(0,Ng.jsx)(Cg,{path:"490",element:(0,Ng.jsx)(xz,{})}),(0,Ng.jsx)(Cg,{path:"491",element:(0,Ng.jsx)(bz,{})}),(0,Ng.jsx)(Cg,{path:"492",element:(0,Ng.jsx)(wz,{})}),(0,Ng.jsx)(Cg,{path:"493",element:(0,Ng.jsx)(Uz,{})}),(0,Ng.jsx)(Cg,{path:"494",element:(0,Ng.jsx)(jz,{})}),(0,Ng.jsx)(Cg,{path:"495",element:(0,Ng.jsx)(Tz,{})}),(0,Ng.jsx)(Cg,{path:"496",element:(0,Ng.jsx)(Rz,{})}),(0,Ng.jsx)(Cg,{path:"497",element:(0,Ng.jsx)(Pz,{})}),(0,Ng.jsx)(Cg,{path:"498",element:(0,Ng.jsx)(Ez,{})}),(0,Ng.jsx)(Cg,{path:"499",element:(0,Ng.jsx)(Lz,{})}),(0,Ng.jsx)(Cg,{path:"500",element:(0,Ng.jsx)(Iz,{})}),(0,Ng.jsx)(Cg,{path:"501",element:(0,Ng.jsx)(Bz,{})}),(0,Ng.jsx)(Cg,{path:"502",element:(0,Ng.jsx)(Gz,{})}),(0,Ng.jsx)(Cg,{path:"503",element:(0,Ng.jsx)(qz,{})}),(0,Ng.jsx)(Cg,{path:"504",element:(0,Ng.jsx)(Wz,{})}),(0,Ng.jsx)(Cg,{path:"505",element:(0,Ng.jsx)(Yz,{})}),(0,Ng.jsx)(Cg,{path:"506",element:(0,Ng.jsx)(Jz,{})}),(0,Ng.jsx)(Cg,{path:"507",element:(0,Ng.jsx)($z,{})}),(0,Ng.jsx)(Cg,{path:"508",element:(0,Ng.jsx)(eL,{})}),(0,Ng.jsx)(Cg,{path:"509",element:(0,Ng.jsx)(tL,{})}),(0,Ng.jsx)(Cg,{path:"510",element:(0,Ng.jsx)(UL,{})}),(0,Ng.jsx)(Cg,{path:"511",element:(0,Ng.jsx)(jL,{})}),(0,Ng.jsx)(Cg,{path:"512",element:(0,Ng.jsx)(TL,{})}),(0,Ng.jsx)(Cg,{path:"513",element:(0,Ng.jsx)(RL,{})}),(0,Ng.jsx)(Cg,{path:"514",element:(0,Ng.jsx)(PL,{})}),(0,Ng.jsx)(Cg,{path:"515",element:(0,Ng.jsx)(EL,{})}),(0,Ng.jsx)(Cg,{path:"516",element:(0,Ng.jsx)(LL,{})}),(0,Ng.jsx)(Cg,{path:"517",element:(0,Ng.jsx)(IL,{})}),(0,Ng.jsx)(Cg,{path:"518",element:(0,Ng.jsx)(BL,{})}),(0,Ng.jsx)(Cg,{path:"519",element:(0,Ng.jsx)(GL,{})}),(0,Ng.jsx)(Cg,{path:"520",element:(0,Ng.jsx)(UL,{})}),(0,Ng.jsx)(Cg,{path:"521",element:(0,Ng.jsx)(jL,{})}),(0,Ng.jsx)(Cg,{path:"522",element:(0,Ng.jsx)(TL,{})}),(0,Ng.jsx)(Cg,{path:"523",element:(0,Ng.jsx)(RL,{})}),(0,Ng.jsx)(Cg,{path:"524",element:(0,Ng.jsx)(PL,{})}),(0,Ng.jsx)(Cg,{path:"525",element:(0,Ng.jsx)(EL,{})}),(0,Ng.jsx)(Cg,{path:"526",element:(0,Ng.jsx)(LL,{})}),(0,Ng.jsx)(Cg,{path:"527",element:(0,Ng.jsx)(IL,{})}),(0,Ng.jsx)(Cg,{path:"528",element:(0,Ng.jsx)(BL,{})}),(0,Ng.jsx)(Cg,{path:"529",element:(0,Ng.jsx)(GL,{})}),(0,Ng.jsx)(Cg,{path:"530",element:(0,Ng.jsx)(qL,{})}),(0,Ng.jsx)(Cg,{path:"531",element:(0,Ng.jsx)(WL,{})}),(0,Ng.jsx)(Cg,{path:"532",element:(0,Ng.jsx)(YL,{})}),(0,Ng.jsx)(Cg,{path:"533",element:(0,Ng.jsx)(JL,{})}),(0,Ng.jsx)(Cg,{path:"534",element:(0,Ng.jsx)($L,{})}),(0,Ng.jsx)(Cg,{path:"535",element:(0,Ng.jsx)(eA,{})}),(0,Ng.jsx)(Cg,{path:"536",element:(0,Ng.jsx)(tA,{})}),(0,Ng.jsx)(Cg,{path:"537",element:(0,Ng.jsx)(aA,{})}),(0,Ng.jsx)(Cg,{path:"538",element:(0,Ng.jsx)(oA,{})}),(0,Ng.jsx)(Cg,{path:"539",element:(0,Ng.jsx)(sA,{})}),(0,Ng.jsx)(Cg,{path:"540",element:(0,Ng.jsx)(uA,{})}),(0,Ng.jsx)(Cg,{path:"541",element:(0,Ng.jsx)(fA,{})}),(0,Ng.jsx)(Cg,{path:"542",element:(0,Ng.jsx)(mA,{})}),(0,Ng.jsx)(Cg,{path:"543",element:(0,Ng.jsx)(hA,{})}),(0,Ng.jsx)(Cg,{path:"544",element:(0,Ng.jsx)(xA,{})}),(0,Ng.jsx)(Cg,{path:"545",element:(0,Ng.jsx)(bA,{})}),(0,Ng.jsx)(Cg,{path:"546",element:(0,Ng.jsx)(wA,{})}),(0,Ng.jsx)(Cg,{path:"547",element:(0,Ng.jsx)(UA,{})}),(0,Ng.jsx)(Cg,{path:"548",element:(0,Ng.jsx)(jA,{})}),(0,Ng.jsx)(Cg,{path:"549",element:(0,Ng.jsx)(TA,{})}),(0,Ng.jsx)(Cg,{path:"550",element:(0,Ng.jsx)(RA,{})}),(0,Ng.jsx)(Cg,{path:"551",element:(0,Ng.jsx)(PA,{})}),(0,Ng.jsx)(Cg,{path:"552",element:(0,Ng.jsx)(EA,{})}),(0,Ng.jsx)(Cg,{path:"553",element:(0,Ng.jsx)(LA,{})}),(0,Ng.jsx)(Cg,{path:"554",element:(0,Ng.jsx)(IA,{})}),(0,Ng.jsx)(Cg,{path:"555",element:(0,Ng.jsx)(BA,{})}),(0,Ng.jsx)(Cg,{path:"556",element:(0,Ng.jsx)(GA,{})}),(0,Ng.jsx)(Cg,{path:"557",element:(0,Ng.jsx)(qA,{})}),(0,Ng.jsx)(Cg,{path:"558",element:(0,Ng.jsx)(WA,{})}),(0,Ng.jsx)(Cg,{path:"559",element:(0,Ng.jsx)(YA,{})}),(0,Ng.jsx)(Cg,{path:"560",element:(0,Ng.jsx)(JA,{})}),(0,Ng.jsx)(Cg,{path:"561",element:(0,Ng.jsx)($A,{})}),(0,Ng.jsx)(Cg,{path:"562",element:(0,Ng.jsx)(eI,{})}),(0,Ng.jsx)(Cg,{path:"563",element:(0,Ng.jsx)(tI,{})}),(0,Ng.jsx)(Cg,{path:"564",element:(0,Ng.jsx)(aI,{})}),(0,Ng.jsx)(Cg,{path:"565",element:(0,Ng.jsx)(oI,{})}),(0,Ng.jsx)(Cg,{path:"566",element:(0,Ng.jsx)(sI,{})}),(0,Ng.jsx)(Cg,{path:"567",element:(0,Ng.jsx)(uI,{})}),(0,Ng.jsx)(Cg,{path:"568",element:(0,Ng.jsx)(fI,{})}),(0,Ng.jsx)(Cg,{path:"569",element:(0,Ng.jsx)(mI,{})}),(0,Ng.jsx)(Cg,{path:"570",element:(0,Ng.jsx)(hI,{})}),(0,Ng.jsx)(Cg,{path:"571",element:(0,Ng.jsx)(xI,{})}),(0,Ng.jsx)(Cg,{path:"572",element:(0,Ng.jsx)(bI,{})}),(0,Ng.jsx)(Cg,{path:"573",element:(0,Ng.jsx)(wI,{})}),(0,Ng.jsx)(Cg,{path:"574",element:(0,Ng.jsx)(UI,{})}),(0,Ng.jsx)(Cg,{path:"575",element:(0,Ng.jsx)(jI,{})}),(0,Ng.jsx)(Cg,{path:"576",element:(0,Ng.jsx)(TI,{})}),(0,Ng.jsx)(Cg,{path:"577",element:(0,Ng.jsx)(RI,{})}),(0,Ng.jsx)(Cg,{path:"578",element:(0,Ng.jsx)(PI,{})}),(0,Ng.jsx)(Cg,{path:"579",element:(0,Ng.jsx)(EI,{})}),(0,Ng.jsx)(Cg,{path:"580",element:(0,Ng.jsx)(LI,{})}),(0,Ng.jsx)(Cg,{path:"581",element:(0,Ng.jsx)(II,{})}),(0,Ng.jsx)(Cg,{path:"582",element:(0,Ng.jsx)(BI,{})}),(0,Ng.jsx)(Cg,{path:"583",element:(0,Ng.jsx)(GI,{})}),(0,Ng.jsx)(Cg,{path:"584",element:(0,Ng.jsx)(qI,{})}),(0,Ng.jsx)(Cg,{path:"585",element:(0,Ng.jsx)(WI,{})}),(0,Ng.jsx)(Cg,{path:"586",element:(0,Ng.jsx)(YI,{})}),(0,Ng.jsx)(Cg,{path:"587",element:(0,Ng.jsx)(JI,{})}),(0,Ng.jsx)(Cg,{path:"588",element:(0,Ng.jsx)($I,{})}),(0,Ng.jsx)(Cg,{path:"589",element:(0,Ng.jsx)(eO,{})}),(0,Ng.jsx)(Cg,{path:"590",element:(0,Ng.jsx)(tO,{})}),(0,Ng.jsx)(Cg,{path:"591",element:(0,Ng.jsx)(aO,{})}),(0,Ng.jsx)(Cg,{path:"592",element:(0,Ng.jsx)(oO,{})}),(0,Ng.jsx)(Cg,{path:"593",element:(0,Ng.jsx)(sO,{})}),(0,Ng.jsx)(Cg,{path:"594",element:(0,Ng.jsx)(uO,{})}),(0,Ng.jsx)(Cg,{path:"595",element:(0,Ng.jsx)(fO,{})}),(0,Ng.jsx)(Cg,{path:"596",element:(0,Ng.jsx)(mO,{})}),(0,Ng.jsx)(Cg,{path:"597",element:(0,Ng.jsx)(hO,{})}),(0,Ng.jsx)(Cg,{path:"598",element:(0,Ng.jsx)(xO,{})}),(0,Ng.jsx)(Cg,{path:"599",element:(0,Ng.jsx)(bO,{})}),(0,Ng.jsx)(Cg,{path:"600",element:(0,Ng.jsx)(wO,{})}),(0,Ng.jsx)(Cg,{path:"601",element:(0,Ng.jsx)(UO,{})})]})})})}var jO=Uint8Array,kO=Uint16Array,TO=Uint32Array,CO=new jO([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),RO=new jO([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),FO=new jO([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),PO=function(e,n){for(var t=new kO(31),r=0;r<31;++r)t[r]=n+=1<<e[r-1];var a=new TO(t[30]);for(r=1;r<30;++r)for(var i=t[r];i<t[r+1];++i)a[i]=i-t[r]<<5|r;return[t,a]},DO=PO(CO,2),EO=DO[0],zO=DO[1];EO[28]=258,zO[258]=28;for(var LO=PO(RO,0),AO=LO[0],IO=(LO[1],new kO(32768)),OO=0;OO<32768;++OO){var BO=(43690&OO)>>>1|(21845&OO)<<1;BO=(61680&(BO=(52428&BO)>>>2|(13107&BO)<<2))>>>4|(3855&BO)<<4,IO[OO]=((65280&BO)>>>8|(255&BO)<<8)>>>1}var NO=function(e,n,t){for(var r=e.length,a=0,i=new kO(n);a<r;++a)++i[e[a]-1];var o,l=new kO(n);for(a=0;a<n;++a)l[a]=l[a-1]+i[a-1]<<1;if(t){o=new kO(1<<n);var s=15-n;for(a=0;a<r;++a)if(e[a])for(var c=a<<4|e[a],u=n-e[a],v=l[e[a]-1]++<<u,f=v|(1<<u)-1;v<=f;++v)o[IO[v]>>>s]=c}else for(o=new kO(r),a=0;a<r;++a)e[a]&&(o[a]=IO[l[e[a]-1]++]>>>15-e[a]);return o},GO=new jO(288);for(OO=0;OO<144;++OO)GO[OO]=8;for(OO=144;OO<256;++OO)GO[OO]=9;for(OO=256;OO<280;++OO)GO[OO]=7;for(OO=280;OO<288;++OO)GO[OO]=8;var VO=new jO(32);for(OO=0;OO<32;++OO)VO[OO]=5;var qO=NO(GO,9,1),HO=NO(VO,5,1),WO=function(e){for(var n=e[0],t=1;t<e.length;++t)e[t]>n&&(n=e[t]);return n},XO=function(e,n,t){var r=n/8|0;return(e[r]|e[r+1]<<8)>>(7&n)&t},YO=function(e,n){var t=n/8|0;return(e[t]|e[t+1]<<8|e[t+2]<<16)>>(7&n)},ZO=function(e){return(e/8|0)+(7&e&&1)},JO=function(e,n,t){(null==n||n<0)&&(n=0),(null==t||t>e.length)&&(t=e.length);var r=new(e instanceof kO?kO:e instanceof TO?TO:jO)(t-n);return r.set(e.subarray(n,t)),r},QO=function(e,n,t){var r=e.length;if(!r||t&&!t.l&&r<5)return n||new jO(0);var a=!n||t,i=!t||t.i;t||(t={}),n||(n=new jO(3*r));var o=function(e){var t=n.length;if(e>t){var r=new jO(Math.max(2*t,e));r.set(n),n=r}},l=t.f||0,s=t.p||0,c=t.b||0,u=t.l,v=t.d,f=t.m,p=t.n,m=8*r;do{if(!u){t.f=l=XO(e,s,1);var d=XO(e,s+1,3);if(s+=3,!d){var h=e[(k=ZO(s)+4)-4]|e[k-3]<<8,g=k+h;if(g>r){if(i)throw"unexpected EOF";break}a&&o(c+h),n.set(e.subarray(k,g),c),t.b=c+=h,t.p=s=8*g;continue}if(1==d)u=qO,v=HO,f=9,p=5;else{if(2!=d)throw"invalid block type";var x=XO(e,s,31)+257,y=XO(e,s+10,15)+4,b=x+XO(e,s+5,31)+1;s+=14;for(var _=new jO(b),w=new jO(19),S=0;S<y;++S)w[FO[S]]=XO(e,s+3*S,7);s+=3*y;var U=WO(w),M=(1<<U)-1,j=NO(w,U,1);for(S=0;S<b;){var k,T=j[XO(e,s,M)];if(s+=15&T,(k=T>>>4)<16)_[S++]=k;else{var C=0,R=0;for(16==k?(R=3+XO(e,s,3),s+=2,C=_[S-1]):17==k?(R=3+XO(e,s,7),s+=3):18==k&&(R=11+XO(e,s,127),s+=7);R--;)_[S++]=C}}var F=_.subarray(0,x),P=_.subarray(x);f=WO(F),p=WO(P),u=NO(F,f,1),v=NO(P,p,1)}if(s>m){if(i)throw"unexpected EOF";break}}a&&o(c+131072);for(var D=(1<<f)-1,E=(1<<p)-1,z=s;;z=s){var L=(C=u[YO(e,s)&D])>>>4;if((s+=15&C)>m){if(i)throw"unexpected EOF";break}if(!C)throw"invalid length/literal";if(L<256)n[c++]=L;else{if(256==L){z=s,u=null;break}var A=L-254;if(L>264){var I=CO[S=L-257];A=XO(e,s,(1<<I)-1)+EO[S],s+=I}var O=v[YO(e,s)&E],B=O>>>4;if(!O)throw"invalid distance";s+=15&O;P=AO[B];if(B>3){I=RO[B];P+=YO(e,s)&(1<<I)-1,s+=I}if(s>m){if(i)throw"unexpected EOF";break}a&&o(c+131072);for(var N=c+A;c<N;c+=4)n[c]=n[c-P],n[c+1]=n[c+1-P],n[c+2]=n[c+2-P],n[c+3]=n[c+3-P];c=N}}t.l=u,t.p=z,t.b=c,u&&(l=1,t.m=f,t.d=v,t.n=p)}while(!l);return c==n.length?n:JO(n,0,c)},$O=new jO(0),KO=function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function eB(e,n){return QO((KO(e),e.subarray(2,-4)),n)}var nB="undefined"!=typeof TextDecoder&&new TextDecoder;try{nB.decode($O,{stream:!0}),1}catch(DB){}function tB(e,n,t){var r=t.length-e-1;if(n>=t[r])return r-1;if(n<=t[e])return e;for(var a=e,i=r,o=Math.floor((a+i)/2);n<t[o]||n>=t[o+1];)n<t[o]?i=o:a=o,o=Math.floor((a+i)/2);return o}function rB(e,n,t,r){var a=[],i=[],o=[];a[0]=1;for(var l=1;l<=t;++l){i[l]=n-r[e+1-l],o[l]=r[e+l]-n;for(var s=0,c=0;c<l;++c){var u=o[c+1],v=i[l-c],f=a[c]/(u+v);a[c]=s+u*f,s=v*f}a[l]=s}return a}function aB(e,n){for(var t=1,r=2;r<=e;++r)t*=r;for(var a=1,i=2;i<=n;++i)a*=i;for(var o=2;o<=e-n;++o)a*=o;return t/a}function iB(e,n,t,r,a){var i=function(e,n,t,r,a){for(var i=a<e?a:e,o=[],l=tB(e,r,n),s=function(e,n,t,r,a){for(var i=[],o=0;o<=t;++o)i[o]=0;for(var l=[],s=0;s<=r;++s)l[s]=i.slice(0);for(var c=[],u=0;u<=t;++u)c[u]=i.slice(0);c[0][0]=1;for(var v=i.slice(0),f=i.slice(0),p=1;p<=t;++p){v[p]=n-a[e+1-p],f[p]=a[e+p]-n;for(var m=0,d=0;d<p;++d){var h=f[d+1],g=v[p-d];c[p][d]=h+g;var x=c[d][p-1]/c[p][d];c[d][p]=m+h*x,m=g*x}c[p][p]=m}for(var y=0;y<=t;++y)l[0][y]=c[y][t];for(var b=0;b<=t;++b){for(var _=0,w=1,S=[],U=0;U<=t;++U)S[U]=i.slice(0);S[0][0]=1;for(var M=1;M<=r;++M){var j=0,k=b-M,T=t-M;b>=M&&(S[w][0]=S[_][0]/c[T+1][k],j=S[w][0]*c[k][T]);for(var C=b-1<=T?M-1:t-b,R=k>=-1?1:-k;R<=C;++R)S[w][R]=(S[_][R]-S[_][R-1])/c[T+1][k+R],j+=S[w][R]*c[k+R][T];b<=T&&(S[w][M]=-S[_][M-1]/c[T+1][b],j+=S[w][M]*c[b][T]),l[M][b]=j;var F=_;_=w,w=F}}for(var P=t,D=1;D<=r;++D){for(var E=0;E<=t;++E)l[D][E]*=P;P*=t-D}return l}(l,r,e,i,n),c=[],u=0;u<t.length;++u){var v=t[u].clone(),f=v.w;v.x*=f,v.y*=f,v.z*=f,c[u]=v}for(var p=0;p<=i;++p){for(var m=c[l-e].clone().multiplyScalar(s[p][0]),d=1;d<=e;++d)m.add(c[l-e+d].clone().multiplyScalar(s[p][d]));o[p]=m}for(var h=i+1;h<=a+1;++h)o[h]=new Cr(0,0,0);return o}(e,n,t,r,a);return function(e){for(var n=e.length,t=[],r=[],a=0;a<n;++a){var i=e[a];t[a]=new Ar(i.x,i.y,i.z),r[a]=i.w}for(var o=[],l=0;l<n;++l){for(var s=t[l].clone(),c=1;c<=l;++c)s.sub(o[l-c].clone().multiplyScalar(aB(l,c)*r[c]));o[l]=s.divideScalar(r[0])}return o}(i)}var oB,lB,sB,cB=function(e){w(t,e);var n=k(t);function t(e,r,a,i,o){var l;y(this,t),(l=n.call(this)).degree=e,l.knots=r,l.controlPoints=[],l.startKnot=i||0,l.endKnot=o||l.knots.length-1;for(var s=0;s<a.length;++s){var c=a[s];l.controlPoints[s]=new Cr(c.x,c.y,c.z,c.w)}return l}return _(t,[{key:"getPoint",value:function(e,n){var t=n||new Ar,r=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),a=function(e,n,t,r){for(var a=tB(e,r,n),i=rB(a,r,e,n),o=new Cr(0,0,0,0),l=0;l<=e;++l){var s=t[a-e+l],c=i[l],u=s.w*c;o.x+=s.x*u,o.y+=s.y*u,o.z+=s.z*u,o.w+=s.w*c}return o}(this.degree,this.knots,this.controlPoints,r);return 1!=a.w&&a.divideScalar(a.w),t.set(a.x,a.y,a.z)}},{key:"getTangent",value:function(e,n){var t=n||new Ar,r=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),a=iB(this.degree,this.knots,this.controlPoints,r,1);return t.copy(a[1]).normalize(),t}}]),t}(Zc),uB=function(e){w(t,e);var n=k(t);function t(e){return y(this,t),n.call(this,e)}return _(t,[{key:"load",value:function(e,n,t,r){var a=this,i=""===a.path?Ff.extractUrlBase(e):a.path,o=new rf(this.manager);o.setPath(a.path),o.setResponseType("arraybuffer"),o.setRequestHeader(a.requestHeader),o.setWithCredentials(a.withCredentials),o.load(e,(function(t){try{n(a.parse(t,i))}catch(DB){r?r(DB):console.error(DB),a.manager.itemError(e)}}),t,r)}},{key:"parse",value:function(e,n){if(function(e){var n="Kaydara FBX Binary  \0";return e.byteLength>=n.length&&n===kB(e,0,n.length)}(e))oB=(new dB).parse(e);else{var t=kB(e);if(!function(e){var n=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],t=0;function r(n){var r=e[n-1];return e=e.slice(t+n),t++,r}for(var a=0;a<n.length;++a){if(r(1)===n[a])return!1}return!0}(t))throw new Error("THREE.FBXLoader: Unknown format.");if(xB(t)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+xB(t));oB=(new mB).parse(t)}var r=new uf(this.manager).setPath(this.resourcePath||n).setCrossOrigin(this.crossOrigin);return new vB(r,this.manager).parse(oB)}}]),t}(ef),vB=function(){function e(n,t){y(this,e),this.textureLoader=n,this.manager=t}return _(e,[{key:"parse",value:function(){lB=this.parseConnections();var e=this.parseImages(),n=this.parseTextures(e),t=this.parseMaterials(n),r=this.parseDeformers(),a=(new fB).parse(r);return this.parseScene(r,a,t),sB}},{key:"parseConnections",value:function(){var e=new Map;"Connections"in oB&&oB.Connections.connections.forEach((function(n){var t=n[0],r=n[1],a=n[2];e.has(t)||e.set(t,{parents:[],children:[]});var i={ID:r,relationship:a};e.get(t).parents.push(i),e.has(r)||e.set(r,{parents:[],children:[]});var o={ID:t,relationship:a};e.get(r).children.push(o)}));return e}},{key:"parseImages",value:function(){var e={},n={};if("Video"in oB.Objects){var t=oB.Objects.Video;for(var r in t){var a=t[r];if(e[parseInt(r)]=a.RelativeFilename||a.Filename,"Content"in a){var i=a.Content instanceof ArrayBuffer&&a.Content.byteLength>0,o="string"===typeof a.Content&&""!==a.Content;if(i||o){var l=this.parseImage(t[r]);n[a.RelativeFilename||a.Filename]=l}}}}for(var s in e){var c=e[s];void 0!==n[c]?e[s]=n[c]:e[s]=e[s].split("\\").pop()}return e}},{key:"parseImage",value:function(e){var n,t=e.Content,r=e.RelativeFilename||e.Filename,a=r.slice(r.lastIndexOf(".")+1).toLowerCase();switch(a){case"bmp":n="image/bmp";break;case"jpg":case"jpeg":n="image/jpeg";break;case"png":n="image/png";break;case"tif":n="image/tiff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",r),n="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+a+'" is not supported.')}if("string"===typeof t)return"data:"+n+";base64,"+t;var i=new Uint8Array(t);return window.URL.createObjectURL(new Blob([i],{type:n}))}},{key:"parseTextures",value:function(e){var n=new Map;if("Texture"in oB.Objects){var t=oB.Objects.Texture;for(var r in t){var a=this.parseTexture(t[r],e);n.set(parseInt(r),a)}}return n}},{key:"parseTexture",value:function(e,n){var t=this.loadTexture(e,n);t.ID=e.id,t.name=e.attrName;var r=e.WrapModeU,a=e.WrapModeV,i=void 0!==r?r.value:0,o=void 0!==a?a.value:0;if(t.wrapS=0===i?Oe:Be,t.wrapT=0===o?Oe:Be,"Scaling"in e){var l=e.Scaling.value;t.repeat.x=l[0],t.repeat.y=l[1]}return t}},{key:"loadTexture",value:function(e,n){var t,r,a=this.textureLoader.path,i=lB.get(e.id).children;void 0!==i&&i.length>0&&void 0!==n[i[0].ID]&&(0!==(t=n[i[0].ID]).indexOf("blob:")&&0!==t.indexOf("data:")||this.textureLoader.setPath(void 0));var o=e.FileName.slice(-3).toLowerCase();if("tga"===o){var l=this.manager.getHandler(".tga");null===l?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),r=new Tr):(l.setPath(this.textureLoader.path),r=l.load(t))}else"psd"===o?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),r=new Tr):r=this.textureLoader.load(t);return this.textureLoader.setPath(a),r}},{key:"parseMaterials",value:function(e){var n=new Map;if("Material"in oB.Objects){var t=oB.Objects.Material;for(var r in t){var a=this.parseMaterial(t[r],e);null!==a&&n.set(parseInt(r),a)}}return n}},{key:"parseMaterial",value:function(e,n){var t=e.id,r=e.attrName,a=e.ShadingModel;if("object"===typeof a&&(a=a.value),!lB.has(t))return null;var i,o=this.parseParameters(e,n,t);switch(a.toLowerCase()){case"phong":i=new Sv;break;case"lambert":i=new jv;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',a),i=new Sv}return i.setValues(o),i.name=r,i}},{key:"parseParameters",value:function(e,n,t){var r={};e.BumpFactor&&(r.bumpScale=e.BumpFactor.value),e.Diffuse?r.color=(new Sr).fromArray(e.Diffuse.value):!e.DiffuseColor||"Color"!==e.DiffuseColor.type&&"ColorRGB"!==e.DiffuseColor.type||(r.color=(new Sr).fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(r.displacementScale=e.DisplacementFactor.value),e.Emissive?r.emissive=(new Sr).fromArray(e.Emissive.value):!e.EmissiveColor||"Color"!==e.EmissiveColor.type&&"ColorRGB"!==e.EmissiveColor.type||(r.emissive=(new Sr).fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(r.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(r.opacity=parseFloat(e.Opacity.value)),r.opacity<1&&(r.transparent=!0),e.ReflectionFactor&&(r.reflectivity=e.ReflectionFactor.value),e.Shininess&&(r.shininess=e.Shininess.value),e.Specular?r.specular=(new Sr).fromArray(e.Specular.value):e.SpecularColor&&"Color"===e.SpecularColor.type&&(r.specular=(new Sr).fromArray(e.SpecularColor.value));var a=this;return lB.get(t).children.forEach((function(e){var t=e.relationship;switch(t){case"Bump":r.bumpMap=a.getTexture(n,e.ID);break;case"Maya|TEX_ao_map":r.aoMap=a.getTexture(n,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":r.map=a.getTexture(n,e.ID),void 0!==r.map&&("colorSpace"in r.map?r.map.colorSpace="srgb":r.map.encoding=3001);break;case"DisplacementColor":r.displacementMap=a.getTexture(n,e.ID);break;case"EmissiveColor":r.emissiveMap=a.getTexture(n,e.ID),void 0!==r.emissiveMap&&("colorSpace"in r.emissiveMap?r.emissiveMap.colorSpace="srgb":r.emissiveMap.encoding=3001);break;case"NormalMap":case"Maya|TEX_normal_map":r.normalMap=a.getTexture(n,e.ID);break;case"ReflectionColor":r.envMap=a.getTexture(n,e.ID),void 0!==r.envMap&&(r.envMap.mapping=Le,"colorSpace"in r.envMap?r.envMap.colorSpace="srgb":r.envMap.encoding=3001);break;case"SpecularColor":r.specularMap=a.getTexture(n,e.ID),void 0!==r.specularMap&&("colorSpace"in r.specularMap?r.specularMap.colorSpace="srgb":r.specularMap.encoding=3001);break;case"TransparentColor":case"TransparencyFactor":r.alphaMap=a.getTexture(n,e.ID),r.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",t)}})),r}},{key:"getTexture",value:function(e,n){return"LayeredTexture"in oB.Objects&&n in oB.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),n=lB.get(n).children[0].ID),e.get(n)}},{key:"parseDeformers",value:function(){var e={},n={};if("Deformer"in oB.Objects){var t=oB.Objects.Deformer;for(var r in t){var a=t[r],i=lB.get(parseInt(r));if("Skin"===a.attrType){var o=this.parseSkeleton(i,t);o.ID=r,i.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),o.geometryID=i.parents[0].ID,e[r]=o}else if("BlendShape"===a.attrType){var l={id:r};l.rawTargets=this.parseMorphTargets(i,t),l.id=r,i.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),n[r]=l}}}return{skeletons:e,morphTargets:n}}},{key:"parseSkeleton",value:function(e,n){var t=[];return e.children.forEach((function(e){var r=n[e.ID];if("Cluster"===r.attrType){var a={ID:e.ID,indices:[],weights:[],transformLink:(new pa).fromArray(r.TransformLink.a)};"Indexes"in r&&(a.indices=r.Indexes.a,a.weights=r.Weights.a),t.push(a)}})),{rawBones:t,bones:[]}}},{key:"parseMorphTargets",value:function(e,n){for(var t=[],r=0;r<e.children.length;r++){var a=e.children[r],i=n[a.ID],o={name:i.attrName,initialWeight:i.DeformPercent,id:i.id,fullWeights:i.FullWeights.a};if("BlendShapeChannel"!==i.attrType)return;o.geoID=lB.get(parseInt(a.ID)).children.filter((function(e){return void 0===e.relationship}))[0].ID,t.push(o)}return t}},{key:"parseScene",value:function(e,n,t){sB=new ks;var r=this.parseModels(e.skeletons,n,t),a=oB.Objects.Model,i=this;r.forEach((function(e){var n=a[e.ID];i.setLookAtProperties(e,n),lB.get(e.ID).parents.forEach((function(n){var t=r.get(n.ID);void 0!==t&&t.add(e)})),null===e.parent&&sB.add(e)})),this.bindSkeleton(e.skeletons,n,r),this.createAmbientLight(),sB.traverse((function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrix=e.parent.matrix,e.userData.transformData.parentMatrixWorld=e.parent.matrixWorld);var n=UB(e.userData.transformData);e.applyMatrix4(n),e.updateWorldMatrix()}}));var o=(new pB).parse();1===sB.children.length&&sB.children[0].isGroup&&(sB.children[0].animations=o,sB=sB.children[0]),sB.animations=o}},{key:"parseModels",value:function(e,n,t){var r=new Map,a=oB.Objects.Model;for(var i in a){var o=parseInt(i),l=a[i],s=lB.get(o),c=this.buildSkeleton(s,e,o,l.attrName);if(!c){switch(l.attrType){case"Camera":c=this.createCamera(s);break;case"Light":c=this.createLight(s);break;case"Mesh":c=this.createMesh(s,n,t);break;case"NurbsCurve":c=this.createCurve(s,n);break;case"LimbNode":case"Root":c=new mc;break;default:c=new ks}c.name=l.attrName?dp.sanitizeNodeName(l.attrName):"",c.ID=o}this.getTransformData(c,l),r.set(o,c)}return r}},{key:"buildSkeleton",value:function(e,n,t,r){var a=null;return e.parents.forEach((function(e){var i=function(i){var o=n[i];o.rawBones.forEach((function(n,i){if(n.ID===e.ID){var l=a;(a=new mc).matrixWorld.copy(n.transformLink),a.name=r?dp.sanitizeNodeName(r):"",a.ID=t,o.bones[i]=a,null!==l&&a.add(l)}}))};for(var o in n)i(o)})),a}},{key:"createCamera",value:function(e){var n,t;if(e.children.forEach((function(e){var n=oB.Objects.NodeAttribute[e.ID];void 0!==n&&(t=n)})),void 0===t)n=new Ia;else{var r=0;void 0!==t.CameraProjectionType&&1===t.CameraProjectionType.value&&(r=1);var a=1;void 0!==t.NearPlane&&(a=t.NearPlane.value/1e3);var i=1e3;void 0!==t.FarPlane&&(i=t.FarPlane.value/1e3);var o=window.innerWidth,l=window.innerHeight;void 0!==t.AspectWidth&&void 0!==t.AspectHeight&&(o=t.AspectWidth.value,l=t.AspectHeight.value);var s=o/l,c=45;void 0!==t.FieldOfView&&(c=t.FieldOfView.value);var u=t.FocalLength?t.FocalLength.value:null;switch(r){case 0:n=new Hi(c,s,a,i),null!==u&&n.setFocalLength(u);break;case 1:n=new ho(-o/2,o/2,l/2,-l/2,a,i);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+r+"."),n=new Ia}}return n}},{key:"createLight",value:function(e){var n,t;if(e.children.forEach((function(e){var n=oB.Objects.NodeAttribute[e.ID];void 0!==n&&(t=n)})),void 0===t)n=new Ia;else{var r;r=void 0===t.LightType?0:t.LightType.value;var a=16777215;void 0!==t.Color&&(a=(new Sr).fromArray(t.Color.value));var i=void 0===t.Intensity?1:t.Intensity.value/100;void 0!==t.CastLightOnObject&&0===t.CastLightOnObject.value&&(i=0);var o=0;void 0!==t.FarAttenuationEnd&&(o=void 0!==t.EnableFarAttenuation&&0===t.EnableFarAttenuation.value?0:t.FarAttenuationEnd.value);switch(r){case 0:n=new Sf(a,i,o,1);break;case 1:n=new Mf(a,i);break;case 2:var l=Math.PI/3;void 0!==t.InnerAngle&&(l=ir.degToRad(t.InnerAngle.value));var s=0;void 0!==t.OuterAngle&&(s=ir.degToRad(t.OuterAngle.value),s=Math.max(s,1)),n=new xf(a,i,o,l,s,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+t.LightType.value+", defaulting to a PointLight."),n=new Sf(a,i)}void 0!==t.CastShadows&&1===t.CastShadows.value&&(n.castShadow=!0)}return n}},{key:"createMesh",value:function(e,n,t){var r,a=null,i=null,o=[];return e.children.forEach((function(e){n.has(e.ID)&&(a=n.get(e.ID)),t.has(e.ID)&&o.push(t.get(e.ID))})),o.length>1?i=o:o.length>0?i=o[0]:(i=new Sv({color:13421772}),o.push(i)),"color"in a.attributes&&o.forEach((function(e){e.vertexColors=!0})),a.FBX_Deformer?(r=new pc(a,i)).normalizeSkinWeights():r=new Ai(a,i),r}},{key:"createCurve",value:function(e,n){var t=e.children.reduce((function(e,t){return n.has(t.ID)&&(e=n.get(t.ID)),e}),null),r=new jc({color:3342591,linewidth:1});return new Pc(t,r)}},{key:"getTransformData",value:function(e,n){var t={};"InheritType"in n&&(t.inheritType=parseInt(n.InheritType.value)),t.eulerOrder="RotationOrder"in n?MB(n.RotationOrder.value):"ZYX","Lcl_Translation"in n&&(t.translation=n.Lcl_Translation.value),"PreRotation"in n&&(t.preRotation=n.PreRotation.value),"Lcl_Rotation"in n&&(t.rotation=n.Lcl_Rotation.value),"PostRotation"in n&&(t.postRotation=n.PostRotation.value),"Lcl_Scaling"in n&&(t.scale=n.Lcl_Scaling.value),"ScalingOffset"in n&&(t.scalingOffset=n.ScalingOffset.value),"ScalingPivot"in n&&(t.scalingPivot=n.ScalingPivot.value),"RotationOffset"in n&&(t.rotationOffset=n.RotationOffset.value),"RotationPivot"in n&&(t.rotationPivot=n.RotationPivot.value),e.userData.transformData=t}},{key:"setLookAtProperties",value:function(e,n){"LookAtProperty"in n&&lB.get(e.ID).children.forEach((function(n){if("LookAtProperty"===n.relationship){var t=oB.Objects.Model[n.ID];if("Lcl_Translation"in t){var r=t.Lcl_Translation.value;void 0!==e.target?(e.target.position.fromArray(r),sB.add(e.target)):e.lookAt((new Ar).fromArray(r))}}}))}},{key:"bindSkeleton",value:function(e,n,t){var r=this.parsePoseNodes(),a=function(a){var i=e[a];lB.get(parseInt(i.ID)).parents.forEach((function(e){if(n.has(e.ID)){var a=e.ID;lB.get(a).parents.forEach((function(e){t.has(e.ID)&&t.get(e.ID).bind(new xc(i.bones),r[e.ID])}))}}))};for(var i in e)a(i)}},{key:"parsePoseNodes",value:function(){var e={};if("Pose"in oB.Objects){var n=oB.Objects.Pose;for(var t in n)if("BindPose"===n[t].attrType&&n[t].NbPoseNodes>0){var r=n[t].PoseNode;Array.isArray(r)?r.forEach((function(n){e[n.Node]=(new pa).fromArray(n.Matrix.a)})):e[r.Node]=(new pa).fromArray(r.Matrix.a)}}return e}},{key:"createAmbientLight",value:function(){if("GlobalSettings"in oB&&"AmbientColor"in oB.GlobalSettings){var e=oB.GlobalSettings.AmbientColor.value,n=e[0],t=e[1],r=e[2];if(0!==n||0!==t||0!==r){var a=new Sr(n,t,r);sB.add(new jf(a,1))}}}}]),e}(),fB=function(){function e(){y(this,e)}return _(e,[{key:"parse",value:function(e){var n=new Map;if("Geometry"in oB.Objects){var t=oB.Objects.Geometry;for(var r in t){var a=lB.get(parseInt(r)),i=this.parseGeometry(a,t[r],e);n.set(parseInt(r),i)}}return n}},{key:"parseGeometry",value:function(e,n,t){switch(n.attrType){case"Mesh":return this.parseMeshGeometry(e,n,t);case"NurbsCurve":return this.parseNurbsGeometry(n)}}},{key:"parseMeshGeometry",value:function(e,n,t){var r=t.skeletons,a=[],i=e.parents.map((function(e){return oB.Objects.Model[e.ID]}));if(0!==i.length){var o=e.children.reduce((function(e,n){return void 0!==r[n.ID]&&(e=r[n.ID]),e}),null);e.children.forEach((function(e){void 0!==t.morphTargets[e.ID]&&a.push(t.morphTargets[e.ID])}));var l=i[0],s={};"RotationOrder"in l&&(s.eulerOrder=MB(l.RotationOrder.value)),"InheritType"in l&&(s.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(s.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(s.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(s.scale=l.GeometricScaling.value);var c=UB(s);return this.genGeometry(n,o,a,c)}}},{key:"genGeometry",value:function(e,n,t,r){var a=new yi;e.attrName&&(a.name=e.attrName);var i=this.parseGeoNode(e,n),o=this.genBuffers(i),l=new ui(o.vertex,3);if(l.applyMatrix4(r),a.setAttribute("position",l),o.colors.length>0&&a.setAttribute("color",new ui(o.colors,3)),n&&(a.setAttribute("skinIndex",new oi(o.weightsIndices,4)),a.setAttribute("skinWeight",new ui(o.vertexWeights,4)),a.FBX_Deformer=n),o.normal.length>0){var s=(new lr).getNormalMatrix(r),c=new ui(o.normal,3);c.applyNormalMatrix(s),a.setAttribute("normal",c)}if(o.uvs.forEach((function(e,n){var t="uv"+(n+1).toString();0===n&&(t="uv"),a.setAttribute(t,new ui(o.uvs[n],2))})),i.material&&"AllSame"!==i.material.mappingType){var u=o.materialIndex[0],v=0;if(o.materialIndex.forEach((function(e,n){e!==u&&(a.addGroup(v,n-v,u),u=e,v=n)})),a.groups.length>0){var f=a.groups[a.groups.length-1],p=f.start+f.count;p!==o.materialIndex.length&&a.addGroup(p,o.materialIndex.length-p,u)}0===a.groups.length&&a.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(a,e,t,r),a}},{key:"parseGeoNode",value:function(e,n){var t={};if(t.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],t.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(t.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(t.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(t.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){t.uv=[];for(var r=0;e.LayerElementUV[r];)e.LayerElementUV[r].UV&&t.uv.push(this.parseUVs(e.LayerElementUV[r])),r++}return t.weightTable={},null!==n&&(t.skeleton=n,n.rawBones.forEach((function(e,n){e.indices.forEach((function(r,a){void 0===t.weightTable[r]&&(t.weightTable[r]=[]),t.weightTable[r].push({id:n,weight:e.weights[a]})}))}))),t}},{key:"genBuffers",value:function(e){var n={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},t=0,r=0,a=!1,i=[],o=[],l=[],s=[],c=[],u=[],v=this;return e.vertexIndices.forEach((function(f,p){var m,d=!1;f<0&&(f^=-1,d=!0);var h=[],g=[];if(i.push(3*f,3*f+1,3*f+2),e.color){var x=_B(p,t,f,e.color);l.push(x[0],x[1],x[2])}if(e.skeleton){if(void 0!==e.weightTable[f]&&e.weightTable[f].forEach((function(e){g.push(e.weight),h.push(e.id)})),g.length>4){a||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),a=!0);var y=[0,0,0,0],b=[0,0,0,0];g.forEach((function(e,n){var t=e,r=h[n];b.forEach((function(e,n,a){if(t>e){a[n]=t,t=e;var i=y[n];y[n]=r,r=i}}))})),h=y,g=b}for(;g.length<4;)g.push(0),h.push(0);for(var _=0;_<4;++_)c.push(g[_]),u.push(h[_])}if(e.normal){var w=_B(p,t,f,e.normal);o.push(w[0],w[1],w[2])}e.material&&"AllSame"!==e.material.mappingType&&(m=_B(p,t,f,e.material)[0]),e.uv&&e.uv.forEach((function(e,n){var r=_B(p,t,f,e);void 0===s[n]&&(s[n]=[]),s[n].push(r[0]),s[n].push(r[1])})),r++,d&&(v.genFace(n,e,i,m,o,l,s,c,u,r),t++,r=0,i=[],o=[],l=[],s=[],c=[],u=[])})),n}},{key:"genFace",value:function(e,n,t,r,a,i,o,l,s,c){for(var u=function(c){e.vertex.push(n.vertexPositions[t[0]]),e.vertex.push(n.vertexPositions[t[1]]),e.vertex.push(n.vertexPositions[t[2]]),e.vertex.push(n.vertexPositions[t[3*(c-1)]]),e.vertex.push(n.vertexPositions[t[3*(c-1)+1]]),e.vertex.push(n.vertexPositions[t[3*(c-1)+2]]),e.vertex.push(n.vertexPositions[t[3*c]]),e.vertex.push(n.vertexPositions[t[3*c+1]]),e.vertex.push(n.vertexPositions[t[3*c+2]]),n.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[4*(c-1)]),e.vertexWeights.push(l[4*(c-1)+1]),e.vertexWeights.push(l[4*(c-1)+2]),e.vertexWeights.push(l[4*(c-1)+3]),e.vertexWeights.push(l[4*c]),e.vertexWeights.push(l[4*c+1]),e.vertexWeights.push(l[4*c+2]),e.vertexWeights.push(l[4*c+3]),e.weightsIndices.push(s[0]),e.weightsIndices.push(s[1]),e.weightsIndices.push(s[2]),e.weightsIndices.push(s[3]),e.weightsIndices.push(s[4*(c-1)]),e.weightsIndices.push(s[4*(c-1)+1]),e.weightsIndices.push(s[4*(c-1)+2]),e.weightsIndices.push(s[4*(c-1)+3]),e.weightsIndices.push(s[4*c]),e.weightsIndices.push(s[4*c+1]),e.weightsIndices.push(s[4*c+2]),e.weightsIndices.push(s[4*c+3])),n.color&&(e.colors.push(i[0]),e.colors.push(i[1]),e.colors.push(i[2]),e.colors.push(i[3*(c-1)]),e.colors.push(i[3*(c-1)+1]),e.colors.push(i[3*(c-1)+2]),e.colors.push(i[3*c]),e.colors.push(i[3*c+1]),e.colors.push(i[3*c+2])),n.material&&"AllSame"!==n.material.mappingType&&(e.materialIndex.push(r),e.materialIndex.push(r),e.materialIndex.push(r)),n.normal&&(e.normal.push(a[0]),e.normal.push(a[1]),e.normal.push(a[2]),e.normal.push(a[3*(c-1)]),e.normal.push(a[3*(c-1)+1]),e.normal.push(a[3*(c-1)+2]),e.normal.push(a[3*c]),e.normal.push(a[3*c+1]),e.normal.push(a[3*c+2])),n.uv&&n.uv.forEach((function(n,t){void 0===e.uvs[t]&&(e.uvs[t]=[]),e.uvs[t].push(o[t][0]),e.uvs[t].push(o[t][1]),e.uvs[t].push(o[t][2*(c-1)]),e.uvs[t].push(o[t][2*(c-1)+1]),e.uvs[t].push(o[t][2*c]),e.uvs[t].push(o[t][2*c+1])}))},v=2;v<c;v++)u(v)}},{key:"addMorphTargets",value:function(e,n,t,r){if(0!==t.length){e.morphTargetsRelative=!0,e.morphAttributes.position=[];var a=this;t.forEach((function(t){t.rawTargets.forEach((function(t){var i=oB.Objects.Geometry[t.geoID];void 0!==i&&a.genMorphGeometry(e,n,i,r,t.name)}))}))}}},{key:"genMorphGeometry",value:function(e,n,t,r,a){for(var i=void 0!==n.PolygonVertexIndex?n.PolygonVertexIndex.a:[],o=void 0!==t.Vertices?t.Vertices.a:[],l=void 0!==t.Indexes?t.Indexes.a:[],s=3*e.attributes.position.count,c=new Float32Array(s),u=0;u<l.length;u++){var v=3*l[u];c[v]=o[3*u],c[v+1]=o[3*u+1],c[v+2]=o[3*u+2]}var f={vertexIndices:i,vertexPositions:c},p=this.genBuffers(f),m=new ui(p.vertex,3);m.name=a||t.attrName,m.applyMatrix4(r),e.morphAttributes.position.push(m)}},{key:"parseNormals",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType,r=e.Normals.a,a=[];return"IndexToDirect"===t&&("NormalIndex"in e?a=e.NormalIndex.a:"NormalsIndex"in e&&(a=e.NormalsIndex.a)),{dataSize:3,buffer:r,indices:a,mappingType:n,referenceType:t}}},{key:"parseUVs",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType,r=e.UV.a,a=[];return"IndexToDirect"===t&&(a=e.UVIndex.a),{dataSize:2,buffer:r,indices:a,mappingType:n,referenceType:t}}},{key:"parseVertexColors",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType,r=e.Colors.a,a=[];return"IndexToDirect"===t&&(a=e.ColorIndex.a),{dataSize:4,buffer:r,indices:a,mappingType:n,referenceType:t}}},{key:"parseMaterialIndices",value:function(e){var n=e.MappingInformationType,t=e.ReferenceInformationType;if("NoMappingInformation"===n)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:t};for(var r=e.Materials.a,a=[],i=0;i<r.length;++i)a.push(i);return{dataSize:1,buffer:r,indices:a,mappingType:n,referenceType:t}}},{key:"parseNurbsGeometry",value:function(e){if(void 0===cB)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new yi;var n=parseInt(e.Order);if(isNaN(n))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new yi;for(var t,r,a=n-1,i=e.KnotVector.a,o=[],l=e.Points.a,s=0,c=l.length;s<c;s+=4)o.push((new Cr).fromArray(l,s));if("Closed"===e.Form)o.push(o[0]);else if("Periodic"===e.Form){t=a,r=i.length-1-t;for(var u=0;u<a;++u)o.push(o[u])}var v=new cB(a,i,o,t,r).getPoints(12*o.length);return(new yi).setFromPoints(v)}}]),e}(),pB=function(){function e(){y(this,e)}return _(e,[{key:"parse",value:function(){var e=[],n=this.parseClips();if(void 0!==n)for(var t in n){var r=n[t],a=this.addClip(r);e.push(a)}return e}},{key:"parseClips",value:function(){if(void 0!==oB.Objects.AnimationCurve){var e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);var n=this.parseAnimationLayers(e);return this.parseAnimStacks(n)}}},{key:"parseAnimationCurveNodes",value:function(){var e=oB.Objects.AnimationCurveNode,n=new Map;for(var t in e){var r=e[t];if(null!==r.attrName.match(/S|R|T|DeformPercent/)){var a={id:r.id,attr:r.attrName,curves:{}};n.set(a.id,a)}}return n}},{key:"parseAnimationCurves",value:function(e){var n=oB.Objects.AnimationCurve;for(var t in n){var r={id:n[t].id,times:n[t].KeyTime.a.map(yB),values:n[t].KeyValueFloat.a},a=lB.get(r.id);if(void 0!==a){var i=a.parents[0].ID,o=a.parents[0].relationship;o.match(/X/)?e.get(i).curves.x=r:o.match(/Y/)?e.get(i).curves.y=r:o.match(/Z/)?e.get(i).curves.z=r:o.match(/d|DeformPercent/)&&e.has(i)&&(e.get(i).curves.morph=r)}}}},{key:"parseAnimationLayers",value:function(e){var n=oB.Objects.AnimationLayer,t=new Map,r=function(n){var r=[],a=lB.get(parseInt(n));void 0!==a&&(a.children.forEach((function(n,t){if(e.has(n.ID)){var a=e.get(n.ID);if(void 0!==a.curves.x||void 0!==a.curves.y||void 0!==a.curves.z){if(void 0===r[t]){var i=lB.get(n.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID;if(void 0!==i){var o=oB.Objects.Model[i.toString()];if(void 0===o)return void console.warn("THREE.FBXLoader: Encountered a unused curve.",n);var l={modelName:o.attrName?dp.sanitizeNodeName(o.attrName):"",ID:o.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};sB.traverse((function(e){e.ID===o.id&&(l.transform=e.matrix,e.userData.transformData&&(l.eulerOrder=e.userData.transformData.eulerOrder))})),l.transform||(l.transform=new pa),"PreRotation"in o&&(l.preRotation=o.PreRotation.value),"PostRotation"in o&&(l.postRotation=o.PostRotation.value),r[t]=l}}r[t]&&(r[t][a.attr]=a)}else if(void 0!==a.curves.morph){if(void 0===r[t]){var s=lB.get(n.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID,c=lB.get(s).parents[0].ID,u=lB.get(c).parents[0].ID,v=lB.get(u).parents[0].ID,f=oB.Objects.Model[v],p={modelName:f.attrName?dp.sanitizeNodeName(f.attrName):"",morphName:oB.Objects.Deformer[s].attrName};r[t]=p}r[t][a.attr]=a}}})),t.set(parseInt(n),r))};for(var a in n)r(a);return t}},{key:"parseAnimStacks",value:function(e){var n=oB.Objects.AnimationStack,t={};for(var r in n){var a=lB.get(parseInt(r)).children;a.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var i=e.get(a[0].ID);t[r]={name:n[r].attrName,layer:i}}return t}},{key:"addClip",value:function(e){var n=[],t=this;return e.layer.forEach((function(e){n=n.concat(t.generateTracks(e))})),new Yv(e.name,-1,n)}},{key:"generateTracks",value:function(e){var n=[],t=new Ar,r=new Lr,a=new Ar;if(e.transform&&e.transform.decompose(t,r,a),t=t.toArray(),r=(new Sa).setFromQuaternion(r,e.eulerOrder).toArray(),a=a.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){var i=this.generateVectorTrack(e.modelName,e.T.curves,t,"position");void 0!==i&&n.push(i)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){var o=this.generateRotationTrack(e.modelName,e.R.curves,r,e.preRotation,e.postRotation,e.eulerOrder);void 0!==o&&n.push(o)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){var l=this.generateVectorTrack(e.modelName,e.S.curves,a,"scale");void 0!==l&&n.push(l)}if(void 0!==e.DeformPercent){var s=this.generateMorphTrack(e);void 0!==s&&n.push(s)}return n}},{key:"generateVectorTrack",value:function(e,n,t,r){var a=this.getTimesForAllAxes(n),i=this.getKeyframeTrackValues(a,n,t);return new Xv(e+"."+r,a,i)}},{key:"generateRotationTrack",value:function(e,n,t,r,a,i){void 0!==n.x&&(this.interpolateRotations(n.x),n.x.values=n.x.values.map(ir.degToRad)),void 0!==n.y&&(this.interpolateRotations(n.y),n.y.values=n.y.values.map(ir.degToRad)),void 0!==n.z&&(this.interpolateRotations(n.z),n.z.values=n.z.values.map(ir.degToRad));var o=this.getTimesForAllAxes(n),l=this.getKeyframeTrackValues(o,n,t);void 0!==r&&((r=r.map(ir.degToRad)).push(i),r=(new Sa).fromArray(r),r=(new Lr).setFromEuler(r)),void 0!==a&&((a=a.map(ir.degToRad)).push(i),a=(new Sa).fromArray(a),a=(new Lr).setFromEuler(a).invert());for(var s=new Lr,c=new Sa,u=[],v=0;v<l.length;v+=3)c.set(l[v],l[v+1],l[v+2],i),s.setFromEuler(c),void 0!==r&&s.premultiply(r),void 0!==a&&s.multiply(a),s.toArray(u,v/3*4);return new Hv(e+".quaternion",o,u)}},{key:"generateMorphTrack",value:function(e){var n=e.DeformPercent.curves.morph,t=n.values.map((function(e){return e/100})),r=sB.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Vv(e.modelName+".morphTargetInfluences["+r+"]",n.times,t)}},{key:"getTimesForAllAxes",value:function(e){var n=[];if(void 0!==e.x&&(n=n.concat(e.x.times)),void 0!==e.y&&(n=n.concat(e.y.times)),void 0!==e.z&&(n=n.concat(e.z.times)),(n=n.sort((function(e,n){return e-n}))).length>1){for(var t=1,r=n[0],a=1;a<n.length;a++){var i=n[a];i!==r&&(n[t]=i,r=i,t++)}n=n.slice(0,t)}return n}},{key:"getKeyframeTrackValues",value:function(e,n,t){var r=t,a=[],i=-1,o=-1,l=-1;return e.forEach((function(e){if(n.x&&(i=n.x.times.indexOf(e)),n.y&&(o=n.y.times.indexOf(e)),n.z&&(l=n.z.times.indexOf(e)),-1!==i){var t=n.x.values[i];a.push(t),r[0]=t}else a.push(r[0]);if(-1!==o){var s=n.y.values[o];a.push(s),r[1]=s}else a.push(r[1]);if(-1!==l){var c=n.z.values[l];a.push(c),r[2]=c}else a.push(r[2])})),a}},{key:"interpolateRotations",value:function(e){for(var n=1;n<e.values.length;n++){var t=e.values[n-1],r=e.values[n]-t,a=Math.abs(r);if(a>=180){for(var i=a/180,o=r/i,l=t+o,s=e.times[n-1],c=(e.times[n]-s)/i,u=s+c,v=[],f=[];u<e.times[n];)v.push(u),u+=c,f.push(l),l+=o;e.times=TB(e.times,n,v),e.values=TB(e.values,n,f)}}}}]),e}(),mB=function(){function e(){y(this,e)}return _(e,[{key:"getPrevNode",value:function(){return this.nodeStack[this.currentIndent-2]}},{key:"getCurrentNode",value:function(){return this.nodeStack[this.currentIndent-1]}},{key:"getCurrentProp",value:function(){return this.currentProp}},{key:"pushStack",value:function(e){this.nodeStack.push(e),this.currentIndent+=1}},{key:"popStack",value:function(){this.nodeStack.pop(),this.currentIndent-=1}},{key:"setCurrentProp",value:function(e,n){this.currentProp=e,this.currentPropName=n}},{key:"parse",value:function(e){this.currentIndent=0,this.allNodes=new gB,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var n=this,t=e.split(/[\r\n]+/);return t.forEach((function(e,r){var a=e.match(/^[\s\t]*;/),i=e.match(/^[\s\t]*$/);if(!a&&!i){var o=e.match("^\\t{"+n.currentIndent+"}(\\w+):(.*){",""),l=e.match("^\\t{"+n.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),s=e.match("^\\t{"+(n.currentIndent-1)+"}}");o?n.parseNodeBegin(e,o):l?n.parseNodeProperty(e,l,t[++r]):s?n.popStack():e.match(/^[^\s\t}]/)&&n.parseNodePropertyContinued(e)}})),this.allNodes}},{key:"parseNodeBegin",value:function(e,n){var t=n[1].trim().replace(/^"/,"").replace(/"$/,""),r=n[2].split(",").map((function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")})),a={name:t},i=this.parseNodeAttr(r),o=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(t,a):t in o?("PoseNode"===t?o.PoseNode.push(a):void 0!==o[t].id&&(o[t]={},o[t][o[t].id]=o[t]),""!==i.id&&(o[t][i.id]=a)):"number"===typeof i.id?(o[t]={},o[t][i.id]=a):"Properties70"!==t&&(o[t]="PoseNode"===t?[a]:a),"number"===typeof i.id&&(a.id=i.id),""!==i.name&&(a.attrName=i.name),""!==i.type&&(a.attrType=i.type),this.pushStack(a)}},{key:"parseNodeAttr",value:function(e){var n=e[0];""!==e[0]&&(n=parseInt(e[0]),isNaN(n)&&(n=e[0]));var t="",r="";return e.length>1&&(t=e[1].replace(/^(\w+)::/,""),r=e[2]),{id:n,name:t,type:r}}},{key:"parseNodeProperty",value:function(e,n,t){var r=n[1].replace(/^"/,"").replace(/"$/,"").trim(),a=n[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===r&&","===a&&(a=t.replace(/"/g,"").replace(/,$/,"").trim());var i=this.getCurrentNode();if("Properties70"!==i.name){if("C"===r){var o=a.split(",").slice(1),l=parseInt(o[0]),s=parseInt(o[1]),c=a.split(",").slice(3);r="connections",function(e,n){for(var t=0,r=e.length,a=n.length;t<a;t++,r++)e[r]=n[t]}(a=[l,s],c=c.map((function(e){return e.trim().replace(/^"/,"")}))),void 0===i[r]&&(i[r]=[])}"Node"===r&&(i.id=a),r in i&&Array.isArray(i[r])?i[r].push(a):"a"!==r?i[r]=a:i.a=a,this.setCurrentProp(i,r),"a"===r&&","!==a.slice(-1)&&(i.a=jB(a))}else this.parseNodeSpecialProperty(e,r,a)}},{key:"parseNodePropertyContinued",value:function(e){var n=this.getCurrentNode();n.a+=e,","!==e.slice(-1)&&(n.a=jB(n.a))}},{key:"parseNodeSpecialProperty",value:function(e,n,t){var r=t.split('",').map((function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")})),a=r[0],i=r[1],o=r[2],l=r[3],s=r[4];switch(i){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":s=parseFloat(s);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":s=jB(s)}this.getPrevNode()[a]={type:i,type2:o,flag:l,value:s},this.setCurrentProp(this.getPrevNode(),a)}}]),e}(),dB=function(){function e(){y(this,e)}return _(e,[{key:"parse",value:function(e){var n=new hB(e);n.skip(23);var t=n.getUint32();if(t<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+t);for(var r=new gB;!this.endOfContent(n);){var a=this.parseNode(n,t);null!==a&&r.add(a.name,a)}return r}},{key:"endOfContent",value:function(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}},{key:"parseNode",value:function(e,n){var t={},r=n>=7500?e.getUint64():e.getUint32(),a=n>=7500?e.getUint64():e.getUint32();n>=7500?e.getUint64():e.getUint32();var i=e.getUint8(),o=e.getString(i);if(0===r)return null;for(var l=[],s=0;s<a;s++)l.push(this.parseProperty(e));var c=l.length>0?l[0]:"",u=l.length>1?l[1]:"",v=l.length>2?l[2]:"";for(t.singleProperty=1===a&&e.getOffset()===r;r>e.getOffset();){var f=this.parseNode(e,n);null!==f&&this.parseSubNode(o,t,f)}return t.propertyList=l,"number"===typeof c&&(t.id=c),""!==u&&(t.attrName=u),""!==v&&(t.attrType=v),""!==o&&(t.name=o),t}},{key:"parseSubNode",value:function(e,n,t){if(!0===t.singleProperty){var r=t.propertyList[0];Array.isArray(r)?(n[t.name]=t,t.a=r):n[t.name]=r}else if("Connections"===e&&"C"===t.name){var a=[];t.propertyList.forEach((function(e,n){0!==n&&a.push(e)})),void 0===n.connections&&(n.connections=[]),n.connections.push(a)}else if("Properties70"===t.name){Object.keys(t).forEach((function(e){n[e]=t[e]}))}else if("Properties70"===e&&"P"===t.name){var i,o=t.propertyList[0],l=t.propertyList[1],s=t.propertyList[2],c=t.propertyList[3];0===o.indexOf("Lcl ")&&(o=o.replace("Lcl ","Lcl_")),0===l.indexOf("Lcl ")&&(l=l.replace("Lcl ","Lcl_")),i="Color"===l||"ColorRGB"===l||"Vector"===l||"Vector3D"===l||0===l.indexOf("Lcl_")?[t.propertyList[4],t.propertyList[5],t.propertyList[6]]:t.propertyList[4],n[o]={type:l,type2:s,flag:c,value:i}}else void 0===n[t.name]?"number"===typeof t.id?(n[t.name]={},n[t.name][t.id]=t):n[t.name]=t:"PoseNode"===t.name?(Array.isArray(n[t.name])||(n[t.name]=[n[t.name]]),n[t.name].push(t)):void 0===n[t.name][t.id]&&(n[t.name][t.id]=t)}},{key:"parseProperty",value:function(e){var n,t=e.getString(1);switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var r=e.getUint32(),a=e.getUint32(),i=e.getUint32();if(0===a)switch(t){case"b":case"c":return e.getBooleanArray(r);case"d":return e.getFloat64Array(r);case"f":return e.getFloat32Array(r);case"i":return e.getInt32Array(r);case"l":return e.getInt64Array(r)}var o=eB(new Uint8Array(e.getArrayBuffer(i))),l=new hB(o.buffer);switch(t){case"b":case"c":return l.getBooleanArray(r);case"d":return l.getFloat64Array(r);case"f":return l.getFloat32Array(r);case"i":return l.getInt32Array(r);case"l":return l.getInt64Array(r)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}]),e}(),hB=function(){function e(n,t){y(this,e),this.dv=new DataView(n),this.offset=0,this.littleEndian=void 0===t||t}return _(e,[{key:"getOffset",value:function(){return this.offset}},{key:"size",value:function(){return this.dv.buffer.byteLength}},{key:"skip",value:function(e){this.offset+=e}},{key:"getBoolean",value:function(){return 1===(1&this.getUint8())}},{key:"getBooleanArray",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getBoolean());return n}},{key:"getUint8",value:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e}},{key:"getInt16",value:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}},{key:"getInt32",value:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}},{key:"getInt32Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getInt32());return n}},{key:"getUint32",value:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}},{key:"getInt64",value:function(){var e,n;return this.littleEndian?(e=this.getUint32(),n=this.getUint32()):(n=this.getUint32(),e=this.getUint32()),2147483648&n?(n=4294967295&~n,4294967295===(e=4294967295&~e)&&(n=n+1&4294967295),-(4294967296*n+(e=e+1&4294967295))):4294967296*n+e}},{key:"getInt64Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getInt64());return n}},{key:"getUint64",value:function(){var e,n;return this.littleEndian?(e=this.getUint32(),n=this.getUint32()):(n=this.getUint32(),e=this.getUint32()),4294967296*n+e}},{key:"getFloat32",value:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}},{key:"getFloat32Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getFloat32());return n}},{key:"getFloat64",value:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}},{key:"getFloat64Array",value:function(e){for(var n=[],t=0;t<e;t++)n.push(this.getFloat64());return n}},{key:"getArrayBuffer",value:function(e){var n=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,n}},{key:"getString",value:function(e){for(var n=[],t=0;t<e;t++)n[t]=this.getUint8();var r=n.indexOf(0);return r>=0&&(n=n.slice(0,r)),Ff.decodeText(new Uint8Array(n))}}]),e}(),gB=function(){function e(){y(this,e)}return _(e,[{key:"add",value:function(e,n){this[e]=n}}]),e}();function xB(e){var n=e.match(/FBXVersion: (\d+)/);if(n)return parseInt(n[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function yB(e){return e/46186158e3}var bB=[];function _B(e,n,t,r){var a;switch(r.mappingType){case"ByPolygonVertex":a=e;break;case"ByPolygon":a=n;break;case"ByVertice":a=t;break;case"AllSame":a=r.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+r.mappingType)}"IndexToDirect"===r.referenceType&&(a=r.indices[a]);var i=a*r.dataSize,o=i+r.dataSize;return function(e,n,t,r){for(var a=t,i=0;a<r;a++,i++)e[i]=n[a];return e}(bB,r.buffer,i,o)}var wB=new Sa,SB=new Ar;function UB(e){var n=new pa,t=new pa,r=new pa,a=new pa,i=new pa,o=new pa,l=new pa,s=new pa,c=new pa,u=new pa,v=new pa,f=new pa,p=e.inheritType?e.inheritType:0;if(e.translation&&n.setPosition(SB.fromArray(e.translation)),e.preRotation){var m=e.preRotation.map(ir.degToRad);m.push(e.eulerOrder),t.makeRotationFromEuler(wB.fromArray(m))}if(e.rotation){var d=e.rotation.map(ir.degToRad);d.push(e.eulerOrder),r.makeRotationFromEuler(wB.fromArray(d))}if(e.postRotation){var h=e.postRotation.map(ir.degToRad);h.push(e.eulerOrder),a.makeRotationFromEuler(wB.fromArray(h)),a.invert()}e.scale&&i.scale(SB.fromArray(e.scale)),e.scalingOffset&&l.setPosition(SB.fromArray(e.scalingOffset)),e.scalingPivot&&o.setPosition(SB.fromArray(e.scalingPivot)),e.rotationOffset&&s.setPosition(SB.fromArray(e.rotationOffset)),e.rotationPivot&&c.setPosition(SB.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(v.copy(e.parentMatrix),u.copy(e.parentMatrixWorld));var g=t.clone().multiply(r).multiply(a),x=new pa;x.extractRotation(u);var y=new pa;y.copyPosition(u);var b=y.clone().invert().multiply(u),_=x.clone().invert().multiply(b),w=i,S=new pa;if(0===p)S.copy(x).multiply(g).multiply(_).multiply(w);else if(1===p)S.copy(x).multiply(_).multiply(g).multiply(w);else{var U=(new pa).scale((new Ar).setFromMatrixScale(v)).clone().invert(),M=_.clone().multiply(U);S.copy(x).multiply(g).multiply(M).multiply(w)}var j=c.clone().invert(),k=o.clone().invert(),T=n.clone().multiply(s).multiply(c).multiply(t).multiply(r).multiply(a).multiply(j).multiply(l).multiply(o).multiply(i).multiply(k),C=(new pa).copyPosition(T),R=u.clone().multiply(C);return f.copyPosition(R),(T=f.clone().multiply(S)).premultiply(u.invert()),T}function MB(e){var n=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(e=e||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),n[0]):n[e]}function jB(e){return e.split(",").map((function(e){return parseFloat(e)}))}function kB(e,n,t){return void 0===n&&(n=0),void 0===t&&(t=e.byteLength),Ff.decodeText(new Uint8Array(e,n,t))}function TB(e,n,t){return e.slice(0,n).concat(t).concat(e.slice(n))}function CB(e){return Vd(uB,e)}CB.preload=function(e){return Vd.preload(uB,e)},CB.clear=function(e){return Vd.clear(uB,e)};var RB=function(e){return e===Object(e)&&!Array.isArray(e)&&"function"!==typeof e};function FB(e,n){var t=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(e){return e},n=arguments.length>1?arguments[1]:void 0;return Bd()(e,n)}((function(e){return e.gl})),r=Vd(uf,RB(e)?Object.values(e):e);if((0,Om.useLayoutEffect)((function(){null==n||n(r)}),[n]),(0,Om.useEffect)((function(){(Array.isArray(r)?r:[r]).forEach(t.initTexture)}),[t,r]),RB(e)){var a=Object.keys(e),i={};return a.forEach((function(e){return Object.assign(i,c({},e,r[a.indexOf(e)]))})),i}return r}function PB(e){var n=CB("./Models/warehouse2/source/WareHouse.fbx"),t=FB("./Models/warehouse2/textures/Bake.jpg"),r=FB("./Models/warehouse2/textures/Tx.jpg");t.flipY=!0,r.flipY=!1;new Mv;var a=new _v({map:t,aoMap:r});return console.log(n),(0,Ng.jsxs)("group",v(v({},e),{},{dispose:null,children:[(0,Ng.jsxs)("group",{position:[0,-25,80],children:[(0,Ng.jsx)("mesh",{geometry:n.children[0].children[1].geometry,material:a}),(0,Ng.jsx)("mesh",{geometry:n.children[0].children[0].children[1].geometry,material:a}),(0,Ng.jsx)("mesh",{geometry:n.children[0].children[0].children[0].children[0].geometry,material:a}),(0,Ng.jsx)("mesh",{geometry:n.children[1].geometry,material:a}),(0,Ng.jsx)("mesh",{geometry:n.children[2].geometry,material:a})]}),(0,Ng.jsx)("ambientLight",{intensity:.2}),(0,Ng.jsx)("rectAreaLight",{position:[0,0,-80],intensity:30})]}))}FB.preload=function(e){return Vd.preload(uf,e)},FB.clear=function(e){return Vd.clear(uf,e)},(0,zh.s)(document.querySelector("#root")).render((0,Ng.jsx)(Om.StrictMode,{children:(0,Ng.jsxs)(Eh,{camera:{fov:50,aspect:window.innerWidth/window.innerHeight,near:.01,far:1e4,position:[0,0,10]},children:[(0,Ng.jsx)(MO,{}),(0,Ng.jsx)(PB,{})]})}))}()}();
//# sourceMappingURL=main.7b2bebcc.js.map